// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/talent/v4beta1/profile.proto

package com.google.cloud.talent.v4beta1;

/**
 *
 *
 * <pre>
 * RecruitingNote represents a note/comment regarding the recruiting for a
 * candidate. For example, "This candidate is a potential match for a frontend
 * engineer at SF".
 * </pre>
 *
 * Protobuf type {@code google.cloud.talent.v4beta1.RecruitingNote}
 */
public final class RecruitingNote extends com.google.protobuf.GeneratedMessageV3
    implements
    // @@protoc_insertion_point(message_implements:google.cloud.talent.v4beta1.RecruitingNote)
    RecruitingNoteOrBuilder {
  private static final long serialVersionUID = 0L;
  // Use RecruitingNote.newBuilder() to construct.
  private RecruitingNote(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }

  private RecruitingNote() {
    note_ = "";
    commenter_ = "";
    type_ = "";
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet getUnknownFields() {
    return this.unknownFields;
  }

  private RecruitingNote(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 10:
            {
              java.lang.String s = input.readStringRequireUtf8();

              note_ = s;
              break;
            }
          case 18:
            {
              java.lang.String s = input.readStringRequireUtf8();

              commenter_ = s;
              break;
            }
          case 26:
            {
              com.google.type.Date.Builder subBuilder = null;
              if (createDate_ != null) {
                subBuilder = createDate_.toBuilder();
              }
              createDate_ = input.readMessage(com.google.type.Date.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(createDate_);
                createDate_ = subBuilder.buildPartial();
              }

              break;
            }
          case 34:
            {
              java.lang.String s = input.readStringRequireUtf8();

              type_ = s;
              break;
            }
          default:
            {
              if (!parseUnknownFieldProto3(input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }

  public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
    return com.google.cloud.talent.v4beta1.ProfileResourceProto
        .internal_static_google_cloud_talent_v4beta1_RecruitingNote_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.cloud.talent.v4beta1.ProfileResourceProto
        .internal_static_google_cloud_talent_v4beta1_RecruitingNote_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.cloud.talent.v4beta1.RecruitingNote.class,
            com.google.cloud.talent.v4beta1.RecruitingNote.Builder.class);
  }

  public static final int NOTE_FIELD_NUMBER = 1;
  private volatile java.lang.Object note_;
  /**
   *
   *
   * <pre>
   * Optional.
   * The content of note.
   * Number of characters allowed is 4,000.
   * </pre>
   *
   * <code>string note = 1;</code>
   */
  public java.lang.String getNote() {
    java.lang.Object ref = note_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      note_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * Optional.
   * The content of note.
   * Number of characters allowed is 4,000.
   * </pre>
   *
   * <code>string note = 1;</code>
   */
  public com.google.protobuf.ByteString getNoteBytes() {
    java.lang.Object ref = note_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      note_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int COMMENTER_FIELD_NUMBER = 2;
  private volatile java.lang.Object commenter_;
  /**
   *
   *
   * <pre>
   * Optional.
   * The person who wrote the notes.
   * Number of characters allowed is 100.
   * </pre>
   *
   * <code>string commenter = 2;</code>
   */
  public java.lang.String getCommenter() {
    java.lang.Object ref = commenter_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      commenter_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * Optional.
   * The person who wrote the notes.
   * Number of characters allowed is 100.
   * </pre>
   *
   * <code>string commenter = 2;</code>
   */
  public com.google.protobuf.ByteString getCommenterBytes() {
    java.lang.Object ref = commenter_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      commenter_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int CREATE_DATE_FIELD_NUMBER = 3;
  private com.google.type.Date createDate_;
  /**
   *
   *
   * <pre>
   * Optional.
   * The create date of the note.
   * </pre>
   *
   * <code>.google.type.Date create_date = 3;</code>
   */
  public boolean hasCreateDate() {
    return createDate_ != null;
  }
  /**
   *
   *
   * <pre>
   * Optional.
   * The create date of the note.
   * </pre>
   *
   * <code>.google.type.Date create_date = 3;</code>
   */
  public com.google.type.Date getCreateDate() {
    return createDate_ == null ? com.google.type.Date.getDefaultInstance() : createDate_;
  }
  /**
   *
   *
   * <pre>
   * Optional.
   * The create date of the note.
   * </pre>
   *
   * <code>.google.type.Date create_date = 3;</code>
   */
  public com.google.type.DateOrBuilder getCreateDateOrBuilder() {
    return getCreateDate();
  }

  public static final int TYPE_FIELD_NUMBER = 4;
  private volatile java.lang.Object type_;
  /**
   *
   *
   * <pre>
   * Optional.
   * The note type.
   * Number of characters allowed is 100.
   * </pre>
   *
   * <code>string type = 4;</code>
   */
  public java.lang.String getType() {
    java.lang.Object ref = type_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      type_ = s;
      return s;
    }
  }
  /**
   *
   *
   * <pre>
   * Optional.
   * The note type.
   * Number of characters allowed is 100.
   * </pre>
   *
   * <code>string type = 4;</code>
   */
  public com.google.protobuf.ByteString getTypeBytes() {
    java.lang.Object ref = type_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b =
          com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
      type_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  private byte memoizedIsInitialized = -1;

  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
    if (!getNoteBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, note_);
    }
    if (!getCommenterBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, commenter_);
    }
    if (createDate_ != null) {
      output.writeMessage(3, getCreateDate());
    }
    if (!getTypeBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, type_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!getNoteBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, note_);
    }
    if (!getCommenterBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, commenter_);
    }
    if (createDate_ != null) {
      size += com.google.protobuf.CodedOutputStream.computeMessageSize(3, getCreateDate());
    }
    if (!getTypeBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, type_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
      return true;
    }
    if (!(obj instanceof com.google.cloud.talent.v4beta1.RecruitingNote)) {
      return super.equals(obj);
    }
    com.google.cloud.talent.v4beta1.RecruitingNote other =
        (com.google.cloud.talent.v4beta1.RecruitingNote) obj;

    boolean result = true;
    result = result && getNote().equals(other.getNote());
    result = result && getCommenter().equals(other.getCommenter());
    result = result && (hasCreateDate() == other.hasCreateDate());
    if (hasCreateDate()) {
      result = result && getCreateDate().equals(other.getCreateDate());
    }
    result = result && getType().equals(other.getType());
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + NOTE_FIELD_NUMBER;
    hash = (53 * hash) + getNote().hashCode();
    hash = (37 * hash) + COMMENTER_FIELD_NUMBER;
    hash = (53 * hash) + getCommenter().hashCode();
    if (hasCreateDate()) {
      hash = (37 * hash) + CREATE_DATE_FIELD_NUMBER;
      hash = (53 * hash) + getCreateDate().hashCode();
    }
    hash = (37 * hash) + TYPE_FIELD_NUMBER;
    hash = (53 * hash) + getType().hashCode();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.cloud.talent.v4beta1.RecruitingNote parseFrom(java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.talent.v4beta1.RecruitingNote parseFrom(
      java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.talent.v4beta1.RecruitingNote parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.talent.v4beta1.RecruitingNote parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.talent.v4beta1.RecruitingNote parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }

  public static com.google.cloud.talent.v4beta1.RecruitingNote parseFrom(
      byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }

  public static com.google.cloud.talent.v4beta1.RecruitingNote parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.cloud.talent.v4beta1.RecruitingNote parseFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.cloud.talent.v4beta1.RecruitingNote parseDelimitedFrom(
      java.io.InputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(PARSER, input);
  }

  public static com.google.cloud.talent.v4beta1.RecruitingNote parseDelimitedFrom(
      java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseDelimitedWithIOException(
        PARSER, input, extensionRegistry);
  }

  public static com.google.cloud.talent.v4beta1.RecruitingNote parseFrom(
      com.google.protobuf.CodedInputStream input) throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(PARSER, input);
  }

  public static com.google.cloud.talent.v4beta1.RecruitingNote parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3.parseWithIOException(
        PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() {
    return newBuilder();
  }

  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }

  public static Builder newBuilder(com.google.cloud.talent.v4beta1.RecruitingNote prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }

  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   *
   *
   * <pre>
   * RecruitingNote represents a note/comment regarding the recruiting for a
   * candidate. For example, "This candidate is a potential match for a frontend
   * engineer at SF".
   * </pre>
   *
   * Protobuf type {@code google.cloud.talent.v4beta1.RecruitingNote}
   */
  public static final class Builder extends com.google.protobuf.GeneratedMessageV3.Builder<Builder>
      implements
      // @@protoc_insertion_point(builder_implements:google.cloud.talent.v4beta1.RecruitingNote)
      com.google.cloud.talent.v4beta1.RecruitingNoteOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
      return com.google.cloud.talent.v4beta1.ProfileResourceProto
          .internal_static_google_cloud_talent_v4beta1_RecruitingNote_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.cloud.talent.v4beta1.ProfileResourceProto
          .internal_static_google_cloud_talent_v4beta1_RecruitingNote_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.cloud.talent.v4beta1.RecruitingNote.class,
              com.google.cloud.talent.v4beta1.RecruitingNote.Builder.class);
    }

    // Construct using com.google.cloud.talent.v4beta1.RecruitingNote.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }

    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders) {}
    }

    @java.lang.Override
    public Builder clear() {
      super.clear();
      note_ = "";

      commenter_ = "";

      if (createDateBuilder_ == null) {
        createDate_ = null;
      } else {
        createDate_ = null;
        createDateBuilder_ = null;
      }
      type_ = "";

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
      return com.google.cloud.talent.v4beta1.ProfileResourceProto
          .internal_static_google_cloud_talent_v4beta1_RecruitingNote_descriptor;
    }

    @java.lang.Override
    public com.google.cloud.talent.v4beta1.RecruitingNote getDefaultInstanceForType() {
      return com.google.cloud.talent.v4beta1.RecruitingNote.getDefaultInstance();
    }

    @java.lang.Override
    public com.google.cloud.talent.v4beta1.RecruitingNote build() {
      com.google.cloud.talent.v4beta1.RecruitingNote result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.google.cloud.talent.v4beta1.RecruitingNote buildPartial() {
      com.google.cloud.talent.v4beta1.RecruitingNote result =
          new com.google.cloud.talent.v4beta1.RecruitingNote(this);
      result.note_ = note_;
      result.commenter_ = commenter_;
      if (createDateBuilder_ == null) {
        result.createDate_ = createDate_;
      } else {
        result.createDate_ = createDateBuilder_.build();
      }
      result.type_ = type_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return (Builder) super.clone();
    }

    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }

    @java.lang.Override
    public Builder clearField(com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }

    @java.lang.Override
    public Builder clearOneof(com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }

    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }

    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field, java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.cloud.talent.v4beta1.RecruitingNote) {
        return mergeFrom((com.google.cloud.talent.v4beta1.RecruitingNote) other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.cloud.talent.v4beta1.RecruitingNote other) {
      if (other == com.google.cloud.talent.v4beta1.RecruitingNote.getDefaultInstance()) return this;
      if (!other.getNote().isEmpty()) {
        note_ = other.note_;
        onChanged();
      }
      if (!other.getCommenter().isEmpty()) {
        commenter_ = other.commenter_;
        onChanged();
      }
      if (other.hasCreateDate()) {
        mergeCreateDate(other.getCreateDate());
      }
      if (!other.getType().isEmpty()) {
        type_ = other.type_;
        onChanged();
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.cloud.talent.v4beta1.RecruitingNote parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.cloud.talent.v4beta1.RecruitingNote) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private java.lang.Object note_ = "";
    /**
     *
     *
     * <pre>
     * Optional.
     * The content of note.
     * Number of characters allowed is 4,000.
     * </pre>
     *
     * <code>string note = 1;</code>
     */
    public java.lang.String getNote() {
      java.lang.Object ref = note_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        note_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Optional.
     * The content of note.
     * Number of characters allowed is 4,000.
     * </pre>
     *
     * <code>string note = 1;</code>
     */
    public com.google.protobuf.ByteString getNoteBytes() {
      java.lang.Object ref = note_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        note_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Optional.
     * The content of note.
     * Number of characters allowed is 4,000.
     * </pre>
     *
     * <code>string note = 1;</code>
     */
    public Builder setNote(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }

      note_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional.
     * The content of note.
     * Number of characters allowed is 4,000.
     * </pre>
     *
     * <code>string note = 1;</code>
     */
    public Builder clearNote() {

      note_ = getDefaultInstance().getNote();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional.
     * The content of note.
     * Number of characters allowed is 4,000.
     * </pre>
     *
     * <code>string note = 1;</code>
     */
    public Builder setNoteBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);

      note_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object commenter_ = "";
    /**
     *
     *
     * <pre>
     * Optional.
     * The person who wrote the notes.
     * Number of characters allowed is 100.
     * </pre>
     *
     * <code>string commenter = 2;</code>
     */
    public java.lang.String getCommenter() {
      java.lang.Object ref = commenter_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        commenter_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Optional.
     * The person who wrote the notes.
     * Number of characters allowed is 100.
     * </pre>
     *
     * <code>string commenter = 2;</code>
     */
    public com.google.protobuf.ByteString getCommenterBytes() {
      java.lang.Object ref = commenter_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        commenter_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Optional.
     * The person who wrote the notes.
     * Number of characters allowed is 100.
     * </pre>
     *
     * <code>string commenter = 2;</code>
     */
    public Builder setCommenter(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }

      commenter_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional.
     * The person who wrote the notes.
     * Number of characters allowed is 100.
     * </pre>
     *
     * <code>string commenter = 2;</code>
     */
    public Builder clearCommenter() {

      commenter_ = getDefaultInstance().getCommenter();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional.
     * The person who wrote the notes.
     * Number of characters allowed is 100.
     * </pre>
     *
     * <code>string commenter = 2;</code>
     */
    public Builder setCommenterBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);

      commenter_ = value;
      onChanged();
      return this;
    }

    private com.google.type.Date createDate_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.type.Date, com.google.type.Date.Builder, com.google.type.DateOrBuilder>
        createDateBuilder_;
    /**
     *
     *
     * <pre>
     * Optional.
     * The create date of the note.
     * </pre>
     *
     * <code>.google.type.Date create_date = 3;</code>
     */
    public boolean hasCreateDate() {
      return createDateBuilder_ != null || createDate_ != null;
    }
    /**
     *
     *
     * <pre>
     * Optional.
     * The create date of the note.
     * </pre>
     *
     * <code>.google.type.Date create_date = 3;</code>
     */
    public com.google.type.Date getCreateDate() {
      if (createDateBuilder_ == null) {
        return createDate_ == null ? com.google.type.Date.getDefaultInstance() : createDate_;
      } else {
        return createDateBuilder_.getMessage();
      }
    }
    /**
     *
     *
     * <pre>
     * Optional.
     * The create date of the note.
     * </pre>
     *
     * <code>.google.type.Date create_date = 3;</code>
     */
    public Builder setCreateDate(com.google.type.Date value) {
      if (createDateBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        createDate_ = value;
        onChanged();
      } else {
        createDateBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional.
     * The create date of the note.
     * </pre>
     *
     * <code>.google.type.Date create_date = 3;</code>
     */
    public Builder setCreateDate(com.google.type.Date.Builder builderForValue) {
      if (createDateBuilder_ == null) {
        createDate_ = builderForValue.build();
        onChanged();
      } else {
        createDateBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional.
     * The create date of the note.
     * </pre>
     *
     * <code>.google.type.Date create_date = 3;</code>
     */
    public Builder mergeCreateDate(com.google.type.Date value) {
      if (createDateBuilder_ == null) {
        if (createDate_ != null) {
          createDate_ =
              com.google.type.Date.newBuilder(createDate_).mergeFrom(value).buildPartial();
        } else {
          createDate_ = value;
        }
        onChanged();
      } else {
        createDateBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional.
     * The create date of the note.
     * </pre>
     *
     * <code>.google.type.Date create_date = 3;</code>
     */
    public Builder clearCreateDate() {
      if (createDateBuilder_ == null) {
        createDate_ = null;
        onChanged();
      } else {
        createDate_ = null;
        createDateBuilder_ = null;
      }

      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional.
     * The create date of the note.
     * </pre>
     *
     * <code>.google.type.Date create_date = 3;</code>
     */
    public com.google.type.Date.Builder getCreateDateBuilder() {

      onChanged();
      return getCreateDateFieldBuilder().getBuilder();
    }
    /**
     *
     *
     * <pre>
     * Optional.
     * The create date of the note.
     * </pre>
     *
     * <code>.google.type.Date create_date = 3;</code>
     */
    public com.google.type.DateOrBuilder getCreateDateOrBuilder() {
      if (createDateBuilder_ != null) {
        return createDateBuilder_.getMessageOrBuilder();
      } else {
        return createDate_ == null ? com.google.type.Date.getDefaultInstance() : createDate_;
      }
    }
    /**
     *
     *
     * <pre>
     * Optional.
     * The create date of the note.
     * </pre>
     *
     * <code>.google.type.Date create_date = 3;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
            com.google.type.Date, com.google.type.Date.Builder, com.google.type.DateOrBuilder>
        getCreateDateFieldBuilder() {
      if (createDateBuilder_ == null) {
        createDateBuilder_ =
            new com.google.protobuf.SingleFieldBuilderV3<
                com.google.type.Date, com.google.type.Date.Builder, com.google.type.DateOrBuilder>(
                getCreateDate(), getParentForChildren(), isClean());
        createDate_ = null;
      }
      return createDateBuilder_;
    }

    private java.lang.Object type_ = "";
    /**
     *
     *
     * <pre>
     * Optional.
     * The note type.
     * Number of characters allowed is 100.
     * </pre>
     *
     * <code>string type = 4;</code>
     */
    public java.lang.String getType() {
      java.lang.Object ref = type_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs = (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        type_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Optional.
     * The note type.
     * Number of characters allowed is 100.
     * </pre>
     *
     * <code>string type = 4;</code>
     */
    public com.google.protobuf.ByteString getTypeBytes() {
      java.lang.Object ref = type_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b =
            com.google.protobuf.ByteString.copyFromUtf8((java.lang.String) ref);
        type_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     *
     *
     * <pre>
     * Optional.
     * The note type.
     * Number of characters allowed is 100.
     * </pre>
     *
     * <code>string type = 4;</code>
     */
    public Builder setType(java.lang.String value) {
      if (value == null) {
        throw new NullPointerException();
      }

      type_ = value;
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional.
     * The note type.
     * Number of characters allowed is 100.
     * </pre>
     *
     * <code>string type = 4;</code>
     */
    public Builder clearType() {

      type_ = getDefaultInstance().getType();
      onChanged();
      return this;
    }
    /**
     *
     *
     * <pre>
     * Optional.
     * The note type.
     * Number of characters allowed is 100.
     * </pre>
     *
     * <code>string type = 4;</code>
     */
    public Builder setTypeBytes(com.google.protobuf.ByteString value) {
      if (value == null) {
        throw new NullPointerException();
      }
      checkByteStringIsUtf8(value);

      type_ = value;
      onChanged();
      return this;
    }

    @java.lang.Override
    public final Builder setUnknownFields(final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }

    // @@protoc_insertion_point(builder_scope:google.cloud.talent.v4beta1.RecruitingNote)
  }

  // @@protoc_insertion_point(class_scope:google.cloud.talent.v4beta1.RecruitingNote)
  private static final com.google.cloud.talent.v4beta1.RecruitingNote DEFAULT_INSTANCE;

  static {
    DEFAULT_INSTANCE = new com.google.cloud.talent.v4beta1.RecruitingNote();
  }

  public static com.google.cloud.talent.v4beta1.RecruitingNote getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<RecruitingNote> PARSER =
      new com.google.protobuf.AbstractParser<RecruitingNote>() {
        @java.lang.Override
        public RecruitingNote parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new RecruitingNote(input, extensionRegistry);
        }
      };

  public static com.google.protobuf.Parser<RecruitingNote> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<RecruitingNote> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.cloud.talent.v4beta1.RecruitingNote getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }
}
