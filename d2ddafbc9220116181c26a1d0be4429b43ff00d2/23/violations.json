[
    {
        "line": "43",
        "column": "17",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - java.util.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "58",
        "column": "29",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - ru.curs.celesta.score.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "66",
        "column": "5",
        "severity": "error",
        "message": "Variable access definition in wrong order.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.DeclarationOrderCheck"
    },
    {
        "line": "71",
        "column": "12",
        "severity": "error",
        "message": "Variable access definition in wrong order.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.DeclarationOrderCheck"
    },
    {
        "line": "72",
        "column": "12",
        "severity": "error",
        "message": "Variable access definition in wrong order.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.DeclarationOrderCheck"
    },
    {
        "line": "157",
        "column": "5",
        "severity": "error",
        "message": "Class 'Cursor' looks like designed for extension (can be subclassed), but the method 'getHereHolder' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Cursor' final or making the method 'getHereHolder' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "171",
        "column": "5",
        "severity": "error",
        "message": "Class 'Cursor' looks like designed for extension (can be subclassed), but the method 'closeInternal' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Cursor' final or making the method 'closeInternal' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "382",
        "column": "38",
        "severity": "error",
        "message": "Unnecessary parentheses around expression.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.UnnecessaryParenthesesCheck"
    },
    {
        "line": "662",
        "column": "5",
        "severity": "error",
        "message": "Class 'Cursor' looks like designed for extension (can be subclassed), but the method 'setIn' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Cursor' final or making the method 'setIn' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "667",
        "column": "5",
        "severity": "error",
        "message": "Class 'Cursor' looks like designed for extension (can be subclassed), but the method 'getIn' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Cursor' final or making the method 'getIn' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "672",
        "column": "5",
        "severity": "error",
        "message": "Class 'Cursor' looks like designed for extension (can be subclassed), but the method 'resetSpecificState' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Cursor' final or making the method 'resetSpecificState' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "677",
        "column": "5",
        "severity": "error",
        "message": "Class 'Cursor' looks like designed for extension (can be subclassed), but the method 'clearSpecificState' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Cursor' final or making the method 'clearSpecificState' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "682",
        "column": "5",
        "severity": "error",
        "message": "Class 'Cursor' looks like designed for extension (can be subclassed), but the method 'copySpecificFiltersFrom' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Cursor' final or making the method 'copySpecificFiltersFrom' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "688",
        "column": "5",
        "severity": "error",
        "message": "Class 'Cursor' looks like designed for extension (can be subclassed), but the method 'isEquivalentSpecific' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Cursor' final or making the method 'isEquivalentSpecific' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "703",
        "column": "5",
        "severity": "error",
        "message": "Class 'Cursor' looks like designed for extension (can be subclassed), but the method '_parseResult' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Cursor' final or making the method '_parseResult' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "740",
        "column": "33",
        "severity": "error",
        "message": "Name '_currentKeyValues' must match pattern '^[a-z][a-zA-Z0-9]*$'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.naming.MethodNameCheck"
    },
    {
        "line": "742",
        "column": "29",
        "severity": "error",
        "message": "Name '_setAutoIncrement' must match pattern '^[a-z][a-zA-Z0-9]*$'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.naming.MethodNameCheck"
    },
    {
        "line": "744",
        "column": "29",
        "severity": "error",
        "message": "Name '_parseResultInternal' must match pattern '^[a-z][a-zA-Z0-9]*$'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.naming.MethodNameCheck"
    }
]