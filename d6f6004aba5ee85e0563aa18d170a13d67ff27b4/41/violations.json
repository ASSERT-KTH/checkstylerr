[
    {
        "line": "40",
        "column": "1",
        "severity": "error",
        "message": "File contains tab characters (this is the first instance).",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
    },
    {
        "line": "45",
        "column": "37",
        "severity": "error",
        "message": "Parameter name should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "51",
        "column": "49",
        "severity": "error",
        "message": "Parameter prevRenderState should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "70",
        "column": "32",
        "severity": "error",
        "message": "Parameter compact should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "76",
        "column": "29",
        "severity": "error",
        "message": "Parameter type should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "80",
        "column": "9",
        "severity": "error",
        "message": "Class 'HTMLUListElementImpl' looks like designed for extension (can be subclassed), but the method 'getAccessKey' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'HTMLUListElementImpl' final or making the method 'getAccessKey' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "86",
        "column": "9",
        "severity": "error",
        "message": "Class 'HTMLUListElementImpl' looks like designed for extension (can be subclassed), but the method 'getAccessKeyLabel' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'HTMLUListElementImpl' final or making the method 'getAccessKeyLabel' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "92",
        "column": "9",
        "severity": "error",
        "message": "Class 'HTMLUListElementImpl' looks like designed for extension (can be subclassed), but the method 'getAutocapitalize' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'HTMLUListElementImpl' final or making the method 'getAutocapitalize' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "98",
        "column": "9",
        "severity": "error",
        "message": "Class 'HTMLUListElementImpl' looks like designed for extension (can be subclassed), but the method 'getOffsetParent' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'HTMLUListElementImpl' final or making the method 'getOffsetParent' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "104",
        "column": "9",
        "severity": "error",
        "message": "Class 'HTMLUListElementImpl' looks like designed for extension (can be subclassed), but the method 'isSpellcheck' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'HTMLUListElementImpl' final or making the method 'isSpellcheck' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "110",
        "column": "9",
        "severity": "error",
        "message": "Class 'HTMLUListElementImpl' looks like designed for extension (can be subclassed), but the method 'isDraggable' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'HTMLUListElementImpl' final or making the method 'isDraggable' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "116",
        "column": "9",
        "severity": "error",
        "message": "Class 'HTMLUListElementImpl' looks like designed for extension (can be subclassed), but the method 'isHidden' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'HTMLUListElementImpl' final or making the method 'isHidden' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "122",
        "column": "9",
        "severity": "error",
        "message": "Class 'HTMLUListElementImpl' looks like designed for extension (can be subclassed), but the method 'isTranslate' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'HTMLUListElementImpl' final or making the method 'isTranslate' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "129",
        "column": "34",
        "severity": "error",
        "message": "Parameter accessKey should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "131",
        "severity": "error",
        "message": "Line has trailing spaces.",
        "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
    },
    {
        "line": "135",
        "column": "39",
        "severity": "error",
        "message": "Parameter autocapitalize should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "137",
        "severity": "error",
        "message": "Line has trailing spaces.",
        "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
    },
    {
        "line": "141",
        "column": "34",
        "severity": "error",
        "message": "Parameter draggable should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "143",
        "severity": "error",
        "message": "Line has trailing spaces.",
        "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
    },
    {
        "line": "147",
        "column": "31",
        "severity": "error",
        "message": "Parameter hidden should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "149",
        "severity": "error",
        "message": "Line has trailing spaces.",
        "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
    },
    {
        "line": "153",
        "column": "35",
        "severity": "error",
        "message": "Parameter spellcheck should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "155",
        "severity": "error",
        "message": "Line has trailing spaces.",
        "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
    },
    {
        "line": "159",
        "column": "34",
        "severity": "error",
        "message": "Parameter translate should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "161",
        "severity": "error",
        "message": "Line has trailing spaces.",
        "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
    },
    {
        "line": "167",
        "severity": "error",
        "message": "Line has trailing spaces.",
        "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
    },
    {
        "line": "169",
        "severity": "error",
        "message": "Line has trailing spaces.",
        "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
    }
]