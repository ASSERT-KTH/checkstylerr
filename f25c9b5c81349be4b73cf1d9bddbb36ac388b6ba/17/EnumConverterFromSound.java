/*
 * Copyright (c) 2020, GoMint, BlackyPaw and geNAZt
 *
 * This code is licensed under the BSD license found in the
 * LICENSE file in the root directory of this source tree.
 */

package io.gomint.server.util;

import io.gomint.world.Sound;

/**
 * @author generated
 * @version 2.0
 */
public class EnumConverterFromSound implements EnumConverter {

    @Override
    public Enum convert( Enum value ) {
        int id = value.ordinal();
        switch ( id ) {
            case 0:
                return Sound.ITEM_USE_ON;
            case 1:
                return Sound.HIT;
            case 2:
                return Sound.STEP;
            case 3:
                return Sound.FLY;
            case 4:
                return Sound.JUMP;
            case 5:
                return Sound.BREAK;
            case 6:
                return Sound.PLACE;
            case 7:
                return Sound.HEAVY_STEP;
            case 8:
                return Sound.GALLOP;
            case 9:
                return Sound.FALL;
            case 10:
                return Sound.AMBIENT;
            case 11:
                return Sound.AMBIENT_BABY;
            case 12:
                return Sound.AMBIENT_IN_WATER;
            case 13:
                return Sound.BREATHE;
            case 14:
                return Sound.DEATH;
            case 15:
                return Sound.DEATH_IN_WATER;
            case 16:
                return Sound.DEATH_TO_ZOMBIE;
            case 17:
                return Sound.HURT;
            case 18:
                return Sound.HURT_IN_WATER;
            case 19:
                return Sound.MAD;
            case 20:
                return Sound.BOOST;
            case 21:
                return Sound.BOW;
            case 22:
                return Sound.SQUISH_BIG;
            case 23:
                return Sound.SQUISH_SMALL;
            case 24:
                return Sound.FALL_BIG;
            case 25:
                return Sound.FALL_SMALL;
            case 26:
                return Sound.SPLASH;
            case 27:
                return Sound.FIZZ;
            case 28:
                return Sound.FLAP;
            case 29:
                return Sound.SWIM;
            case 30:
                return Sound.DRINK;
            case 31:
                return Sound.EAT;
            case 32:
                return Sound.TAKEOFF;
            case 33:
                return Sound.SHAKE;
            case 34:
                return Sound.PLOP;
            case 35:
                return Sound.LAND;
            case 36:
                return Sound.SADDLE;
            case 37:
                return Sound.ARMOR;
            case 38:
                return Sound.ADD_CHEST;
            case 39:
                return Sound.THROW;
            case 40:
                return Sound.ATTACK;
            case 41:
                return Sound.ATTACK_NODAMAGE;
            case 42:
                return Sound.ATTACK_STRONG;
            case 43:
                return Sound.WARN;
            case 44:
                return Sound.SHEAR;
            case 45:
                return Sound.MILK;
            case 46:
                return Sound.THUNDER;
            case 47:
                return Sound.EXPLODE;
            case 48:
                return Sound.FIRE;
            case 49:
                return Sound.IGNITE;
            case 50:
                return Sound.FUSE;
            case 51:
                return Sound.STARE;
            case 52:
                return Sound.SPAWN;
            case 53:
                return Sound.SHOOT;
            case 54:
                return Sound.BREAK_BLOCK;
            case 55:
                return Sound.LAUNCH;
            case 56:
                return Sound.BLAST;
            case 57:
                return Sound.LARGE_BLAST;
            case 58:
                return Sound.TWINKLE;
            case 59:
                return Sound.REMEDY;
            case 60:
                return Sound.UNFECT;
            case 61:
                return Sound.LEVELUP;
            case 62:
                return Sound.BOW_HIT;
            case 63:
                return Sound.BULLET_HIT;
            case 64:
                return Sound.EXTINGUISH_FIRE;
            case 65:
                return Sound.ITEM_FIZZ;
            case 66:
                return Sound.CHEST_OPEN;
            case 67:
                return Sound.CHEST_CLOSED;
            case 68:
                return Sound.SHULKERBOX_OPEN;
            case 69:
                return Sound.SHULKERBOX_CLOSED;
            case 70:
                return Sound.POWER_ON;
            case 71:
                return Sound.POWER_OFF;
            case 72:
                return Sound.ATTACH;
            case 73:
                return Sound.DETACH;
            case 74:
                return Sound.DENY;
            case 75:
                return Sound.TRIPOD;
            case 76:
                return Sound.POP;
            case 77:
                return Sound.DROP_SLOT;
            case 78:
                return Sound.NOTE;
            case 79:
                return Sound.THORNS;
            case 80:
                return Sound.PISTON_IN;
            case 81:
                return Sound.PISTON_OUT;
            case 82:
                return Sound.PORTAL;
            case 83:
                return Sound.WATER;
            case 84:
                return Sound.LAVA_POP;
            case 85:
                return Sound.LAVA;
            case 86:
                return Sound.BURP;
            case 87:
                return Sound.BUCKET_FILL_WATER;
            case 88:
                return Sound.BUCKET_FILL_LAVA;
            case 89:
                return Sound.BUCKET_EMPTY_WATER;
            case 90:
                return Sound.BUCKET_EMPTY_LAVA;
            case 91:
                return Sound.RECORD_13;
            case 92:
                return Sound.RECORD_CAT;
            case 93:
                return Sound.RECORD_BLOCKS;
            case 94:
                return Sound.RECORD_CHIRP;
            case 95:
                return Sound.RECORD_FAR;
            case 96:
                return Sound.RECORD_MALL;
            case 97:
                return Sound.RECORD_MELLOHI;
            case 98:
                return Sound.RECORD_STAL;
            case 99:
                return Sound.RECORD_STRAD;
            case 100:
                return Sound.RECORD_WARD;
            case 101:
                return Sound.RECORD_11;
            case 102:
                return Sound.RECORD_WAIT;
            case 103:
                return Sound.GUARDIAN_FLOP;
            case 104:
                return Sound.ELDERGUARDIAN_CURSE;
            case 105:
                return Sound.MOB_WARNING;
            case 106:
                return Sound.MOB_WARNING_BABY;
            case 107:
                return Sound.TELEPORT;
            case 108:
                return Sound.SHULKER_OPEN;
            case 109:
                return Sound.SHULKER_CLOSE;
            case 110:
                return Sound.HAGGLE;
            case 111:
                return Sound.HAGGLE_YES;
            case 112:
                return Sound.HAGGLE_NO;
            case 113:
                return Sound.HAGGLE_IDLE;
            case 114:
                return Sound.CHORUSGROW;
            case 115:
                return Sound.CHORUSDEATH;
            case 116:
                return Sound.GLASS;
            case 117:
                return Sound.CAST_SPELL;
            case 118:
                return Sound.PREPARE_ATTACK;
            case 119:
                return Sound.PREPARE_SUMMON;
            case 120:
                return Sound.PREPARE_WOLOLO;
            case 121:
                return Sound.FANG;
            case 122:
                return Sound.CHARGE;
            case 123:
                return Sound.CAMERA_TAKE_PICTURE;
            case 124:
                return Sound.LEASHKNOT_PLACE;
            case 125:
                return Sound.LEASHKNOT_BREAK;
            case 126:
                return Sound.GROWL;
            case 127:
                return Sound.WHINE;
            case 128:
                return Sound.PANT;
            case 129:
                return Sound.PURR;
            case 130:
                return Sound.PURREOW;
            case 131:
                return Sound.DEATH_MIN_VOLUME;
            case 132:
                return Sound.DEATH_MID_VOLUME;
            case 133:
                return Sound.IMITATE_BLAZE;
            case 134:
                return Sound.IMITATE_CAVE_SPIDER;
            case 135:
                return Sound.IMITATE_CREEPER;
            case 136:
                return Sound.IMITATE_ELDER_GUARDIAN;
            case 137:
                return Sound.IMITATE_ENDER_DRAGON;
            case 138:
                return Sound.IMITATE_ENDERMAN;
            case 139:
                return Sound.IMITATE_EVOCATION_ILLAGER;
            case 140:
                return Sound.IMITATE_GHAST;
            case 141:
                return Sound.IMITATE_HUSK;
            case 142:
                return Sound.IMITATE_ILLUSION_ILLAGER;
            case 143:
                return Sound.IMITATE_MAGMA_CUBE;
            case 144:
                return Sound.IMITATE_POLAR_BEAR;
            case 145:
                return Sound.IMITATE_SHULKER;
            case 146:
                return Sound.IMITATE_SILVERFISH;
            case 147:
                return Sound.IMITATE_SKELETON;
            case 148:
                return Sound.IMITATE_SLIME;
            case 149:
                return Sound.IMITATE_SPIDER;
            case 150:
                return Sound.IMITATE_STRAY;
            case 151:
                return Sound.IMITATE_VEX;
            case 152:
                return Sound.IMITATE_VINDICATION_ILLAGER;
            case 153:
                return Sound.IMITATE_WITCH;
            case 154:
                return Sound.IMITATE_WITHER;
            case 155:
                return Sound.IMITATE_WITHER_SKELETON;
            case 156:
                return Sound.IMITATE_WOLF;
            case 157:
                return Sound.IMITATE_ZOMBIE;
            case 158:
                return Sound.IMITATE_ZOMBIE_PIGMAN;
            case 159:
                return Sound.IMITATE_ZOMBIE_VILLAGER;
            case 160:
                return Sound.BLOCK_END_PORTAL_FRAME_FILL;
            case 161:
                return Sound.BLOCK_END_PORTAL_SPAWN;
            case 162:
                return Sound.RANDOM_ANVIL_USE;
            case 163:
                return Sound.BOTTLE_DRAGONBREATH;
            case 164:
                return Sound.PORTAL_TRAVEL;
            case 165:
                return Sound.BELLS;
            case 166:
                return Sound.RAVAGERS;
            case 167:
                return Sound.SWEETBERRYBUSHES;
            case 168:
                return Sound.CAMPFIRES;
            case 169:
                return Sound.RAIDS;
            case 170:
                return Sound.GRINDSTONES;
            case 171:
                return Sound.LANTERNS;
        }

        return null;
    }

}
