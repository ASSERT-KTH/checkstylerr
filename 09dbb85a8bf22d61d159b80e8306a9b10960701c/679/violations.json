[
    {
        "line": "42",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 100).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "43",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 98).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "44",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 96).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "53",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "55",
        "severity": "error",
        "message": "First sentence should end with a period.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck"
    },
    {
        "line": "61",
        "column": "27",
        "severity": "error",
        "message": "Parameter keyStore should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "61",
        "column": "36",
        "severity": "error",
        "message": "Expected @param tag for 'keyStore'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "61",
        "column": "46",
        "severity": "error",
        "message": "Parameter pwd should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "61",
        "column": "53",
        "severity": "error",
        "message": "Expected @param tag for 'pwd'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "72",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 86).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "73",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 94).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "74",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 83).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "87",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 92).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "87",
        "column": "5",
        "severity": "error",
        "message": "Class 'KeyManagerImpl' looks like designed for extension (can be subclassed), but the method 'chooseClientAlias' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'KeyManagerImpl' final or making the method 'chooseClientAlias' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "87",
        "column": "37",
        "severity": "error",
        "message": "Parameter keyTypes should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "87",
        "column": "56",
        "severity": "error",
        "message": "Parameter issuers should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "87",
        "column": "77",
        "severity": "error",
        "message": "Parameter socket should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "89",
        "column": "28",
        "severity": "error",
        "message": "Avoid inline conditionals.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.AvoidInlineConditionalsCheck"
    },
    {
        "line": "92",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 89).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "92",
        "column": "5",
        "severity": "error",
        "message": "Class 'KeyManagerImpl' looks like designed for extension (can be subclassed), but the method 'chooseServerAlias' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'KeyManagerImpl' final or making the method 'chooseServerAlias' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "92",
        "column": "37",
        "severity": "error",
        "message": "Parameter keyType should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "92",
        "column": "53",
        "severity": "error",
        "message": "Parameter issuers should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "92",
        "column": "74",
        "severity": "error",
        "message": "Parameter socket should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "93",
        "column": "54",
        "severity": "error",
        "message": "'{' is followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck"
    },
    {
        "line": "94",
        "column": "28",
        "severity": "error",
        "message": "Avoid inline conditionals.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.AvoidInlineConditionalsCheck"
    },
    {
        "line": "97",
        "column": "5",
        "severity": "error",
        "message": "Class 'KeyManagerImpl' looks like designed for extension (can be subclassed), but the method 'getCertificateChain' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'KeyManagerImpl' final or making the method 'getCertificateChain' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "97",
        "column": "50",
        "severity": "error",
        "message": "Parameter alias should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "115",
        "column": "5",
        "severity": "error",
        "message": "Class 'KeyManagerImpl' looks like designed for extension (can be subclassed), but the method 'getClientAliases' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'KeyManagerImpl' final or making the method 'getClientAliases' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "115",
        "column": "38",
        "severity": "error",
        "message": "Parameter keyType should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "115",
        "column": "54",
        "severity": "error",
        "message": "Parameter issuers should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "116",
        "column": "41",
        "severity": "error",
        "message": "'{' is followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck"
    },
    {
        "line": "119",
        "column": "5",
        "severity": "error",
        "message": "Class 'KeyManagerImpl' looks like designed for extension (can be subclassed), but the method 'getServerAliases' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'KeyManagerImpl' final or making the method 'getServerAliases' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "119",
        "column": "38",
        "severity": "error",
        "message": "Parameter keyType should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "119",
        "column": "54",
        "severity": "error",
        "message": "Parameter issuers should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "120",
        "column": "41",
        "severity": "error",
        "message": "'{' is followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck"
    },
    {
        "line": "123",
        "column": "5",
        "severity": "error",
        "message": "Class 'KeyManagerImpl' looks like designed for extension (can be subclassed), but the method 'getPrivateKey' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'KeyManagerImpl' final or making the method 'getPrivateKey' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "123",
        "column": "37",
        "severity": "error",
        "message": "Parameter alias should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "133",
        "column": "5",
        "severity": "error",
        "message": "Class 'KeyManagerImpl' looks like designed for extension (can be subclassed), but the method 'chooseEngineClientAlias' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'KeyManagerImpl' final or making the method 'chooseEngineClientAlias' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "134",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 101).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "134",
        "column": "43",
        "severity": "error",
        "message": "Parameter keyTypes should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "134",
        "column": "62",
        "severity": "error",
        "message": "Parameter issuers should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "134",
        "column": "83",
        "severity": "error",
        "message": "Parameter engine should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "136",
        "column": "28",
        "severity": "error",
        "message": "Avoid inline conditionals.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.AvoidInlineConditionalsCheck"
    },
    {
        "line": "139",
        "column": "5",
        "severity": "error",
        "message": "Class 'KeyManagerImpl' looks like designed for extension (can be subclassed), but the method 'chooseEngineServerAlias' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'KeyManagerImpl' final or making the method 'chooseEngineServerAlias' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "140",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 98).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "140",
        "column": "43",
        "severity": "error",
        "message": "Parameter keyType should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "140",
        "column": "59",
        "severity": "error",
        "message": "Parameter issuers should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "140",
        "column": "80",
        "severity": "error",
        "message": "Parameter engine should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "141",
        "column": "54",
        "severity": "error",
        "message": "'{' is followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceAfterCheck"
    },
    {
        "line": "142",
        "column": "28",
        "severity": "error",
        "message": "Avoid inline conditionals.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.AvoidInlineConditionalsCheck"
    },
    {
        "line": "145",
        "column": "34",
        "severity": "error",
        "message": "Parameter keyTypes should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "145",
        "column": "53",
        "severity": "error",
        "message": "Parameter issuers should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "149",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 88).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "149",
        "column": "57",
        "severity": "error",
        "message": "Avoid inline conditionals.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.AvoidInlineConditionalsCheck"
    },
    {
        "line": "151",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 85).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "158",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 104).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "158",
        "column": "40",
        "severity": "error",
        "message": "Avoid inline conditionals.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.AvoidInlineConditionalsCheck"
    },
    {
        "line": "193",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 99).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "199",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 85).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "208",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 92).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    }
]