[
    {
        "line": "18",
        "severity": "warning",
        "message": "'package' should be separated from previous statement.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
    },
    {
        "line": "21",
        "severity": "warning",
        "message": "'com.google.common.base.Function' should be separated from previous import group by one line.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.CustomImportOrderCheck"
    },
    {
        "line": "23",
        "severity": "warning",
        "message": "Using the '.*' form of import should be avoided - org.apache.commons.cli.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "36",
        "severity": "warning",
        "message": "Wrong lexicographical order for 'javax.annotation.Nullable' import. Should be before 'org.apache.metron.enrichment.adapters.maxmind.geo.GeoLiteCityDatabase'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.CustomImportOrderCheck"
    },
    {
        "line": "37",
        "severity": "warning",
        "message": "Wrong lexicographical order for 'java.io.ByteArrayInputStream' import. Should be before 'org.apache.metron.enrichment.adapters.maxmind.geo.GeoLiteCityDatabase'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.CustomImportOrderCheck"
    },
    {
        "line": "38",
        "severity": "warning",
        "message": "Wrong lexicographical order for 'java.io.File' import. Should be before 'org.apache.metron.enrichment.adapters.maxmind.geo.GeoLiteCityDatabase'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.CustomImportOrderCheck"
    },
    {
        "line": "39",
        "severity": "warning",
        "message": "Wrong lexicographical order for 'java.io.IOException' import. Should be before 'org.apache.metron.enrichment.adapters.maxmind.geo.GeoLiteCityDatabase'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.CustomImportOrderCheck"
    },
    {
        "line": "40",
        "severity": "warning",
        "message": "Wrong lexicographical order for 'java.net.MalformedURLException' import. Should be before 'org.apache.metron.enrichment.adapters.maxmind.geo.GeoLiteCityDatabase'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.CustomImportOrderCheck"
    },
    {
        "line": "41",
        "severity": "warning",
        "message": "Wrong lexicographical order for 'java.net.URL' import. Should be before 'org.apache.metron.enrichment.adapters.maxmind.geo.GeoLiteCityDatabase'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.CustomImportOrderCheck"
    },
    {
        "line": "42",
        "severity": "warning",
        "message": "Wrong lexicographical order for 'java.time.LocalDateTime' import. Should be before 'org.apache.metron.enrichment.adapters.maxmind.geo.GeoLiteCityDatabase'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.CustomImportOrderCheck"
    },
    {
        "line": "43",
        "severity": "warning",
        "message": "Wrong lexicographical order for 'java.time.ZoneOffset' import. Should be before 'org.apache.metron.enrichment.adapters.maxmind.geo.GeoLiteCityDatabase'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.CustomImportOrderCheck"
    },
    {
        "line": "44",
        "severity": "warning",
        "message": "Wrong lexicographical order for 'java.util.Map' import. Should be before 'org.apache.metron.enrichment.adapters.maxmind.geo.GeoLiteCityDatabase'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.CustomImportOrderCheck"
    },
    {
        "line": "52",
        "column": "18",
        "severity": "warning",
        "message": "'abstract' modifier out of order with the JLS suggestions.",
        "source": "com.puppycrawl.tools.checkstyle.checks.modifier.ModifierOrderCheck"
    },
    {
        "line": "74",
        "severity": "warning",
        "message": "Line is longer than 100 characters (found 101).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "83",
        "severity": "warning",
        "message": "Line is longer than 100 characters (found 155).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "92",
        "severity": "warning",
        "message": "Line is longer than 100 characters (found 158).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "101",
        "severity": "warning",
        "message": "Line is longer than 100 characters (found 125).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "110",
        "severity": "warning",
        "message": "Line is longer than 100 characters (found 122).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "145",
        "column": "5",
        "severity": "warning",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "168",
        "column": "5",
        "severity": "warning",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "170",
        "severity": "warning",
        "message": "Line is longer than 100 characters (found 120).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "181",
        "column": "12",
        "severity": "warning",
        "message": "Local variable name 'geo_url' must match pattern '^[a-z]([a-z0-9][a-zA-Z0-9]*)?$'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.naming.LocalVariableNameCheck"
    },
    {
        "line": "182",
        "column": "12",
        "severity": "warning",
        "message": "Local variable name 'asn_url' must match pattern '^[a-z]([a-z0-9][a-zA-Z0-9]*)?$'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.naming.LocalVariableNameCheck"
    },
    {
        "line": "184",
        "severity": "warning",
        "message": "Line is longer than 100 characters (found 121).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "252",
        "severity": "warning",
        "message": "Line is longer than 100 characters (found 122).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "258",
        "severity": "warning",
        "message": "Line is longer than 100 characters (found 111).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "268",
        "severity": "warning",
        "message": "Line is longer than 100 characters (found 117).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "271",
        "severity": "warning",
        "message": "Line is longer than 100 characters (found 103).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "278",
        "severity": "warning",
        "message": "Line is longer than 100 characters (found 102).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "294",
        "column": "3",
        "severity": "warning",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    }
]