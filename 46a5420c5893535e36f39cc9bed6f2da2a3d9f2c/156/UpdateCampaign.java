/*
 * Pelion Device Management API
 * Pelion Device Management API build from the publicly defined API definitions.
 *
 * OpenAPI spec version: 3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.arm.mbed.cloud.sdk.lowlevel.pelionclouddevicemanagement.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.joda.time.DateTime;
import java.io.Serializable;

/**
 * UpdateCampaign
 */

public class UpdateCampaign implements Serializable {
    private static final long serialVersionUID = 1L;

    @SerializedName("autostop_reason")
    private String autostopReason = null;

    @SerializedName("created_at")
    private DateTime createdAt = null;

    @SerializedName("description")
    private String description = null;

    @SerializedName("device_filter")
    private String deviceFilter = null;

    @SerializedName("etag")
    private String etag = null;

    @SerializedName("finished")
    private DateTime finished = null;

    @SerializedName("id")
    private String id = null;

    @SerializedName("name")
    private String name = null;

    @SerializedName("object")
    private String object = null;

    @SerializedName("phase")
    private String phase = null;

    @SerializedName("root_manifest_id")
    private String rootManifestId = null;

    @SerializedName("root_manifest_url")
    private String rootManifestUrl = null;

    @SerializedName("started_at")
    private DateTime startedAt = null;

    /**
     * DEPRECATED: The state of the campaign (use phase instead).
     */
    @JsonAdapter(StateEnum.Adapter.class)
    public enum StateEnum {
        DRAFT("draft"),

        SCHEDULED("scheduled"),

        ALLOCATINGQUOTA("allocatingquota"),

        ALLOCATEDQUOTA("allocatedquota"),

        QUOTAALLOCATIONFAILED("quotaallocationfailed"),

        CHECKINGMANIFEST("checkingmanifest"),

        CHECKEDMANIFEST("checkedmanifest"),

        DEVICEFETCH("devicefetch"),

        DEVICECOPY("devicecopy"),

        DEVICECHECK("devicecheck"),

        PUBLISHING("publishing"),

        DEPLOYING("deploying"),

        DEPLOYED("deployed"),

        MANIFESTREMOVED("manifestremoved"),

        EXPIRED("expired"),

        STOPPING("stopping"),

        AUTOSTOPPED("autostopped"),

        USERSTOPPED("userstopped"),

        CONFLICT("conflict");

        private String value;

        StateEnum(String value) {
            this.value = value;
        }

        public String getValue() {
            return value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        public static StateEnum fromValue(String text) {
            for (StateEnum b : StateEnum.values()) {
                if (String.valueOf(b.value).equals(text)) {
                    return b;
                }
            }
            return null;
        }

        public static class Adapter extends TypeAdapter<StateEnum> {
            @Override
            public void write(final JsonWriter jsonWriter, final StateEnum enumeration) throws IOException {
                jsonWriter.value(enumeration.getValue());
            }

            @Override
            public StateEnum read(final JsonReader jsonReader) throws IOException {
                String value = jsonReader.nextString();
                return StateEnum.fromValue(String.valueOf(value));
            }
        }
    }

    @SerializedName("state")
    private StateEnum state = null;

    @SerializedName("updated_at")
    private DateTime updatedAt = null;

    @SerializedName("when")
    private DateTime when = null;

    public UpdateCampaign autostopReason(String autostopReason) {
        this.autostopReason = autostopReason;
        return this;
    }

    /**
     * Text description of why a campaign failed to start or why a campaign stopped.
     * 
     * @return autostopReason
     **/
    @ApiModelProperty(example = "Insufficient billing credit.",
                      value = "Text description of why a campaign failed to start or why a campaign stopped.")
    public String getAutostopReason() {
        return autostopReason;
    }

    public void setAutostopReason(String autostopReason) {
        this.autostopReason = autostopReason;
    }

    public UpdateCampaign createdAt(DateTime createdAt) {
        this.createdAt = createdAt;
        return this;
    }

    /**
     * The time the update campaign was created
     * 
     * @return createdAt
     **/
    @ApiModelProperty(example = "2017-05-22T12:37:55.576563Z", value = "The time the update campaign was created")
    public DateTime getCreatedAt() {
        return createdAt;
    }

    public void setCreatedAt(DateTime createdAt) {
        this.createdAt = createdAt;
    }

    public UpdateCampaign description(String description) {
        this.description = description;
        return this;
    }

    /**
     * An optional description of the campaign
     * 
     * @return description
     **/
    @ApiModelProperty(example = "", value = "An optional description of the campaign")
    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public UpdateCampaign deviceFilter(String deviceFilter) {
        this.deviceFilter = deviceFilter;
        return this;
    }

    /**
     * The filter for the devices the campaign is targeting at
     * 
     * @return deviceFilter
     **/
    @ApiModelProperty(example = "id__eq=00000000000000000000000000000000",
                      value = "The filter for the devices the campaign is targeting at")
    public String getDeviceFilter() {
        return deviceFilter;
    }

    public void setDeviceFilter(String deviceFilter) {
        this.deviceFilter = deviceFilter;
    }

    public UpdateCampaign etag(String etag) {
        this.etag = etag;
        return this;
    }

    /**
     * The entity instance signature
     * 
     * @return etag
     **/
    @ApiModelProperty(example = "2017-05-22T12:37:58.753425Z", value = "The entity instance signature")
    public String getEtag() {
        return etag;
    }

    public void setEtag(String etag) {
        this.etag = etag;
    }

    public UpdateCampaign finished(DateTime finished) {
        this.finished = finished;
        return this;
    }

    /**
     * The campaign finish timestamp
     * 
     * @return finished
     **/
    @ApiModelProperty(example = "2017-05-22T12:37:55.576563Z", value = "The campaign finish timestamp")
    public DateTime getFinished() {
        return finished;
    }

    public void setFinished(DateTime finished) {
        this.finished = finished;
    }

    public UpdateCampaign id(String id) {
        this.id = id;
        return this;
    }

    /**
     * The campaign ID
     * 
     * @return id
     **/
    @ApiModelProperty(example = "00000000000000000000000000000000", value = "The campaign ID")
    public String getId() {
        return id;
    }

    public void setId(String id) {
        this.id = id;
    }

    public UpdateCampaign name(String name) {
        this.name = name;
        return this;
    }

    /**
     * The campaign name
     * 
     * @return name
     **/
    @ApiModelProperty(example = "campaign", value = "The campaign name")
    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public UpdateCampaign object(String object) {
        this.object = object;
        return this;
    }

    /**
     * The API resource entity
     * 
     * @return object
     **/
    @ApiModelProperty(example = "update-campaign", value = "The API resource entity")
    public String getObject() {
        return object;
    }

    public void setObject(String object) {
        this.object = object;
    }

    /**
     * The current phase of the campaign.
     * 
     * @return phase
     **/
    @ApiModelProperty(value = "The current phase of the campaign.")
    public String getPhase() {
        return phase;
    }

    public UpdateCampaign rootManifestId(String rootManifestId) {
        this.rootManifestId = rootManifestId;
        return this;
    }

    /**
     * Get rootManifestId
     * 
     * @return rootManifestId
     **/
    @ApiModelProperty(example = "00000000000000000000000000000000", value = "")
    public String getRootManifestId() {
        return rootManifestId;
    }

    public void setRootManifestId(String rootManifestId) {
        this.rootManifestId = rootManifestId;
    }

    public UpdateCampaign rootManifestUrl(String rootManifestUrl) {
        this.rootManifestUrl = rootManifestUrl;
        return this;
    }

    /**
     * Get rootManifestUrl
     * 
     * @return rootManifestUrl
     **/
    @ApiModelProperty(example = "http://example.com/00000000000000000000000000000000", value = "")
    public String getRootManifestUrl() {
        return rootManifestUrl;
    }

    public void setRootManifestUrl(String rootManifestUrl) {
        this.rootManifestUrl = rootManifestUrl;
    }

    public UpdateCampaign startedAt(DateTime startedAt) {
        this.startedAt = startedAt;
        return this;
    }

    /**
     * Get startedAt
     * 
     * @return startedAt
     **/
    @ApiModelProperty(example = "2017-05-22T12:37:55.576563Z", value = "")
    public DateTime getStartedAt() {
        return startedAt;
    }

    public void setStartedAt(DateTime startedAt) {
        this.startedAt = startedAt;
    }

    public UpdateCampaign state(StateEnum state) {
        this.state = state;
        return this;
    }

    /**
     * DEPRECATED: The state of the campaign (use phase instead).
     * 
     * @return state
     **/
    @ApiModelProperty(value = "DEPRECATED: The state of the campaign (use phase instead).")
    public StateEnum getState() {
        return state;
    }

    public void setState(StateEnum state) {
        this.state = state;
    }

    public UpdateCampaign updatedAt(DateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }

    /**
     * The time the object was updated
     * 
     * @return updatedAt
     **/
    @ApiModelProperty(example = "2017-05-22T12:37:55.576563Z", value = "The time the object was updated")
    public DateTime getUpdatedAt() {
        return updatedAt;
    }

    public void setUpdatedAt(DateTime updatedAt) {
        this.updatedAt = updatedAt;
    }

    public UpdateCampaign when(DateTime when) {
        this.when = when;
        return this;
    }

    /**
     * The scheduled start time for the campaign. The campaign will start within 1 minute when then start time has
     * elapsed.
     * 
     * @return when
     **/
    @ApiModelProperty(example = "2017-05-22T12:37:55.576563Z",
                      value = "The scheduled start time for the campaign. The campaign will start within 1 minute when then start time has elapsed.")
    public DateTime getWhen() {
        return when;
    }

    public void setWhen(DateTime when) {
        this.when = when;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        UpdateCampaign updateCampaign = (UpdateCampaign) o;
        return Objects.equals(this.autostopReason, updateCampaign.autostopReason)
               && Objects.equals(this.createdAt, updateCampaign.createdAt)
               && Objects.equals(this.description, updateCampaign.description)
               && Objects.equals(this.deviceFilter, updateCampaign.deviceFilter)
               && Objects.equals(this.etag, updateCampaign.etag)
               && Objects.equals(this.finished, updateCampaign.finished) && Objects.equals(this.id, updateCampaign.id)
               && Objects.equals(this.name, updateCampaign.name) && Objects.equals(this.object, updateCampaign.object)
               && Objects.equals(this.phase, updateCampaign.phase)
               && Objects.equals(this.rootManifestId, updateCampaign.rootManifestId)
               && Objects.equals(this.rootManifestUrl, updateCampaign.rootManifestUrl)
               && Objects.equals(this.startedAt, updateCampaign.startedAt)
               && Objects.equals(this.state, updateCampaign.state)
               && Objects.equals(this.updatedAt, updateCampaign.updatedAt)
               && Objects.equals(this.when, updateCampaign.when);
    }

    @Override
    public int hashCode() {
        return Objects.hash(autostopReason, createdAt, description, deviceFilter, etag, finished, id, name, object,
                            phase, rootManifestId, rootManifestUrl, startedAt, state, updatedAt, when);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class UpdateCampaign {\n");

        sb.append("    autostopReason: ").append(toIndentedString(autostopReason)).append("\n");
        sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
        sb.append("    description: ").append(toIndentedString(description)).append("\n");
        sb.append("    deviceFilter: ").append(toIndentedString(deviceFilter)).append("\n");
        sb.append("    etag: ").append(toIndentedString(etag)).append("\n");
        sb.append("    finished: ").append(toIndentedString(finished)).append("\n");
        sb.append("    id: ").append(toIndentedString(id)).append("\n");
        sb.append("    name: ").append(toIndentedString(name)).append("\n");
        sb.append("    object: ").append(toIndentedString(object)).append("\n");
        sb.append("    phase: ").append(toIndentedString(phase)).append("\n");
        sb.append("    rootManifestId: ").append(toIndentedString(rootManifestId)).append("\n");
        sb.append("    rootManifestUrl: ").append(toIndentedString(rootManifestUrl)).append("\n");
        sb.append("    startedAt: ").append(toIndentedString(startedAt)).append("\n");
        sb.append("    state: ").append(toIndentedString(state)).append("\n");
        sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
        sb.append("    when: ").append(toIndentedString(when)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
