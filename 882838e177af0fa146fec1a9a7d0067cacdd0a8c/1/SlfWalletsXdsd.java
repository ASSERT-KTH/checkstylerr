/*
 * This file is generated by jOOQ.
 */
package com.selfxdsd.storage.generated.jooq.tables;


import com.selfxdsd.storage.generated.jooq.Keys;
import com.selfxdsd.storage.generated.jooq.SelfXdsd;
import com.selfxdsd.storage.generated.jooq.tables.records.SlfWalletsXdsdRecord;

import java.math.BigInteger;
import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row6;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SlfWalletsXdsd extends TableImpl<SlfWalletsXdsdRecord> {

    private static final long serialVersionUID = -2017457143;

    /**
     * The reference instance of <code>self_xdsd.slf_wallets_xdsd</code>
     */
    public static final SlfWalletsXdsd SLF_WALLETS_XDSD = new SlfWalletsXdsd();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SlfWalletsXdsdRecord> getRecordType() {
        return SlfWalletsXdsdRecord.class;
    }

    /**
     * The column <code>self_xdsd.slf_wallets_xdsd.repo_fullname</code>.
     */
    public final TableField<SlfWalletsXdsdRecord, String> REPO_FULLNAME = createField(DSL.name("repo_fullname"), org.jooq.impl.SQLDataType.VARCHAR(256).nullable(false), this, "");

    /**
     * The column <code>self_xdsd.slf_wallets_xdsd.provider</code>.
     */
    public final TableField<SlfWalletsXdsdRecord, String> PROVIDER = createField(DSL.name("provider"), org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "");

    /**
     * The column <code>self_xdsd.slf_wallets_xdsd.type</code>.
     */
    public final TableField<SlfWalletsXdsdRecord, String> TYPE = createField(DSL.name("type"), org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "");

    /**
     * The column <code>self_xdsd.slf_wallets_xdsd.cash</code>.
     */
    public final TableField<SlfWalletsXdsdRecord, BigInteger> CASH = createField(DSL.name("cash"), org.jooq.impl.SQLDataType.DECIMAL_INTEGER.precision(20).nullable(false), this, "");

    /**
     * The column <code>self_xdsd.slf_wallets_xdsd.active</code>.
     */
    public final TableField<SlfWalletsXdsdRecord, Boolean> ACTIVE = createField(DSL.name("active"), org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * The column <code>self_xdsd.slf_wallets_xdsd.identifier</code>.
     */
    public final TableField<SlfWalletsXdsdRecord, String> IDENTIFIER = createField(DSL.name("identifier"), org.jooq.impl.SQLDataType.VARCHAR(256).nullable(false), this, "");

    /**
     * Create a <code>self_xdsd.slf_wallets_xdsd</code> table reference
     */
    public SlfWalletsXdsd() {
        this(DSL.name("slf_wallets_xdsd"), null);
    }

    /**
     * Create an aliased <code>self_xdsd.slf_wallets_xdsd</code> table reference
     */
    public SlfWalletsXdsd(String alias) {
        this(DSL.name(alias), SLF_WALLETS_XDSD);
    }

    /**
     * Create an aliased <code>self_xdsd.slf_wallets_xdsd</code> table reference
     */
    public SlfWalletsXdsd(Name alias) {
        this(alias, SLF_WALLETS_XDSD);
    }

    private SlfWalletsXdsd(Name alias, Table<SlfWalletsXdsdRecord> aliased) {
        this(alias, aliased, null);
    }

    private SlfWalletsXdsd(Name alias, Table<SlfWalletsXdsdRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> SlfWalletsXdsd(Table<O> child, ForeignKey<O, SlfWalletsXdsdRecord> key) {
        super(child, key, SLF_WALLETS_XDSD);
    }

    @Override
    public Schema getSchema() {
        return SelfXdsd.SELF_XDSD;
    }

    @Override
    public UniqueKey<SlfWalletsXdsdRecord> getPrimaryKey() {
        return Keys.KEY_SLF_WALLETS_XDSD_PRIMARY;
    }

    @Override
    public List<UniqueKey<SlfWalletsXdsdRecord>> getKeys() {
        return Arrays.<UniqueKey<SlfWalletsXdsdRecord>>asList(Keys.KEY_SLF_WALLETS_XDSD_PRIMARY);
    }

    @Override
    public List<ForeignKey<SlfWalletsXdsdRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<SlfWalletsXdsdRecord, ?>>asList(Keys.OWNERPROJECT);
    }

    public SlfProjectsXdsd slfProjectsXdsd() {
        return new SlfProjectsXdsd(this, Keys.OWNERPROJECT);
    }

    @Override
    public SlfWalletsXdsd as(String alias) {
        return new SlfWalletsXdsd(DSL.name(alias), this);
    }

    @Override
    public SlfWalletsXdsd as(Name alias) {
        return new SlfWalletsXdsd(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SlfWalletsXdsd rename(String name) {
        return new SlfWalletsXdsd(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SlfWalletsXdsd rename(Name name) {
        return new SlfWalletsXdsd(name, null);
    }

    // -------------------------------------------------------------------------
    // Row6 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row6<String, String, String, BigInteger, Boolean, String> fieldsRow() {
        return (Row6) super.fieldsRow();
    }
}
