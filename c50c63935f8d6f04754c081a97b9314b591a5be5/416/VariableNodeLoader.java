/*
 * Copyright (c) 2019 the Eclipse Milo Authors
 *
 * This program and the accompanying materials are made
 * available under the terms of the Eclipse Public License 2.0
 * which is available at https://www.eclipse.org/legal/epl-2.0/
 *
 * SPDX-License-Identifier: EPL-2.0
 */

package org.eclipse.milo.opcua.sdk.server.namespaces.loader;

import java.io.IOException;
import java.io.StringReader;

import org.eclipse.milo.opcua.sdk.core.Reference;
import org.eclipse.milo.opcua.sdk.server.api.NodeManager;
import org.eclipse.milo.opcua.sdk.server.model.nodes.variables.BaseDataVariableTypeNode;
import org.eclipse.milo.opcua.sdk.server.model.nodes.variables.BuildInfoTypeNode;
import org.eclipse.milo.opcua.sdk.server.model.nodes.variables.ConditionVariableTypeNode;
import org.eclipse.milo.opcua.sdk.server.model.nodes.variables.DataTypeDescriptionTypeNode;
import org.eclipse.milo.opcua.sdk.server.model.nodes.variables.DataTypeDictionaryTypeNode;
import org.eclipse.milo.opcua.sdk.server.model.nodes.variables.FiniteStateVariableTypeNode;
import org.eclipse.milo.opcua.sdk.server.model.nodes.variables.FiniteTransitionVariableTypeNode;
import org.eclipse.milo.opcua.sdk.server.model.nodes.variables.ProgramDiagnosticTypeNode;
import org.eclipse.milo.opcua.sdk.server.model.nodes.variables.PropertyTypeNode;
import org.eclipse.milo.opcua.sdk.server.model.nodes.variables.SamplingIntervalDiagnosticsArrayTypeNode;
import org.eclipse.milo.opcua.sdk.server.model.nodes.variables.SamplingIntervalDiagnosticsTypeNode;
import org.eclipse.milo.opcua.sdk.server.model.nodes.variables.ServerDiagnosticsSummaryTypeNode;
import org.eclipse.milo.opcua.sdk.server.model.nodes.variables.ServerStatusTypeNode;
import org.eclipse.milo.opcua.sdk.server.model.nodes.variables.ServerVendorCapabilityTypeNode;
import org.eclipse.milo.opcua.sdk.server.model.nodes.variables.SessionDiagnosticsArrayTypeNode;
import org.eclipse.milo.opcua.sdk.server.model.nodes.variables.SessionDiagnosticsVariableTypeNode;
import org.eclipse.milo.opcua.sdk.server.model.nodes.variables.SessionSecurityDiagnosticsArrayTypeNode;
import org.eclipse.milo.opcua.sdk.server.model.nodes.variables.SessionSecurityDiagnosticsTypeNode;
import org.eclipse.milo.opcua.sdk.server.model.nodes.variables.StateVariableTypeNode;
import org.eclipse.milo.opcua.sdk.server.model.nodes.variables.SubscriptionDiagnosticsArrayTypeNode;
import org.eclipse.milo.opcua.sdk.server.model.nodes.variables.SubscriptionDiagnosticsTypeNode;
import org.eclipse.milo.opcua.sdk.server.model.nodes.variables.TransitionVariableTypeNode;
import org.eclipse.milo.opcua.sdk.server.model.nodes.variables.TwoStateVariableTypeNode;
import org.eclipse.milo.opcua.sdk.server.nodes.UaNode;
import org.eclipse.milo.opcua.sdk.server.nodes.UaNodeContext;
import org.eclipse.milo.opcua.stack.core.Identifiers;
import org.eclipse.milo.opcua.stack.core.serialization.OpcUaXmlStreamDecoder;
import org.eclipse.milo.opcua.stack.core.types.builtin.DataValue;
import org.eclipse.milo.opcua.stack.core.types.builtin.LocalizedText;
import org.eclipse.milo.opcua.stack.core.types.builtin.NodeId;
import org.eclipse.milo.opcua.stack.core.types.builtin.QualifiedName;
import org.eclipse.milo.opcua.stack.core.types.builtin.Variant;
import org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UByte;
import org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger;
import org.xml.sax.SAXException;

class VariableNodeLoader {
    private final UaNodeContext context;

    private final NodeManager<UaNode> nodeManager;

    VariableNodeLoader(UaNodeContext context, NodeManager<UaNode> nodeManager) {
        this.context = context;
        this.nodeManager = nodeManager;
    }

    private void loadNode0() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_BinarySchema_RedundantServerDataType, new QualifiedName(0, "RedundantServerDataType"), new LocalizedText("en", "RedundantServerDataType"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_RedundantServerDataType, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_RedundantServerDataType, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">RedundantServerDataType</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_BinarySchema_SamplingIntervalDiagnosticsDataType, new QualifiedName(0, "SamplingIntervalDiagnosticsDataType"), new LocalizedText("en", "SamplingIntervalDiagnosticsDataType"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_SamplingIntervalDiagnosticsDataType, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_SamplingIntervalDiagnosticsDataType, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">SamplingIntervalDiagnosticsDataType</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode2() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_BinarySchema_ServerDiagnosticsSummaryDataType, new QualifiedName(0, "ServerDiagnosticsSummaryDataType"), new LocalizedText("en", "ServerDiagnosticsSummaryDataType"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_ServerDiagnosticsSummaryDataType, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_ServerDiagnosticsSummaryDataType, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">ServerDiagnosticsSummaryDataType</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode3() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_BinarySchema_ServerStatusDataType, new QualifiedName(0, "ServerStatusDataType"), new LocalizedText("en", "ServerStatusDataType"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_ServerStatusDataType, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_ServerStatusDataType, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">ServerStatusDataType</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode4() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_BinarySchema_SessionDiagnosticsDataType, new QualifiedName(0, "SessionDiagnosticsDataType"), new LocalizedText("en", "SessionDiagnosticsDataType"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_SessionDiagnosticsDataType, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_SessionDiagnosticsDataType, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">SessionDiagnosticsDataType</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode5() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_BinarySchema_SessionSecurityDiagnosticsDataType, new QualifiedName(0, "SessionSecurityDiagnosticsDataType"), new LocalizedText("en", "SessionSecurityDiagnosticsDataType"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_SessionSecurityDiagnosticsDataType, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_SessionSecurityDiagnosticsDataType, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">SessionSecurityDiagnosticsDataType</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode6() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_BinarySchema_ServiceCounterDataType, new QualifiedName(0, "ServiceCounterDataType"), new LocalizedText("en", "ServiceCounterDataType"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_ServiceCounterDataType, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_ServiceCounterDataType, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">ServiceCounterDataType</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode7() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_BinarySchema_SubscriptionDiagnosticsDataType, new QualifiedName(0, "SubscriptionDiagnosticsDataType"), new LocalizedText("en", "SubscriptionDiagnosticsDataType"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_SubscriptionDiagnosticsDataType, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_SubscriptionDiagnosticsDataType, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">SubscriptionDiagnosticsDataType</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode8() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_BinarySchema_ModelChangeStructureDataType, new QualifiedName(0, "ModelChangeStructureDataType"), new LocalizedText("en", "ModelChangeStructureDataType"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_ModelChangeStructureDataType, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_ModelChangeStructureDataType, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">ModelChangeStructureDataType</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode9() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_BinarySchema_SemanticChangeStructureDataType, new QualifiedName(0, "SemanticChangeStructureDataType"), new LocalizedText("en", "SemanticChangeStructureDataType"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_SemanticChangeStructureDataType, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_SemanticChangeStructureDataType, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">SemanticChangeStructureDataType</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode10() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_BinarySchema_Range, new QualifiedName(0, "Range"), new LocalizedText("en", "Range"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_Range, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_Range, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">Range</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode11() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_BinarySchema_EUInformation, new QualifiedName(0, "EUInformation"), new LocalizedText("en", "EUInformation"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_EUInformation, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_EUInformation, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">EUInformation</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode12() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_BinarySchema_Annotation, new QualifiedName(0, "Annotation"), new LocalizedText("en", "Annotation"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_Annotation, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_Annotation, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">Annotation</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode13() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_BinarySchema_ProgramDiagnosticDataType, new QualifiedName(0, "ProgramDiagnosticDataType"), new LocalizedText("en", "ProgramDiagnosticDataType"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_ProgramDiagnosticDataType, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_ProgramDiagnosticDataType, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">ProgramDiagnosticDataType</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode14() throws IOException, SAXException {
        DataTypeDictionaryTypeNode node = new DataTypeDictionaryTypeNode(this.context, Identifiers.OpcUa_XmlSchema, new QualifiedName(0, "Opc.Ua"), new LocalizedText("en", "Opc.Ua"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ByteString, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema, Identifiers.HasProperty, Identifiers.OpcUa_XmlSchema_NamespaceUri.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema_TrustListDataType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema_Argument.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema_EnumValueType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema_OptionSet.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema_Union.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema_TimeZoneDataType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema_ApplicationDescription.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema_ServerOnNetwork.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema_UserTokenPolicy.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema_EndpointDescription.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema_RegisteredServer.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema_DiscoveryConfiguration.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema_MdnsDiscoveryConfiguration.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema_SignedSoftwareCertificate.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema_UserIdentityToken.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema_AnonymousIdentityToken.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema_UserNameIdentityToken.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema_X509IdentityToken.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema_IssuedIdentityToken.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema_AddNodesItem.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema_AddReferencesItem.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema_DeleteNodesItem.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema_DeleteReferencesItem.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema_RelativePathElement.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema_RelativePath.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema_EndpointConfiguration.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema_ContentFilterElement.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema_ContentFilter.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema_FilterOperand.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema_ElementOperand.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema_LiteralOperand.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema_AttributeOperand.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema_SimpleAttributeOperand.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema_HistoryEvent.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema_MonitoringFilter.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema_EventFilter.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema_AggregateConfiguration.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema_HistoryEventFieldList.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema_BuildInfo.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema_RedundantServerDataType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema_EndpointUrlListDataType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema_NetworkGroupDataType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema_SamplingIntervalDiagnosticsDataType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema_ServerDiagnosticsSummaryDataType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema_ServerStatusDataType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema_SessionDiagnosticsDataType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema_SessionSecurityDiagnosticsDataType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema_ServiceCounterDataType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema_StatusResult.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema_SubscriptionDiagnosticsDataType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema_ModelChangeStructureDataType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema_SemanticChangeStructureDataType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema_Range.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema_EUInformation.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema_ComplexNumberType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema_DoubleComplexNumberType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema_AxisInformation.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema_XVType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema_ProgramDiagnosticDataType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema_Annotation.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema, Identifiers.HasComponent, Identifiers.XmlSchema_TypeSystem.expanded(), false));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema, Identifiers.HasTypeDefinition, Identifiers.DataTypeDictionaryType.expanded(), true));
        StringBuilder sb = new StringBuilder();
        sb.append("<ByteString xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">");
        sb.append("");
        sb.append("");
        sb.append("");
        sb.append("");
        sb.append("");
        sb.append("");
        sb.append("</ByteString>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode15() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.OpcUa_XmlSchema_NamespaceUri, new QualifiedName(0, "NamespaceUri"), new LocalizedText("en", "NamespaceUri"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_NamespaceUri, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_NamespaceUri, Identifiers.HasProperty, Identifiers.OpcUa_XmlSchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">http://opcfoundation.org/UA/2008/02/Types.xsd</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode16() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_XmlSchema_Argument, new QualifiedName(0, "Argument"), new LocalizedText("en", "Argument"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_Argument, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_Argument, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">//xs:element[@name='Argument']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode17() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_XmlSchema_EnumValueType, new QualifiedName(0, "EnumValueType"), new LocalizedText("en", "EnumValueType"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_EnumValueType, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_EnumValueType, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">//xs:element[@name='EnumValueType']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode18() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_XmlSchema_StatusResult, new QualifiedName(0, "StatusResult"), new LocalizedText("en", "StatusResult"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_StatusResult, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_StatusResult, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">//xs:element[@name='StatusResult']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode19() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.DataTypeDescriptionType_DataTypeVersion, new QualifiedName(0, "DataTypeVersion"), new LocalizedText("en", "DataTypeVersion"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.DataTypeDescriptionType_DataTypeVersion, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.DataTypeDescriptionType_DataTypeVersion, Identifiers.HasModellingRule, Identifiers.ModellingRule_Optional.expanded(), true));
        node.addReference(new Reference(Identifiers.DataTypeDescriptionType_DataTypeVersion, Identifiers.HasProperty, Identifiers.DataTypeDescriptionType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode20() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.DataTypeDescriptionType_DictionaryFragment, new QualifiedName(0, "DictionaryFragment"), new LocalizedText("en", "DictionaryFragment"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ByteString, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.DataTypeDescriptionType_DictionaryFragment, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.DataTypeDescriptionType_DictionaryFragment, Identifiers.HasModellingRule, Identifiers.ModellingRule_Optional.expanded(), true));
        node.addReference(new Reference(Identifiers.DataTypeDescriptionType_DictionaryFragment, Identifiers.HasProperty, Identifiers.DataTypeDescriptionType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode21() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_XmlSchema_UserTokenPolicy, new QualifiedName(0, "UserTokenPolicy"), new LocalizedText("en", "UserTokenPolicy"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_UserTokenPolicy, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_UserTokenPolicy, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">//xs:element[@name='UserTokenPolicy']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode22() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.DataTypeDictionaryType_DataTypeVersion, new QualifiedName(0, "DataTypeVersion"), new LocalizedText("en", "DataTypeVersion"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.DataTypeDictionaryType_DataTypeVersion, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.DataTypeDictionaryType_DataTypeVersion, Identifiers.HasModellingRule, Identifiers.ModellingRule_Optional.expanded(), true));
        node.addReference(new Reference(Identifiers.DataTypeDictionaryType_DataTypeVersion, Identifiers.HasProperty, Identifiers.DataTypeDictionaryType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode23() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.DataTypeDictionaryType_NamespaceUri, new QualifiedName(0, "NamespaceUri"), new LocalizedText("en", "NamespaceUri"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.DataTypeDictionaryType_NamespaceUri, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.DataTypeDictionaryType_NamespaceUri, Identifiers.HasModellingRule, Identifiers.ModellingRule_Optional.expanded(), true));
        node.addReference(new Reference(Identifiers.DataTypeDictionaryType_NamespaceUri, Identifiers.HasProperty, Identifiers.DataTypeDictionaryType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode24() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_XmlSchema_ApplicationDescription, new QualifiedName(0, "ApplicationDescription"), new LocalizedText("en", "ApplicationDescription"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_ApplicationDescription, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_ApplicationDescription, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">//xs:element[@name='ApplicationDescription']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode25() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ModellingRuleType_NamingRule, new QualifiedName(0, "NamingRule"), new LocalizedText("en", "NamingRule"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.NamingRuleType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ModellingRuleType_NamingRule, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ModellingRuleType_NamingRule, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ModellingRuleType_NamingRule, Identifiers.HasProperty, Identifiers.ModellingRuleType.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<Int32 xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">1</Int32>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode26() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_XmlSchema_EndpointDescription, new QualifiedName(0, "EndpointDescription"), new LocalizedText("en", "EndpointDescription"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_EndpointDescription, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_EndpointDescription, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">//xs:element[@name='EndpointDescription']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode27() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ModellingRule_Mandatory_NamingRule, new QualifiedName(0, "NamingRule"), new LocalizedText("en", "NamingRule"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.NamingRuleType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ModellingRule_Mandatory_NamingRule, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ModellingRule_Mandatory_NamingRule, Identifiers.HasProperty, Identifiers.ModellingRule_Mandatory.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<Int32 xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">1</Int32>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode28() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ModellingRule_Optional_NamingRule, new QualifiedName(0, "NamingRule"), new LocalizedText("en", "NamingRule"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.NamingRuleType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ModellingRule_Optional_NamingRule, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ModellingRule_Optional_NamingRule, Identifiers.HasProperty, Identifiers.ModellingRule_Optional.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<Int32 xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">2</Int32>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode29() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ModellingRule_ExposesItsArray_NamingRule, new QualifiedName(0, "NamingRule"), new LocalizedText("en", "NamingRule"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.NamingRuleType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ModellingRule_ExposesItsArray_NamingRule, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ModellingRule_ExposesItsArray_NamingRule, Identifiers.HasProperty, Identifiers.ModellingRule_ExposesItsArray.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<Int32 xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">3</Int32>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode30() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_XmlSchema_UserIdentityToken, new QualifiedName(0, "UserIdentityToken"), new LocalizedText("en", "UserIdentityToken"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_UserIdentityToken, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_UserIdentityToken, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">//xs:element[@name='UserIdentityToken']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode31() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ModellingRule_MandatoryShared_NamingRule, new QualifiedName(0, "NamingRule"), new LocalizedText("en", "NamingRule"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.NamingRuleType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ModellingRule_MandatoryShared_NamingRule, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ModellingRule_MandatoryShared_NamingRule, Identifiers.HasProperty, Identifiers.ModellingRule_MandatoryShared.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<Int32 xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">1</Int32>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode32() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_XmlSchema_AnonymousIdentityToken, new QualifiedName(0, "AnonymousIdentityToken"), new LocalizedText("en", "AnonymousIdentityToken"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_AnonymousIdentityToken, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_AnonymousIdentityToken, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">//xs:element[@name='AnonymousIdentityToken']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode33() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_XmlSchema_UserNameIdentityToken, new QualifiedName(0, "UserNameIdentityToken"), new LocalizedText("en", "UserNameIdentityToken"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_UserNameIdentityToken, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_UserNameIdentityToken, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">//xs:element[@name='UserNameIdentityToken']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode34() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_XmlSchema_X509IdentityToken, new QualifiedName(0, "X509IdentityToken"), new LocalizedText("en", "X509IdentityToken"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_X509IdentityToken, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_X509IdentityToken, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">//xs:element[@name='X509IdentityToken']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode35() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_XmlSchema_IssuedIdentityToken, new QualifiedName(0, "IssuedIdentityToken"), new LocalizedText("en", "IssuedIdentityToken"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_IssuedIdentityToken, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_IssuedIdentityToken, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">//xs:element[@name='IssuedIdentityToken']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode36() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_XmlSchema_EndpointConfiguration, new QualifiedName(0, "EndpointConfiguration"), new LocalizedText("en", "EndpointConfiguration"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_EndpointConfiguration, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_EndpointConfiguration, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">//xs:element[@name='EndpointConfiguration']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode37() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_XmlSchema_BuildInfo, new QualifiedName(0, "BuildInfo"), new LocalizedText("en", "BuildInfo"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_BuildInfo, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_BuildInfo, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">//xs:element[@name='BuildInfo']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode38() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_XmlSchema_SignedSoftwareCertificate, new QualifiedName(0, "SignedSoftwareCertificate"), new LocalizedText("en", "SignedSoftwareCertificate"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_SignedSoftwareCertificate, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_SignedSoftwareCertificate, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">//xs:element[@name='SignedSoftwareCertificate']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode39() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_XmlSchema_AddNodesItem, new QualifiedName(0, "AddNodesItem"), new LocalizedText("en", "AddNodesItem"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_AddNodesItem, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_AddNodesItem, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">//xs:element[@name='AddNodesItem']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode40() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_XmlSchema_AddReferencesItem, new QualifiedName(0, "AddReferencesItem"), new LocalizedText("en", "AddReferencesItem"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_AddReferencesItem, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_AddReferencesItem, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">//xs:element[@name='AddReferencesItem']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode41() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_XmlSchema_DeleteNodesItem, new QualifiedName(0, "DeleteNodesItem"), new LocalizedText("en", "DeleteNodesItem"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_DeleteNodesItem, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_DeleteNodesItem, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">//xs:element[@name='DeleteNodesItem']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode42() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_XmlSchema_DeleteReferencesItem, new QualifiedName(0, "DeleteReferencesItem"), new LocalizedText("en", "DeleteReferencesItem"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_DeleteReferencesItem, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_DeleteReferencesItem, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">//xs:element[@name='DeleteReferencesItem']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode43() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ProgressEventType_Context, new QualifiedName(0, "Context"), new LocalizedText("en", "Context"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.BaseDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ProgressEventType_Context, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgressEventType_Context, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgressEventType_Context, Identifiers.HasProperty, Identifiers.ProgressEventType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode44() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ProgressEventType_Progress, new QualifiedName(0, "Progress"), new LocalizedText("en", "Progress"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt16, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ProgressEventType_Progress, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgressEventType_Progress, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgressEventType_Progress, Identifiers.HasProperty, Identifiers.ProgressEventType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode45() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_XmlSchema_RegisteredServer, new QualifiedName(0, "RegisteredServer"), new LocalizedText("en", "RegisteredServer"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_RegisteredServer, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_RegisteredServer, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">//xs:element[@name='RegisteredServer']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode46() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.TrustListType_LastUpdateTime, new QualifiedName(0, "LastUpdateTime"), new LocalizedText("en", "LastUpdateTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UtcTime, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.TrustListType_LastUpdateTime, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.TrustListType_LastUpdateTime, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.TrustListType_LastUpdateTime, Identifiers.HasProperty, Identifiers.TrustListType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode47() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.TrustListType_OpenWithMasks_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.TrustListType_OpenWithMasks_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.TrustListType_OpenWithMasks_InputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.TrustListType_OpenWithMasks_InputArguments, Identifiers.HasProperty, Identifiers.TrustListType_OpenWithMasks.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Masks</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode48() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.TrustListType_OpenWithMasks_OutputArguments, new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.TrustListType_OpenWithMasks_OutputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.TrustListType_OpenWithMasks_OutputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.TrustListType_OpenWithMasks_OutputArguments, Identifiers.HasProperty, Identifiers.TrustListType_OpenWithMasks.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode49() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.TrustListType_CloseAndUpdate_OutputArguments, new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.TrustListType_CloseAndUpdate_OutputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.TrustListType_CloseAndUpdate_OutputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.TrustListType_CloseAndUpdate_OutputArguments, Identifiers.HasProperty, Identifiers.TrustListType_CloseAndUpdate.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>ApplyChangesRequired</Name><DataType><Identifier>i=1</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode50() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.TrustListType_AddCertificate_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.TrustListType_AddCertificate_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.TrustListType_AddCertificate_InputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.TrustListType_AddCertificate_InputArguments, Identifiers.HasProperty, Identifiers.TrustListType_AddCertificate.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Certificate</Name><DataType><Identifier>i=15</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>IsTrustedCertificate</Name><DataType><Identifier>i=1</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode51() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.TrustListType_RemoveCertificate_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.TrustListType_RemoveCertificate_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.TrustListType_RemoveCertificate_InputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.TrustListType_RemoveCertificate_InputArguments, Identifiers.HasProperty, Identifiers.TrustListType_RemoveCertificate.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Thumbprint</Name><DataType><Identifier>i=12</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>IsTrustedCertificate</Name><DataType><Identifier>i=1</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode52() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.TrustListMasks_EnumValues, new QualifiedName(0, "EnumValues"), new LocalizedText("en", "EnumValues"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.EnumValueType, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.TrustListMasks_EnumValues, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.TrustListMasks_EnumValues, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.TrustListMasks_EnumValues, Identifiers.HasProperty, Identifiers.TrustListMasks.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>0</Value><DisplayName><Locale>                </Locale><Text>None</Text>              </DisplayName>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>1</Value><DisplayName><Locale>                </Locale><Text>TrustedCertificates</Text>              </DisplayName>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>2</Value><DisplayName><Locale>                </Locale><Text>TrustedCrls</Text>              </DisplayName>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>4</Value><DisplayName><Locale>                </Locale><Text>IssuerCertificates</Text>              </DisplayName>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>8</Value><DisplayName><Locale>                </Locale><Text>IssuerCrls</Text>              </DisplayName>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>15</Value><DisplayName><Locale>                </Locale><Text>All</Text>              </DisplayName>            </EnumValueType>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode53() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerConfigurationType_SupportedPrivateKeyFormats, new QualifiedName(0, "SupportedPrivateKeyFormats"), new LocalizedText("en", "SupportedPrivateKeyFormats"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerConfigurationType_SupportedPrivateKeyFormats, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfigurationType_SupportedPrivateKeyFormats, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfigurationType_SupportedPrivateKeyFormats, Identifiers.HasProperty, Identifiers.ServerConfigurationType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode54() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerConfigurationType_MaxTrustListSize, new QualifiedName(0, "MaxTrustListSize"), new LocalizedText("en", "MaxTrustListSize"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerConfigurationType_MaxTrustListSize, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfigurationType_MaxTrustListSize, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfigurationType_MaxTrustListSize, Identifiers.HasProperty, Identifiers.ServerConfigurationType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode55() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerConfigurationType_MulticastDnsEnabled, new QualifiedName(0, "MulticastDnsEnabled"), new LocalizedText("en", "MulticastDnsEnabled"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Boolean, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerConfigurationType_MulticastDnsEnabled, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfigurationType_MulticastDnsEnabled, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfigurationType_MulticastDnsEnabled, Identifiers.HasProperty, Identifiers.ServerConfigurationType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode56() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerConfigurationType_UpdateCertificate_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerConfigurationType_UpdateCertificate_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfigurationType_UpdateCertificate_InputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfigurationType_UpdateCertificate_InputArguments, Identifiers.HasProperty, Identifiers.ServerConfigurationType_UpdateCertificate.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>CertificateGroupId</Name><DataType><Identifier>i=17</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>CertificateTypeId</Name><DataType><Identifier>i=17</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Certificate</Name><DataType><Identifier>i=15</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>IssuerCertificates</Name><DataType><Identifier>i=15</Identifier>              </DataType><ValueRank>1</ValueRank><ArrayDimensions><UInt32>0</UInt32>              </ArrayDimensions>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>PrivateKeyFormat</Name><DataType><Identifier>i=12</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>PrivateKey</Name><DataType><Identifier>i=15</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode57() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerConfigurationType_UpdateCertificate_OutputArguments, new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerConfigurationType_UpdateCertificate_OutputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfigurationType_UpdateCertificate_OutputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfigurationType_UpdateCertificate_OutputArguments, Identifiers.HasProperty, Identifiers.ServerConfigurationType_UpdateCertificate.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>ApplyChangesRequired</Name><DataType><Identifier>i=1</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode58() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerConfiguration_SupportedPrivateKeyFormats, new QualifiedName(0, "SupportedPrivateKeyFormats"), new LocalizedText("en", "SupportedPrivateKeyFormats"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerConfiguration_SupportedPrivateKeyFormats, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfiguration_SupportedPrivateKeyFormats, Identifiers.HasProperty, Identifiers.ServerConfiguration.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode59() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerConfiguration_MaxTrustListSize, new QualifiedName(0, "MaxTrustListSize"), new LocalizedText("en", "MaxTrustListSize"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerConfiguration_MaxTrustListSize, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfiguration_MaxTrustListSize, Identifiers.HasProperty, Identifiers.ServerConfiguration.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode60() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerConfiguration_MulticastDnsEnabled, new QualifiedName(0, "MulticastDnsEnabled"), new LocalizedText("en", "MulticastDnsEnabled"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Boolean, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerConfiguration_MulticastDnsEnabled, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfiguration_MulticastDnsEnabled, Identifiers.HasProperty, Identifiers.ServerConfiguration.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode61() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Size, new QualifiedName(0, "Size"), new LocalizedText("en", "Size"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt64, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Size, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Size, Identifiers.HasProperty, Identifiers.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode62() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_OpenCount, new QualifiedName(0, "OpenCount"), new LocalizedText("en", "OpenCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt16, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_OpenCount, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_OpenCount, Identifiers.HasProperty, Identifiers.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode63() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Open_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Open_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Open_InputArguments, Identifiers.HasProperty, Identifiers.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Open.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Mode</Name><DataType><Identifier>i=3</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode64() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Open_OutputArguments, new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Open_OutputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Open_OutputArguments, Identifiers.HasProperty, Identifiers.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Open.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode65() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Close_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Close_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Close_InputArguments, Identifiers.HasProperty, Identifiers.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Close.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode66() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Read_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Read_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Read_InputArguments, Identifiers.HasProperty, Identifiers.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Read.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Length</Name><DataType><Identifier>i=6</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode67() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Read_OutputArguments, new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Read_OutputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Read_OutputArguments, Identifiers.HasProperty, Identifiers.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Read.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Data</Name><DataType><Identifier>i=15</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode68() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Write_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Write_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Write_InputArguments, Identifiers.HasProperty, Identifiers.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Write.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Data</Name><DataType><Identifier>i=15</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode69() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_GetPosition_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_GetPosition_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_GetPosition_InputArguments, Identifiers.HasProperty, Identifiers.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_GetPosition.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode70() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_GetPosition_OutputArguments, new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_GetPosition_OutputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_GetPosition_OutputArguments, Identifiers.HasProperty, Identifiers.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_GetPosition.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Position</Name><DataType><Identifier>i=9</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode71() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_XmlSchema_ContentFilterElement, new QualifiedName(0, "ContentFilterElement"), new LocalizedText("en", "ContentFilterElement"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_ContentFilterElement, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_ContentFilterElement, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">//xs:element[@name='ContentFilterElement']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode72() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_SetPosition_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_SetPosition_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_SetPosition_InputArguments, Identifiers.HasProperty, Identifiers.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_SetPosition.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Position</Name><DataType><Identifier>i=9</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode73() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_LastUpdateTime, new QualifiedName(0, "LastUpdateTime"), new LocalizedText("en", "LastUpdateTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UtcTime, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_LastUpdateTime, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_LastUpdateTime, Identifiers.HasProperty, Identifiers.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode74() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_XmlSchema_ContentFilter, new QualifiedName(0, "ContentFilter"), new LocalizedText("en", "ContentFilter"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_ContentFilter, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_ContentFilter, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">//xs:element[@name='ContentFilter']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode75() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_OpenWithMasks_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_OpenWithMasks_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_OpenWithMasks_InputArguments, Identifiers.HasProperty, Identifiers.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_OpenWithMasks.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Masks</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode76() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_OpenWithMasks_OutputArguments, new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_OpenWithMasks_OutputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_OpenWithMasks_OutputArguments, Identifiers.HasProperty, Identifiers.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_OpenWithMasks.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode77() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_XmlSchema_FilterOperand, new QualifiedName(0, "FilterOperand"), new LocalizedText("en", "FilterOperand"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_FilterOperand, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_FilterOperand, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">//xs:element[@name='FilterOperand']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode78() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_CloseAndUpdate_OutputArguments, new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_CloseAndUpdate_OutputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_CloseAndUpdate_OutputArguments, Identifiers.HasProperty, Identifiers.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_CloseAndUpdate.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>ApplyChangesRequired</Name><DataType><Identifier>i=1</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode79() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_AddCertificate_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_AddCertificate_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_AddCertificate_InputArguments, Identifiers.HasProperty, Identifiers.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_AddCertificate.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Certificate</Name><DataType><Identifier>i=15</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>IsTrustedCertificate</Name><DataType><Identifier>i=1</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode80() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_XmlSchema_ElementOperand, new QualifiedName(0, "ElementOperand"), new LocalizedText("en", "ElementOperand"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_ElementOperand, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_ElementOperand, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">//xs:element[@name='ElementOperand']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode81() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_RemoveCertificate_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_RemoveCertificate_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_RemoveCertificate_InputArguments, Identifiers.HasProperty, Identifiers.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_RemoveCertificate.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Thumbprint</Name><DataType><Identifier>i=12</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>IsTrustedCertificate</Name><DataType><Identifier>i=1</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode82() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_XmlSchema_LiteralOperand, new QualifiedName(0, "LiteralOperand"), new LocalizedText("en", "LiteralOperand"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_LiteralOperand, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_LiteralOperand, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">//xs:element[@name='LiteralOperand']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode83() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_XmlSchema_AttributeOperand, new QualifiedName(0, "AttributeOperand"), new LocalizedText("en", "AttributeOperand"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_AttributeOperand, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_AttributeOperand, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">//xs:element[@name='AttributeOperand']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode84() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_XmlSchema_TrustListDataType, new QualifiedName(0, "TrustListDataType"), new LocalizedText("en", "TrustListDataType"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_TrustListDataType, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_TrustListDataType, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">//xs:element[@name='TrustListDataType']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode85() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_XmlSchema_SimpleAttributeOperand, new QualifiedName(0, "SimpleAttributeOperand"), new LocalizedText("en", "SimpleAttributeOperand"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_SimpleAttributeOperand, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_SimpleAttributeOperand, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">//xs:element[@name='SimpleAttributeOperand']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode86() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_BinarySchema_TrustListDataType, new QualifiedName(0, "TrustListDataType"), new LocalizedText("en", "TrustListDataType"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_TrustListDataType, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_TrustListDataType, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">TrustListDataType</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode87() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.FileType_Writable, new QualifiedName(0, "Writable"), new LocalizedText("en", "Writable"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Boolean, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.FileType_Writable, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.FileType_Writable, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.FileType_Writable, Identifiers.HasProperty, Identifiers.FileType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode88() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.FileType_UserWritable, new QualifiedName(0, "UserWritable"), new LocalizedText("en", "UserWritable"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Boolean, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.FileType_UserWritable, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.FileType_UserWritable, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.FileType_UserWritable, Identifiers.HasProperty, Identifiers.FileType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode89() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.NamespaceMetadataType_NamespaceFile_Writable, new QualifiedName(0, "Writable"), new LocalizedText("en", "Writable"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Boolean, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.NamespaceMetadataType_NamespaceFile_Writable, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.NamespaceMetadataType_NamespaceFile_Writable, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.NamespaceMetadataType_NamespaceFile_Writable, Identifiers.HasProperty, Identifiers.NamespaceMetadataType_NamespaceFile.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode90() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.NamespaceMetadataType_NamespaceFile_UserWritable, new QualifiedName(0, "UserWritable"), new LocalizedText("en", "UserWritable"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Boolean, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.NamespaceMetadataType_NamespaceFile_UserWritable, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.NamespaceMetadataType_NamespaceFile_UserWritable, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.NamespaceMetadataType_NamespaceFile_UserWritable, Identifiers.HasProperty, Identifiers.NamespaceMetadataType_NamespaceFile.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode91() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.NamespacesType_AddressSpaceFile_Writable, new QualifiedName(0, "Writable"), new LocalizedText("en", "Writable"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Boolean, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.NamespacesType_AddressSpaceFile_Writable, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.NamespacesType_AddressSpaceFile_Writable, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.NamespacesType_AddressSpaceFile_Writable, Identifiers.HasProperty, Identifiers.NamespacesType_AddressSpaceFile.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode92() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.NamespacesType_AddressSpaceFile_UserWritable, new QualifiedName(0, "UserWritable"), new LocalizedText("en", "UserWritable"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Boolean, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.NamespacesType_AddressSpaceFile_UserWritable, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.NamespacesType_AddressSpaceFile_UserWritable, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.NamespacesType_AddressSpaceFile_UserWritable, Identifiers.HasProperty, Identifiers.NamespacesType_AddressSpaceFile.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode93() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.TrustListType_CloseAndUpdate_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.TrustListType_CloseAndUpdate_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.TrustListType_CloseAndUpdate_InputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.TrustListType_CloseAndUpdate_InputArguments, Identifiers.HasProperty, Identifiers.TrustListType_CloseAndUpdate.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode94() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerConfigurationType_ServerCapabilities, new QualifiedName(0, "ServerCapabilities"), new LocalizedText("en", "ServerCapabilities"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerConfigurationType_ServerCapabilities, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfigurationType_ServerCapabilities, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfigurationType_ServerCapabilities, Identifiers.HasProperty, Identifiers.ServerConfigurationType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode95() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerConfiguration_ServerCapabilities, new QualifiedName(0, "ServerCapabilities"), new LocalizedText("en", "ServerCapabilities"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerConfiguration_ServerCapabilities, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfiguration_ServerCapabilities, Identifiers.HasProperty, Identifiers.ServerConfiguration.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode96() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_XmlSchema_RelativePathElement, new QualifiedName(0, "RelativePathElement"), new LocalizedText("en", "RelativePathElement"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_RelativePathElement, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_RelativePathElement, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">//xs:element[@name='RelativePathElement']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode97() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_XmlSchema_RelativePath, new QualifiedName(0, "RelativePath"), new LocalizedText("en", "RelativePath"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_RelativePath, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_RelativePath, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">//xs:element[@name='RelativePath']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode98() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_BinarySchema_RelativePathElement, new QualifiedName(0, "RelativePathElement"), new LocalizedText("en", "RelativePathElement"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_RelativePathElement, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_RelativePathElement, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">RelativePathElement</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode99() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_BinarySchema_RelativePath, new QualifiedName(0, "RelativePath"), new LocalizedText("en", "RelativePath"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_RelativePath, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_RelativePath, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">RelativePath</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode100() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerConfigurationType_CreateSigningRequest_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerConfigurationType_CreateSigningRequest_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfigurationType_CreateSigningRequest_InputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfigurationType_CreateSigningRequest_InputArguments, Identifiers.HasProperty, Identifiers.ServerConfigurationType_CreateSigningRequest.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>CertificateGroupId</Name><DataType><Identifier>i=17</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>CertificateTypeId</Name><DataType><Identifier>i=17</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>SubjectName</Name><DataType><Identifier>i=12</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>RegeneratePrivateKey</Name><DataType><Identifier>i=1</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Nonce</Name><DataType><Identifier>i=15</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode101() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerConfigurationType_CreateSigningRequest_OutputArguments, new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerConfigurationType_CreateSigningRequest_OutputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfigurationType_CreateSigningRequest_OutputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfigurationType_CreateSigningRequest_OutputArguments, Identifiers.HasProperty, Identifiers.ServerConfigurationType_CreateSigningRequest.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>CertificateRequest</Name><DataType><Identifier>i=15</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode102() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_XmlSchema_HistoryEvent, new QualifiedName(0, "HistoryEvent"), new LocalizedText("en", "HistoryEvent"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_HistoryEvent, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_HistoryEvent, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">//xs:element[@name='HistoryEvent']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode103() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerConfiguration_CreateSigningRequest_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerConfiguration_CreateSigningRequest_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfiguration_CreateSigningRequest_InputArguments, Identifiers.HasProperty, Identifiers.ServerConfiguration_CreateSigningRequest.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>CertificateGroupId</Name><DataType><Identifier>i=17</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>CertificateTypeId</Name><DataType><Identifier>i=17</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>SubjectName</Name><DataType><Identifier>i=12</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>RegeneratePrivateKey</Name><DataType><Identifier>i=1</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Nonce</Name><DataType><Identifier>i=15</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode104() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerConfiguration_CreateSigningRequest_OutputArguments, new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerConfiguration_CreateSigningRequest_OutputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfiguration_CreateSigningRequest_OutputArguments, Identifiers.HasProperty, Identifiers.ServerConfiguration_CreateSigningRequest.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>CertificateRequest</Name><DataType><Identifier>i=15</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode105() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.OptionSetValues, new QualifiedName(0, "OptionSetValues"), new LocalizedText("en", "OptionSetValues"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.LocalizedText, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OptionSetValues, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        this.nodeManager.addNode(node);
    }

    private void loadNode106() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerType_SetSubscriptionDurable_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerType_SetSubscriptionDurable_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_SetSubscriptionDurable_InputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_SetSubscriptionDurable_InputArguments, Identifiers.HasProperty, Identifiers.ServerType_SetSubscriptionDurable.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>SubscriptionId</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>LifetimeInHours</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode107() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerType_SetSubscriptionDurable_OutputArguments, new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerType_SetSubscriptionDurable_OutputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_SetSubscriptionDurable_OutputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_SetSubscriptionDurable_OutputArguments, Identifiers.HasProperty, Identifiers.ServerType_SetSubscriptionDurable.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>RevisedLifetimeInHours</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode108() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.Server_SetSubscriptionDurable_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.Server_SetSubscriptionDurable_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.Server_SetSubscriptionDurable_InputArguments, Identifiers.HasProperty, Identifiers.Server_SetSubscriptionDurable.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>SubscriptionId</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>LifetimeInHours</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode109() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.Server_SetSubscriptionDurable_OutputArguments, new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.Server_SetSubscriptionDurable_OutputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.Server_SetSubscriptionDurable_OutputArguments, Identifiers.HasProperty, Identifiers.Server_SetSubscriptionDurable.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>RevisedLifetimeInHours</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode110() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_XmlSchema_OptionSet, new QualifiedName(0, "OptionSet"), new LocalizedText("en", "OptionSet"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_OptionSet, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_OptionSet, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">//xs:element[@name='OptionSet']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode111() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_XmlSchema_Union, new QualifiedName(0, "Union"), new LocalizedText("en", "Union"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_Union, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_Union, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">//xs:element[@name='Union']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode112() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_BinarySchema_OptionSet, new QualifiedName(0, "OptionSet"), new LocalizedText("en", "OptionSet"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_OptionSet, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_OptionSet, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">OptionSet</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode113() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_BinarySchema_Union, new QualifiedName(0, "Union"), new LocalizedText("en", "Union"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_Union, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_Union, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">Union</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode114() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerConfigurationType_GetRejectedList_OutputArguments, new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerConfigurationType_GetRejectedList_OutputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfigurationType_GetRejectedList_OutputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfigurationType_GetRejectedList_OutputArguments, Identifiers.HasProperty, Identifiers.ServerConfigurationType_GetRejectedList.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Certificates</Name><DataType><Identifier>i=15</Identifier>              </DataType><ValueRank>1</ValueRank><ArrayDimensions><UInt32>0</UInt32>              </ArrayDimensions>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode115() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerConfiguration_GetRejectedList_OutputArguments, new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerConfiguration_GetRejectedList_OutputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfiguration_GetRejectedList_OutputArguments, Identifiers.HasProperty, Identifiers.ServerConfiguration_GetRejectedList.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Certificates</Name><DataType><Identifier>i=15</Identifier>              </DataType><ValueRank>1</ValueRank><ArrayDimensions><UInt32>0</UInt32>              </ArrayDimensions>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode116() {
        SamplingIntervalDiagnosticsTypeNode node = new SamplingIntervalDiagnosticsTypeNode(this.context, Identifiers.SamplingIntervalDiagnosticsArrayType_SamplingIntervalDiagnostics, new QualifiedName(0, "SamplingIntervalDiagnostics"), new LocalizedText("en", "SamplingIntervalDiagnostics"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.SamplingIntervalDiagnosticsDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SamplingIntervalDiagnosticsArrayType_SamplingIntervalDiagnostics, Identifiers.HasComponent, Identifiers.SamplingIntervalDiagnosticsArrayType_SamplingIntervalDiagnostics_SamplingInterval.expanded(), true));
        node.addReference(new Reference(Identifiers.SamplingIntervalDiagnosticsArrayType_SamplingIntervalDiagnostics, Identifiers.HasComponent, Identifiers.SamplingIntervalDiagnosticsArrayType_SamplingIntervalDiagnostics_SampledMonitoredItemsCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SamplingIntervalDiagnosticsArrayType_SamplingIntervalDiagnostics, Identifiers.HasComponent, Identifiers.SamplingIntervalDiagnosticsArrayType_SamplingIntervalDiagnostics_MaxSampledMonitoredItemsCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SamplingIntervalDiagnosticsArrayType_SamplingIntervalDiagnostics, Identifiers.HasComponent, Identifiers.SamplingIntervalDiagnosticsArrayType_SamplingIntervalDiagnostics_DisabledMonitoredItemsSamplingCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SamplingIntervalDiagnosticsArrayType_SamplingIntervalDiagnostics, Identifiers.HasTypeDefinition, Identifiers.SamplingIntervalDiagnosticsType.expanded(), true));
        node.addReference(new Reference(Identifiers.SamplingIntervalDiagnosticsArrayType_SamplingIntervalDiagnostics, Identifiers.HasModellingRule, Identifiers.ModellingRule_ExposesItsArray.expanded(), true));
        node.addReference(new Reference(Identifiers.SamplingIntervalDiagnosticsArrayType_SamplingIntervalDiagnostics, Identifiers.HasComponent, Identifiers.SamplingIntervalDiagnosticsArrayType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode117() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SamplingIntervalDiagnosticsArrayType_SamplingIntervalDiagnostics_SamplingInterval, new QualifiedName(0, "SamplingInterval"), new LocalizedText("en", "SamplingInterval"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Duration, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SamplingIntervalDiagnosticsArrayType_SamplingIntervalDiagnostics_SamplingInterval, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SamplingIntervalDiagnosticsArrayType_SamplingIntervalDiagnostics_SamplingInterval, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SamplingIntervalDiagnosticsArrayType_SamplingIntervalDiagnostics_SamplingInterval, Identifiers.HasComponent, Identifiers.SamplingIntervalDiagnosticsArrayType_SamplingIntervalDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode118() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SamplingIntervalDiagnosticsArrayType_SamplingIntervalDiagnostics_SampledMonitoredItemsCount, new QualifiedName(0, "SampledMonitoredItemsCount"), new LocalizedText("en", "SampledMonitoredItemsCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SamplingIntervalDiagnosticsArrayType_SamplingIntervalDiagnostics_SampledMonitoredItemsCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SamplingIntervalDiagnosticsArrayType_SamplingIntervalDiagnostics_SampledMonitoredItemsCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SamplingIntervalDiagnosticsArrayType_SamplingIntervalDiagnostics_SampledMonitoredItemsCount, Identifiers.HasComponent, Identifiers.SamplingIntervalDiagnosticsArrayType_SamplingIntervalDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode119() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SamplingIntervalDiagnosticsArrayType_SamplingIntervalDiagnostics_MaxSampledMonitoredItemsCount, new QualifiedName(0, "MaxSampledMonitoredItemsCount"), new LocalizedText("en", "MaxSampledMonitoredItemsCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SamplingIntervalDiagnosticsArrayType_SamplingIntervalDiagnostics_MaxSampledMonitoredItemsCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SamplingIntervalDiagnosticsArrayType_SamplingIntervalDiagnostics_MaxSampledMonitoredItemsCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SamplingIntervalDiagnosticsArrayType_SamplingIntervalDiagnostics_MaxSampledMonitoredItemsCount, Identifiers.HasComponent, Identifiers.SamplingIntervalDiagnosticsArrayType_SamplingIntervalDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode120() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SamplingIntervalDiagnosticsArrayType_SamplingIntervalDiagnostics_DisabledMonitoredItemsSamplingCount, new QualifiedName(0, "DisabledMonitoredItemsSamplingCount"), new LocalizedText("en", "DisabledMonitoredItemsSamplingCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SamplingIntervalDiagnosticsArrayType_SamplingIntervalDiagnostics_DisabledMonitoredItemsSamplingCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SamplingIntervalDiagnosticsArrayType_SamplingIntervalDiagnostics_DisabledMonitoredItemsSamplingCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SamplingIntervalDiagnosticsArrayType_SamplingIntervalDiagnostics_DisabledMonitoredItemsSamplingCount, Identifiers.HasComponent, Identifiers.SamplingIntervalDiagnosticsArrayType_SamplingIntervalDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode121() {
        SubscriptionDiagnosticsTypeNode node = new SubscriptionDiagnosticsTypeNode(this.context, Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics, new QualifiedName(0, "SubscriptionDiagnostics"), new LocalizedText("en", "SubscriptionDiagnostics"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.SubscriptionDiagnosticsDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics, Identifiers.HasComponent, Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_SessionId.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics, Identifiers.HasComponent, Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_SubscriptionId.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics, Identifiers.HasComponent, Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_Priority.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics, Identifiers.HasComponent, Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_PublishingInterval.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics, Identifiers.HasComponent, Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_MaxKeepAliveCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics, Identifiers.HasComponent, Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_MaxLifetimeCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics, Identifiers.HasComponent, Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_MaxNotificationsPerPublish.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics, Identifiers.HasComponent, Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_PublishingEnabled.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics, Identifiers.HasComponent, Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_ModifyCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics, Identifiers.HasComponent, Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_EnableCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics, Identifiers.HasComponent, Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_DisableCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics, Identifiers.HasComponent, Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_RepublishRequestCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics, Identifiers.HasComponent, Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_RepublishMessageRequestCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics, Identifiers.HasComponent, Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_RepublishMessageCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics, Identifiers.HasComponent, Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_TransferRequestCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics, Identifiers.HasComponent, Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_TransferredToAltClientCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics, Identifiers.HasComponent, Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_TransferredToSameClientCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics, Identifiers.HasComponent, Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_PublishRequestCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics, Identifiers.HasComponent, Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_DataChangeNotificationsCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics, Identifiers.HasComponent, Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_EventNotificationsCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics, Identifiers.HasComponent, Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_NotificationsCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics, Identifiers.HasComponent, Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_LatePublishRequestCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics, Identifiers.HasComponent, Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_CurrentKeepAliveCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics, Identifiers.HasComponent, Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_CurrentLifetimeCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics, Identifiers.HasComponent, Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_UnacknowledgedMessageCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics, Identifiers.HasComponent, Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_DiscardedMessageCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics, Identifiers.HasComponent, Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_MonitoredItemCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics, Identifiers.HasComponent, Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_DisabledMonitoredItemCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics, Identifiers.HasComponent, Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_MonitoringQueueOverflowCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics, Identifiers.HasComponent, Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_NextSequenceNumber.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics, Identifiers.HasComponent, Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_EventQueueOverflowCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics, Identifiers.HasTypeDefinition, Identifiers.SubscriptionDiagnosticsType.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics, Identifiers.HasModellingRule, Identifiers.ModellingRule_ExposesItsArray.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics, Identifiers.HasComponent, Identifiers.SubscriptionDiagnosticsArrayType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode122() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_SessionId, new QualifiedName(0, "SessionId"), new LocalizedText("en", "SessionId"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.NodeId, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_SessionId, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_SessionId, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_SessionId, Identifiers.HasComponent, Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode123() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_SubscriptionId, new QualifiedName(0, "SubscriptionId"), new LocalizedText("en", "SubscriptionId"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_SubscriptionId, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_SubscriptionId, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_SubscriptionId, Identifiers.HasComponent, Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode124() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_Priority, new QualifiedName(0, "Priority"), new LocalizedText("en", "Priority"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Byte, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_Priority, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_Priority, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_Priority, Identifiers.HasComponent, Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode125() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_PublishingInterval, new QualifiedName(0, "PublishingInterval"), new LocalizedText("en", "PublishingInterval"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Double, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_PublishingInterval, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_PublishingInterval, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_PublishingInterval, Identifiers.HasComponent, Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode126() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_MaxKeepAliveCount, new QualifiedName(0, "MaxKeepAliveCount"), new LocalizedText("en", "MaxKeepAliveCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_MaxKeepAliveCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_MaxKeepAliveCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_MaxKeepAliveCount, Identifiers.HasComponent, Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode127() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_MaxLifetimeCount, new QualifiedName(0, "MaxLifetimeCount"), new LocalizedText("en", "MaxLifetimeCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_MaxLifetimeCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_MaxLifetimeCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_MaxLifetimeCount, Identifiers.HasComponent, Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode128() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_MaxNotificationsPerPublish, new QualifiedName(0, "MaxNotificationsPerPublish"), new LocalizedText("en", "MaxNotificationsPerPublish"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_MaxNotificationsPerPublish, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_MaxNotificationsPerPublish, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_MaxNotificationsPerPublish, Identifiers.HasComponent, Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode129() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_PublishingEnabled, new QualifiedName(0, "PublishingEnabled"), new LocalizedText("en", "PublishingEnabled"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Boolean, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_PublishingEnabled, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_PublishingEnabled, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_PublishingEnabled, Identifiers.HasComponent, Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode130() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_ModifyCount, new QualifiedName(0, "ModifyCount"), new LocalizedText("en", "ModifyCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_ModifyCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_ModifyCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_ModifyCount, Identifiers.HasComponent, Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode131() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_EnableCount, new QualifiedName(0, "EnableCount"), new LocalizedText("en", "EnableCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_EnableCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_EnableCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_EnableCount, Identifiers.HasComponent, Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode132() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_DisableCount, new QualifiedName(0, "DisableCount"), new LocalizedText("en", "DisableCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_DisableCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_DisableCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_DisableCount, Identifiers.HasComponent, Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode133() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_RepublishRequestCount, new QualifiedName(0, "RepublishRequestCount"), new LocalizedText("en", "RepublishRequestCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_RepublishRequestCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_RepublishRequestCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_RepublishRequestCount, Identifiers.HasComponent, Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode134() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_RepublishMessageRequestCount, new QualifiedName(0, "RepublishMessageRequestCount"), new LocalizedText("en", "RepublishMessageRequestCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_RepublishMessageRequestCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_RepublishMessageRequestCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_RepublishMessageRequestCount, Identifiers.HasComponent, Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode135() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_RepublishMessageCount, new QualifiedName(0, "RepublishMessageCount"), new LocalizedText("en", "RepublishMessageCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_RepublishMessageCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_RepublishMessageCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_RepublishMessageCount, Identifiers.HasComponent, Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode136() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_XmlSchema_MonitoringFilter, new QualifiedName(0, "MonitoringFilter"), new LocalizedText("en", "MonitoringFilter"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_MonitoringFilter, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_MonitoringFilter, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">//xs:element[@name='MonitoringFilter']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode137() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_TransferRequestCount, new QualifiedName(0, "TransferRequestCount"), new LocalizedText("en", "TransferRequestCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_TransferRequestCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_TransferRequestCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_TransferRequestCount, Identifiers.HasComponent, Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode138() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_TransferredToAltClientCount, new QualifiedName(0, "TransferredToAltClientCount"), new LocalizedText("en", "TransferredToAltClientCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_TransferredToAltClientCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_TransferredToAltClientCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_TransferredToAltClientCount, Identifiers.HasComponent, Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode139() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_TransferredToSameClientCount, new QualifiedName(0, "TransferredToSameClientCount"), new LocalizedText("en", "TransferredToSameClientCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_TransferredToSameClientCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_TransferredToSameClientCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_TransferredToSameClientCount, Identifiers.HasComponent, Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode140() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_PublishRequestCount, new QualifiedName(0, "PublishRequestCount"), new LocalizedText("en", "PublishRequestCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_PublishRequestCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_PublishRequestCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_PublishRequestCount, Identifiers.HasComponent, Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode141() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_DataChangeNotificationsCount, new QualifiedName(0, "DataChangeNotificationsCount"), new LocalizedText("en", "DataChangeNotificationsCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_DataChangeNotificationsCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_DataChangeNotificationsCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_DataChangeNotificationsCount, Identifiers.HasComponent, Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode142() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_EventNotificationsCount, new QualifiedName(0, "EventNotificationsCount"), new LocalizedText("en", "EventNotificationsCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_EventNotificationsCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_EventNotificationsCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_EventNotificationsCount, Identifiers.HasComponent, Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode143() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_XmlSchema_EventFilter, new QualifiedName(0, "EventFilter"), new LocalizedText("en", "EventFilter"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_EventFilter, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_EventFilter, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">//xs:element[@name='EventFilter']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode144() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_NotificationsCount, new QualifiedName(0, "NotificationsCount"), new LocalizedText("en", "NotificationsCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_NotificationsCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_NotificationsCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_NotificationsCount, Identifiers.HasComponent, Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode145() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_LatePublishRequestCount, new QualifiedName(0, "LatePublishRequestCount"), new LocalizedText("en", "LatePublishRequestCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_LatePublishRequestCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_LatePublishRequestCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_LatePublishRequestCount, Identifiers.HasComponent, Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode146() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_CurrentKeepAliveCount, new QualifiedName(0, "CurrentKeepAliveCount"), new LocalizedText("en", "CurrentKeepAliveCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_CurrentKeepAliveCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_CurrentKeepAliveCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_CurrentKeepAliveCount, Identifiers.HasComponent, Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode147() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_XmlSchema_AggregateConfiguration, new QualifiedName(0, "AggregateConfiguration"), new LocalizedText("en", "AggregateConfiguration"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_AggregateConfiguration, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_AggregateConfiguration, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">//xs:element[@name='AggregateConfiguration']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode148() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_CurrentLifetimeCount, new QualifiedName(0, "CurrentLifetimeCount"), new LocalizedText("en", "CurrentLifetimeCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_CurrentLifetimeCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_CurrentLifetimeCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_CurrentLifetimeCount, Identifiers.HasComponent, Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode149() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_UnacknowledgedMessageCount, new QualifiedName(0, "UnacknowledgedMessageCount"), new LocalizedText("en", "UnacknowledgedMessageCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_UnacknowledgedMessageCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_UnacknowledgedMessageCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_UnacknowledgedMessageCount, Identifiers.HasComponent, Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode150() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_DiscardedMessageCount, new QualifiedName(0, "DiscardedMessageCount"), new LocalizedText("en", "DiscardedMessageCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_DiscardedMessageCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_DiscardedMessageCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_DiscardedMessageCount, Identifiers.HasComponent, Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode151() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_MonitoredItemCount, new QualifiedName(0, "MonitoredItemCount"), new LocalizedText("en", "MonitoredItemCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_MonitoredItemCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_MonitoredItemCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_MonitoredItemCount, Identifiers.HasComponent, Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode152() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_DisabledMonitoredItemCount, new QualifiedName(0, "DisabledMonitoredItemCount"), new LocalizedText("en", "DisabledMonitoredItemCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_DisabledMonitoredItemCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_DisabledMonitoredItemCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_DisabledMonitoredItemCount, Identifiers.HasComponent, Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode153() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_MonitoringQueueOverflowCount, new QualifiedName(0, "MonitoringQueueOverflowCount"), new LocalizedText("en", "MonitoringQueueOverflowCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_MonitoringQueueOverflowCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_MonitoringQueueOverflowCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_MonitoringQueueOverflowCount, Identifiers.HasComponent, Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode154() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_NextSequenceNumber, new QualifiedName(0, "NextSequenceNumber"), new LocalizedText("en", "NextSequenceNumber"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_NextSequenceNumber, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_NextSequenceNumber, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_NextSequenceNumber, Identifiers.HasComponent, Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode155() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_EventQueueOverflowCount, new QualifiedName(0, "EventQueueOverflowCount"), new LocalizedText("en", "EventQueueOverflowCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_EventQueueOverflowCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_EventQueueOverflowCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_EventQueueOverflowCount, Identifiers.HasComponent, Identifiers.SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode156() {
        SessionDiagnosticsVariableTypeNode node = new SessionDiagnosticsVariableTypeNode(this.context, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics, new QualifiedName(0, "SessionDiagnostics"), new LocalizedText("en", "SessionDiagnostics"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.SessionDiagnosticsDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_SessionId.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_SessionName.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_ClientDescription.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_ServerUri.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_EndpointUrl.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_LocaleIds.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_ActualSessionTimeout.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_MaxResponseMessageSize.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_ClientConnectionTime.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_ClientLastContactTime.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_CurrentSubscriptionsCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_CurrentMonitoredItemsCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_CurrentPublishRequestsInQueue.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_TotalRequestCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_UnauthorizedRequestCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_ReadCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_HistoryReadCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_WriteCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_HistoryUpdateCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_CallCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_CreateMonitoredItemsCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_ModifyMonitoredItemsCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_SetMonitoringModeCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_SetTriggeringCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_DeleteMonitoredItemsCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_CreateSubscriptionCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_ModifySubscriptionCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_SetPublishingModeCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_PublishCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_RepublishCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_TransferSubscriptionsCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_DeleteSubscriptionsCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_AddNodesCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_AddReferencesCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_DeleteNodesCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_DeleteReferencesCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_BrowseCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_BrowseNextCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_TranslateBrowsePathsToNodeIdsCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_QueryFirstCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_QueryNextCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_RegisterNodesCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_UnregisterNodesCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics, Identifiers.HasTypeDefinition, Identifiers.SessionDiagnosticsVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics, Identifiers.HasModellingRule, Identifiers.ModellingRule_ExposesItsArray.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionDiagnosticsArrayType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode157() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_SessionId, new QualifiedName(0, "SessionId"), new LocalizedText("en", "SessionId"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.NodeId, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_SessionId, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_SessionId, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_SessionId, Identifiers.HasComponent, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode158() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_SessionName, new QualifiedName(0, "SessionName"), new LocalizedText("en", "SessionName"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_SessionName, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_SessionName, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_SessionName, Identifiers.HasComponent, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode159() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_ClientDescription, new QualifiedName(0, "ClientDescription"), new LocalizedText("en", "ClientDescription"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ApplicationDescription, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_ClientDescription, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_ClientDescription, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_ClientDescription, Identifiers.HasComponent, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode160() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_ServerUri, new QualifiedName(0, "ServerUri"), new LocalizedText("en", "ServerUri"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_ServerUri, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_ServerUri, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_ServerUri, Identifiers.HasComponent, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode161() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_EndpointUrl, new QualifiedName(0, "EndpointUrl"), new LocalizedText("en", "EndpointUrl"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_EndpointUrl, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_EndpointUrl, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_EndpointUrl, Identifiers.HasComponent, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode162() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_LocaleIds, new QualifiedName(0, "LocaleIds"), new LocalizedText("en", "LocaleIds"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.LocaleId, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_LocaleIds, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_LocaleIds, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_LocaleIds, Identifiers.HasComponent, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode163() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_ActualSessionTimeout, new QualifiedName(0, "ActualSessionTimeout"), new LocalizedText("en", "ActualSessionTimeout"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Duration, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_ActualSessionTimeout, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_ActualSessionTimeout, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_ActualSessionTimeout, Identifiers.HasComponent, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode164() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_MaxResponseMessageSize, new QualifiedName(0, "MaxResponseMessageSize"), new LocalizedText("en", "MaxResponseMessageSize"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_MaxResponseMessageSize, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_MaxResponseMessageSize, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_MaxResponseMessageSize, Identifiers.HasComponent, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode165() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_ClientConnectionTime, new QualifiedName(0, "ClientConnectionTime"), new LocalizedText("en", "ClientConnectionTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UtcTime, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_ClientConnectionTime, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_ClientConnectionTime, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_ClientConnectionTime, Identifiers.HasComponent, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode166() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_ClientLastContactTime, new QualifiedName(0, "ClientLastContactTime"), new LocalizedText("en", "ClientLastContactTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UtcTime, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_ClientLastContactTime, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_ClientLastContactTime, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_ClientLastContactTime, Identifiers.HasComponent, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode167() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_CurrentSubscriptionsCount, new QualifiedName(0, "CurrentSubscriptionsCount"), new LocalizedText("en", "CurrentSubscriptionsCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_CurrentSubscriptionsCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_CurrentSubscriptionsCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_CurrentSubscriptionsCount, Identifiers.HasComponent, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode168() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_CurrentMonitoredItemsCount, new QualifiedName(0, "CurrentMonitoredItemsCount"), new LocalizedText("en", "CurrentMonitoredItemsCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_CurrentMonitoredItemsCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_CurrentMonitoredItemsCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_CurrentMonitoredItemsCount, Identifiers.HasComponent, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode169() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_CurrentPublishRequestsInQueue, new QualifiedName(0, "CurrentPublishRequestsInQueue"), new LocalizedText("en", "CurrentPublishRequestsInQueue"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_CurrentPublishRequestsInQueue, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_CurrentPublishRequestsInQueue, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_CurrentPublishRequestsInQueue, Identifiers.HasComponent, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode170() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_TotalRequestCount, new QualifiedName(0, "TotalRequestCount"), new LocalizedText("en", "TotalRequestCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_TotalRequestCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_TotalRequestCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_TotalRequestCount, Identifiers.HasComponent, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode171() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_UnauthorizedRequestCount, new QualifiedName(0, "UnauthorizedRequestCount"), new LocalizedText("en", "UnauthorizedRequestCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_UnauthorizedRequestCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_UnauthorizedRequestCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_UnauthorizedRequestCount, Identifiers.HasComponent, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode172() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_ReadCount, new QualifiedName(0, "ReadCount"), new LocalizedText("en", "ReadCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_ReadCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_ReadCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_ReadCount, Identifiers.HasComponent, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode173() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_HistoryReadCount, new QualifiedName(0, "HistoryReadCount"), new LocalizedText("en", "HistoryReadCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_HistoryReadCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_HistoryReadCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_HistoryReadCount, Identifiers.HasComponent, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode174() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_WriteCount, new QualifiedName(0, "WriteCount"), new LocalizedText("en", "WriteCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_WriteCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_WriteCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_WriteCount, Identifiers.HasComponent, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode175() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_HistoryUpdateCount, new QualifiedName(0, "HistoryUpdateCount"), new LocalizedText("en", "HistoryUpdateCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_HistoryUpdateCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_HistoryUpdateCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_HistoryUpdateCount, Identifiers.HasComponent, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode176() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_CallCount, new QualifiedName(0, "CallCount"), new LocalizedText("en", "CallCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_CallCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_CallCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_CallCount, Identifiers.HasComponent, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode177() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_CreateMonitoredItemsCount, new QualifiedName(0, "CreateMonitoredItemsCount"), new LocalizedText("en", "CreateMonitoredItemsCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_CreateMonitoredItemsCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_CreateMonitoredItemsCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_CreateMonitoredItemsCount, Identifiers.HasComponent, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode178() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_ModifyMonitoredItemsCount, new QualifiedName(0, "ModifyMonitoredItemsCount"), new LocalizedText("en", "ModifyMonitoredItemsCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_ModifyMonitoredItemsCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_ModifyMonitoredItemsCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_ModifyMonitoredItemsCount, Identifiers.HasComponent, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode179() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_SetMonitoringModeCount, new QualifiedName(0, "SetMonitoringModeCount"), new LocalizedText("en", "SetMonitoringModeCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_SetMonitoringModeCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_SetMonitoringModeCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_SetMonitoringModeCount, Identifiers.HasComponent, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode180() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_SetTriggeringCount, new QualifiedName(0, "SetTriggeringCount"), new LocalizedText("en", "SetTriggeringCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_SetTriggeringCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_SetTriggeringCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_SetTriggeringCount, Identifiers.HasComponent, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode181() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_DeleteMonitoredItemsCount, new QualifiedName(0, "DeleteMonitoredItemsCount"), new LocalizedText("en", "DeleteMonitoredItemsCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_DeleteMonitoredItemsCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_DeleteMonitoredItemsCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_DeleteMonitoredItemsCount, Identifiers.HasComponent, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode182() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_CreateSubscriptionCount, new QualifiedName(0, "CreateSubscriptionCount"), new LocalizedText("en", "CreateSubscriptionCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_CreateSubscriptionCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_CreateSubscriptionCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_CreateSubscriptionCount, Identifiers.HasComponent, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode183() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_ModifySubscriptionCount, new QualifiedName(0, "ModifySubscriptionCount"), new LocalizedText("en", "ModifySubscriptionCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_ModifySubscriptionCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_ModifySubscriptionCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_ModifySubscriptionCount, Identifiers.HasComponent, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode184() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_SetPublishingModeCount, new QualifiedName(0, "SetPublishingModeCount"), new LocalizedText("en", "SetPublishingModeCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_SetPublishingModeCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_SetPublishingModeCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_SetPublishingModeCount, Identifiers.HasComponent, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode185() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_PublishCount, new QualifiedName(0, "PublishCount"), new LocalizedText("en", "PublishCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_PublishCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_PublishCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_PublishCount, Identifiers.HasComponent, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode186() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_RepublishCount, new QualifiedName(0, "RepublishCount"), new LocalizedText("en", "RepublishCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_RepublishCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_RepublishCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_RepublishCount, Identifiers.HasComponent, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode187() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_TransferSubscriptionsCount, new QualifiedName(0, "TransferSubscriptionsCount"), new LocalizedText("en", "TransferSubscriptionsCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_TransferSubscriptionsCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_TransferSubscriptionsCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_TransferSubscriptionsCount, Identifiers.HasComponent, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode188() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_DeleteSubscriptionsCount, new QualifiedName(0, "DeleteSubscriptionsCount"), new LocalizedText("en", "DeleteSubscriptionsCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_DeleteSubscriptionsCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_DeleteSubscriptionsCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_DeleteSubscriptionsCount, Identifiers.HasComponent, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode189() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_AddNodesCount, new QualifiedName(0, "AddNodesCount"), new LocalizedText("en", "AddNodesCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_AddNodesCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_AddNodesCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_AddNodesCount, Identifiers.HasComponent, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode190() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_AddReferencesCount, new QualifiedName(0, "AddReferencesCount"), new LocalizedText("en", "AddReferencesCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_AddReferencesCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_AddReferencesCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_AddReferencesCount, Identifiers.HasComponent, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode191() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_DeleteNodesCount, new QualifiedName(0, "DeleteNodesCount"), new LocalizedText("en", "DeleteNodesCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_DeleteNodesCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_DeleteNodesCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_DeleteNodesCount, Identifiers.HasComponent, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode192() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_DeleteReferencesCount, new QualifiedName(0, "DeleteReferencesCount"), new LocalizedText("en", "DeleteReferencesCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_DeleteReferencesCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_DeleteReferencesCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_DeleteReferencesCount, Identifiers.HasComponent, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode193() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_BrowseCount, new QualifiedName(0, "BrowseCount"), new LocalizedText("en", "BrowseCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_BrowseCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_BrowseCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_BrowseCount, Identifiers.HasComponent, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode194() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_BrowseNextCount, new QualifiedName(0, "BrowseNextCount"), new LocalizedText("en", "BrowseNextCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_BrowseNextCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_BrowseNextCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_BrowseNextCount, Identifiers.HasComponent, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode195() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_TranslateBrowsePathsToNodeIdsCount, new QualifiedName(0, "TranslateBrowsePathsToNodeIdsCount"), new LocalizedText("en", "TranslateBrowsePathsToNodeIdsCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_TranslateBrowsePathsToNodeIdsCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_TranslateBrowsePathsToNodeIdsCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_TranslateBrowsePathsToNodeIdsCount, Identifiers.HasComponent, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode196() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_QueryFirstCount, new QualifiedName(0, "QueryFirstCount"), new LocalizedText("en", "QueryFirstCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_QueryFirstCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_QueryFirstCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_QueryFirstCount, Identifiers.HasComponent, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode197() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_QueryNextCount, new QualifiedName(0, "QueryNextCount"), new LocalizedText("en", "QueryNextCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_QueryNextCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_QueryNextCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_QueryNextCount, Identifiers.HasComponent, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode198() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_RegisterNodesCount, new QualifiedName(0, "RegisterNodesCount"), new LocalizedText("en", "RegisterNodesCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_RegisterNodesCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_RegisterNodesCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_RegisterNodesCount, Identifiers.HasComponent, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode199() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_UnregisterNodesCount, new QualifiedName(0, "UnregisterNodesCount"), new LocalizedText("en", "UnregisterNodesCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_UnregisterNodesCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_UnregisterNodesCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics_UnregisterNodesCount, Identifiers.HasComponent, Identifiers.SessionDiagnosticsArrayType_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode200() {
        SessionSecurityDiagnosticsTypeNode node = new SessionSecurityDiagnosticsTypeNode(this.context, Identifiers.SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics, new QualifiedName(0, "SessionSecurityDiagnostics"), new LocalizedText("en", "SessionSecurityDiagnostics"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.SessionSecurityDiagnosticsDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics, Identifiers.HasComponent, Identifiers.SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_SessionId.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics, Identifiers.HasComponent, Identifiers.SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_ClientUserIdOfSession.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics, Identifiers.HasComponent, Identifiers.SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_ClientUserIdHistory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics, Identifiers.HasComponent, Identifiers.SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_AuthenticationMechanism.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics, Identifiers.HasComponent, Identifiers.SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_Encoding.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics, Identifiers.HasComponent, Identifiers.SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_TransportProtocol.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics, Identifiers.HasComponent, Identifiers.SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_SecurityMode.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics, Identifiers.HasComponent, Identifiers.SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_SecurityPolicyUri.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics, Identifiers.HasComponent, Identifiers.SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_ClientCertificate.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics, Identifiers.HasTypeDefinition, Identifiers.SessionSecurityDiagnosticsType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics, Identifiers.HasModellingRule, Identifiers.ModellingRule_ExposesItsArray.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics, Identifiers.HasComponent, Identifiers.SessionSecurityDiagnosticsArrayType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode201() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_SessionId, new QualifiedName(0, "SessionId"), new LocalizedText("en", "SessionId"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.NodeId, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_SessionId, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_SessionId, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_SessionId, Identifiers.HasComponent, Identifiers.SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode202() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_ClientUserIdOfSession, new QualifiedName(0, "ClientUserIdOfSession"), new LocalizedText("en", "ClientUserIdOfSession"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_ClientUserIdOfSession, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_ClientUserIdOfSession, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_ClientUserIdOfSession, Identifiers.HasComponent, Identifiers.SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode203() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_ClientUserIdHistory, new QualifiedName(0, "ClientUserIdHistory"), new LocalizedText("en", "ClientUserIdHistory"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_ClientUserIdHistory, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_ClientUserIdHistory, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_ClientUserIdHistory, Identifiers.HasComponent, Identifiers.SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode204() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_AuthenticationMechanism, new QualifiedName(0, "AuthenticationMechanism"), new LocalizedText("en", "AuthenticationMechanism"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_AuthenticationMechanism, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_AuthenticationMechanism, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_AuthenticationMechanism, Identifiers.HasComponent, Identifiers.SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode205() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_Encoding, new QualifiedName(0, "Encoding"), new LocalizedText("en", "Encoding"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_Encoding, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_Encoding, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_Encoding, Identifiers.HasComponent, Identifiers.SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode206() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_TransportProtocol, new QualifiedName(0, "TransportProtocol"), new LocalizedText("en", "TransportProtocol"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_TransportProtocol, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_TransportProtocol, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_TransportProtocol, Identifiers.HasComponent, Identifiers.SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode207() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_SecurityMode, new QualifiedName(0, "SecurityMode"), new LocalizedText("en", "SecurityMode"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.MessageSecurityMode, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_SecurityMode, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_SecurityMode, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_SecurityMode, Identifiers.HasComponent, Identifiers.SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode208() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_SecurityPolicyUri, new QualifiedName(0, "SecurityPolicyUri"), new LocalizedText("en", "SecurityPolicyUri"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_SecurityPolicyUri, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_SecurityPolicyUri, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_SecurityPolicyUri, Identifiers.HasComponent, Identifiers.SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode209() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_ClientCertificate, new QualifiedName(0, "ClientCertificate"), new LocalizedText("en", "ClientCertificate"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ByteString, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_ClientCertificate, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_ClientCertificate, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_ClientCertificate, Identifiers.HasComponent, Identifiers.SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode210() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerType_ResendData_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerType_ResendData_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_ResendData_InputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_ResendData_InputArguments, Identifiers.HasProperty, Identifiers.ServerType_ResendData.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>SubscriptionId</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode211() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.Server_ResendData_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.Server_ResendData_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.Server_ResendData_InputArguments, Identifiers.HasProperty, Identifiers.Server_ResendData.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>SubscriptionId</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode212() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerType_EstimatedReturnTime, new QualifiedName(0, "EstimatedReturnTime"), new LocalizedText("en", "EstimatedReturnTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.DateTime, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 1000.0, false);
        node.addReference(new Reference(Identifiers.ServerType_EstimatedReturnTime, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_EstimatedReturnTime, Identifiers.HasModellingRule, Identifiers.ModellingRule_Optional.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_EstimatedReturnTime, Identifiers.HasProperty, Identifiers.ServerType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode213() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerType_RequestServerStateChange_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerType_RequestServerStateChange_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_RequestServerStateChange_InputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_RequestServerStateChange_InputArguments, Identifiers.HasProperty, Identifiers.ServerType_RequestServerStateChange.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>State</Name><DataType><Identifier>i=852</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>EstimatedReturnTime</Name><DataType><Identifier>i=13</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>SecondsTillShutdown</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Reason</Name><DataType><Identifier>i=21</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Restart</Name><DataType><Identifier>i=1</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode214() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.Server_EstimatedReturnTime, new QualifiedName(0, "EstimatedReturnTime"), new LocalizedText("en", "EstimatedReturnTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.DateTime, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 1000.0, false);
        node.addReference(new Reference(Identifiers.Server_EstimatedReturnTime, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.Server_EstimatedReturnTime, Identifiers.HasProperty, Identifiers.Server.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode215() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.Server_RequestServerStateChange_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.Server_RequestServerStateChange_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.Server_RequestServerStateChange_InputArguments, Identifiers.HasProperty, Identifiers.Server_RequestServerStateChange.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>State</Name><DataType><Identifier>i=852</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>EstimatedReturnTime</Name><DataType><Identifier>i=13</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>SecondsTillShutdown</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Reason</Name><DataType><Identifier>i=21</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Restart</Name><DataType><Identifier>i=1</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode216() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_XmlSchema_DiscoveryConfiguration, new QualifiedName(0, "DiscoveryConfiguration"), new LocalizedText("en", "DiscoveryConfiguration"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_DiscoveryConfiguration, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_DiscoveryConfiguration, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">//xs:element[@name='DiscoveryConfiguration']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode217() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_XmlSchema_MdnsDiscoveryConfiguration, new QualifiedName(0, "MdnsDiscoveryConfiguration"), new LocalizedText("en", "MdnsDiscoveryConfiguration"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_MdnsDiscoveryConfiguration, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_MdnsDiscoveryConfiguration, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">//xs:element[@name='MdnsDiscoveryConfiguration']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode218() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_BinarySchema_DiscoveryConfiguration, new QualifiedName(0, "DiscoveryConfiguration"), new LocalizedText("en", "DiscoveryConfiguration"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_DiscoveryConfiguration, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_DiscoveryConfiguration, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">DiscoveryConfiguration</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode219() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_XmlSchema_HistoryEventFieldList, new QualifiedName(0, "HistoryEventFieldList"), new LocalizedText("en", "HistoryEventFieldList"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_HistoryEventFieldList, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_HistoryEventFieldList, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">//xs:element[@name='HistoryEventFieldList']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode220() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_BinarySchema_MdnsDiscoveryConfiguration, new QualifiedName(0, "MdnsDiscoveryConfiguration"), new LocalizedText("en", "MdnsDiscoveryConfiguration"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_MdnsDiscoveryConfiguration, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_MdnsDiscoveryConfiguration, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">MdnsDiscoveryConfiguration</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode221() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.MaxByteStringLength, new QualifiedName(0, "MaxByteStringLength"), new LocalizedText("en", "MaxByteStringLength"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -2, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.MaxByteStringLength, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        this.nodeManager.addNode(node);
    }

    private void loadNode222() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerCapabilitiesType_MaxByteStringLength, new QualifiedName(0, "MaxByteStringLength"), new LocalizedText("en", "MaxByteStringLength"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerCapabilitiesType_MaxByteStringLength, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerCapabilitiesType_MaxByteStringLength, Identifiers.HasModellingRule, Identifiers.ModellingRule_Optional.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerCapabilitiesType_MaxByteStringLength, Identifiers.HasProperty, Identifiers.ServerCapabilitiesType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode223() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.Server_ServerCapabilities_MaxByteStringLength, new QualifiedName(0, "MaxByteStringLength"), new LocalizedText("en", "MaxByteStringLength"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.Server_ServerCapabilities_MaxByteStringLength, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.Server_ServerCapabilities_MaxByteStringLength, Identifiers.HasProperty, Identifiers.Server_ServerCapabilities.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode224() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ConditionType_ConditionRefresh2_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ConditionType_ConditionRefresh2_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ConditionType_ConditionRefresh2_InputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ConditionType_ConditionRefresh2_InputArguments, Identifiers.HasProperty, Identifiers.ConditionType_ConditionRefresh2.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>SubscriptionId</Name><DataType><Identifier>i=288</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description><Locale>                </Locale><Text>The identifier for the suscription to refresh.</Text>              </Description>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>MonitoredItemId</Name><DataType><Identifier>i=288</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description><Locale>                </Locale><Text>The identifier for the monitored item to refresh.</Text>              </Description>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode225() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_XmlSchema_RedundantServerDataType, new QualifiedName(0, "RedundantServerDataType"), new LocalizedText("en", "RedundantServerDataType"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_RedundantServerDataType, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_RedundantServerDataType, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">//xs:element[@name='RedundantServerDataType']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode226() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_XmlSchema_SamplingIntervalDiagnosticsDataType, new QualifiedName(0, "SamplingIntervalDiagnosticsDataType"), new LocalizedText("en", "SamplingIntervalDiagnosticsDataType"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_SamplingIntervalDiagnosticsDataType, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_SamplingIntervalDiagnosticsDataType, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">//xs:element[@name='SamplingIntervalDiagnosticsDataType']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode227() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_XmlSchema_ServerDiagnosticsSummaryDataType, new QualifiedName(0, "ServerDiagnosticsSummaryDataType"), new LocalizedText("en", "ServerDiagnosticsSummaryDataType"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_ServerDiagnosticsSummaryDataType, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_ServerDiagnosticsSummaryDataType, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">//xs:element[@name='ServerDiagnosticsSummaryDataType']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode228() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_XmlSchema_ServerStatusDataType, new QualifiedName(0, "ServerStatusDataType"), new LocalizedText("en", "ServerStatusDataType"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_ServerStatusDataType, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_ServerStatusDataType, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">//xs:element[@name='ServerStatusDataType']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode229() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_XmlSchema_SessionDiagnosticsDataType, new QualifiedName(0, "SessionDiagnosticsDataType"), new LocalizedText("en", "SessionDiagnosticsDataType"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_SessionDiagnosticsDataType, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_SessionDiagnosticsDataType, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">//xs:element[@name='SessionDiagnosticsDataType']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode230() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_XmlSchema_SessionSecurityDiagnosticsDataType, new QualifiedName(0, "SessionSecurityDiagnosticsDataType"), new LocalizedText("en", "SessionSecurityDiagnosticsDataType"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_SessionSecurityDiagnosticsDataType, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_SessionSecurityDiagnosticsDataType, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">//xs:element[@name='SessionSecurityDiagnosticsDataType']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode231() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_XmlSchema_ServiceCounterDataType, new QualifiedName(0, "ServiceCounterDataType"), new LocalizedText("en", "ServiceCounterDataType"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_ServiceCounterDataType, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_ServiceCounterDataType, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">//xs:element[@name='ServiceCounterDataType']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode232() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_XmlSchema_SubscriptionDiagnosticsDataType, new QualifiedName(0, "SubscriptionDiagnosticsDataType"), new LocalizedText("en", "SubscriptionDiagnosticsDataType"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_SubscriptionDiagnosticsDataType, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_SubscriptionDiagnosticsDataType, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">//xs:element[@name='SubscriptionDiagnosticsDataType']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode233() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_XmlSchema_ModelChangeStructureDataType, new QualifiedName(0, "ModelChangeStructureDataType"), new LocalizedText("en", "ModelChangeStructureDataType"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_ModelChangeStructureDataType, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_ModelChangeStructureDataType, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">//xs:element[@name='ModelChangeStructureDataType']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode234() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_XmlSchema_SemanticChangeStructureDataType, new QualifiedName(0, "SemanticChangeStructureDataType"), new LocalizedText("en", "SemanticChangeStructureDataType"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_SemanticChangeStructureDataType, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_SemanticChangeStructureDataType, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">//xs:element[@name='SemanticChangeStructureDataType']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode235() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_XmlSchema_Range, new QualifiedName(0, "Range"), new LocalizedText("en", "Range"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_Range, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_Range, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">//xs:element[@name='Range']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode236() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_XmlSchema_EUInformation, new QualifiedName(0, "EUInformation"), new LocalizedText("en", "EUInformation"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_EUInformation, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_EUInformation, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">//xs:element[@name='EUInformation']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode237() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_XmlSchema_Annotation, new QualifiedName(0, "Annotation"), new LocalizedText("en", "Annotation"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_Annotation, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_Annotation, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">//xs:element[@name='Annotation']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode238() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_XmlSchema_ProgramDiagnosticDataType, new QualifiedName(0, "ProgramDiagnosticDataType"), new LocalizedText("en", "ProgramDiagnosticDataType"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_ProgramDiagnosticDataType, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_ProgramDiagnosticDataType, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">//xs:element[@name='ProgramDiagnosticDataType']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode239() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SubscriptionDiagnosticsType_MaxLifetimeCount, new QualifiedName(0, "MaxLifetimeCount"), new LocalizedText("en", "MaxLifetimeCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsType_MaxLifetimeCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsType_MaxLifetimeCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsType_MaxLifetimeCount, Identifiers.HasComponent, Identifiers.SubscriptionDiagnosticsType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode240() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SubscriptionDiagnosticsType_LatePublishRequestCount, new QualifiedName(0, "LatePublishRequestCount"), new LocalizedText("en", "LatePublishRequestCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsType_LatePublishRequestCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsType_LatePublishRequestCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsType_LatePublishRequestCount, Identifiers.HasComponent, Identifiers.SubscriptionDiagnosticsType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode241() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SubscriptionDiagnosticsType_CurrentKeepAliveCount, new QualifiedName(0, "CurrentKeepAliveCount"), new LocalizedText("en", "CurrentKeepAliveCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsType_CurrentKeepAliveCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsType_CurrentKeepAliveCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsType_CurrentKeepAliveCount, Identifiers.HasComponent, Identifiers.SubscriptionDiagnosticsType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode242() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SubscriptionDiagnosticsType_CurrentLifetimeCount, new QualifiedName(0, "CurrentLifetimeCount"), new LocalizedText("en", "CurrentLifetimeCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsType_CurrentLifetimeCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsType_CurrentLifetimeCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsType_CurrentLifetimeCount, Identifiers.HasComponent, Identifiers.SubscriptionDiagnosticsType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode243() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SubscriptionDiagnosticsType_UnacknowledgedMessageCount, new QualifiedName(0, "UnacknowledgedMessageCount"), new LocalizedText("en", "UnacknowledgedMessageCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsType_UnacknowledgedMessageCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsType_UnacknowledgedMessageCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsType_UnacknowledgedMessageCount, Identifiers.HasComponent, Identifiers.SubscriptionDiagnosticsType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode244() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SubscriptionDiagnosticsType_DiscardedMessageCount, new QualifiedName(0, "DiscardedMessageCount"), new LocalizedText("en", "DiscardedMessageCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsType_DiscardedMessageCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsType_DiscardedMessageCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsType_DiscardedMessageCount, Identifiers.HasComponent, Identifiers.SubscriptionDiagnosticsType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode245() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SubscriptionDiagnosticsType_MonitoredItemCount, new QualifiedName(0, "MonitoredItemCount"), new LocalizedText("en", "MonitoredItemCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsType_MonitoredItemCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsType_MonitoredItemCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsType_MonitoredItemCount, Identifiers.HasComponent, Identifiers.SubscriptionDiagnosticsType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode246() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SubscriptionDiagnosticsType_DisabledMonitoredItemCount, new QualifiedName(0, "DisabledMonitoredItemCount"), new LocalizedText("en", "DisabledMonitoredItemCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsType_DisabledMonitoredItemCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsType_DisabledMonitoredItemCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsType_DisabledMonitoredItemCount, Identifiers.HasComponent, Identifiers.SubscriptionDiagnosticsType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode247() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SubscriptionDiagnosticsType_MonitoringQueueOverflowCount, new QualifiedName(0, "MonitoringQueueOverflowCount"), new LocalizedText("en", "MonitoringQueueOverflowCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsType_MonitoringQueueOverflowCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsType_MonitoringQueueOverflowCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsType_MonitoringQueueOverflowCount, Identifiers.HasComponent, Identifiers.SubscriptionDiagnosticsType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode248() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SubscriptionDiagnosticsType_NextSequenceNumber, new QualifiedName(0, "NextSequenceNumber"), new LocalizedText("en", "NextSequenceNumber"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsType_NextSequenceNumber, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsType_NextSequenceNumber, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsType_NextSequenceNumber, Identifiers.HasComponent, Identifiers.SubscriptionDiagnosticsType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode249() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_TotalRequestCount, new QualifiedName(0, "TotalRequestCount"), new LocalizedText("en", "TotalRequestCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_TotalRequestCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_TotalRequestCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_TotalRequestCount, Identifiers.HasComponent, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode250() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsVariableType_TotalRequestCount, new QualifiedName(0, "TotalRequestCount"), new LocalizedText("en", "TotalRequestCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_TotalRequestCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_TotalRequestCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_TotalRequestCount, Identifiers.HasComponent, Identifiers.SessionDiagnosticsVariableType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode251() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SubscriptionDiagnosticsType_EventQueueOverflowCount, new QualifiedName(0, "EventQueueOverflowCount"), new LocalizedText("en", "EventQueueOverflowCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsType_EventQueueOverflowCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsType_EventQueueOverflowCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsType_EventQueueOverflowCount, Identifiers.HasComponent, Identifiers.SubscriptionDiagnosticsType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode252() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_BinarySchema_TimeZoneDataType, new QualifiedName(0, "TimeZoneDataType"), new LocalizedText("en", "TimeZoneDataType"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_TimeZoneDataType, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_TimeZoneDataType, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">TimeZoneDataType</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode253() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_XmlSchema_TimeZoneDataType, new QualifiedName(0, "TimeZoneDataType"), new LocalizedText("en", "TimeZoneDataType"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_TimeZoneDataType, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_TimeZoneDataType, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">//xs:element[@name='TimeZoneDataType']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode254() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.TwoStateVariableType_Id, new QualifiedName(0, "Id"), new LocalizedText("en", "Id"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Boolean, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.TwoStateVariableType_Id, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.TwoStateVariableType_Id, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.TwoStateVariableType_Id, Identifiers.HasProperty, Identifiers.TwoStateVariableType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode255() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.TwoStateVariableType_TransitionTime, new QualifiedName(0, "TransitionTime"), new LocalizedText("en", "TransitionTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UtcTime, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.TwoStateVariableType_TransitionTime, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.TwoStateVariableType_TransitionTime, Identifiers.HasModellingRule, Identifiers.ModellingRule_Optional.expanded(), true));
        node.addReference(new Reference(Identifiers.TwoStateVariableType_TransitionTime, Identifiers.HasProperty, Identifiers.TwoStateVariableType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode256() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.TwoStateVariableType_EffectiveTransitionTime, new QualifiedName(0, "EffectiveTransitionTime"), new LocalizedText("en", "EffectiveTransitionTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UtcTime, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.TwoStateVariableType_EffectiveTransitionTime, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.TwoStateVariableType_EffectiveTransitionTime, Identifiers.HasModellingRule, Identifiers.ModellingRule_Optional.expanded(), true));
        node.addReference(new Reference(Identifiers.TwoStateVariableType_EffectiveTransitionTime, Identifiers.HasProperty, Identifiers.TwoStateVariableType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode257() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ConditionVariableType_SourceTimestamp, new QualifiedName(0, "SourceTimestamp"), new LocalizedText("en", "SourceTimestamp"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UtcTime, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ConditionVariableType_SourceTimestamp, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ConditionVariableType_SourceTimestamp, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ConditionVariableType_SourceTimestamp, Identifiers.HasProperty, Identifiers.ConditionVariableType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode258() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ConditionType_ConditionName, new QualifiedName(0, "ConditionName"), new LocalizedText("en", "ConditionName"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ConditionType_ConditionName, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ConditionType_ConditionName, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ConditionType_ConditionName, Identifiers.HasProperty, Identifiers.ConditionType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode259() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ConditionType_BranchId, new QualifiedName(0, "BranchId"), new LocalizedText("en", "BranchId"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.NodeId, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ConditionType_BranchId, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ConditionType_BranchId, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ConditionType_BranchId, Identifiers.HasProperty, Identifiers.ConditionType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode260() {
        TwoStateVariableTypeNode node = new TwoStateVariableTypeNode(this.context, Identifiers.ConditionType_EnabledState, new QualifiedName(0, "EnabledState"), new LocalizedText("en", "EnabledState"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.LocalizedText, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ConditionType_EnabledState, Identifiers.HasProperty, Identifiers.ConditionType_EnabledState_Id.expanded(), true));
        node.addReference(new Reference(Identifiers.ConditionType_EnabledState, Identifiers.HasProperty, Identifiers.ConditionType_EnabledState_EffectiveDisplayName.expanded(), true));
        node.addReference(new Reference(Identifiers.ConditionType_EnabledState, Identifiers.HasProperty, Identifiers.ConditionType_EnabledState_TransitionTime.expanded(), true));
        node.addReference(new Reference(Identifiers.ConditionType_EnabledState, Identifiers.HasProperty, Identifiers.ConditionType_EnabledState_EffectiveTransitionTime.expanded(), true));
        node.addReference(new Reference(Identifiers.ConditionType_EnabledState, Identifiers.HasTypeDefinition, Identifiers.TwoStateVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.ConditionType_EnabledState, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ConditionType_EnabledState, Identifiers.HasComponent, Identifiers.ConditionType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode261() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ConditionType_EnabledState_Id, new QualifiedName(0, "Id"), new LocalizedText("en", "Id"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Boolean, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ConditionType_EnabledState_Id, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ConditionType_EnabledState_Id, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ConditionType_EnabledState_Id, Identifiers.HasProperty, Identifiers.ConditionType_EnabledState.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode262() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ConditionType_EnabledState_EffectiveDisplayName, new QualifiedName(0, "EffectiveDisplayName"), new LocalizedText("en", "EffectiveDisplayName"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.LocalizedText, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ConditionType_EnabledState_EffectiveDisplayName, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ConditionType_EnabledState_EffectiveDisplayName, Identifiers.HasModellingRule, Identifiers.ModellingRule_Optional.expanded(), true));
        node.addReference(new Reference(Identifiers.ConditionType_EnabledState_EffectiveDisplayName, Identifiers.HasProperty, Identifiers.ConditionType_EnabledState.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode263() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ConditionType_EnabledState_TransitionTime, new QualifiedName(0, "TransitionTime"), new LocalizedText("en", "TransitionTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UtcTime, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ConditionType_EnabledState_TransitionTime, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ConditionType_EnabledState_TransitionTime, Identifiers.HasModellingRule, Identifiers.ModellingRule_Optional.expanded(), true));
        node.addReference(new Reference(Identifiers.ConditionType_EnabledState_TransitionTime, Identifiers.HasProperty, Identifiers.ConditionType_EnabledState.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode264() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ConditionType_EnabledState_EffectiveTransitionTime, new QualifiedName(0, "EffectiveTransitionTime"), new LocalizedText("en", "EffectiveTransitionTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UtcTime, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ConditionType_EnabledState_EffectiveTransitionTime, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ConditionType_EnabledState_EffectiveTransitionTime, Identifiers.HasModellingRule, Identifiers.ModellingRule_Optional.expanded(), true));
        node.addReference(new Reference(Identifiers.ConditionType_EnabledState_EffectiveTransitionTime, Identifiers.HasProperty, Identifiers.ConditionType_EnabledState.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode265() {
        ConditionVariableTypeNode node = new ConditionVariableTypeNode(this.context, Identifiers.ConditionType_Quality, new QualifiedName(0, "Quality"), new LocalizedText("en", "Quality"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.StatusCode, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ConditionType_Quality, Identifiers.HasProperty, Identifiers.ConditionType_Quality_SourceTimestamp.expanded(), true));
        node.addReference(new Reference(Identifiers.ConditionType_Quality, Identifiers.HasTypeDefinition, Identifiers.ConditionVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.ConditionType_Quality, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ConditionType_Quality, Identifiers.HasComponent, Identifiers.ConditionType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode266() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ConditionType_Quality_SourceTimestamp, new QualifiedName(0, "SourceTimestamp"), new LocalizedText("en", "SourceTimestamp"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UtcTime, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ConditionType_Quality_SourceTimestamp, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ConditionType_Quality_SourceTimestamp, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ConditionType_Quality_SourceTimestamp, Identifiers.HasProperty, Identifiers.ConditionType_Quality.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode267() {
        ConditionVariableTypeNode node = new ConditionVariableTypeNode(this.context, Identifiers.ConditionType_LastSeverity, new QualifiedName(0, "LastSeverity"), new LocalizedText("en", "LastSeverity"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt16, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ConditionType_LastSeverity, Identifiers.HasProperty, Identifiers.ConditionType_LastSeverity_SourceTimestamp.expanded(), true));
        node.addReference(new Reference(Identifiers.ConditionType_LastSeverity, Identifiers.HasTypeDefinition, Identifiers.ConditionVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.ConditionType_LastSeverity, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ConditionType_LastSeverity, Identifiers.HasComponent, Identifiers.ConditionType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode268() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ConditionType_LastSeverity_SourceTimestamp, new QualifiedName(0, "SourceTimestamp"), new LocalizedText("en", "SourceTimestamp"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UtcTime, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ConditionType_LastSeverity_SourceTimestamp, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ConditionType_LastSeverity_SourceTimestamp, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ConditionType_LastSeverity_SourceTimestamp, Identifiers.HasProperty, Identifiers.ConditionType_LastSeverity.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode269() {
        ConditionVariableTypeNode node = new ConditionVariableTypeNode(this.context, Identifiers.ConditionType_Comment, new QualifiedName(0, "Comment"), new LocalizedText("en", "Comment"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.LocalizedText, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ConditionType_Comment, Identifiers.HasProperty, Identifiers.ConditionType_Comment_SourceTimestamp.expanded(), true));
        node.addReference(new Reference(Identifiers.ConditionType_Comment, Identifiers.HasTypeDefinition, Identifiers.ConditionVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.ConditionType_Comment, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ConditionType_Comment, Identifiers.HasComponent, Identifiers.ConditionType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode270() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ConditionType_Comment_SourceTimestamp, new QualifiedName(0, "SourceTimestamp"), new LocalizedText("en", "SourceTimestamp"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UtcTime, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ConditionType_Comment_SourceTimestamp, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ConditionType_Comment_SourceTimestamp, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ConditionType_Comment_SourceTimestamp, Identifiers.HasProperty, Identifiers.ConditionType_Comment.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode271() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ConditionType_ClientUserId, new QualifiedName(0, "ClientUserId"), new LocalizedText("en", "ClientUserId"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ConditionType_ClientUserId, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ConditionType_ClientUserId, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ConditionType_ClientUserId, Identifiers.HasProperty, Identifiers.ConditionType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode272() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ConditionType_AddComment_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ConditionType_AddComment_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ConditionType_AddComment_InputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ConditionType_AddComment_InputArguments, Identifiers.HasProperty, Identifiers.ConditionType_AddComment.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>EventId</Name><DataType><Identifier>i=15</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description><Locale>                </Locale><Text>The identifier for the event to comment.</Text>              </Description>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Comment</Name><DataType><Identifier>i=21</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description><Locale>                </Locale><Text>The comment to add to the condition.</Text>              </Description>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode273() {
        TwoStateVariableTypeNode node = new TwoStateVariableTypeNode(this.context, Identifiers.DialogConditionType_EnabledState, new QualifiedName(0, "EnabledState"), new LocalizedText("en", "EnabledState"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.LocalizedText, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.DialogConditionType_EnabledState, Identifiers.HasProperty, Identifiers.DialogConditionType_EnabledState_Id.expanded(), true));
        node.addReference(new Reference(Identifiers.DialogConditionType_EnabledState, Identifiers.HasTrueSubState, Identifiers.DialogConditionType_DialogState.expanded(), true));
        node.addReference(new Reference(Identifiers.DialogConditionType_EnabledState, Identifiers.HasTypeDefinition, Identifiers.TwoStateVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.DialogConditionType_EnabledState, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.DialogConditionType_EnabledState, Identifiers.HasComponent, Identifiers.DialogConditionType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode274() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.DialogConditionType_EnabledState_Id, new QualifiedName(0, "Id"), new LocalizedText("en", "Id"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Boolean, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.DialogConditionType_EnabledState_Id, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.DialogConditionType_EnabledState_Id, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.DialogConditionType_EnabledState_Id, Identifiers.HasProperty, Identifiers.DialogConditionType_EnabledState.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode275() {
        TwoStateVariableTypeNode node = new TwoStateVariableTypeNode(this.context, Identifiers.DialogConditionType_DialogState, new QualifiedName(0, "DialogState"), new LocalizedText("en", "DialogState"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.LocalizedText, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.DialogConditionType_DialogState, Identifiers.HasProperty, Identifiers.DialogConditionType_DialogState_Id.expanded(), true));
        node.addReference(new Reference(Identifiers.DialogConditionType_DialogState, Identifiers.HasProperty, Identifiers.DialogConditionType_DialogState_TransitionTime.expanded(), true));
        node.addReference(new Reference(Identifiers.DialogConditionType_DialogState, Identifiers.HasTrueSubState, Identifiers.DialogConditionType_EnabledState.expanded(), false));
        node.addReference(new Reference(Identifiers.DialogConditionType_DialogState, Identifiers.HasTypeDefinition, Identifiers.TwoStateVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.DialogConditionType_DialogState, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.DialogConditionType_DialogState, Identifiers.HasComponent, Identifiers.DialogConditionType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode276() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.DialogConditionType_DialogState_Id, new QualifiedName(0, "Id"), new LocalizedText("en", "Id"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Boolean, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.DialogConditionType_DialogState_Id, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.DialogConditionType_DialogState_Id, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.DialogConditionType_DialogState_Id, Identifiers.HasProperty, Identifiers.DialogConditionType_DialogState.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode277() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.DialogConditionType_DialogState_TransitionTime, new QualifiedName(0, "TransitionTime"), new LocalizedText("en", "TransitionTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UtcTime, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.DialogConditionType_DialogState_TransitionTime, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.DialogConditionType_DialogState_TransitionTime, Identifiers.HasModellingRule, Identifiers.ModellingRule_Optional.expanded(), true));
        node.addReference(new Reference(Identifiers.DialogConditionType_DialogState_TransitionTime, Identifiers.HasProperty, Identifiers.DialogConditionType_DialogState.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode278() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.DialogConditionType_ResponseOptionSet, new QualifiedName(0, "ResponseOptionSet"), new LocalizedText("en", "ResponseOptionSet"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.LocalizedText, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.DialogConditionType_ResponseOptionSet, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.DialogConditionType_ResponseOptionSet, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.DialogConditionType_ResponseOptionSet, Identifiers.HasProperty, Identifiers.DialogConditionType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode279() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.DialogConditionType_DefaultResponse, new QualifiedName(0, "DefaultResponse"), new LocalizedText("en", "DefaultResponse"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Int32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.DialogConditionType_DefaultResponse, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.DialogConditionType_DefaultResponse, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.DialogConditionType_DefaultResponse, Identifiers.HasProperty, Identifiers.DialogConditionType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode280() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.DialogConditionType_OkResponse, new QualifiedName(0, "OkResponse"), new LocalizedText("en", "OkResponse"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Int32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.DialogConditionType_OkResponse, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.DialogConditionType_OkResponse, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.DialogConditionType_OkResponse, Identifiers.HasProperty, Identifiers.DialogConditionType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode281() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.DialogConditionType_CancelResponse, new QualifiedName(0, "CancelResponse"), new LocalizedText("en", "CancelResponse"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Int32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.DialogConditionType_CancelResponse, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.DialogConditionType_CancelResponse, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.DialogConditionType_CancelResponse, Identifiers.HasProperty, Identifiers.DialogConditionType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode282() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.DialogConditionType_LastResponse, new QualifiedName(0, "LastResponse"), new LocalizedText("en", "LastResponse"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Int32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.DialogConditionType_LastResponse, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.DialogConditionType_LastResponse, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.DialogConditionType_LastResponse, Identifiers.HasProperty, Identifiers.DialogConditionType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode283() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.DialogConditionType_Respond_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.DialogConditionType_Respond_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.DialogConditionType_Respond_InputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.DialogConditionType_Respond_InputArguments, Identifiers.HasProperty, Identifiers.DialogConditionType_Respond.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>SelectedResponse</Name><DataType><Identifier>i=6</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description><Locale>                </Locale><Text>The response to the dialog condition.</Text>              </Description>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode284() {
        TwoStateVariableTypeNode node = new TwoStateVariableTypeNode(this.context, Identifiers.AcknowledgeableConditionType_EnabledState, new QualifiedName(0, "EnabledState"), new LocalizedText("en", "EnabledState"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.LocalizedText, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.AcknowledgeableConditionType_EnabledState, Identifiers.HasProperty, Identifiers.AcknowledgeableConditionType_EnabledState_Id.expanded(), true));
        node.addReference(new Reference(Identifiers.AcknowledgeableConditionType_EnabledState, Identifiers.HasTrueSubState, Identifiers.AcknowledgeableConditionType_AckedState.expanded(), true));
        node.addReference(new Reference(Identifiers.AcknowledgeableConditionType_EnabledState, Identifiers.HasTrueSubState, Identifiers.AcknowledgeableConditionType_ConfirmedState.expanded(), true));
        node.addReference(new Reference(Identifiers.AcknowledgeableConditionType_EnabledState, Identifiers.HasTypeDefinition, Identifiers.TwoStateVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.AcknowledgeableConditionType_EnabledState, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.AcknowledgeableConditionType_EnabledState, Identifiers.HasComponent, Identifiers.AcknowledgeableConditionType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode285() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.AcknowledgeableConditionType_EnabledState_Id, new QualifiedName(0, "Id"), new LocalizedText("en", "Id"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Boolean, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.AcknowledgeableConditionType_EnabledState_Id, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.AcknowledgeableConditionType_EnabledState_Id, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.AcknowledgeableConditionType_EnabledState_Id, Identifiers.HasProperty, Identifiers.AcknowledgeableConditionType_EnabledState.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode286() {
        TwoStateVariableTypeNode node = new TwoStateVariableTypeNode(this.context, Identifiers.AcknowledgeableConditionType_AckedState, new QualifiedName(0, "AckedState"), new LocalizedText("en", "AckedState"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.LocalizedText, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.AcknowledgeableConditionType_AckedState, Identifiers.HasProperty, Identifiers.AcknowledgeableConditionType_AckedState_Id.expanded(), true));
        node.addReference(new Reference(Identifiers.AcknowledgeableConditionType_AckedState, Identifiers.HasProperty, Identifiers.AcknowledgeableConditionType_AckedState_TransitionTime.expanded(), true));
        node.addReference(new Reference(Identifiers.AcknowledgeableConditionType_AckedState, Identifiers.HasTrueSubState, Identifiers.AcknowledgeableConditionType_EnabledState.expanded(), false));
        node.addReference(new Reference(Identifiers.AcknowledgeableConditionType_AckedState, Identifiers.HasTypeDefinition, Identifiers.TwoStateVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.AcknowledgeableConditionType_AckedState, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.AcknowledgeableConditionType_AckedState, Identifiers.HasComponent, Identifiers.AcknowledgeableConditionType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode287() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.AcknowledgeableConditionType_AckedState_Id, new QualifiedName(0, "Id"), new LocalizedText("en", "Id"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Boolean, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.AcknowledgeableConditionType_AckedState_Id, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.AcknowledgeableConditionType_AckedState_Id, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.AcknowledgeableConditionType_AckedState_Id, Identifiers.HasProperty, Identifiers.AcknowledgeableConditionType_AckedState.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode288() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.AcknowledgeableConditionType_AckedState_TransitionTime, new QualifiedName(0, "TransitionTime"), new LocalizedText("en", "TransitionTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UtcTime, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.AcknowledgeableConditionType_AckedState_TransitionTime, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.AcknowledgeableConditionType_AckedState_TransitionTime, Identifiers.HasModellingRule, Identifiers.ModellingRule_Optional.expanded(), true));
        node.addReference(new Reference(Identifiers.AcknowledgeableConditionType_AckedState_TransitionTime, Identifiers.HasProperty, Identifiers.AcknowledgeableConditionType_AckedState.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode289() {
        TwoStateVariableTypeNode node = new TwoStateVariableTypeNode(this.context, Identifiers.AcknowledgeableConditionType_ConfirmedState, new QualifiedName(0, "ConfirmedState"), new LocalizedText("en", "ConfirmedState"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.LocalizedText, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.AcknowledgeableConditionType_ConfirmedState, Identifiers.HasProperty, Identifiers.AcknowledgeableConditionType_ConfirmedState_Id.expanded(), true));
        node.addReference(new Reference(Identifiers.AcknowledgeableConditionType_ConfirmedState, Identifiers.HasProperty, Identifiers.AcknowledgeableConditionType_ConfirmedState_TransitionTime.expanded(), true));
        node.addReference(new Reference(Identifiers.AcknowledgeableConditionType_ConfirmedState, Identifiers.HasTrueSubState, Identifiers.AcknowledgeableConditionType_EnabledState.expanded(), false));
        node.addReference(new Reference(Identifiers.AcknowledgeableConditionType_ConfirmedState, Identifiers.HasTypeDefinition, Identifiers.TwoStateVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.AcknowledgeableConditionType_ConfirmedState, Identifiers.HasModellingRule, Identifiers.ModellingRule_Optional.expanded(), true));
        node.addReference(new Reference(Identifiers.AcknowledgeableConditionType_ConfirmedState, Identifiers.HasComponent, Identifiers.AcknowledgeableConditionType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode290() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.AcknowledgeableConditionType_ConfirmedState_Id, new QualifiedName(0, "Id"), new LocalizedText("en", "Id"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Boolean, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.AcknowledgeableConditionType_ConfirmedState_Id, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.AcknowledgeableConditionType_ConfirmedState_Id, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.AcknowledgeableConditionType_ConfirmedState_Id, Identifiers.HasProperty, Identifiers.AcknowledgeableConditionType_ConfirmedState.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode291() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.AcknowledgeableConditionType_ConfirmedState_TransitionTime, new QualifiedName(0, "TransitionTime"), new LocalizedText("en", "TransitionTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UtcTime, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.AcknowledgeableConditionType_ConfirmedState_TransitionTime, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.AcknowledgeableConditionType_ConfirmedState_TransitionTime, Identifiers.HasModellingRule, Identifiers.ModellingRule_Optional.expanded(), true));
        node.addReference(new Reference(Identifiers.AcknowledgeableConditionType_ConfirmedState_TransitionTime, Identifiers.HasProperty, Identifiers.AcknowledgeableConditionType_ConfirmedState.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode292() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.AcknowledgeableConditionType_Acknowledge_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.AcknowledgeableConditionType_Acknowledge_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.AcknowledgeableConditionType_Acknowledge_InputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.AcknowledgeableConditionType_Acknowledge_InputArguments, Identifiers.HasProperty, Identifiers.AcknowledgeableConditionType_Acknowledge.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>EventId</Name><DataType><Identifier>i=15</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description><Locale>                </Locale><Text>The identifier for the event to comment.</Text>              </Description>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Comment</Name><DataType><Identifier>i=21</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description><Locale>                </Locale><Text>The comment to add to the condition.</Text>              </Description>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode293() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.AcknowledgeableConditionType_Confirm_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.AcknowledgeableConditionType_Confirm_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.AcknowledgeableConditionType_Confirm_InputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.AcknowledgeableConditionType_Confirm_InputArguments, Identifiers.HasProperty, Identifiers.AcknowledgeableConditionType_Confirm.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>EventId</Name><DataType><Identifier>i=15</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description><Locale>                </Locale><Text>The identifier for the event to comment.</Text>              </Description>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Comment</Name><DataType><Identifier>i=21</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description><Locale>                </Locale><Text>The comment to add to the condition.</Text>              </Description>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode294() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ShelvedStateMachineType_UnshelveTime, new QualifiedName(0, "UnshelveTime"), new LocalizedText("en", "UnshelveTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Duration, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ShelvedStateMachineType_UnshelveTime, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ShelvedStateMachineType_UnshelveTime, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ShelvedStateMachineType_UnshelveTime, Identifiers.HasProperty, Identifiers.ShelvedStateMachineType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode295() {
        TwoStateVariableTypeNode node = new TwoStateVariableTypeNode(this.context, Identifiers.AlarmConditionType_EnabledState, new QualifiedName(0, "EnabledState"), new LocalizedText("en", "EnabledState"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.LocalizedText, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.AlarmConditionType_EnabledState, Identifiers.HasProperty, Identifiers.AlarmConditionType_EnabledState_Id.expanded(), true));
        node.addReference(new Reference(Identifiers.AlarmConditionType_EnabledState, Identifiers.HasTrueSubState, Identifiers.AlarmConditionType_ActiveState.expanded(), true));
        node.addReference(new Reference(Identifiers.AlarmConditionType_EnabledState, Identifiers.HasTrueSubState, Identifiers.AlarmConditionType_SuppressedState.expanded(), true));
        node.addReference(new Reference(Identifiers.AlarmConditionType_EnabledState, Identifiers.HasTrueSubState, Identifiers.AlarmConditionType_ShelvingState.expanded(), true));
        node.addReference(new Reference(Identifiers.AlarmConditionType_EnabledState, Identifiers.HasTypeDefinition, Identifiers.TwoStateVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.AlarmConditionType_EnabledState, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.AlarmConditionType_EnabledState, Identifiers.HasComponent, Identifiers.AlarmConditionType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode296() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.AlarmConditionType_EnabledState_Id, new QualifiedName(0, "Id"), new LocalizedText("en", "Id"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Boolean, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.AlarmConditionType_EnabledState_Id, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.AlarmConditionType_EnabledState_Id, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.AlarmConditionType_EnabledState_Id, Identifiers.HasProperty, Identifiers.AlarmConditionType_EnabledState.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode297() {
        TwoStateVariableTypeNode node = new TwoStateVariableTypeNode(this.context, Identifiers.AlarmConditionType_ActiveState, new QualifiedName(0, "ActiveState"), new LocalizedText("en", "ActiveState"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.LocalizedText, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.AlarmConditionType_ActiveState, Identifiers.HasProperty, Identifiers.AlarmConditionType_ActiveState_Id.expanded(), true));
        node.addReference(new Reference(Identifiers.AlarmConditionType_ActiveState, Identifiers.HasProperty, Identifiers.AlarmConditionType_ActiveState_EffectiveDisplayName.expanded(), true));
        node.addReference(new Reference(Identifiers.AlarmConditionType_ActiveState, Identifiers.HasProperty, Identifiers.AlarmConditionType_ActiveState_TransitionTime.expanded(), true));
        node.addReference(new Reference(Identifiers.AlarmConditionType_ActiveState, Identifiers.HasProperty, Identifiers.AlarmConditionType_ActiveState_EffectiveTransitionTime.expanded(), true));
        node.addReference(new Reference(Identifiers.AlarmConditionType_ActiveState, Identifiers.HasTrueSubState, Identifiers.AlarmConditionType_EnabledState.expanded(), false));
        node.addReference(new Reference(Identifiers.AlarmConditionType_ActiveState, Identifiers.HasTypeDefinition, Identifiers.TwoStateVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.AlarmConditionType_ActiveState, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.AlarmConditionType_ActiveState, Identifiers.HasComponent, Identifiers.AlarmConditionType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode298() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.AlarmConditionType_ActiveState_Id, new QualifiedName(0, "Id"), new LocalizedText("en", "Id"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Boolean, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.AlarmConditionType_ActiveState_Id, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.AlarmConditionType_ActiveState_Id, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.AlarmConditionType_ActiveState_Id, Identifiers.HasProperty, Identifiers.AlarmConditionType_ActiveState.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode299() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.AlarmConditionType_ActiveState_EffectiveDisplayName, new QualifiedName(0, "EffectiveDisplayName"), new LocalizedText("en", "EffectiveDisplayName"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.LocalizedText, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.AlarmConditionType_ActiveState_EffectiveDisplayName, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.AlarmConditionType_ActiveState_EffectiveDisplayName, Identifiers.HasModellingRule, Identifiers.ModellingRule_Optional.expanded(), true));
        node.addReference(new Reference(Identifiers.AlarmConditionType_ActiveState_EffectiveDisplayName, Identifiers.HasProperty, Identifiers.AlarmConditionType_ActiveState.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode300() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.AlarmConditionType_ActiveState_TransitionTime, new QualifiedName(0, "TransitionTime"), new LocalizedText("en", "TransitionTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UtcTime, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.AlarmConditionType_ActiveState_TransitionTime, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.AlarmConditionType_ActiveState_TransitionTime, Identifiers.HasModellingRule, Identifiers.ModellingRule_Optional.expanded(), true));
        node.addReference(new Reference(Identifiers.AlarmConditionType_ActiveState_TransitionTime, Identifiers.HasProperty, Identifiers.AlarmConditionType_ActiveState.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode301() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.AlarmConditionType_ActiveState_EffectiveTransitionTime, new QualifiedName(0, "EffectiveTransitionTime"), new LocalizedText("en", "EffectiveTransitionTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UtcTime, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.AlarmConditionType_ActiveState_EffectiveTransitionTime, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.AlarmConditionType_ActiveState_EffectiveTransitionTime, Identifiers.HasModellingRule, Identifiers.ModellingRule_Optional.expanded(), true));
        node.addReference(new Reference(Identifiers.AlarmConditionType_ActiveState_EffectiveTransitionTime, Identifiers.HasProperty, Identifiers.AlarmConditionType_ActiveState.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode302() {
        TwoStateVariableTypeNode node = new TwoStateVariableTypeNode(this.context, Identifiers.AlarmConditionType_SuppressedState, new QualifiedName(0, "SuppressedState"), new LocalizedText("en", "SuppressedState"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.LocalizedText, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.AlarmConditionType_SuppressedState, Identifiers.HasProperty, Identifiers.AlarmConditionType_SuppressedState_Id.expanded(), true));
        node.addReference(new Reference(Identifiers.AlarmConditionType_SuppressedState, Identifiers.HasProperty, Identifiers.AlarmConditionType_SuppressedState_TransitionTime.expanded(), true));
        node.addReference(new Reference(Identifiers.AlarmConditionType_SuppressedState, Identifiers.HasTrueSubState, Identifiers.AlarmConditionType_EnabledState.expanded(), false));
        node.addReference(new Reference(Identifiers.AlarmConditionType_SuppressedState, Identifiers.HasTypeDefinition, Identifiers.TwoStateVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.AlarmConditionType_SuppressedState, Identifiers.HasModellingRule, Identifiers.ModellingRule_Optional.expanded(), true));
        node.addReference(new Reference(Identifiers.AlarmConditionType_SuppressedState, Identifiers.HasComponent, Identifiers.AlarmConditionType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode303() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.AlarmConditionType_SuppressedState_Id, new QualifiedName(0, "Id"), new LocalizedText("en", "Id"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Boolean, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.AlarmConditionType_SuppressedState_Id, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.AlarmConditionType_SuppressedState_Id, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.AlarmConditionType_SuppressedState_Id, Identifiers.HasProperty, Identifiers.AlarmConditionType_SuppressedState.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode304() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.AlarmConditionType_SuppressedState_TransitionTime, new QualifiedName(0, "TransitionTime"), new LocalizedText("en", "TransitionTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UtcTime, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.AlarmConditionType_SuppressedState_TransitionTime, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.AlarmConditionType_SuppressedState_TransitionTime, Identifiers.HasModellingRule, Identifiers.ModellingRule_Optional.expanded(), true));
        node.addReference(new Reference(Identifiers.AlarmConditionType_SuppressedState_TransitionTime, Identifiers.HasProperty, Identifiers.AlarmConditionType_SuppressedState.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode305() {
        FiniteStateVariableTypeNode node = new FiniteStateVariableTypeNode(this.context, Identifiers.AlarmConditionType_ShelvingState_CurrentState, new QualifiedName(0, "CurrentState"), new LocalizedText("en", "CurrentState"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.LocalizedText, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.AlarmConditionType_ShelvingState_CurrentState, Identifiers.HasProperty, Identifiers.AlarmConditionType_ShelvingState_CurrentState_Id.expanded(), true));
        node.addReference(new Reference(Identifiers.AlarmConditionType_ShelvingState_CurrentState, Identifiers.HasTypeDefinition, Identifiers.FiniteStateVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.AlarmConditionType_ShelvingState_CurrentState, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.AlarmConditionType_ShelvingState_CurrentState, Identifiers.HasComponent, Identifiers.AlarmConditionType_ShelvingState.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode306() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.AlarmConditionType_ShelvingState_CurrentState_Id, new QualifiedName(0, "Id"), new LocalizedText("en", "Id"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.NodeId, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.AlarmConditionType_ShelvingState_CurrentState_Id, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.AlarmConditionType_ShelvingState_CurrentState_Id, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.AlarmConditionType_ShelvingState_CurrentState_Id, Identifiers.HasProperty, Identifiers.AlarmConditionType_ShelvingState_CurrentState.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode307() {
        FiniteTransitionVariableTypeNode node = new FiniteTransitionVariableTypeNode(this.context, Identifiers.AlarmConditionType_ShelvingState_LastTransition, new QualifiedName(0, "LastTransition"), new LocalizedText("en", "LastTransition"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.LocalizedText, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.AlarmConditionType_ShelvingState_LastTransition, Identifiers.HasProperty, Identifiers.AlarmConditionType_ShelvingState_LastTransition_Id.expanded(), true));
        node.addReference(new Reference(Identifiers.AlarmConditionType_ShelvingState_LastTransition, Identifiers.HasProperty, Identifiers.AlarmConditionType_ShelvingState_LastTransition_TransitionTime.expanded(), true));
        node.addReference(new Reference(Identifiers.AlarmConditionType_ShelvingState_LastTransition, Identifiers.HasTypeDefinition, Identifiers.FiniteTransitionVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.AlarmConditionType_ShelvingState_LastTransition, Identifiers.HasModellingRule, Identifiers.ModellingRule_Optional.expanded(), true));
        node.addReference(new Reference(Identifiers.AlarmConditionType_ShelvingState_LastTransition, Identifiers.HasComponent, Identifiers.AlarmConditionType_ShelvingState.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode308() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.AlarmConditionType_ShelvingState_LastTransition_Id, new QualifiedName(0, "Id"), new LocalizedText("en", "Id"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.NodeId, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.AlarmConditionType_ShelvingState_LastTransition_Id, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.AlarmConditionType_ShelvingState_LastTransition_Id, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.AlarmConditionType_ShelvingState_LastTransition_Id, Identifiers.HasProperty, Identifiers.AlarmConditionType_ShelvingState_LastTransition.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode309() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.AlarmConditionType_ShelvingState_LastTransition_TransitionTime, new QualifiedName(0, "TransitionTime"), new LocalizedText("en", "TransitionTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UtcTime, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.AlarmConditionType_ShelvingState_LastTransition_TransitionTime, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.AlarmConditionType_ShelvingState_LastTransition_TransitionTime, Identifiers.HasModellingRule, Identifiers.ModellingRule_Optional.expanded(), true));
        node.addReference(new Reference(Identifiers.AlarmConditionType_ShelvingState_LastTransition_TransitionTime, Identifiers.HasProperty, Identifiers.AlarmConditionType_ShelvingState_LastTransition.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode310() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.AlarmConditionType_ShelvingState_UnshelveTime, new QualifiedName(0, "UnshelveTime"), new LocalizedText("en", "UnshelveTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Duration, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.AlarmConditionType_ShelvingState_UnshelveTime, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.AlarmConditionType_ShelvingState_UnshelveTime, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.AlarmConditionType_ShelvingState_UnshelveTime, Identifiers.HasProperty, Identifiers.AlarmConditionType_ShelvingState.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode311() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.AlarmConditionType_ShelvingState_TimedShelve_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.AlarmConditionType_ShelvingState_TimedShelve_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.AlarmConditionType_ShelvingState_TimedShelve_InputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.AlarmConditionType_ShelvingState_TimedShelve_InputArguments, Identifiers.HasProperty, Identifiers.AlarmConditionType_ShelvingState_TimedShelve.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>ShelvingTime</Name><DataType><Identifier>i=290</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description><Locale>                </Locale><Text>If not 0, this parameter specifies a fixed time for which the Alarm is to be shelved.</Text>              </Description>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode312() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.AlarmConditionType_SuppressedOrShelved, new QualifiedName(0, "SuppressedOrShelved"), new LocalizedText("en", "SuppressedOrShelved"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Boolean, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.AlarmConditionType_SuppressedOrShelved, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.AlarmConditionType_SuppressedOrShelved, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.AlarmConditionType_SuppressedOrShelved, Identifiers.HasProperty, Identifiers.AlarmConditionType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode313() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.AlarmConditionType_MaxTimeShelved, new QualifiedName(0, "MaxTimeShelved"), new LocalizedText("en", "MaxTimeShelved"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Duration, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.AlarmConditionType_MaxTimeShelved, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.AlarmConditionType_MaxTimeShelved, Identifiers.HasModellingRule, Identifiers.ModellingRule_Optional.expanded(), true));
        node.addReference(new Reference(Identifiers.AlarmConditionType_MaxTimeShelved, Identifiers.HasProperty, Identifiers.AlarmConditionType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode314() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.CertificateExpirationAlarmType_ExpirationDate, new QualifiedName(0, "ExpirationDate"), new LocalizedText("en", "ExpirationDate"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.DateTime, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.CertificateExpirationAlarmType_ExpirationDate, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateExpirationAlarmType_ExpirationDate, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateExpirationAlarmType_ExpirationDate, Identifiers.HasProperty, Identifiers.CertificateExpirationAlarmType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode315() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.CertificateExpirationAlarmType_CertificateType, new QualifiedName(0, "CertificateType"), new LocalizedText("en", "CertificateType"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.NodeId, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.CertificateExpirationAlarmType_CertificateType, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateExpirationAlarmType_CertificateType, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateExpirationAlarmType_CertificateType, Identifiers.HasProperty, Identifiers.CertificateExpirationAlarmType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode316() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.CertificateExpirationAlarmType_Certificate, new QualifiedName(0, "Certificate"), new LocalizedText("en", "Certificate"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ByteString, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.CertificateExpirationAlarmType_Certificate, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateExpirationAlarmType_Certificate, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateExpirationAlarmType_Certificate, Identifiers.HasProperty, Identifiers.CertificateExpirationAlarmType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode317() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.FileType_MimeType, new QualifiedName(0, "MimeType"), new LocalizedText("en", "MimeType"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.FileType_MimeType, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.FileType_MimeType, Identifiers.HasModellingRule, Identifiers.ModellingRule_Optional.expanded(), true));
        node.addReference(new Reference(Identifiers.FileType_MimeType, Identifiers.HasProperty, Identifiers.FileType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode318() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.FileDirectoryType_FileDirectoryName_Placeholder_CreateDirectory_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.FileDirectoryType_FileDirectoryName_Placeholder_CreateDirectory_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.FileDirectoryType_FileDirectoryName_Placeholder_CreateDirectory_InputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.FileDirectoryType_FileDirectoryName_Placeholder_CreateDirectory_InputArguments, Identifiers.HasProperty, Identifiers.FileDirectoryType_FileDirectoryName_Placeholder_CreateDirectory.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>DirectoryName</Name><DataType><Identifier>i=12</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode319() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.FileDirectoryType_FileDirectoryName_Placeholder_CreateDirectory_OutputArguments, new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.FileDirectoryType_FileDirectoryName_Placeholder_CreateDirectory_OutputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.FileDirectoryType_FileDirectoryName_Placeholder_CreateDirectory_OutputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.FileDirectoryType_FileDirectoryName_Placeholder_CreateDirectory_OutputArguments, Identifiers.HasProperty, Identifiers.FileDirectoryType_FileDirectoryName_Placeholder_CreateDirectory.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>DirectoryNodeId</Name><DataType><Identifier>i=17</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode320() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.FileDirectoryType_FileDirectoryName_Placeholder_CreateFile_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.FileDirectoryType_FileDirectoryName_Placeholder_CreateFile_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.FileDirectoryType_FileDirectoryName_Placeholder_CreateFile_InputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.FileDirectoryType_FileDirectoryName_Placeholder_CreateFile_InputArguments, Identifiers.HasProperty, Identifiers.FileDirectoryType_FileDirectoryName_Placeholder_CreateFile.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileName</Name><DataType><Identifier>i=12</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>RequestFileOpen</Name><DataType><Identifier>i=1</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode321() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.FileDirectoryType_FileDirectoryName_Placeholder_CreateFile_OutputArguments, new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.FileDirectoryType_FileDirectoryName_Placeholder_CreateFile_OutputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.FileDirectoryType_FileDirectoryName_Placeholder_CreateFile_OutputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.FileDirectoryType_FileDirectoryName_Placeholder_CreateFile_OutputArguments, Identifiers.HasProperty, Identifiers.FileDirectoryType_FileDirectoryName_Placeholder_CreateFile.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileNodeId</Name><DataType><Identifier>i=17</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode322() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.FileDirectoryType_FileDirectoryName_Placeholder_Delete_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.FileDirectoryType_FileDirectoryName_Placeholder_Delete_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.FileDirectoryType_FileDirectoryName_Placeholder_Delete_InputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.FileDirectoryType_FileDirectoryName_Placeholder_Delete_InputArguments, Identifiers.HasProperty, Identifiers.FileDirectoryType_FileDirectoryName_Placeholder_Delete.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>ObjectToDelete</Name><DataType><Identifier>i=17</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode323() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.FileDirectoryType_FileDirectoryName_Placeholder_MoveOrCopy_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.FileDirectoryType_FileDirectoryName_Placeholder_MoveOrCopy_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.FileDirectoryType_FileDirectoryName_Placeholder_MoveOrCopy_InputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.FileDirectoryType_FileDirectoryName_Placeholder_MoveOrCopy_InputArguments, Identifiers.HasProperty, Identifiers.FileDirectoryType_FileDirectoryName_Placeholder_MoveOrCopy.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>ObjectToMoveOrCopy</Name><DataType><Identifier>i=17</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>TargetDirectory</Name><DataType><Identifier>i=17</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>CreateCopy</Name><DataType><Identifier>i=1</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>NewName</Name><DataType><Identifier>i=12</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode324() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.FileDirectoryType_FileDirectoryName_Placeholder_MoveOrCopy_OutputArguments, new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.FileDirectoryType_FileDirectoryName_Placeholder_MoveOrCopy_OutputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.FileDirectoryType_FileDirectoryName_Placeholder_MoveOrCopy_OutputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.FileDirectoryType_FileDirectoryName_Placeholder_MoveOrCopy_OutputArguments, Identifiers.HasProperty, Identifiers.FileDirectoryType_FileDirectoryName_Placeholder_MoveOrCopy.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>NewNodeId</Name><DataType><Identifier>i=17</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode325() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.FileDirectoryType_FileName_Placeholder_Size, new QualifiedName(0, "Size"), new LocalizedText("en", "Size"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt64, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.FileDirectoryType_FileName_Placeholder_Size, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.FileDirectoryType_FileName_Placeholder_Size, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.FileDirectoryType_FileName_Placeholder_Size, Identifiers.HasProperty, Identifiers.FileDirectoryType_FileName_Placeholder.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode326() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.FileDirectoryType_FileName_Placeholder_Writable, new QualifiedName(0, "Writable"), new LocalizedText("en", "Writable"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Boolean, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.FileDirectoryType_FileName_Placeholder_Writable, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.FileDirectoryType_FileName_Placeholder_Writable, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.FileDirectoryType_FileName_Placeholder_Writable, Identifiers.HasProperty, Identifiers.FileDirectoryType_FileName_Placeholder.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode327() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.FileDirectoryType_FileName_Placeholder_UserWritable, new QualifiedName(0, "UserWritable"), new LocalizedText("en", "UserWritable"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Boolean, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.FileDirectoryType_FileName_Placeholder_UserWritable, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.FileDirectoryType_FileName_Placeholder_UserWritable, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.FileDirectoryType_FileName_Placeholder_UserWritable, Identifiers.HasProperty, Identifiers.FileDirectoryType_FileName_Placeholder.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode328() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.FileDirectoryType_FileName_Placeholder_OpenCount, new QualifiedName(0, "OpenCount"), new LocalizedText("en", "OpenCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt16, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.FileDirectoryType_FileName_Placeholder_OpenCount, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.FileDirectoryType_FileName_Placeholder_OpenCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.FileDirectoryType_FileName_Placeholder_OpenCount, Identifiers.HasProperty, Identifiers.FileDirectoryType_FileName_Placeholder.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode329() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.FileDirectoryType_FileName_Placeholder_Open_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.FileDirectoryType_FileName_Placeholder_Open_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.FileDirectoryType_FileName_Placeholder_Open_InputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.FileDirectoryType_FileName_Placeholder_Open_InputArguments, Identifiers.HasProperty, Identifiers.FileDirectoryType_FileName_Placeholder_Open.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Mode</Name><DataType><Identifier>i=3</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode330() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.FileDirectoryType_FileName_Placeholder_Open_OutputArguments, new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.FileDirectoryType_FileName_Placeholder_Open_OutputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.FileDirectoryType_FileName_Placeholder_Open_OutputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.FileDirectoryType_FileName_Placeholder_Open_OutputArguments, Identifiers.HasProperty, Identifiers.FileDirectoryType_FileName_Placeholder_Open.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode331() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.FileDirectoryType_FileName_Placeholder_Close_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.FileDirectoryType_FileName_Placeholder_Close_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.FileDirectoryType_FileName_Placeholder_Close_InputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.FileDirectoryType_FileName_Placeholder_Close_InputArguments, Identifiers.HasProperty, Identifiers.FileDirectoryType_FileName_Placeholder_Close.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode332() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.FileDirectoryType_FileName_Placeholder_Read_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.FileDirectoryType_FileName_Placeholder_Read_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.FileDirectoryType_FileName_Placeholder_Read_InputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.FileDirectoryType_FileName_Placeholder_Read_InputArguments, Identifiers.HasProperty, Identifiers.FileDirectoryType_FileName_Placeholder_Read.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Length</Name><DataType><Identifier>i=6</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode333() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.FileDirectoryType_FileName_Placeholder_Read_OutputArguments, new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.FileDirectoryType_FileName_Placeholder_Read_OutputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.FileDirectoryType_FileName_Placeholder_Read_OutputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.FileDirectoryType_FileName_Placeholder_Read_OutputArguments, Identifiers.HasProperty, Identifiers.FileDirectoryType_FileName_Placeholder_Read.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Data</Name><DataType><Identifier>i=15</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode334() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.FileDirectoryType_FileName_Placeholder_Write_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.FileDirectoryType_FileName_Placeholder_Write_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.FileDirectoryType_FileName_Placeholder_Write_InputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.FileDirectoryType_FileName_Placeholder_Write_InputArguments, Identifiers.HasProperty, Identifiers.FileDirectoryType_FileName_Placeholder_Write.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Data</Name><DataType><Identifier>i=15</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode335() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.FileDirectoryType_FileName_Placeholder_GetPosition_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.FileDirectoryType_FileName_Placeholder_GetPosition_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.FileDirectoryType_FileName_Placeholder_GetPosition_InputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.FileDirectoryType_FileName_Placeholder_GetPosition_InputArguments, Identifiers.HasProperty, Identifiers.FileDirectoryType_FileName_Placeholder_GetPosition.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode336() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.FileDirectoryType_FileName_Placeholder_GetPosition_OutputArguments, new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.FileDirectoryType_FileName_Placeholder_GetPosition_OutputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.FileDirectoryType_FileName_Placeholder_GetPosition_OutputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.FileDirectoryType_FileName_Placeholder_GetPosition_OutputArguments, Identifiers.HasProperty, Identifiers.FileDirectoryType_FileName_Placeholder_GetPosition.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Position</Name><DataType><Identifier>i=9</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode337() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.FileDirectoryType_FileName_Placeholder_SetPosition_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.FileDirectoryType_FileName_Placeholder_SetPosition_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.FileDirectoryType_FileName_Placeholder_SetPosition_InputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.FileDirectoryType_FileName_Placeholder_SetPosition_InputArguments, Identifiers.HasProperty, Identifiers.FileDirectoryType_FileName_Placeholder_SetPosition.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Position</Name><DataType><Identifier>i=9</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode338() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.FileDirectoryType_CreateDirectory_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.FileDirectoryType_CreateDirectory_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.FileDirectoryType_CreateDirectory_InputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.FileDirectoryType_CreateDirectory_InputArguments, Identifiers.HasProperty, Identifiers.FileDirectoryType_CreateDirectory.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>DirectoryName</Name><DataType><Identifier>i=12</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode339() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.FileDirectoryType_CreateDirectory_OutputArguments, new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.FileDirectoryType_CreateDirectory_OutputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.FileDirectoryType_CreateDirectory_OutputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.FileDirectoryType_CreateDirectory_OutputArguments, Identifiers.HasProperty, Identifiers.FileDirectoryType_CreateDirectory.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>DirectoryNodeId</Name><DataType><Identifier>i=17</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode340() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.FileDirectoryType_CreateFile_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.FileDirectoryType_CreateFile_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.FileDirectoryType_CreateFile_InputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.FileDirectoryType_CreateFile_InputArguments, Identifiers.HasProperty, Identifiers.FileDirectoryType_CreateFile.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileName</Name><DataType><Identifier>i=12</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>RequestFileOpen</Name><DataType><Identifier>i=1</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode341() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.FileDirectoryType_CreateFile_OutputArguments, new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.FileDirectoryType_CreateFile_OutputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.FileDirectoryType_CreateFile_OutputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.FileDirectoryType_CreateFile_OutputArguments, Identifiers.HasProperty, Identifiers.FileDirectoryType_CreateFile.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileNodeId</Name><DataType><Identifier>i=17</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode342() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.FileDirectoryType_Delete_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.FileDirectoryType_Delete_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.FileDirectoryType_Delete_InputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.FileDirectoryType_Delete_InputArguments, Identifiers.HasProperty, Identifiers.FileDirectoryType_Delete.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>ObjectToDelete</Name><DataType><Identifier>i=17</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode343() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.FileDirectoryType_MoveOrCopy_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.FileDirectoryType_MoveOrCopy_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.FileDirectoryType_MoveOrCopy_InputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.FileDirectoryType_MoveOrCopy_InputArguments, Identifiers.HasProperty, Identifiers.FileDirectoryType_MoveOrCopy.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>ObjectToMoveOrCopy</Name><DataType><Identifier>i=17</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>TargetDirectory</Name><DataType><Identifier>i=17</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>CreateCopy</Name><DataType><Identifier>i=1</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>NewName</Name><DataType><Identifier>i=12</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode344() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.FileDirectoryType_MoveOrCopy_OutputArguments, new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.FileDirectoryType_MoveOrCopy_OutputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.FileDirectoryType_MoveOrCopy_OutputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.FileDirectoryType_MoveOrCopy_OutputArguments, Identifiers.HasProperty, Identifiers.FileDirectoryType_MoveOrCopy.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>NewNodeId</Name><DataType><Identifier>i=17</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode345() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ExclusiveLimitStateMachineType_HighHigh_StateNumber, new QualifiedName(0, "StateNumber"), new LocalizedText("en", "StateNumber"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ExclusiveLimitStateMachineType_HighHigh_StateNumber, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ExclusiveLimitStateMachineType_HighHigh_StateNumber, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ExclusiveLimitStateMachineType_HighHigh_StateNumber, Identifiers.HasProperty, Identifiers.ExclusiveLimitStateMachineType_HighHigh.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode346() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ExclusiveLimitStateMachineType_High_StateNumber, new QualifiedName(0, "StateNumber"), new LocalizedText("en", "StateNumber"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ExclusiveLimitStateMachineType_High_StateNumber, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ExclusiveLimitStateMachineType_High_StateNumber, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ExclusiveLimitStateMachineType_High_StateNumber, Identifiers.HasProperty, Identifiers.ExclusiveLimitStateMachineType_High.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode347() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ExclusiveLimitStateMachineType_Low_StateNumber, new QualifiedName(0, "StateNumber"), new LocalizedText("en", "StateNumber"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ExclusiveLimitStateMachineType_Low_StateNumber, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ExclusiveLimitStateMachineType_Low_StateNumber, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ExclusiveLimitStateMachineType_Low_StateNumber, Identifiers.HasProperty, Identifiers.ExclusiveLimitStateMachineType_Low.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode348() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ExclusiveLimitStateMachineType_LowLow_StateNumber, new QualifiedName(0, "StateNumber"), new LocalizedText("en", "StateNumber"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ExclusiveLimitStateMachineType_LowLow_StateNumber, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ExclusiveLimitStateMachineType_LowLow_StateNumber, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ExclusiveLimitStateMachineType_LowLow_StateNumber, Identifiers.HasProperty, Identifiers.ExclusiveLimitStateMachineType_LowLow.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode349() {
        TwoStateVariableTypeNode node = new TwoStateVariableTypeNode(this.context, Identifiers.ExclusiveLimitAlarmType_ActiveState, new QualifiedName(0, "ActiveState"), new LocalizedText("en", "ActiveState"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.LocalizedText, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ExclusiveLimitAlarmType_ActiveState, Identifiers.HasProperty, Identifiers.ExclusiveLimitAlarmType_ActiveState_Id.expanded(), true));
        node.addReference(new Reference(Identifiers.ExclusiveLimitAlarmType_ActiveState, Identifiers.HasTrueSubState, Identifiers.ExclusiveLimitAlarmType_LimitState.expanded(), true));
        node.addReference(new Reference(Identifiers.ExclusiveLimitAlarmType_ActiveState, Identifiers.HasTypeDefinition, Identifiers.TwoStateVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.ExclusiveLimitAlarmType_ActiveState, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ExclusiveLimitAlarmType_ActiveState, Identifiers.HasComponent, Identifiers.ExclusiveLimitAlarmType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode350() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ExclusiveLimitAlarmType_ActiveState_Id, new QualifiedName(0, "Id"), new LocalizedText("en", "Id"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Boolean, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ExclusiveLimitAlarmType_ActiveState_Id, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ExclusiveLimitAlarmType_ActiveState_Id, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ExclusiveLimitAlarmType_ActiveState_Id, Identifiers.HasProperty, Identifiers.ExclusiveLimitAlarmType_ActiveState.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode351() {
        FiniteStateVariableTypeNode node = new FiniteStateVariableTypeNode(this.context, Identifiers.ExclusiveLimitAlarmType_LimitState_CurrentState, new QualifiedName(0, "CurrentState"), new LocalizedText("en", "CurrentState"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.LocalizedText, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ExclusiveLimitAlarmType_LimitState_CurrentState, Identifiers.HasProperty, Identifiers.ExclusiveLimitAlarmType_LimitState_CurrentState_Id.expanded(), true));
        node.addReference(new Reference(Identifiers.ExclusiveLimitAlarmType_LimitState_CurrentState, Identifiers.HasTypeDefinition, Identifiers.FiniteStateVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.ExclusiveLimitAlarmType_LimitState_CurrentState, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ExclusiveLimitAlarmType_LimitState_CurrentState, Identifiers.HasComponent, Identifiers.ExclusiveLimitAlarmType_LimitState.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode352() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ExclusiveLimitAlarmType_LimitState_CurrentState_Id, new QualifiedName(0, "Id"), new LocalizedText("en", "Id"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.NodeId, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ExclusiveLimitAlarmType_LimitState_CurrentState_Id, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ExclusiveLimitAlarmType_LimitState_CurrentState_Id, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ExclusiveLimitAlarmType_LimitState_CurrentState_Id, Identifiers.HasProperty, Identifiers.ExclusiveLimitAlarmType_LimitState_CurrentState.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode353() {
        FiniteTransitionVariableTypeNode node = new FiniteTransitionVariableTypeNode(this.context, Identifiers.ExclusiveLimitAlarmType_LimitState_LastTransition, new QualifiedName(0, "LastTransition"), new LocalizedText("en", "LastTransition"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.LocalizedText, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ExclusiveLimitAlarmType_LimitState_LastTransition, Identifiers.HasProperty, Identifiers.ExclusiveLimitAlarmType_LimitState_LastTransition_Id.expanded(), true));
        node.addReference(new Reference(Identifiers.ExclusiveLimitAlarmType_LimitState_LastTransition, Identifiers.HasProperty, Identifiers.ExclusiveLimitAlarmType_LimitState_LastTransition_TransitionTime.expanded(), true));
        node.addReference(new Reference(Identifiers.ExclusiveLimitAlarmType_LimitState_LastTransition, Identifiers.HasTypeDefinition, Identifiers.FiniteTransitionVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.ExclusiveLimitAlarmType_LimitState_LastTransition, Identifiers.HasModellingRule, Identifiers.ModellingRule_Optional.expanded(), true));
        node.addReference(new Reference(Identifiers.ExclusiveLimitAlarmType_LimitState_LastTransition, Identifiers.HasComponent, Identifiers.ExclusiveLimitAlarmType_LimitState.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode354() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ExclusiveLimitAlarmType_LimitState_LastTransition_Id, new QualifiedName(0, "Id"), new LocalizedText("en", "Id"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.NodeId, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ExclusiveLimitAlarmType_LimitState_LastTransition_Id, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ExclusiveLimitAlarmType_LimitState_LastTransition_Id, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ExclusiveLimitAlarmType_LimitState_LastTransition_Id, Identifiers.HasProperty, Identifiers.ExclusiveLimitAlarmType_LimitState_LastTransition.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode355() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ExclusiveLimitAlarmType_LimitState_LastTransition_TransitionTime, new QualifiedName(0, "TransitionTime"), new LocalizedText("en", "TransitionTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UtcTime, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ExclusiveLimitAlarmType_LimitState_LastTransition_TransitionTime, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ExclusiveLimitAlarmType_LimitState_LastTransition_TransitionTime, Identifiers.HasModellingRule, Identifiers.ModellingRule_Optional.expanded(), true));
        node.addReference(new Reference(Identifiers.ExclusiveLimitAlarmType_LimitState_LastTransition_TransitionTime, Identifiers.HasProperty, Identifiers.ExclusiveLimitAlarmType_LimitState_LastTransition.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode356() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.CertificateGroupType_TrustList_Size, new QualifiedName(0, "Size"), new LocalizedText("en", "Size"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt64, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.CertificateGroupType_TrustList_Size, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupType_TrustList_Size, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupType_TrustList_Size, Identifiers.HasProperty, Identifiers.CertificateGroupType_TrustList.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode357() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.CertificateGroupType_TrustList_Writable, new QualifiedName(0, "Writable"), new LocalizedText("en", "Writable"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Boolean, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.CertificateGroupType_TrustList_Writable, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupType_TrustList_Writable, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupType_TrustList_Writable, Identifiers.HasProperty, Identifiers.CertificateGroupType_TrustList.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode358() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.CertificateGroupType_TrustList_UserWritable, new QualifiedName(0, "UserWritable"), new LocalizedText("en", "UserWritable"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Boolean, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.CertificateGroupType_TrustList_UserWritable, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupType_TrustList_UserWritable, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupType_TrustList_UserWritable, Identifiers.HasProperty, Identifiers.CertificateGroupType_TrustList.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode359() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.CertificateGroupType_TrustList_OpenCount, new QualifiedName(0, "OpenCount"), new LocalizedText("en", "OpenCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt16, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.CertificateGroupType_TrustList_OpenCount, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupType_TrustList_OpenCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupType_TrustList_OpenCount, Identifiers.HasProperty, Identifiers.CertificateGroupType_TrustList.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode360() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.CertificateGroupType_TrustList_Open_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.CertificateGroupType_TrustList_Open_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupType_TrustList_Open_InputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupType_TrustList_Open_InputArguments, Identifiers.HasProperty, Identifiers.CertificateGroupType_TrustList_Open.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Mode</Name><DataType><Identifier>i=3</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode361() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.CertificateGroupType_TrustList_Open_OutputArguments, new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.CertificateGroupType_TrustList_Open_OutputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupType_TrustList_Open_OutputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupType_TrustList_Open_OutputArguments, Identifiers.HasProperty, Identifiers.CertificateGroupType_TrustList_Open.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode362() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.CertificateGroupType_TrustList_Close_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.CertificateGroupType_TrustList_Close_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupType_TrustList_Close_InputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupType_TrustList_Close_InputArguments, Identifiers.HasProperty, Identifiers.CertificateGroupType_TrustList_Close.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode363() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.CertificateGroupType_TrustList_Read_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.CertificateGroupType_TrustList_Read_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupType_TrustList_Read_InputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupType_TrustList_Read_InputArguments, Identifiers.HasProperty, Identifiers.CertificateGroupType_TrustList_Read.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Length</Name><DataType><Identifier>i=6</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode364() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.CertificateGroupType_TrustList_Read_OutputArguments, new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.CertificateGroupType_TrustList_Read_OutputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupType_TrustList_Read_OutputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupType_TrustList_Read_OutputArguments, Identifiers.HasProperty, Identifiers.CertificateGroupType_TrustList_Read.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Data</Name><DataType><Identifier>i=15</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode365() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.CertificateGroupType_TrustList_Write_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.CertificateGroupType_TrustList_Write_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupType_TrustList_Write_InputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupType_TrustList_Write_InputArguments, Identifiers.HasProperty, Identifiers.CertificateGroupType_TrustList_Write.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Data</Name><DataType><Identifier>i=15</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode366() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.CertificateGroupType_TrustList_GetPosition_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.CertificateGroupType_TrustList_GetPosition_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupType_TrustList_GetPosition_InputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupType_TrustList_GetPosition_InputArguments, Identifiers.HasProperty, Identifiers.CertificateGroupType_TrustList_GetPosition.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode367() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.CertificateGroupType_TrustList_GetPosition_OutputArguments, new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.CertificateGroupType_TrustList_GetPosition_OutputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupType_TrustList_GetPosition_OutputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupType_TrustList_GetPosition_OutputArguments, Identifiers.HasProperty, Identifiers.CertificateGroupType_TrustList_GetPosition.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Position</Name><DataType><Identifier>i=9</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode368() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.CertificateGroupType_TrustList_SetPosition_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.CertificateGroupType_TrustList_SetPosition_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupType_TrustList_SetPosition_InputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupType_TrustList_SetPosition_InputArguments, Identifiers.HasProperty, Identifiers.CertificateGroupType_TrustList_SetPosition.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Position</Name><DataType><Identifier>i=9</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode369() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.CertificateGroupType_TrustList_LastUpdateTime, new QualifiedName(0, "LastUpdateTime"), new LocalizedText("en", "LastUpdateTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UtcTime, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.CertificateGroupType_TrustList_LastUpdateTime, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupType_TrustList_LastUpdateTime, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupType_TrustList_LastUpdateTime, Identifiers.HasProperty, Identifiers.CertificateGroupType_TrustList.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode370() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.CertificateGroupType_TrustList_OpenWithMasks_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.CertificateGroupType_TrustList_OpenWithMasks_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupType_TrustList_OpenWithMasks_InputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupType_TrustList_OpenWithMasks_InputArguments, Identifiers.HasProperty, Identifiers.CertificateGroupType_TrustList_OpenWithMasks.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Masks</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode371() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.CertificateGroupType_TrustList_OpenWithMasks_OutputArguments, new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.CertificateGroupType_TrustList_OpenWithMasks_OutputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupType_TrustList_OpenWithMasks_OutputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupType_TrustList_OpenWithMasks_OutputArguments, Identifiers.HasProperty, Identifiers.CertificateGroupType_TrustList_OpenWithMasks.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode372() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.CertificateGroupType_CertificateTypes, new QualifiedName(0, "CertificateTypes"), new LocalizedText("en", "CertificateTypes"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.NodeId, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.CertificateGroupType_CertificateTypes, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupType_CertificateTypes, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupType_CertificateTypes, Identifiers.HasProperty, Identifiers.CertificateGroupType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode373() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.CertificateUpdatedAuditEventType_CertificateGroup, new QualifiedName(0, "CertificateGroup"), new LocalizedText("en", "CertificateGroup"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.NodeId, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.CertificateUpdatedAuditEventType_CertificateGroup, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateUpdatedAuditEventType_CertificateGroup, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateUpdatedAuditEventType_CertificateGroup, Identifiers.HasProperty, Identifiers.CertificateUpdatedAuditEventType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode374() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.CertificateUpdatedAuditEventType_CertificateType, new QualifiedName(0, "CertificateType"), new LocalizedText("en", "CertificateType"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.NodeId, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.CertificateUpdatedAuditEventType_CertificateType, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateUpdatedAuditEventType_CertificateType, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateUpdatedAuditEventType_CertificateType, Identifiers.HasProperty, Identifiers.CertificateUpdatedAuditEventType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode375() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerConfiguration_UpdateCertificate_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerConfiguration_UpdateCertificate_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfiguration_UpdateCertificate_InputArguments, Identifiers.HasProperty, Identifiers.ServerConfiguration_UpdateCertificate.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>CertificateGroupId</Name><DataType><Identifier>i=17</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>CertificateTypeId</Name><DataType><Identifier>i=17</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Certificate</Name><DataType><Identifier>i=15</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>IssuerCertificates</Name><DataType><Identifier>i=15</Identifier>              </DataType><ValueRank>1</ValueRank><ArrayDimensions><UInt32>0</UInt32>              </ArrayDimensions>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>PrivateKeyFormat</Name><DataType><Identifier>i=12</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>PrivateKey</Name><DataType><Identifier>i=15</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode376() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerConfiguration_UpdateCertificate_OutputArguments, new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerConfiguration_UpdateCertificate_OutputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfiguration_UpdateCertificate_OutputArguments, Identifiers.HasProperty, Identifiers.ServerConfiguration_UpdateCertificate.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>ApplyChangesRequired</Name><DataType><Identifier>i=1</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode377() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Size, new QualifiedName(0, "Size"), new LocalizedText("en", "Size"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt64, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Size, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Size, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Size, Identifiers.HasProperty, Identifiers.CertificateGroupFolderType_DefaultApplicationGroup_TrustList.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode378() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Writable, new QualifiedName(0, "Writable"), new LocalizedText("en", "Writable"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Boolean, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Writable, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Writable, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Writable, Identifiers.HasProperty, Identifiers.CertificateGroupFolderType_DefaultApplicationGroup_TrustList.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode379() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_UserWritable, new QualifiedName(0, "UserWritable"), new LocalizedText("en", "UserWritable"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Boolean, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_UserWritable, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_UserWritable, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_UserWritable, Identifiers.HasProperty, Identifiers.CertificateGroupFolderType_DefaultApplicationGroup_TrustList.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode380() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_OpenCount, new QualifiedName(0, "OpenCount"), new LocalizedText("en", "OpenCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt16, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_OpenCount, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_OpenCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_OpenCount, Identifiers.HasProperty, Identifiers.CertificateGroupFolderType_DefaultApplicationGroup_TrustList.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode381() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Open_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Open_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Open_InputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Open_InputArguments, Identifiers.HasProperty, Identifiers.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Open.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Mode</Name><DataType><Identifier>i=3</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode382() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Open_OutputArguments, new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Open_OutputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Open_OutputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Open_OutputArguments, Identifiers.HasProperty, Identifiers.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Open.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode383() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Close_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Close_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Close_InputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Close_InputArguments, Identifiers.HasProperty, Identifiers.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Close.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode384() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Read_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Read_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Read_InputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Read_InputArguments, Identifiers.HasProperty, Identifiers.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Read.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Length</Name><DataType><Identifier>i=6</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode385() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Read_OutputArguments, new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Read_OutputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Read_OutputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Read_OutputArguments, Identifiers.HasProperty, Identifiers.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Read.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Data</Name><DataType><Identifier>i=15</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode386() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Write_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Write_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Write_InputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Write_InputArguments, Identifiers.HasProperty, Identifiers.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Write.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Data</Name><DataType><Identifier>i=15</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode387() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_GetPosition_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_GetPosition_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_GetPosition_InputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_GetPosition_InputArguments, Identifiers.HasProperty, Identifiers.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_GetPosition.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode388() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_GetPosition_OutputArguments, new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_GetPosition_OutputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_GetPosition_OutputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_GetPosition_OutputArguments, Identifiers.HasProperty, Identifiers.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_GetPosition.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Position</Name><DataType><Identifier>i=9</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode389() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_SetPosition_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_SetPosition_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_SetPosition_InputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_SetPosition_InputArguments, Identifiers.HasProperty, Identifiers.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_SetPosition.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Position</Name><DataType><Identifier>i=9</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode390() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_LastUpdateTime, new QualifiedName(0, "LastUpdateTime"), new LocalizedText("en", "LastUpdateTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UtcTime, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_LastUpdateTime, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_LastUpdateTime, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_LastUpdateTime, Identifiers.HasProperty, Identifiers.CertificateGroupFolderType_DefaultApplicationGroup_TrustList.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode391() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_OpenWithMasks_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_OpenWithMasks_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_OpenWithMasks_InputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_OpenWithMasks_InputArguments, Identifiers.HasProperty, Identifiers.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_OpenWithMasks.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Masks</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode392() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_OpenWithMasks_OutputArguments, new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_OpenWithMasks_OutputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_OpenWithMasks_OutputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_OpenWithMasks_OutputArguments, Identifiers.HasProperty, Identifiers.CertificateGroupFolderType_DefaultApplicationGroup_TrustList_OpenWithMasks.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode393() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.CertificateGroupFolderType_DefaultApplicationGroup_CertificateTypes, new QualifiedName(0, "CertificateTypes"), new LocalizedText("en", "CertificateTypes"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.NodeId, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultApplicationGroup_CertificateTypes, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultApplicationGroup_CertificateTypes, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultApplicationGroup_CertificateTypes, Identifiers.HasProperty, Identifiers.CertificateGroupFolderType_DefaultApplicationGroup.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode394() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Size, new QualifiedName(0, "Size"), new LocalizedText("en", "Size"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt64, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Size, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Size, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Size, Identifiers.HasProperty, Identifiers.CertificateGroupFolderType_DefaultHttpsGroup_TrustList.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode395() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Writable, new QualifiedName(0, "Writable"), new LocalizedText("en", "Writable"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Boolean, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Writable, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Writable, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Writable, Identifiers.HasProperty, Identifiers.CertificateGroupFolderType_DefaultHttpsGroup_TrustList.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode396() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_UserWritable, new QualifiedName(0, "UserWritable"), new LocalizedText("en", "UserWritable"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Boolean, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_UserWritable, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_UserWritable, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_UserWritable, Identifiers.HasProperty, Identifiers.CertificateGroupFolderType_DefaultHttpsGroup_TrustList.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode397() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_OpenCount, new QualifiedName(0, "OpenCount"), new LocalizedText("en", "OpenCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt16, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_OpenCount, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_OpenCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_OpenCount, Identifiers.HasProperty, Identifiers.CertificateGroupFolderType_DefaultHttpsGroup_TrustList.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode398() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Open_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Open_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Open_InputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Open_InputArguments, Identifiers.HasProperty, Identifiers.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Open.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Mode</Name><DataType><Identifier>i=3</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode399() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Open_OutputArguments, new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Open_OutputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Open_OutputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Open_OutputArguments, Identifiers.HasProperty, Identifiers.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Open.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode400() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Close_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Close_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Close_InputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Close_InputArguments, Identifiers.HasProperty, Identifiers.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Close.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode401() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Read_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Read_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Read_InputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Read_InputArguments, Identifiers.HasProperty, Identifiers.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Read.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Length</Name><DataType><Identifier>i=6</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode402() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Read_OutputArguments, new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Read_OutputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Read_OutputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Read_OutputArguments, Identifiers.HasProperty, Identifiers.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Read.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Data</Name><DataType><Identifier>i=15</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode403() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Write_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Write_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Write_InputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Write_InputArguments, Identifiers.HasProperty, Identifiers.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Write.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Data</Name><DataType><Identifier>i=15</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode404() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_GetPosition_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_GetPosition_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_GetPosition_InputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_GetPosition_InputArguments, Identifiers.HasProperty, Identifiers.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_GetPosition.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode405() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_GetPosition_OutputArguments, new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_GetPosition_OutputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_GetPosition_OutputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_GetPosition_OutputArguments, Identifiers.HasProperty, Identifiers.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_GetPosition.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Position</Name><DataType><Identifier>i=9</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode406() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_SetPosition_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_SetPosition_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_SetPosition_InputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_SetPosition_InputArguments, Identifiers.HasProperty, Identifiers.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_SetPosition.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Position</Name><DataType><Identifier>i=9</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode407() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_LastUpdateTime, new QualifiedName(0, "LastUpdateTime"), new LocalizedText("en", "LastUpdateTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UtcTime, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_LastUpdateTime, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_LastUpdateTime, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_LastUpdateTime, Identifiers.HasProperty, Identifiers.CertificateGroupFolderType_DefaultHttpsGroup_TrustList.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode408() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_OpenWithMasks_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_OpenWithMasks_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_OpenWithMasks_InputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_OpenWithMasks_InputArguments, Identifiers.HasProperty, Identifiers.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_OpenWithMasks.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Masks</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode409() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_OpenWithMasks_OutputArguments, new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_OpenWithMasks_OutputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_OpenWithMasks_OutputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_OpenWithMasks_OutputArguments, Identifiers.HasProperty, Identifiers.CertificateGroupFolderType_DefaultHttpsGroup_TrustList_OpenWithMasks.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode410() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.CertificateGroupFolderType_DefaultHttpsGroup_CertificateTypes, new QualifiedName(0, "CertificateTypes"), new LocalizedText("en", "CertificateTypes"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.NodeId, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultHttpsGroup_CertificateTypes, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultHttpsGroup_CertificateTypes, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultHttpsGroup_CertificateTypes, Identifiers.HasProperty, Identifiers.CertificateGroupFolderType_DefaultHttpsGroup.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode411() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Size, new QualifiedName(0, "Size"), new LocalizedText("en", "Size"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt64, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Size, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Size, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Size, Identifiers.HasProperty, Identifiers.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode412() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Writable, new QualifiedName(0, "Writable"), new LocalizedText("en", "Writable"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Boolean, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Writable, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Writable, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Writable, Identifiers.HasProperty, Identifiers.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode413() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_UserWritable, new QualifiedName(0, "UserWritable"), new LocalizedText("en", "UserWritable"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Boolean, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_UserWritable, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_UserWritable, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_UserWritable, Identifiers.HasProperty, Identifiers.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode414() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_OpenCount, new QualifiedName(0, "OpenCount"), new LocalizedText("en", "OpenCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt16, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_OpenCount, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_OpenCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_OpenCount, Identifiers.HasProperty, Identifiers.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode415() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Open_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Open_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Open_InputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Open_InputArguments, Identifiers.HasProperty, Identifiers.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Open.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Mode</Name><DataType><Identifier>i=3</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode416() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Open_OutputArguments, new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Open_OutputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Open_OutputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Open_OutputArguments, Identifiers.HasProperty, Identifiers.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Open.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode417() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Close_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Close_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Close_InputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Close_InputArguments, Identifiers.HasProperty, Identifiers.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Close.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode418() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Read_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Read_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Read_InputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Read_InputArguments, Identifiers.HasProperty, Identifiers.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Read.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Length</Name><DataType><Identifier>i=6</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode419() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Read_OutputArguments, new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Read_OutputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Read_OutputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Read_OutputArguments, Identifiers.HasProperty, Identifiers.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Read.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Data</Name><DataType><Identifier>i=15</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode420() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Write_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Write_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Write_InputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Write_InputArguments, Identifiers.HasProperty, Identifiers.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Write.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Data</Name><DataType><Identifier>i=15</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode421() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_GetPosition_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_GetPosition_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_GetPosition_InputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_GetPosition_InputArguments, Identifiers.HasProperty, Identifiers.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_GetPosition.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode422() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_GetPosition_OutputArguments, new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_GetPosition_OutputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_GetPosition_OutputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_GetPosition_OutputArguments, Identifiers.HasProperty, Identifiers.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_GetPosition.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Position</Name><DataType><Identifier>i=9</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode423() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_SetPosition_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_SetPosition_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_SetPosition_InputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_SetPosition_InputArguments, Identifiers.HasProperty, Identifiers.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_SetPosition.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Position</Name><DataType><Identifier>i=9</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode424() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_LastUpdateTime, new QualifiedName(0, "LastUpdateTime"), new LocalizedText("en", "LastUpdateTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UtcTime, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_LastUpdateTime, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_LastUpdateTime, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_LastUpdateTime, Identifiers.HasProperty, Identifiers.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode425() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_OpenWithMasks_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_OpenWithMasks_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_OpenWithMasks_InputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_OpenWithMasks_InputArguments, Identifiers.HasProperty, Identifiers.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_OpenWithMasks.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Masks</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode426() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_OpenWithMasks_OutputArguments, new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_OpenWithMasks_OutputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_OpenWithMasks_OutputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_OpenWithMasks_OutputArguments, Identifiers.HasProperty, Identifiers.CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_OpenWithMasks.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode427() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.CertificateGroupFolderType_DefaultUserTokenGroup_CertificateTypes, new QualifiedName(0, "CertificateTypes"), new LocalizedText("en", "CertificateTypes"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.NodeId, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultUserTokenGroup_CertificateTypes, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultUserTokenGroup_CertificateTypes, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_DefaultUserTokenGroup_CertificateTypes, Identifiers.HasProperty, Identifiers.CertificateGroupFolderType_DefaultUserTokenGroup.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode428() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Size, new QualifiedName(0, "Size"), new LocalizedText("en", "Size"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt64, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Size, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Size, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Size, Identifiers.HasProperty, Identifiers.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode429() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Writable, new QualifiedName(0, "Writable"), new LocalizedText("en", "Writable"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Boolean, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Writable, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Writable, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Writable, Identifiers.HasProperty, Identifiers.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode430() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_UserWritable, new QualifiedName(0, "UserWritable"), new LocalizedText("en", "UserWritable"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Boolean, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_UserWritable, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_UserWritable, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_UserWritable, Identifiers.HasProperty, Identifiers.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode431() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_OpenCount, new QualifiedName(0, "OpenCount"), new LocalizedText("en", "OpenCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt16, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_OpenCount, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_OpenCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_OpenCount, Identifiers.HasProperty, Identifiers.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode432() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Open_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Open_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Open_InputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Open_InputArguments, Identifiers.HasProperty, Identifiers.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Open.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Mode</Name><DataType><Identifier>i=3</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode433() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Open_OutputArguments, new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Open_OutputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Open_OutputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Open_OutputArguments, Identifiers.HasProperty, Identifiers.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Open.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode434() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Close_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Close_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Close_InputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Close_InputArguments, Identifiers.HasProperty, Identifiers.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Close.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode435() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Read_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Read_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Read_InputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Read_InputArguments, Identifiers.HasProperty, Identifiers.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Read.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Length</Name><DataType><Identifier>i=6</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode436() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Read_OutputArguments, new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Read_OutputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Read_OutputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Read_OutputArguments, Identifiers.HasProperty, Identifiers.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Read.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Data</Name><DataType><Identifier>i=15</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode437() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Write_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Write_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Write_InputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Write_InputArguments, Identifiers.HasProperty, Identifiers.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Write.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Data</Name><DataType><Identifier>i=15</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode438() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_GetPosition_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_GetPosition_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_GetPosition_InputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_GetPosition_InputArguments, Identifiers.HasProperty, Identifiers.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_GetPosition.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode439() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_GetPosition_OutputArguments, new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_GetPosition_OutputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_GetPosition_OutputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_GetPosition_OutputArguments, Identifiers.HasProperty, Identifiers.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_GetPosition.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Position</Name><DataType><Identifier>i=9</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode440() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_SetPosition_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_SetPosition_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_SetPosition_InputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_SetPosition_InputArguments, Identifiers.HasProperty, Identifiers.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_SetPosition.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Position</Name><DataType><Identifier>i=9</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode441() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_LastUpdateTime, new QualifiedName(0, "LastUpdateTime"), new LocalizedText("en", "LastUpdateTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UtcTime, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_LastUpdateTime, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_LastUpdateTime, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_LastUpdateTime, Identifiers.HasProperty, Identifiers.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode442() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_OpenWithMasks_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_OpenWithMasks_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_OpenWithMasks_InputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_OpenWithMasks_InputArguments, Identifiers.HasProperty, Identifiers.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_OpenWithMasks.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Masks</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode443() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_OpenWithMasks_OutputArguments, new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_OpenWithMasks_OutputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_OpenWithMasks_OutputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_OpenWithMasks_OutputArguments, Identifiers.HasProperty, Identifiers.CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_OpenWithMasks.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode444() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateTypes, new QualifiedName(0, "CertificateTypes"), new LocalizedText("en", "CertificateTypes"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.NodeId, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateTypes, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateTypes, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateTypes, Identifiers.HasProperty, Identifiers.CertificateGroupFolderType_AdditionalGroup_Placeholder.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode445() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Size, new QualifiedName(0, "Size"), new LocalizedText("en", "Size"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt64, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Size, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Size, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Size, Identifiers.HasProperty, Identifiers.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode446() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Writable, new QualifiedName(0, "Writable"), new LocalizedText("en", "Writable"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Boolean, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Writable, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Writable, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Writable, Identifiers.HasProperty, Identifiers.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode447() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_UserWritable, new QualifiedName(0, "UserWritable"), new LocalizedText("en", "UserWritable"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Boolean, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_UserWritable, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_UserWritable, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_UserWritable, Identifiers.HasProperty, Identifiers.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode448() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_OpenCount, new QualifiedName(0, "OpenCount"), new LocalizedText("en", "OpenCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt16, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_OpenCount, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_OpenCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_OpenCount, Identifiers.HasProperty, Identifiers.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode449() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Open_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Open_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Open_InputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Open_InputArguments, Identifiers.HasProperty, Identifiers.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Open.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Mode</Name><DataType><Identifier>i=3</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode450() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Open_OutputArguments, new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Open_OutputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Open_OutputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Open_OutputArguments, Identifiers.HasProperty, Identifiers.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Open.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode451() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Close_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Close_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Close_InputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Close_InputArguments, Identifiers.HasProperty, Identifiers.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Close.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode452() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Read_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Read_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Read_InputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Read_InputArguments, Identifiers.HasProperty, Identifiers.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Read.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Length</Name><DataType><Identifier>i=6</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode453() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Read_OutputArguments, new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Read_OutputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Read_OutputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Read_OutputArguments, Identifiers.HasProperty, Identifiers.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Read.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Data</Name><DataType><Identifier>i=15</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode454() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Write_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Write_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Write_InputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Write_InputArguments, Identifiers.HasProperty, Identifiers.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Write.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Data</Name><DataType><Identifier>i=15</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode455() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_GetPosition_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_GetPosition_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_GetPosition_InputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_GetPosition_InputArguments, Identifiers.HasProperty, Identifiers.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_GetPosition.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode456() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_GetPosition_OutputArguments, new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_GetPosition_OutputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_GetPosition_OutputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_GetPosition_OutputArguments, Identifiers.HasProperty, Identifiers.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_GetPosition.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Position</Name><DataType><Identifier>i=9</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode457() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_SetPosition_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_SetPosition_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_SetPosition_InputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_SetPosition_InputArguments, Identifiers.HasProperty, Identifiers.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_SetPosition.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Position</Name><DataType><Identifier>i=9</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode458() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_LastUpdateTime, new QualifiedName(0, "LastUpdateTime"), new LocalizedText("en", "LastUpdateTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UtcTime, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_LastUpdateTime, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_LastUpdateTime, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_LastUpdateTime, Identifiers.HasProperty, Identifiers.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode459() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_OpenWithMasks_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_OpenWithMasks_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_OpenWithMasks_InputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_OpenWithMasks_InputArguments, Identifiers.HasProperty, Identifiers.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_OpenWithMasks.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Masks</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode460() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_OpenWithMasks_OutputArguments, new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_OpenWithMasks_OutputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_OpenWithMasks_OutputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_OpenWithMasks_OutputArguments, Identifiers.HasProperty, Identifiers.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_OpenWithMasks.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode461() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateTypes, new QualifiedName(0, "CertificateTypes"), new LocalizedText("en", "CertificateTypes"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.NodeId, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateTypes, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateTypes, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateTypes, Identifiers.HasProperty, Identifiers.ServerConfigurationType_CertificateGroups_DefaultApplicationGroup.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode462() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ExclusiveDeviationAlarmType_SetpointNode, new QualifiedName(0, "SetpointNode"), new LocalizedText("en", "SetpointNode"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.NodeId, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ExclusiveDeviationAlarmType_SetpointNode, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ExclusiveDeviationAlarmType_SetpointNode, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ExclusiveDeviationAlarmType_SetpointNode, Identifiers.HasProperty, Identifiers.ExclusiveDeviationAlarmType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode463() {
        TwoStateVariableTypeNode node = new TwoStateVariableTypeNode(this.context, Identifiers.NonExclusiveLimitAlarmType_ActiveState, new QualifiedName(0, "ActiveState"), new LocalizedText("en", "ActiveState"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.LocalizedText, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.NonExclusiveLimitAlarmType_ActiveState, Identifiers.HasProperty, Identifiers.NonExclusiveLimitAlarmType_ActiveState_Id.expanded(), true));
        node.addReference(new Reference(Identifiers.NonExclusiveLimitAlarmType_ActiveState, Identifiers.HasTrueSubState, Identifiers.NonExclusiveLimitAlarmType_HighHighState.expanded(), true));
        node.addReference(new Reference(Identifiers.NonExclusiveLimitAlarmType_ActiveState, Identifiers.HasTrueSubState, Identifiers.NonExclusiveLimitAlarmType_HighState.expanded(), true));
        node.addReference(new Reference(Identifiers.NonExclusiveLimitAlarmType_ActiveState, Identifiers.HasTrueSubState, Identifiers.NonExclusiveLimitAlarmType_LowState.expanded(), true));
        node.addReference(new Reference(Identifiers.NonExclusiveLimitAlarmType_ActiveState, Identifiers.HasTrueSubState, Identifiers.NonExclusiveLimitAlarmType_LowLowState.expanded(), true));
        node.addReference(new Reference(Identifiers.NonExclusiveLimitAlarmType_ActiveState, Identifiers.HasTypeDefinition, Identifiers.TwoStateVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.NonExclusiveLimitAlarmType_ActiveState, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.NonExclusiveLimitAlarmType_ActiveState, Identifiers.HasComponent, Identifiers.NonExclusiveLimitAlarmType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode464() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.NonExclusiveLimitAlarmType_ActiveState_Id, new QualifiedName(0, "Id"), new LocalizedText("en", "Id"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Boolean, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.NonExclusiveLimitAlarmType_ActiveState_Id, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.NonExclusiveLimitAlarmType_ActiveState_Id, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.NonExclusiveLimitAlarmType_ActiveState_Id, Identifiers.HasProperty, Identifiers.NonExclusiveLimitAlarmType_ActiveState.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode465() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Size, new QualifiedName(0, "Size"), new LocalizedText("en", "Size"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt64, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Size, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Size, Identifiers.HasProperty, Identifiers.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode466() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Writable, new QualifiedName(0, "Writable"), new LocalizedText("en", "Writable"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Boolean, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Writable, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Writable, Identifiers.HasProperty, Identifiers.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode467() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_UserWritable, new QualifiedName(0, "UserWritable"), new LocalizedText("en", "UserWritable"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Boolean, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_UserWritable, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_UserWritable, Identifiers.HasProperty, Identifiers.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode468() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_OpenCount, new QualifiedName(0, "OpenCount"), new LocalizedText("en", "OpenCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt16, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_OpenCount, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_OpenCount, Identifiers.HasProperty, Identifiers.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode469() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Open_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Open_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Open_InputArguments, Identifiers.HasProperty, Identifiers.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Open.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Mode</Name><DataType><Identifier>i=3</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode470() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Open_OutputArguments, new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Open_OutputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Open_OutputArguments, Identifiers.HasProperty, Identifiers.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Open.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode471() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Close_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Close_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Close_InputArguments, Identifiers.HasProperty, Identifiers.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Close.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode472() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Read_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Read_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Read_InputArguments, Identifiers.HasProperty, Identifiers.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Read.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Length</Name><DataType><Identifier>i=6</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode473() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Read_OutputArguments, new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Read_OutputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Read_OutputArguments, Identifiers.HasProperty, Identifiers.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Read.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Data</Name><DataType><Identifier>i=15</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode474() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Write_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Write_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Write_InputArguments, Identifiers.HasProperty, Identifiers.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Write.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Data</Name><DataType><Identifier>i=15</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode475() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_GetPosition_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_GetPosition_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_GetPosition_InputArguments, Identifiers.HasProperty, Identifiers.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_GetPosition.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode476() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_GetPosition_OutputArguments, new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_GetPosition_OutputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_GetPosition_OutputArguments, Identifiers.HasProperty, Identifiers.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_GetPosition.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Position</Name><DataType><Identifier>i=9</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode477() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_SetPosition_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_SetPosition_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_SetPosition_InputArguments, Identifiers.HasProperty, Identifiers.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_SetPosition.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Position</Name><DataType><Identifier>i=9</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode478() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_LastUpdateTime, new QualifiedName(0, "LastUpdateTime"), new LocalizedText("en", "LastUpdateTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UtcTime, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_LastUpdateTime, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_LastUpdateTime, Identifiers.HasProperty, Identifiers.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode479() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_OpenWithMasks_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_OpenWithMasks_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_OpenWithMasks_InputArguments, Identifiers.HasProperty, Identifiers.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_OpenWithMasks.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Masks</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode480() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_OpenWithMasks_OutputArguments, new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_OpenWithMasks_OutputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_OpenWithMasks_OutputArguments, Identifiers.HasProperty, Identifiers.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_OpenWithMasks.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode481() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_CloseAndUpdate_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_CloseAndUpdate_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_CloseAndUpdate_InputArguments, Identifiers.HasProperty, Identifiers.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_CloseAndUpdate.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode482() {
        TwoStateVariableTypeNode node = new TwoStateVariableTypeNode(this.context, Identifiers.NonExclusiveLimitAlarmType_HighHighState, new QualifiedName(0, "HighHighState"), new LocalizedText("en", "HighHighState"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.LocalizedText, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.NonExclusiveLimitAlarmType_HighHighState, Identifiers.HasProperty, Identifiers.NonExclusiveLimitAlarmType_HighHighState_Id.expanded(), true));
        node.addReference(new Reference(Identifiers.NonExclusiveLimitAlarmType_HighHighState, Identifiers.HasProperty, Identifiers.NonExclusiveLimitAlarmType_HighHighState_TransitionTime.expanded(), true));
        node.addReference(new Reference(Identifiers.NonExclusiveLimitAlarmType_HighHighState, Identifiers.HasTrueSubState, Identifiers.NonExclusiveLimitAlarmType_ActiveState.expanded(), false));
        node.addReference(new Reference(Identifiers.NonExclusiveLimitAlarmType_HighHighState, Identifiers.HasTypeDefinition, Identifiers.TwoStateVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.NonExclusiveLimitAlarmType_HighHighState, Identifiers.HasModellingRule, Identifiers.ModellingRule_Optional.expanded(), true));
        node.addReference(new Reference(Identifiers.NonExclusiveLimitAlarmType_HighHighState, Identifiers.HasComponent, Identifiers.NonExclusiveLimitAlarmType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode483() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_CloseAndUpdate_OutputArguments, new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_CloseAndUpdate_OutputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_CloseAndUpdate_OutputArguments, Identifiers.HasProperty, Identifiers.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_CloseAndUpdate.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>ApplyChangesRequired</Name><DataType><Identifier>i=1</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode484() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.NonExclusiveLimitAlarmType_HighHighState_Id, new QualifiedName(0, "Id"), new LocalizedText("en", "Id"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Boolean, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.NonExclusiveLimitAlarmType_HighHighState_Id, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.NonExclusiveLimitAlarmType_HighHighState_Id, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.NonExclusiveLimitAlarmType_HighHighState_Id, Identifiers.HasProperty, Identifiers.NonExclusiveLimitAlarmType_HighHighState.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode485() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_AddCertificate_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_AddCertificate_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_AddCertificate_InputArguments, Identifiers.HasProperty, Identifiers.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_AddCertificate.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Certificate</Name><DataType><Identifier>i=15</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>IsTrustedCertificate</Name><DataType><Identifier>i=1</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode486() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_RemoveCertificate_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_RemoveCertificate_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_RemoveCertificate_InputArguments, Identifiers.HasProperty, Identifiers.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_RemoveCertificate.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Thumbprint</Name><DataType><Identifier>i=12</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>IsTrustedCertificate</Name><DataType><Identifier>i=1</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode487() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.NonExclusiveLimitAlarmType_HighHighState_TransitionTime, new QualifiedName(0, "TransitionTime"), new LocalizedText("en", "TransitionTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UtcTime, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.NonExclusiveLimitAlarmType_HighHighState_TransitionTime, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.NonExclusiveLimitAlarmType_HighHighState_TransitionTime, Identifiers.HasModellingRule, Identifiers.ModellingRule_Optional.expanded(), true));
        node.addReference(new Reference(Identifiers.NonExclusiveLimitAlarmType_HighHighState_TransitionTime, Identifiers.HasProperty, Identifiers.NonExclusiveLimitAlarmType_HighHighState.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode488() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateTypes, new QualifiedName(0, "CertificateTypes"), new LocalizedText("en", "CertificateTypes"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.NodeId, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateTypes, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateTypes, Identifiers.HasProperty, Identifiers.ServerConfiguration_CertificateGroups_DefaultHttpsGroup.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode489() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Size, new QualifiedName(0, "Size"), new LocalizedText("en", "Size"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt64, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Size, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Size, Identifiers.HasProperty, Identifiers.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode490() {
        TwoStateVariableTypeNode node = new TwoStateVariableTypeNode(this.context, Identifiers.NonExclusiveLimitAlarmType_HighState, new QualifiedName(0, "HighState"), new LocalizedText("en", "HighState"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.LocalizedText, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.NonExclusiveLimitAlarmType_HighState, Identifiers.HasProperty, Identifiers.NonExclusiveLimitAlarmType_HighState_Id.expanded(), true));
        node.addReference(new Reference(Identifiers.NonExclusiveLimitAlarmType_HighState, Identifiers.HasProperty, Identifiers.NonExclusiveLimitAlarmType_HighState_TransitionTime.expanded(), true));
        node.addReference(new Reference(Identifiers.NonExclusiveLimitAlarmType_HighState, Identifiers.HasTrueSubState, Identifiers.NonExclusiveLimitAlarmType_ActiveState.expanded(), false));
        node.addReference(new Reference(Identifiers.NonExclusiveLimitAlarmType_HighState, Identifiers.HasTypeDefinition, Identifiers.TwoStateVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.NonExclusiveLimitAlarmType_HighState, Identifiers.HasModellingRule, Identifiers.ModellingRule_Optional.expanded(), true));
        node.addReference(new Reference(Identifiers.NonExclusiveLimitAlarmType_HighState, Identifiers.HasComponent, Identifiers.NonExclusiveLimitAlarmType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode491() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Writable, new QualifiedName(0, "Writable"), new LocalizedText("en", "Writable"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Boolean, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Writable, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Writable, Identifiers.HasProperty, Identifiers.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode492() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.NonExclusiveLimitAlarmType_HighState_Id, new QualifiedName(0, "Id"), new LocalizedText("en", "Id"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Boolean, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.NonExclusiveLimitAlarmType_HighState_Id, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.NonExclusiveLimitAlarmType_HighState_Id, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.NonExclusiveLimitAlarmType_HighState_Id, Identifiers.HasProperty, Identifiers.NonExclusiveLimitAlarmType_HighState.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode493() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_UserWritable, new QualifiedName(0, "UserWritable"), new LocalizedText("en", "UserWritable"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Boolean, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_UserWritable, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_UserWritable, Identifiers.HasProperty, Identifiers.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode494() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_OpenCount, new QualifiedName(0, "OpenCount"), new LocalizedText("en", "OpenCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt16, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_OpenCount, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_OpenCount, Identifiers.HasProperty, Identifiers.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode495() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.NonExclusiveLimitAlarmType_HighState_TransitionTime, new QualifiedName(0, "TransitionTime"), new LocalizedText("en", "TransitionTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UtcTime, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.NonExclusiveLimitAlarmType_HighState_TransitionTime, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.NonExclusiveLimitAlarmType_HighState_TransitionTime, Identifiers.HasModellingRule, Identifiers.ModellingRule_Optional.expanded(), true));
        node.addReference(new Reference(Identifiers.NonExclusiveLimitAlarmType_HighState_TransitionTime, Identifiers.HasProperty, Identifiers.NonExclusiveLimitAlarmType_HighState.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode496() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Open_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Open_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Open_InputArguments, Identifiers.HasProperty, Identifiers.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Open.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Mode</Name><DataType><Identifier>i=3</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode497() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Open_OutputArguments, new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Open_OutputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Open_OutputArguments, Identifiers.HasProperty, Identifiers.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Open.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode498() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Close_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Close_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Close_InputArguments, Identifiers.HasProperty, Identifiers.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Close.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode499() {
        TwoStateVariableTypeNode node = new TwoStateVariableTypeNode(this.context, Identifiers.NonExclusiveLimitAlarmType_LowState, new QualifiedName(0, "LowState"), new LocalizedText("en", "LowState"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.LocalizedText, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.NonExclusiveLimitAlarmType_LowState, Identifiers.HasProperty, Identifiers.NonExclusiveLimitAlarmType_LowState_Id.expanded(), true));
        node.addReference(new Reference(Identifiers.NonExclusiveLimitAlarmType_LowState, Identifiers.HasProperty, Identifiers.NonExclusiveLimitAlarmType_LowState_TransitionTime.expanded(), true));
        node.addReference(new Reference(Identifiers.NonExclusiveLimitAlarmType_LowState, Identifiers.HasTrueSubState, Identifiers.NonExclusiveLimitAlarmType_ActiveState.expanded(), false));
        node.addReference(new Reference(Identifiers.NonExclusiveLimitAlarmType_LowState, Identifiers.HasTypeDefinition, Identifiers.TwoStateVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.NonExclusiveLimitAlarmType_LowState, Identifiers.HasModellingRule, Identifiers.ModellingRule_Optional.expanded(), true));
        node.addReference(new Reference(Identifiers.NonExclusiveLimitAlarmType_LowState, Identifiers.HasComponent, Identifiers.NonExclusiveLimitAlarmType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode500() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.NonExclusiveLimitAlarmType_LowState_Id, new QualifiedName(0, "Id"), new LocalizedText("en", "Id"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Boolean, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.NonExclusiveLimitAlarmType_LowState_Id, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.NonExclusiveLimitAlarmType_LowState_Id, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.NonExclusiveLimitAlarmType_LowState_Id, Identifiers.HasProperty, Identifiers.NonExclusiveLimitAlarmType_LowState.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode501() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Read_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Read_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Read_InputArguments, Identifiers.HasProperty, Identifiers.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Read.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Length</Name><DataType><Identifier>i=6</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode502() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Read_OutputArguments, new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Read_OutputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Read_OutputArguments, Identifiers.HasProperty, Identifiers.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Read.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Data</Name><DataType><Identifier>i=15</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode503() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Write_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Write_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Write_InputArguments, Identifiers.HasProperty, Identifiers.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Write.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Data</Name><DataType><Identifier>i=15</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode504() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.NonExclusiveLimitAlarmType_LowState_TransitionTime, new QualifiedName(0, "TransitionTime"), new LocalizedText("en", "TransitionTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UtcTime, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.NonExclusiveLimitAlarmType_LowState_TransitionTime, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.NonExclusiveLimitAlarmType_LowState_TransitionTime, Identifiers.HasModellingRule, Identifiers.ModellingRule_Optional.expanded(), true));
        node.addReference(new Reference(Identifiers.NonExclusiveLimitAlarmType_LowState_TransitionTime, Identifiers.HasProperty, Identifiers.NonExclusiveLimitAlarmType_LowState.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode505() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_GetPosition_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_GetPosition_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_GetPosition_InputArguments, Identifiers.HasProperty, Identifiers.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_GetPosition.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode506() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_GetPosition_OutputArguments, new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_GetPosition_OutputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_GetPosition_OutputArguments, Identifiers.HasProperty, Identifiers.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_GetPosition.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Position</Name><DataType><Identifier>i=9</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode507() {
        TwoStateVariableTypeNode node = new TwoStateVariableTypeNode(this.context, Identifiers.NonExclusiveLimitAlarmType_LowLowState, new QualifiedName(0, "LowLowState"), new LocalizedText("en", "LowLowState"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.LocalizedText, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.NonExclusiveLimitAlarmType_LowLowState, Identifiers.HasProperty, Identifiers.NonExclusiveLimitAlarmType_LowLowState_Id.expanded(), true));
        node.addReference(new Reference(Identifiers.NonExclusiveLimitAlarmType_LowLowState, Identifiers.HasProperty, Identifiers.NonExclusiveLimitAlarmType_LowLowState_TransitionTime.expanded(), true));
        node.addReference(new Reference(Identifiers.NonExclusiveLimitAlarmType_LowLowState, Identifiers.HasTrueSubState, Identifiers.NonExclusiveLimitAlarmType_ActiveState.expanded(), false));
        node.addReference(new Reference(Identifiers.NonExclusiveLimitAlarmType_LowLowState, Identifiers.HasTypeDefinition, Identifiers.TwoStateVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.NonExclusiveLimitAlarmType_LowLowState, Identifiers.HasModellingRule, Identifiers.ModellingRule_Optional.expanded(), true));
        node.addReference(new Reference(Identifiers.NonExclusiveLimitAlarmType_LowLowState, Identifiers.HasComponent, Identifiers.NonExclusiveLimitAlarmType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode508() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_SetPosition_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_SetPosition_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_SetPosition_InputArguments, Identifiers.HasProperty, Identifiers.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_SetPosition.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Position</Name><DataType><Identifier>i=9</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode509() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.NonExclusiveLimitAlarmType_LowLowState_Id, new QualifiedName(0, "Id"), new LocalizedText("en", "Id"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Boolean, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.NonExclusiveLimitAlarmType_LowLowState_Id, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.NonExclusiveLimitAlarmType_LowLowState_Id, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.NonExclusiveLimitAlarmType_LowLowState_Id, Identifiers.HasProperty, Identifiers.NonExclusiveLimitAlarmType_LowLowState.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode510() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_LastUpdateTime, new QualifiedName(0, "LastUpdateTime"), new LocalizedText("en", "LastUpdateTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UtcTime, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_LastUpdateTime, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_LastUpdateTime, Identifiers.HasProperty, Identifiers.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode511() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_OpenWithMasks_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_OpenWithMasks_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_OpenWithMasks_InputArguments, Identifiers.HasProperty, Identifiers.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_OpenWithMasks.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Masks</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode512() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_OpenWithMasks_OutputArguments, new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_OpenWithMasks_OutputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_OpenWithMasks_OutputArguments, Identifiers.HasProperty, Identifiers.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_OpenWithMasks.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode513() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.NonExclusiveLimitAlarmType_LowLowState_TransitionTime, new QualifiedName(0, "TransitionTime"), new LocalizedText("en", "TransitionTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UtcTime, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.NonExclusiveLimitAlarmType_LowLowState_TransitionTime, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.NonExclusiveLimitAlarmType_LowLowState_TransitionTime, Identifiers.HasModellingRule, Identifiers.ModellingRule_Optional.expanded(), true));
        node.addReference(new Reference(Identifiers.NonExclusiveLimitAlarmType_LowLowState_TransitionTime, Identifiers.HasProperty, Identifiers.NonExclusiveLimitAlarmType_LowLowState.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode514() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_CloseAndUpdate_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_CloseAndUpdate_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_CloseAndUpdate_InputArguments, Identifiers.HasProperty, Identifiers.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_CloseAndUpdate.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode515() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_CloseAndUpdate_OutputArguments, new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_CloseAndUpdate_OutputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_CloseAndUpdate_OutputArguments, Identifiers.HasProperty, Identifiers.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_CloseAndUpdate.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>ApplyChangesRequired</Name><DataType><Identifier>i=1</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode516() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_AddCertificate_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_AddCertificate_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_AddCertificate_InputArguments, Identifiers.HasProperty, Identifiers.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_AddCertificate.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Certificate</Name><DataType><Identifier>i=15</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>IsTrustedCertificate</Name><DataType><Identifier>i=1</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode517() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_RemoveCertificate_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_RemoveCertificate_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_RemoveCertificate_InputArguments, Identifiers.HasProperty, Identifiers.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_RemoveCertificate.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Thumbprint</Name><DataType><Identifier>i=12</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>IsTrustedCertificate</Name><DataType><Identifier>i=1</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode518() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateTypes, new QualifiedName(0, "CertificateTypes"), new LocalizedText("en", "CertificateTypes"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.NodeId, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateTypes, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateTypes, Identifiers.HasProperty, Identifiers.ServerConfiguration_CertificateGroups_DefaultUserTokenGroup.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode519() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Writable, new QualifiedName(0, "Writable"), new LocalizedText("en", "Writable"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Boolean, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Writable, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Writable, Identifiers.HasProperty, Identifiers.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode520() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_UserWritable, new QualifiedName(0, "UserWritable"), new LocalizedText("en", "UserWritable"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Boolean, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_UserWritable, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_UserWritable, Identifiers.HasProperty, Identifiers.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode521() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_CloseAndUpdate_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_CloseAndUpdate_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_CloseAndUpdate_InputArguments, Identifiers.HasProperty, Identifiers.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_CloseAndUpdate.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode522() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateTypes, new QualifiedName(0, "CertificateTypes"), new LocalizedText("en", "CertificateTypes"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.NodeId, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateTypes, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateTypes, Identifiers.HasProperty, Identifiers.ServerConfiguration_CertificateGroups_DefaultApplicationGroup.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode523() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ShelvedStateMachineType_Unshelved_StateNumber, new QualifiedName(0, "StateNumber"), new LocalizedText("en", "StateNumber"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ShelvedStateMachineType_Unshelved_StateNumber, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ShelvedStateMachineType_Unshelved_StateNumber, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ShelvedStateMachineType_Unshelved_StateNumber, Identifiers.HasProperty, Identifiers.ShelvedStateMachineType_Unshelved.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode524() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ShelvedStateMachineType_TimedShelved_StateNumber, new QualifiedName(0, "StateNumber"), new LocalizedText("en", "StateNumber"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ShelvedStateMachineType_TimedShelved_StateNumber, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ShelvedStateMachineType_TimedShelved_StateNumber, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ShelvedStateMachineType_TimedShelved_StateNumber, Identifiers.HasProperty, Identifiers.ShelvedStateMachineType_TimedShelved.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode525() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerType_ServerArray, new QualifiedName(0, "ServerArray"), new LocalizedText("en", "ServerArray"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 1000.0, false);
        node.addReference(new Reference(Identifiers.ServerType_ServerArray, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_ServerArray, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_ServerArray, Identifiers.HasProperty, Identifiers.ServerType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode526() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ShelvedStateMachineType_OneShotShelved_StateNumber, new QualifiedName(0, "StateNumber"), new LocalizedText("en", "StateNumber"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ShelvedStateMachineType_OneShotShelved_StateNumber, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ShelvedStateMachineType_OneShotShelved_StateNumber, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ShelvedStateMachineType_OneShotShelved_StateNumber, Identifiers.HasProperty, Identifiers.ShelvedStateMachineType_OneShotShelved.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode527() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerType_NamespaceArray, new QualifiedName(0, "NamespaceArray"), new LocalizedText("en", "NamespaceArray"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 1000.0, false);
        node.addReference(new Reference(Identifiers.ServerType_NamespaceArray, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_NamespaceArray, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_NamespaceArray, Identifiers.HasProperty, Identifiers.ServerType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode528() {
        ServerStatusTypeNode node = new ServerStatusTypeNode(this.context, Identifiers.ServerType_ServerStatus, new QualifiedName(0, "ServerStatus"), new LocalizedText("en", "ServerStatus"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServerStatusDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 1000.0, false);
        node.addReference(new Reference(Identifiers.ServerType_ServerStatus, Identifiers.HasComponent, Identifiers.ServerType_ServerStatus_StartTime.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_ServerStatus, Identifiers.HasComponent, Identifiers.ServerType_ServerStatus_CurrentTime.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_ServerStatus, Identifiers.HasComponent, Identifiers.ServerType_ServerStatus_State.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_ServerStatus, Identifiers.HasComponent, Identifiers.ServerType_ServerStatus_BuildInfo.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_ServerStatus, Identifiers.HasComponent, Identifiers.ServerType_ServerStatus_SecondsTillShutdown.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_ServerStatus, Identifiers.HasComponent, Identifiers.ServerType_ServerStatus_ShutdownReason.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_ServerStatus, Identifiers.HasTypeDefinition, Identifiers.ServerStatusType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_ServerStatus, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_ServerStatus, Identifiers.HasComponent, Identifiers.ServerType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode529() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerType_ServiceLevel, new QualifiedName(0, "ServiceLevel"), new LocalizedText("en", "ServiceLevel"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Byte, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 1000.0, false);
        node.addReference(new Reference(Identifiers.ServerType_ServiceLevel, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_ServiceLevel, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_ServiceLevel, Identifiers.HasProperty, Identifiers.ServerType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode530() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerCapabilitiesType_ServerProfileArray, new QualifiedName(0, "ServerProfileArray"), new LocalizedText("en", "ServerProfileArray"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerCapabilitiesType_ServerProfileArray, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerCapabilitiesType_ServerProfileArray, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerCapabilitiesType_ServerProfileArray, Identifiers.HasProperty, Identifiers.ServerCapabilitiesType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode531() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerCapabilitiesType_LocaleIdArray, new QualifiedName(0, "LocaleIdArray"), new LocalizedText("en", "LocaleIdArray"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.LocaleId, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerCapabilitiesType_LocaleIdArray, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerCapabilitiesType_LocaleIdArray, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerCapabilitiesType_LocaleIdArray, Identifiers.HasProperty, Identifiers.ServerCapabilitiesType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode532() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerCapabilitiesType_MinSupportedSampleRate, new QualifiedName(0, "MinSupportedSampleRate"), new LocalizedText("en", "MinSupportedSampleRate"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Duration, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerCapabilitiesType_MinSupportedSampleRate, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerCapabilitiesType_MinSupportedSampleRate, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerCapabilitiesType_MinSupportedSampleRate, Identifiers.HasProperty, Identifiers.ServerCapabilitiesType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode533() {
        ServerDiagnosticsSummaryTypeNode node = new ServerDiagnosticsSummaryTypeNode(this.context, Identifiers.ServerDiagnosticsType_ServerDiagnosticsSummary, new QualifiedName(0, "ServerDiagnosticsSummary"), new LocalizedText("en", "ServerDiagnosticsSummary"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServerDiagnosticsSummaryDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerDiagnosticsType_ServerDiagnosticsSummary, Identifiers.HasComponent, Identifiers.ServerDiagnosticsType_ServerDiagnosticsSummary_ServerViewCount.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerDiagnosticsType_ServerDiagnosticsSummary, Identifiers.HasComponent, Identifiers.ServerDiagnosticsType_ServerDiagnosticsSummary_CurrentSessionCount.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerDiagnosticsType_ServerDiagnosticsSummary, Identifiers.HasComponent, Identifiers.ServerDiagnosticsType_ServerDiagnosticsSummary_CumulatedSessionCount.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerDiagnosticsType_ServerDiagnosticsSummary, Identifiers.HasComponent, Identifiers.ServerDiagnosticsType_ServerDiagnosticsSummary_SecurityRejectedSessionCount.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerDiagnosticsType_ServerDiagnosticsSummary, Identifiers.HasComponent, Identifiers.ServerDiagnosticsType_ServerDiagnosticsSummary_RejectedSessionCount.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerDiagnosticsType_ServerDiagnosticsSummary, Identifiers.HasComponent, Identifiers.ServerDiagnosticsType_ServerDiagnosticsSummary_SessionTimeoutCount.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerDiagnosticsType_ServerDiagnosticsSummary, Identifiers.HasComponent, Identifiers.ServerDiagnosticsType_ServerDiagnosticsSummary_SessionAbortCount.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerDiagnosticsType_ServerDiagnosticsSummary, Identifiers.HasComponent, Identifiers.ServerDiagnosticsType_ServerDiagnosticsSummary_PublishingIntervalCount.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerDiagnosticsType_ServerDiagnosticsSummary, Identifiers.HasComponent, Identifiers.ServerDiagnosticsType_ServerDiagnosticsSummary_CurrentSubscriptionCount.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerDiagnosticsType_ServerDiagnosticsSummary, Identifiers.HasComponent, Identifiers.ServerDiagnosticsType_ServerDiagnosticsSummary_CumulatedSubscriptionCount.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerDiagnosticsType_ServerDiagnosticsSummary, Identifiers.HasComponent, Identifiers.ServerDiagnosticsType_ServerDiagnosticsSummary_SecurityRejectedRequestsCount.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerDiagnosticsType_ServerDiagnosticsSummary, Identifiers.HasComponent, Identifiers.ServerDiagnosticsType_ServerDiagnosticsSummary_RejectedRequestsCount.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerDiagnosticsType_ServerDiagnosticsSummary, Identifiers.HasTypeDefinition, Identifiers.ServerDiagnosticsSummaryType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerDiagnosticsType_ServerDiagnosticsSummary, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerDiagnosticsType_ServerDiagnosticsSummary, Identifiers.HasComponent, Identifiers.ServerDiagnosticsType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode534() {
        SamplingIntervalDiagnosticsArrayTypeNode node = new SamplingIntervalDiagnosticsArrayTypeNode(this.context, Identifiers.ServerDiagnosticsType_SamplingIntervalDiagnosticsArray, new QualifiedName(0, "SamplingIntervalDiagnosticsArray"), new LocalizedText("en", "SamplingIntervalDiagnosticsArray"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.SamplingIntervalDiagnosticsDataType, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerDiagnosticsType_SamplingIntervalDiagnosticsArray, Identifiers.HasTypeDefinition, Identifiers.SamplingIntervalDiagnosticsArrayType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerDiagnosticsType_SamplingIntervalDiagnosticsArray, Identifiers.HasModellingRule, Identifiers.ModellingRule_Optional.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerDiagnosticsType_SamplingIntervalDiagnosticsArray, Identifiers.HasComponent, Identifiers.ServerDiagnosticsType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode535() {
        SubscriptionDiagnosticsArrayTypeNode node = new SubscriptionDiagnosticsArrayTypeNode(this.context, Identifiers.ServerDiagnosticsType_SubscriptionDiagnosticsArray, new QualifiedName(0, "SubscriptionDiagnosticsArray"), new LocalizedText("en", "SubscriptionDiagnosticsArray"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.SubscriptionDiagnosticsDataType, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerDiagnosticsType_SubscriptionDiagnosticsArray, Identifiers.HasTypeDefinition, Identifiers.SubscriptionDiagnosticsArrayType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerDiagnosticsType_SubscriptionDiagnosticsArray, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerDiagnosticsType_SubscriptionDiagnosticsArray, Identifiers.HasComponent, Identifiers.ServerDiagnosticsType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode536() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerDiagnosticsType_EnabledFlag, new QualifiedName(0, "EnabledFlag"), new LocalizedText("en", "EnabledFlag"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Boolean, -1, new UInteger[]{}, UByte.valueOf(3), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerDiagnosticsType_EnabledFlag, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerDiagnosticsType_EnabledFlag, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerDiagnosticsType_EnabledFlag, Identifiers.HasProperty, Identifiers.ServerDiagnosticsType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode537() {
        SessionDiagnosticsArrayTypeNode node = new SessionDiagnosticsArrayTypeNode(this.context, Identifiers.SessionsDiagnosticsSummaryType_SessionDiagnosticsArray, new QualifiedName(0, "SessionDiagnosticsArray"), new LocalizedText("en", "SessionDiagnosticsArray"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.SessionDiagnosticsDataType, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_SessionDiagnosticsArray, Identifiers.HasTypeDefinition, Identifiers.SessionDiagnosticsArrayType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_SessionDiagnosticsArray, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_SessionDiagnosticsArray, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode538() {
        SessionSecurityDiagnosticsArrayTypeNode node = new SessionSecurityDiagnosticsArrayTypeNode(this.context, Identifiers.SessionsDiagnosticsSummaryType_SessionSecurityDiagnosticsArray, new QualifiedName(0, "SessionSecurityDiagnosticsArray"), new LocalizedText("en", "SessionSecurityDiagnosticsArray"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.SessionSecurityDiagnosticsDataType, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_SessionSecurityDiagnosticsArray, Identifiers.HasTypeDefinition, Identifiers.SessionSecurityDiagnosticsArrayType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_SessionSecurityDiagnosticsArray, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_SessionSecurityDiagnosticsArray, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode539() {
        SessionDiagnosticsVariableTypeNode node = new SessionDiagnosticsVariableTypeNode(this.context, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics, new QualifiedName(0, "SessionDiagnostics"), new LocalizedText("en", "SessionDiagnostics"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.SessionDiagnosticsDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_SessionId.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_SessionName.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_ClientDescription.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_ServerUri.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_EndpointUrl.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_LocaleIds.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_ActualSessionTimeout.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_MaxResponseMessageSize.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_ClientConnectionTime.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_ClientLastContactTime.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_CurrentSubscriptionsCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_CurrentMonitoredItemsCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_CurrentPublishRequestsInQueue.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_TotalRequestCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_UnauthorizedRequestCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_ReadCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_HistoryReadCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_WriteCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_HistoryUpdateCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_CallCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_CreateMonitoredItemsCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_ModifyMonitoredItemsCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_SetMonitoringModeCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_SetTriggeringCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_DeleteMonitoredItemsCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_CreateSubscriptionCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_ModifySubscriptionCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_SetPublishingModeCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_PublishCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_RepublishCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_TransferSubscriptionsCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_DeleteSubscriptionsCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_AddNodesCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_AddReferencesCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_DeleteNodesCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_DeleteReferencesCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_BrowseCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_BrowseNextCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_TranslateBrowsePathsToNodeIdsCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_QueryFirstCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_QueryNextCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_RegisterNodesCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_UnregisterNodesCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics, Identifiers.HasTypeDefinition, Identifiers.SessionDiagnosticsVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionDiagnosticsObjectType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode540() {
        SessionSecurityDiagnosticsTypeNode node = new SessionSecurityDiagnosticsTypeNode(this.context, Identifiers.SessionDiagnosticsObjectType_SessionSecurityDiagnostics, new QualifiedName(0, "SessionSecurityDiagnostics"), new LocalizedText("en", "SessionSecurityDiagnostics"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.SessionSecurityDiagnosticsDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionSecurityDiagnostics, Identifiers.HasComponent, Identifiers.SessionDiagnosticsObjectType_SessionSecurityDiagnostics_SessionId.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionSecurityDiagnostics, Identifiers.HasComponent, Identifiers.SessionDiagnosticsObjectType_SessionSecurityDiagnostics_ClientUserIdOfSession.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionSecurityDiagnostics, Identifiers.HasComponent, Identifiers.SessionDiagnosticsObjectType_SessionSecurityDiagnostics_ClientUserIdHistory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionSecurityDiagnostics, Identifiers.HasComponent, Identifiers.SessionDiagnosticsObjectType_SessionSecurityDiagnostics_AuthenticationMechanism.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionSecurityDiagnostics, Identifiers.HasComponent, Identifiers.SessionDiagnosticsObjectType_SessionSecurityDiagnostics_Encoding.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionSecurityDiagnostics, Identifiers.HasComponent, Identifiers.SessionDiagnosticsObjectType_SessionSecurityDiagnostics_TransportProtocol.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionSecurityDiagnostics, Identifiers.HasComponent, Identifiers.SessionDiagnosticsObjectType_SessionSecurityDiagnostics_SecurityMode.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionSecurityDiagnostics, Identifiers.HasComponent, Identifiers.SessionDiagnosticsObjectType_SessionSecurityDiagnostics_SecurityPolicyUri.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionSecurityDiagnostics, Identifiers.HasComponent, Identifiers.SessionDiagnosticsObjectType_SessionSecurityDiagnostics_ClientCertificate.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionSecurityDiagnostics, Identifiers.HasTypeDefinition, Identifiers.SessionSecurityDiagnosticsType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionSecurityDiagnostics, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionSecurityDiagnostics, Identifiers.HasComponent, Identifiers.SessionDiagnosticsObjectType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode541() {
        SubscriptionDiagnosticsArrayTypeNode node = new SubscriptionDiagnosticsArrayTypeNode(this.context, Identifiers.SessionDiagnosticsObjectType_SubscriptionDiagnosticsArray, new QualifiedName(0, "SubscriptionDiagnosticsArray"), new LocalizedText("en", "SubscriptionDiagnosticsArray"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.SubscriptionDiagnosticsDataType, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SubscriptionDiagnosticsArray, Identifiers.HasTypeDefinition, Identifiers.SubscriptionDiagnosticsArrayType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SubscriptionDiagnosticsArray, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SubscriptionDiagnosticsArray, Identifiers.HasComponent, Identifiers.SessionDiagnosticsObjectType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode542() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerRedundancyType_RedundancySupport, new QualifiedName(0, "RedundancySupport"), new LocalizedText("en", "RedundancySupport"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.RedundancySupport, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerRedundancyType_RedundancySupport, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerRedundancyType_RedundancySupport, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerRedundancyType_RedundancySupport, Identifiers.HasProperty, Identifiers.ServerRedundancyType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode543() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.TransparentRedundancyType_CurrentServerId, new QualifiedName(0, "CurrentServerId"), new LocalizedText("en", "CurrentServerId"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.TransparentRedundancyType_CurrentServerId, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.TransparentRedundancyType_CurrentServerId, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.TransparentRedundancyType_CurrentServerId, Identifiers.HasProperty, Identifiers.TransparentRedundancyType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode544() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.TransparentRedundancyType_RedundantServerArray, new QualifiedName(0, "RedundantServerArray"), new LocalizedText("en", "RedundantServerArray"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.RedundantServerDataType, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.TransparentRedundancyType_RedundantServerArray, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.TransparentRedundancyType_RedundantServerArray, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.TransparentRedundancyType_RedundantServerArray, Identifiers.HasProperty, Identifiers.TransparentRedundancyType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode545() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.NonTransparentRedundancyType_ServerUriArray, new QualifiedName(0, "ServerUriArray"), new LocalizedText("en", "ServerUriArray"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.NonTransparentRedundancyType_ServerUriArray, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.NonTransparentRedundancyType_ServerUriArray, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.NonTransparentRedundancyType_ServerUriArray, Identifiers.HasProperty, Identifiers.NonTransparentRedundancyType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode546() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.BaseEventType_EventId, new QualifiedName(0, "EventId"), new LocalizedText("en", "EventId"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ByteString, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.BaseEventType_EventId, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.BaseEventType_EventId, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.BaseEventType_EventId, Identifiers.HasProperty, Identifiers.BaseEventType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode547() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.BaseEventType_EventType, new QualifiedName(0, "EventType"), new LocalizedText("en", "EventType"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.NodeId, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.BaseEventType_EventType, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.BaseEventType_EventType, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.BaseEventType_EventType, Identifiers.HasProperty, Identifiers.BaseEventType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode548() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.BaseEventType_SourceNode, new QualifiedName(0, "SourceNode"), new LocalizedText("en", "SourceNode"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.NodeId, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.BaseEventType_SourceNode, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.BaseEventType_SourceNode, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.BaseEventType_SourceNode, Identifiers.HasProperty, Identifiers.BaseEventType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode549() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.BaseEventType_SourceName, new QualifiedName(0, "SourceName"), new LocalizedText("en", "SourceName"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.BaseEventType_SourceName, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.BaseEventType_SourceName, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.BaseEventType_SourceName, Identifiers.HasProperty, Identifiers.BaseEventType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode550() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.BaseEventType_Time, new QualifiedName(0, "Time"), new LocalizedText("en", "Time"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UtcTime, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.BaseEventType_Time, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.BaseEventType_Time, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.BaseEventType_Time, Identifiers.HasProperty, Identifiers.BaseEventType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode551() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.BaseEventType_ReceiveTime, new QualifiedName(0, "ReceiveTime"), new LocalizedText("en", "ReceiveTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UtcTime, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.BaseEventType_ReceiveTime, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.BaseEventType_ReceiveTime, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.BaseEventType_ReceiveTime, Identifiers.HasProperty, Identifiers.BaseEventType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode552() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.BaseEventType_Message, new QualifiedName(0, "Message"), new LocalizedText("en", "Message"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.LocalizedText, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.BaseEventType_Message, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.BaseEventType_Message, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.BaseEventType_Message, Identifiers.HasProperty, Identifiers.BaseEventType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode553() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.BaseEventType_Severity, new QualifiedName(0, "Severity"), new LocalizedText("en", "Severity"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt16, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.BaseEventType_Severity, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.BaseEventType_Severity, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.BaseEventType_Severity, Identifiers.HasProperty, Identifiers.BaseEventType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode554() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.AuditEventType_ActionTimeStamp, new QualifiedName(0, "ActionTimeStamp"), new LocalizedText("en", "ActionTimeStamp"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UtcTime, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.AuditEventType_ActionTimeStamp, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditEventType_ActionTimeStamp, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditEventType_ActionTimeStamp, Identifiers.HasProperty, Identifiers.AuditEventType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode555() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.AuditEventType_Status, new QualifiedName(0, "Status"), new LocalizedText("en", "Status"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Boolean, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.AuditEventType_Status, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditEventType_Status, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditEventType_Status, Identifiers.HasProperty, Identifiers.AuditEventType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode556() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.AuditEventType_ServerId, new QualifiedName(0, "ServerId"), new LocalizedText("en", "ServerId"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.AuditEventType_ServerId, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditEventType_ServerId, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditEventType_ServerId, Identifiers.HasProperty, Identifiers.AuditEventType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode557() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.AuditEventType_ClientAuditEntryId, new QualifiedName(0, "ClientAuditEntryId"), new LocalizedText("en", "ClientAuditEntryId"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.AuditEventType_ClientAuditEntryId, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditEventType_ClientAuditEntryId, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditEventType_ClientAuditEntryId, Identifiers.HasProperty, Identifiers.AuditEventType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode558() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.AuditEventType_ClientUserId, new QualifiedName(0, "ClientUserId"), new LocalizedText("en", "ClientUserId"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.AuditEventType_ClientUserId, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditEventType_ClientUserId, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditEventType_ClientUserId, Identifiers.HasProperty, Identifiers.AuditEventType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode559() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.AuditOpenSecureChannelEventType_ClientCertificate, new QualifiedName(0, "ClientCertificate"), new LocalizedText("en", "ClientCertificate"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ByteString, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.AuditOpenSecureChannelEventType_ClientCertificate, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditOpenSecureChannelEventType_ClientCertificate, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditOpenSecureChannelEventType_ClientCertificate, Identifiers.HasProperty, Identifiers.AuditOpenSecureChannelEventType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode560() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.AuditOpenSecureChannelEventType_RequestType, new QualifiedName(0, "RequestType"), new LocalizedText("en", "RequestType"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.SecurityTokenRequestType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.AuditOpenSecureChannelEventType_RequestType, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditOpenSecureChannelEventType_RequestType, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditOpenSecureChannelEventType_RequestType, Identifiers.HasProperty, Identifiers.AuditOpenSecureChannelEventType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode561() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.AuditOpenSecureChannelEventType_SecurityPolicyUri, new QualifiedName(0, "SecurityPolicyUri"), new LocalizedText("en", "SecurityPolicyUri"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.AuditOpenSecureChannelEventType_SecurityPolicyUri, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditOpenSecureChannelEventType_SecurityPolicyUri, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditOpenSecureChannelEventType_SecurityPolicyUri, Identifiers.HasProperty, Identifiers.AuditOpenSecureChannelEventType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode562() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.AuditOpenSecureChannelEventType_SecurityMode, new QualifiedName(0, "SecurityMode"), new LocalizedText("en", "SecurityMode"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.MessageSecurityMode, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.AuditOpenSecureChannelEventType_SecurityMode, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditOpenSecureChannelEventType_SecurityMode, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditOpenSecureChannelEventType_SecurityMode, Identifiers.HasProperty, Identifiers.AuditOpenSecureChannelEventType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode563() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.AuditOpenSecureChannelEventType_RequestedLifetime, new QualifiedName(0, "RequestedLifetime"), new LocalizedText("en", "RequestedLifetime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Duration, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.AuditOpenSecureChannelEventType_RequestedLifetime, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditOpenSecureChannelEventType_RequestedLifetime, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditOpenSecureChannelEventType_RequestedLifetime, Identifiers.HasProperty, Identifiers.AuditOpenSecureChannelEventType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode564() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.AuditSessionEventType_SessionId, new QualifiedName(0, "SessionId"), new LocalizedText("en", "SessionId"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.NodeId, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.AuditSessionEventType_SessionId, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditSessionEventType_SessionId, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditSessionEventType_SessionId, Identifiers.HasProperty, Identifiers.AuditSessionEventType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode565() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.AuditCreateSessionEventType_SecureChannelId, new QualifiedName(0, "SecureChannelId"), new LocalizedText("en", "SecureChannelId"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.AuditCreateSessionEventType_SecureChannelId, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditCreateSessionEventType_SecureChannelId, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditCreateSessionEventType_SecureChannelId, Identifiers.HasProperty, Identifiers.AuditCreateSessionEventType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode566() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.AuditCreateSessionEventType_ClientCertificate, new QualifiedName(0, "ClientCertificate"), new LocalizedText("en", "ClientCertificate"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ByteString, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.AuditCreateSessionEventType_ClientCertificate, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditCreateSessionEventType_ClientCertificate, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditCreateSessionEventType_ClientCertificate, Identifiers.HasProperty, Identifiers.AuditCreateSessionEventType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode567() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.AuditCreateSessionEventType_RevisedSessionTimeout, new QualifiedName(0, "RevisedSessionTimeout"), new LocalizedText("en", "RevisedSessionTimeout"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Duration, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.AuditCreateSessionEventType_RevisedSessionTimeout, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditCreateSessionEventType_RevisedSessionTimeout, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditCreateSessionEventType_RevisedSessionTimeout, Identifiers.HasProperty, Identifiers.AuditCreateSessionEventType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode568() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.AuditActivateSessionEventType_ClientSoftwareCertificates, new QualifiedName(0, "ClientSoftwareCertificates"), new LocalizedText("en", "ClientSoftwareCertificates"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.SignedSoftwareCertificate, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.AuditActivateSessionEventType_ClientSoftwareCertificates, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditActivateSessionEventType_ClientSoftwareCertificates, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditActivateSessionEventType_ClientSoftwareCertificates, Identifiers.HasProperty, Identifiers.AuditActivateSessionEventType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode569() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.AuditActivateSessionEventType_UserIdentityToken, new QualifiedName(0, "UserIdentityToken"), new LocalizedText("en", "UserIdentityToken"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UserIdentityToken, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.AuditActivateSessionEventType_UserIdentityToken, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditActivateSessionEventType_UserIdentityToken, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditActivateSessionEventType_UserIdentityToken, Identifiers.HasProperty, Identifiers.AuditActivateSessionEventType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode570() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.AuditCancelEventType_RequestHandle, new QualifiedName(0, "RequestHandle"), new LocalizedText("en", "RequestHandle"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.AuditCancelEventType_RequestHandle, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditCancelEventType_RequestHandle, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditCancelEventType_RequestHandle, Identifiers.HasProperty, Identifiers.AuditCancelEventType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode571() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.AuditCertificateEventType_Certificate, new QualifiedName(0, "Certificate"), new LocalizedText("en", "Certificate"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ByteString, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.AuditCertificateEventType_Certificate, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditCertificateEventType_Certificate, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditCertificateEventType_Certificate, Identifiers.HasProperty, Identifiers.AuditCertificateEventType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode572() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.AuditCertificateDataMismatchEventType_InvalidHostname, new QualifiedName(0, "InvalidHostname"), new LocalizedText("en", "InvalidHostname"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.AuditCertificateDataMismatchEventType_InvalidHostname, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditCertificateDataMismatchEventType_InvalidHostname, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditCertificateDataMismatchEventType_InvalidHostname, Identifiers.HasProperty, Identifiers.AuditCertificateDataMismatchEventType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode573() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.AuditCertificateDataMismatchEventType_InvalidUri, new QualifiedName(0, "InvalidUri"), new LocalizedText("en", "InvalidUri"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.AuditCertificateDataMismatchEventType_InvalidUri, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditCertificateDataMismatchEventType_InvalidUri, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditCertificateDataMismatchEventType_InvalidUri, Identifiers.HasProperty, Identifiers.AuditCertificateDataMismatchEventType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode574() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.AuditAddNodesEventType_NodesToAdd, new QualifiedName(0, "NodesToAdd"), new LocalizedText("en", "NodesToAdd"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.AddNodesItem, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.AuditAddNodesEventType_NodesToAdd, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditAddNodesEventType_NodesToAdd, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditAddNodesEventType_NodesToAdd, Identifiers.HasProperty, Identifiers.AuditAddNodesEventType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode575() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.AuditDeleteNodesEventType_NodesToDelete, new QualifiedName(0, "NodesToDelete"), new LocalizedText("en", "NodesToDelete"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.DeleteNodesItem, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.AuditDeleteNodesEventType_NodesToDelete, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditDeleteNodesEventType_NodesToDelete, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditDeleteNodesEventType_NodesToDelete, Identifiers.HasProperty, Identifiers.AuditDeleteNodesEventType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode576() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.AuditAddReferencesEventType_ReferencesToAdd, new QualifiedName(0, "ReferencesToAdd"), new LocalizedText("en", "ReferencesToAdd"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.AddReferencesItem, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.AuditAddReferencesEventType_ReferencesToAdd, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditAddReferencesEventType_ReferencesToAdd, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditAddReferencesEventType_ReferencesToAdd, Identifiers.HasProperty, Identifiers.AuditAddReferencesEventType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode577() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.AuditDeleteReferencesEventType_ReferencesToDelete, new QualifiedName(0, "ReferencesToDelete"), new LocalizedText("en", "ReferencesToDelete"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.DeleteReferencesItem, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.AuditDeleteReferencesEventType_ReferencesToDelete, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditDeleteReferencesEventType_ReferencesToDelete, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditDeleteReferencesEventType_ReferencesToDelete, Identifiers.HasProperty, Identifiers.AuditDeleteReferencesEventType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode578() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.AuditWriteUpdateEventType_IndexRange, new QualifiedName(0, "IndexRange"), new LocalizedText("en", "IndexRange"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.NumericRange, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.AuditWriteUpdateEventType_IndexRange, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditWriteUpdateEventType_IndexRange, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditWriteUpdateEventType_IndexRange, Identifiers.HasProperty, Identifiers.AuditWriteUpdateEventType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode579() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.AuditWriteUpdateEventType_OldValue, new QualifiedName(0, "OldValue"), new LocalizedText("en", "OldValue"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.BaseDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.AuditWriteUpdateEventType_OldValue, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditWriteUpdateEventType_OldValue, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditWriteUpdateEventType_OldValue, Identifiers.HasProperty, Identifiers.AuditWriteUpdateEventType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode580() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.AuditWriteUpdateEventType_NewValue, new QualifiedName(0, "NewValue"), new LocalizedText("en", "NewValue"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.BaseDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.AuditWriteUpdateEventType_NewValue, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditWriteUpdateEventType_NewValue, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditWriteUpdateEventType_NewValue, Identifiers.HasProperty, Identifiers.AuditWriteUpdateEventType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode581() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.AuditUpdateMethodEventType_MethodId, new QualifiedName(0, "MethodId"), new LocalizedText("en", "MethodId"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.NodeId, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.AuditUpdateMethodEventType_MethodId, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditUpdateMethodEventType_MethodId, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditUpdateMethodEventType_MethodId, Identifiers.HasProperty, Identifiers.AuditUpdateMethodEventType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode582() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.AuditUpdateMethodEventType_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.BaseDataType, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.AuditUpdateMethodEventType_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditUpdateMethodEventType_InputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditUpdateMethodEventType_InputArguments, Identifiers.HasProperty, Identifiers.AuditUpdateMethodEventType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode583() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.GeneralModelChangeEventType_Changes, new QualifiedName(0, "Changes"), new LocalizedText("en", "Changes"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ModelChangeStructureDataType, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.GeneralModelChangeEventType_Changes, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.GeneralModelChangeEventType_Changes, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.GeneralModelChangeEventType_Changes, Identifiers.HasProperty, Identifiers.GeneralModelChangeEventType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode584() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.ServerStatusType_StartTime, new QualifiedName(0, "StartTime"), new LocalizedText("en", "StartTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UtcTime, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerStatusType_StartTime, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerStatusType_StartTime, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerStatusType_StartTime, Identifiers.HasComponent, Identifiers.ServerStatusType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode585() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.ServerStatusType_CurrentTime, new QualifiedName(0, "CurrentTime"), new LocalizedText("en", "CurrentTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UtcTime, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerStatusType_CurrentTime, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerStatusType_CurrentTime, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerStatusType_CurrentTime, Identifiers.HasComponent, Identifiers.ServerStatusType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode586() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.ServerStatusType_State, new QualifiedName(0, "State"), new LocalizedText("en", "State"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServerState, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerStatusType_State, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerStatusType_State, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerStatusType_State, Identifiers.HasComponent, Identifiers.ServerStatusType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode587() {
        BuildInfoTypeNode node = new BuildInfoTypeNode(this.context, Identifiers.ServerStatusType_BuildInfo, new QualifiedName(0, "BuildInfo"), new LocalizedText("en", "BuildInfo"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.BuildInfo, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerStatusType_BuildInfo, Identifiers.HasComponent, Identifiers.ServerStatusType_BuildInfo_ProductUri.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerStatusType_BuildInfo, Identifiers.HasComponent, Identifiers.ServerStatusType_BuildInfo_ManufacturerName.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerStatusType_BuildInfo, Identifiers.HasComponent, Identifiers.ServerStatusType_BuildInfo_ProductName.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerStatusType_BuildInfo, Identifiers.HasComponent, Identifiers.ServerStatusType_BuildInfo_SoftwareVersion.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerStatusType_BuildInfo, Identifiers.HasComponent, Identifiers.ServerStatusType_BuildInfo_BuildNumber.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerStatusType_BuildInfo, Identifiers.HasComponent, Identifiers.ServerStatusType_BuildInfo_BuildDate.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerStatusType_BuildInfo, Identifiers.HasTypeDefinition, Identifiers.BuildInfoType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerStatusType_BuildInfo, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerStatusType_BuildInfo, Identifiers.HasComponent, Identifiers.ServerStatusType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode588() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.ServerDiagnosticsSummaryType_ServerViewCount, new QualifiedName(0, "ServerViewCount"), new LocalizedText("en", "ServerViewCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerDiagnosticsSummaryType_ServerViewCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerDiagnosticsSummaryType_ServerViewCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerDiagnosticsSummaryType_ServerViewCount, Identifiers.HasComponent, Identifiers.ServerDiagnosticsSummaryType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode589() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.ServerDiagnosticsSummaryType_CurrentSessionCount, new QualifiedName(0, "CurrentSessionCount"), new LocalizedText("en", "CurrentSessionCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerDiagnosticsSummaryType_CurrentSessionCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerDiagnosticsSummaryType_CurrentSessionCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerDiagnosticsSummaryType_CurrentSessionCount, Identifiers.HasComponent, Identifiers.ServerDiagnosticsSummaryType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode590() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.ServerDiagnosticsSummaryType_CumulatedSessionCount, new QualifiedName(0, "CumulatedSessionCount"), new LocalizedText("en", "CumulatedSessionCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerDiagnosticsSummaryType_CumulatedSessionCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerDiagnosticsSummaryType_CumulatedSessionCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerDiagnosticsSummaryType_CumulatedSessionCount, Identifiers.HasComponent, Identifiers.ServerDiagnosticsSummaryType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode591() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.ServerDiagnosticsSummaryType_SecurityRejectedSessionCount, new QualifiedName(0, "SecurityRejectedSessionCount"), new LocalizedText("en", "SecurityRejectedSessionCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerDiagnosticsSummaryType_SecurityRejectedSessionCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerDiagnosticsSummaryType_SecurityRejectedSessionCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerDiagnosticsSummaryType_SecurityRejectedSessionCount, Identifiers.HasComponent, Identifiers.ServerDiagnosticsSummaryType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode592() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.ServerDiagnosticsSummaryType_RejectedSessionCount, new QualifiedName(0, "RejectedSessionCount"), new LocalizedText("en", "RejectedSessionCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerDiagnosticsSummaryType_RejectedSessionCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerDiagnosticsSummaryType_RejectedSessionCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerDiagnosticsSummaryType_RejectedSessionCount, Identifiers.HasComponent, Identifiers.ServerDiagnosticsSummaryType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode593() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.ServerDiagnosticsSummaryType_SessionTimeoutCount, new QualifiedName(0, "SessionTimeoutCount"), new LocalizedText("en", "SessionTimeoutCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerDiagnosticsSummaryType_SessionTimeoutCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerDiagnosticsSummaryType_SessionTimeoutCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerDiagnosticsSummaryType_SessionTimeoutCount, Identifiers.HasComponent, Identifiers.ServerDiagnosticsSummaryType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode594() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.ServerDiagnosticsSummaryType_SessionAbortCount, new QualifiedName(0, "SessionAbortCount"), new LocalizedText("en", "SessionAbortCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerDiagnosticsSummaryType_SessionAbortCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerDiagnosticsSummaryType_SessionAbortCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerDiagnosticsSummaryType_SessionAbortCount, Identifiers.HasComponent, Identifiers.ServerDiagnosticsSummaryType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode595() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.ServerDiagnosticsSummaryType_PublishingIntervalCount, new QualifiedName(0, "PublishingIntervalCount"), new LocalizedText("en", "PublishingIntervalCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerDiagnosticsSummaryType_PublishingIntervalCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerDiagnosticsSummaryType_PublishingIntervalCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerDiagnosticsSummaryType_PublishingIntervalCount, Identifiers.HasComponent, Identifiers.ServerDiagnosticsSummaryType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode596() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.ServerDiagnosticsSummaryType_CurrentSubscriptionCount, new QualifiedName(0, "CurrentSubscriptionCount"), new LocalizedText("en", "CurrentSubscriptionCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerDiagnosticsSummaryType_CurrentSubscriptionCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerDiagnosticsSummaryType_CurrentSubscriptionCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerDiagnosticsSummaryType_CurrentSubscriptionCount, Identifiers.HasComponent, Identifiers.ServerDiagnosticsSummaryType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode597() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.ServerDiagnosticsSummaryType_CumulatedSubscriptionCount, new QualifiedName(0, "CumulatedSubscriptionCount"), new LocalizedText("en", "CumulatedSubscriptionCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerDiagnosticsSummaryType_CumulatedSubscriptionCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerDiagnosticsSummaryType_CumulatedSubscriptionCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerDiagnosticsSummaryType_CumulatedSubscriptionCount, Identifiers.HasComponent, Identifiers.ServerDiagnosticsSummaryType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode598() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.ServerDiagnosticsSummaryType_SecurityRejectedRequestsCount, new QualifiedName(0, "SecurityRejectedRequestsCount"), new LocalizedText("en", "SecurityRejectedRequestsCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerDiagnosticsSummaryType_SecurityRejectedRequestsCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerDiagnosticsSummaryType_SecurityRejectedRequestsCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerDiagnosticsSummaryType_SecurityRejectedRequestsCount, Identifiers.HasComponent, Identifiers.ServerDiagnosticsSummaryType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode599() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.ServerDiagnosticsSummaryType_RejectedRequestsCount, new QualifiedName(0, "RejectedRequestsCount"), new LocalizedText("en", "RejectedRequestsCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerDiagnosticsSummaryType_RejectedRequestsCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerDiagnosticsSummaryType_RejectedRequestsCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerDiagnosticsSummaryType_RejectedRequestsCount, Identifiers.HasComponent, Identifiers.ServerDiagnosticsSummaryType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode600() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SamplingIntervalDiagnosticsType_SamplingInterval, new QualifiedName(0, "SamplingInterval"), new LocalizedText("en", "SamplingInterval"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Duration, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SamplingIntervalDiagnosticsType_SamplingInterval, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SamplingIntervalDiagnosticsType_SamplingInterval, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SamplingIntervalDiagnosticsType_SamplingInterval, Identifiers.HasComponent, Identifiers.SamplingIntervalDiagnosticsType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode601() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SubscriptionDiagnosticsType_SessionId, new QualifiedName(0, "SessionId"), new LocalizedText("en", "SessionId"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.NodeId, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsType_SessionId, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsType_SessionId, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsType_SessionId, Identifiers.HasComponent, Identifiers.SubscriptionDiagnosticsType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode602() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SubscriptionDiagnosticsType_SubscriptionId, new QualifiedName(0, "SubscriptionId"), new LocalizedText("en", "SubscriptionId"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsType_SubscriptionId, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsType_SubscriptionId, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsType_SubscriptionId, Identifiers.HasComponent, Identifiers.SubscriptionDiagnosticsType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode603() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SubscriptionDiagnosticsType_Priority, new QualifiedName(0, "Priority"), new LocalizedText("en", "Priority"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Byte, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsType_Priority, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsType_Priority, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsType_Priority, Identifiers.HasComponent, Identifiers.SubscriptionDiagnosticsType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode604() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SubscriptionDiagnosticsType_PublishingInterval, new QualifiedName(0, "PublishingInterval"), new LocalizedText("en", "PublishingInterval"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Double, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsType_PublishingInterval, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsType_PublishingInterval, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsType_PublishingInterval, Identifiers.HasComponent, Identifiers.SubscriptionDiagnosticsType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode605() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SubscriptionDiagnosticsType_MaxKeepAliveCount, new QualifiedName(0, "MaxKeepAliveCount"), new LocalizedText("en", "MaxKeepAliveCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsType_MaxKeepAliveCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsType_MaxKeepAliveCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsType_MaxKeepAliveCount, Identifiers.HasComponent, Identifiers.SubscriptionDiagnosticsType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode606() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SubscriptionDiagnosticsType_MaxNotificationsPerPublish, new QualifiedName(0, "MaxNotificationsPerPublish"), new LocalizedText("en", "MaxNotificationsPerPublish"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsType_MaxNotificationsPerPublish, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsType_MaxNotificationsPerPublish, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsType_MaxNotificationsPerPublish, Identifiers.HasComponent, Identifiers.SubscriptionDiagnosticsType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode607() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SubscriptionDiagnosticsType_PublishingEnabled, new QualifiedName(0, "PublishingEnabled"), new LocalizedText("en", "PublishingEnabled"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Boolean, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsType_PublishingEnabled, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsType_PublishingEnabled, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsType_PublishingEnabled, Identifiers.HasComponent, Identifiers.SubscriptionDiagnosticsType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode608() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SubscriptionDiagnosticsType_ModifyCount, new QualifiedName(0, "ModifyCount"), new LocalizedText("en", "ModifyCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsType_ModifyCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsType_ModifyCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsType_ModifyCount, Identifiers.HasComponent, Identifiers.SubscriptionDiagnosticsType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode609() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SubscriptionDiagnosticsType_EnableCount, new QualifiedName(0, "EnableCount"), new LocalizedText("en", "EnableCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsType_EnableCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsType_EnableCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsType_EnableCount, Identifiers.HasComponent, Identifiers.SubscriptionDiagnosticsType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode610() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SubscriptionDiagnosticsType_DisableCount, new QualifiedName(0, "DisableCount"), new LocalizedText("en", "DisableCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsType_DisableCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsType_DisableCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsType_DisableCount, Identifiers.HasComponent, Identifiers.SubscriptionDiagnosticsType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode611() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SubscriptionDiagnosticsType_RepublishRequestCount, new QualifiedName(0, "RepublishRequestCount"), new LocalizedText("en", "RepublishRequestCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsType_RepublishRequestCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsType_RepublishRequestCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsType_RepublishRequestCount, Identifiers.HasComponent, Identifiers.SubscriptionDiagnosticsType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode612() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SubscriptionDiagnosticsType_RepublishMessageRequestCount, new QualifiedName(0, "RepublishMessageRequestCount"), new LocalizedText("en", "RepublishMessageRequestCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsType_RepublishMessageRequestCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsType_RepublishMessageRequestCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsType_RepublishMessageRequestCount, Identifiers.HasComponent, Identifiers.SubscriptionDiagnosticsType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode613() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SubscriptionDiagnosticsType_RepublishMessageCount, new QualifiedName(0, "RepublishMessageCount"), new LocalizedText("en", "RepublishMessageCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsType_RepublishMessageCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsType_RepublishMessageCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsType_RepublishMessageCount, Identifiers.HasComponent, Identifiers.SubscriptionDiagnosticsType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode614() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SubscriptionDiagnosticsType_TransferRequestCount, new QualifiedName(0, "TransferRequestCount"), new LocalizedText("en", "TransferRequestCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsType_TransferRequestCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsType_TransferRequestCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsType_TransferRequestCount, Identifiers.HasComponent, Identifiers.SubscriptionDiagnosticsType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode615() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SubscriptionDiagnosticsType_TransferredToAltClientCount, new QualifiedName(0, "TransferredToAltClientCount"), new LocalizedText("en", "TransferredToAltClientCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsType_TransferredToAltClientCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsType_TransferredToAltClientCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsType_TransferredToAltClientCount, Identifiers.HasComponent, Identifiers.SubscriptionDiagnosticsType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode616() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SubscriptionDiagnosticsType_TransferredToSameClientCount, new QualifiedName(0, "TransferredToSameClientCount"), new LocalizedText("en", "TransferredToSameClientCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsType_TransferredToSameClientCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsType_TransferredToSameClientCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsType_TransferredToSameClientCount, Identifiers.HasComponent, Identifiers.SubscriptionDiagnosticsType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode617() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SubscriptionDiagnosticsType_PublishRequestCount, new QualifiedName(0, "PublishRequestCount"), new LocalizedText("en", "PublishRequestCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsType_PublishRequestCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsType_PublishRequestCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsType_PublishRequestCount, Identifiers.HasComponent, Identifiers.SubscriptionDiagnosticsType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode618() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SubscriptionDiagnosticsType_DataChangeNotificationsCount, new QualifiedName(0, "DataChangeNotificationsCount"), new LocalizedText("en", "DataChangeNotificationsCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsType_DataChangeNotificationsCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsType_DataChangeNotificationsCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsType_DataChangeNotificationsCount, Identifiers.HasComponent, Identifiers.SubscriptionDiagnosticsType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode619() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SubscriptionDiagnosticsType_NotificationsCount, new QualifiedName(0, "NotificationsCount"), new LocalizedText("en", "NotificationsCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsType_NotificationsCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsType_NotificationsCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsType_NotificationsCount, Identifiers.HasComponent, Identifiers.SubscriptionDiagnosticsType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode620() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsVariableType_SessionId, new QualifiedName(0, "SessionId"), new LocalizedText("en", "SessionId"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.NodeId, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_SessionId, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_SessionId, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_SessionId, Identifiers.HasComponent, Identifiers.SessionDiagnosticsVariableType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode621() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsVariableType_SessionName, new QualifiedName(0, "SessionName"), new LocalizedText("en", "SessionName"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_SessionName, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_SessionName, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_SessionName, Identifiers.HasComponent, Identifiers.SessionDiagnosticsVariableType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode622() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsVariableType_ClientDescription, new QualifiedName(0, "ClientDescription"), new LocalizedText("en", "ClientDescription"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ApplicationDescription, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_ClientDescription, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_ClientDescription, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_ClientDescription, Identifiers.HasComponent, Identifiers.SessionDiagnosticsVariableType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode623() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsVariableType_ServerUri, new QualifiedName(0, "ServerUri"), new LocalizedText("en", "ServerUri"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_ServerUri, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_ServerUri, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_ServerUri, Identifiers.HasComponent, Identifiers.SessionDiagnosticsVariableType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode624() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsVariableType_EndpointUrl, new QualifiedName(0, "EndpointUrl"), new LocalizedText("en", "EndpointUrl"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_EndpointUrl, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_EndpointUrl, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_EndpointUrl, Identifiers.HasComponent, Identifiers.SessionDiagnosticsVariableType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode625() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsVariableType_LocaleIds, new QualifiedName(0, "LocaleIds"), new LocalizedText("en", "LocaleIds"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.LocaleId, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_LocaleIds, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_LocaleIds, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_LocaleIds, Identifiers.HasComponent, Identifiers.SessionDiagnosticsVariableType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode626() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsVariableType_ActualSessionTimeout, new QualifiedName(0, "ActualSessionTimeout"), new LocalizedText("en", "ActualSessionTimeout"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Duration, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_ActualSessionTimeout, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_ActualSessionTimeout, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_ActualSessionTimeout, Identifiers.HasComponent, Identifiers.SessionDiagnosticsVariableType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode627() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsVariableType_ClientConnectionTime, new QualifiedName(0, "ClientConnectionTime"), new LocalizedText("en", "ClientConnectionTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UtcTime, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_ClientConnectionTime, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_ClientConnectionTime, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_ClientConnectionTime, Identifiers.HasComponent, Identifiers.SessionDiagnosticsVariableType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode628() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsVariableType_ClientLastContactTime, new QualifiedName(0, "ClientLastContactTime"), new LocalizedText("en", "ClientLastContactTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UtcTime, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_ClientLastContactTime, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_ClientLastContactTime, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_ClientLastContactTime, Identifiers.HasComponent, Identifiers.SessionDiagnosticsVariableType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode629() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsVariableType_CurrentSubscriptionsCount, new QualifiedName(0, "CurrentSubscriptionsCount"), new LocalizedText("en", "CurrentSubscriptionsCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_CurrentSubscriptionsCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_CurrentSubscriptionsCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_CurrentSubscriptionsCount, Identifiers.HasComponent, Identifiers.SessionDiagnosticsVariableType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode630() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsVariableType_CurrentMonitoredItemsCount, new QualifiedName(0, "CurrentMonitoredItemsCount"), new LocalizedText("en", "CurrentMonitoredItemsCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_CurrentMonitoredItemsCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_CurrentMonitoredItemsCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_CurrentMonitoredItemsCount, Identifiers.HasComponent, Identifiers.SessionDiagnosticsVariableType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode631() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsVariableType_CurrentPublishRequestsInQueue, new QualifiedName(0, "CurrentPublishRequestsInQueue"), new LocalizedText("en", "CurrentPublishRequestsInQueue"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_CurrentPublishRequestsInQueue, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_CurrentPublishRequestsInQueue, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_CurrentPublishRequestsInQueue, Identifiers.HasComponent, Identifiers.SessionDiagnosticsVariableType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode632() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsVariableType_ReadCount, new QualifiedName(0, "ReadCount"), new LocalizedText("en", "ReadCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_ReadCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_ReadCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_ReadCount, Identifiers.HasComponent, Identifiers.SessionDiagnosticsVariableType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode633() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsVariableType_HistoryReadCount, new QualifiedName(0, "HistoryReadCount"), new LocalizedText("en", "HistoryReadCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_HistoryReadCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_HistoryReadCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_HistoryReadCount, Identifiers.HasComponent, Identifiers.SessionDiagnosticsVariableType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode634() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsVariableType_WriteCount, new QualifiedName(0, "WriteCount"), new LocalizedText("en", "WriteCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_WriteCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_WriteCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_WriteCount, Identifiers.HasComponent, Identifiers.SessionDiagnosticsVariableType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode635() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsVariableType_HistoryUpdateCount, new QualifiedName(0, "HistoryUpdateCount"), new LocalizedText("en", "HistoryUpdateCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_HistoryUpdateCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_HistoryUpdateCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_HistoryUpdateCount, Identifiers.HasComponent, Identifiers.SessionDiagnosticsVariableType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode636() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsVariableType_CallCount, new QualifiedName(0, "CallCount"), new LocalizedText("en", "CallCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_CallCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_CallCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_CallCount, Identifiers.HasComponent, Identifiers.SessionDiagnosticsVariableType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode637() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsVariableType_CreateMonitoredItemsCount, new QualifiedName(0, "CreateMonitoredItemsCount"), new LocalizedText("en", "CreateMonitoredItemsCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_CreateMonitoredItemsCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_CreateMonitoredItemsCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_CreateMonitoredItemsCount, Identifiers.HasComponent, Identifiers.SessionDiagnosticsVariableType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode638() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsVariableType_ModifyMonitoredItemsCount, new QualifiedName(0, "ModifyMonitoredItemsCount"), new LocalizedText("en", "ModifyMonitoredItemsCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_ModifyMonitoredItemsCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_ModifyMonitoredItemsCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_ModifyMonitoredItemsCount, Identifiers.HasComponent, Identifiers.SessionDiagnosticsVariableType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode639() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsVariableType_SetMonitoringModeCount, new QualifiedName(0, "SetMonitoringModeCount"), new LocalizedText("en", "SetMonitoringModeCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_SetMonitoringModeCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_SetMonitoringModeCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_SetMonitoringModeCount, Identifiers.HasComponent, Identifiers.SessionDiagnosticsVariableType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode640() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsVariableType_SetTriggeringCount, new QualifiedName(0, "SetTriggeringCount"), new LocalizedText("en", "SetTriggeringCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_SetTriggeringCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_SetTriggeringCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_SetTriggeringCount, Identifiers.HasComponent, Identifiers.SessionDiagnosticsVariableType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode641() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsVariableType_DeleteMonitoredItemsCount, new QualifiedName(0, "DeleteMonitoredItemsCount"), new LocalizedText("en", "DeleteMonitoredItemsCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_DeleteMonitoredItemsCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_DeleteMonitoredItemsCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_DeleteMonitoredItemsCount, Identifiers.HasComponent, Identifiers.SessionDiagnosticsVariableType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode642() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsVariableType_CreateSubscriptionCount, new QualifiedName(0, "CreateSubscriptionCount"), new LocalizedText("en", "CreateSubscriptionCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_CreateSubscriptionCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_CreateSubscriptionCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_CreateSubscriptionCount, Identifiers.HasComponent, Identifiers.SessionDiagnosticsVariableType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode643() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsVariableType_ModifySubscriptionCount, new QualifiedName(0, "ModifySubscriptionCount"), new LocalizedText("en", "ModifySubscriptionCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_ModifySubscriptionCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_ModifySubscriptionCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_ModifySubscriptionCount, Identifiers.HasComponent, Identifiers.SessionDiagnosticsVariableType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode644() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsVariableType_SetPublishingModeCount, new QualifiedName(0, "SetPublishingModeCount"), new LocalizedText("en", "SetPublishingModeCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_SetPublishingModeCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_SetPublishingModeCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_SetPublishingModeCount, Identifiers.HasComponent, Identifiers.SessionDiagnosticsVariableType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode645() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsVariableType_PublishCount, new QualifiedName(0, "PublishCount"), new LocalizedText("en", "PublishCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_PublishCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_PublishCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_PublishCount, Identifiers.HasComponent, Identifiers.SessionDiagnosticsVariableType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode646() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsVariableType_RepublishCount, new QualifiedName(0, "RepublishCount"), new LocalizedText("en", "RepublishCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_RepublishCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_RepublishCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_RepublishCount, Identifiers.HasComponent, Identifiers.SessionDiagnosticsVariableType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode647() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsVariableType_TransferSubscriptionsCount, new QualifiedName(0, "TransferSubscriptionsCount"), new LocalizedText("en", "TransferSubscriptionsCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_TransferSubscriptionsCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_TransferSubscriptionsCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_TransferSubscriptionsCount, Identifiers.HasComponent, Identifiers.SessionDiagnosticsVariableType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode648() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsVariableType_DeleteSubscriptionsCount, new QualifiedName(0, "DeleteSubscriptionsCount"), new LocalizedText("en", "DeleteSubscriptionsCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_DeleteSubscriptionsCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_DeleteSubscriptionsCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_DeleteSubscriptionsCount, Identifiers.HasComponent, Identifiers.SessionDiagnosticsVariableType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode649() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsVariableType_AddNodesCount, new QualifiedName(0, "AddNodesCount"), new LocalizedText("en", "AddNodesCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_AddNodesCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_AddNodesCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_AddNodesCount, Identifiers.HasComponent, Identifiers.SessionDiagnosticsVariableType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode650() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsVariableType_AddReferencesCount, new QualifiedName(0, "AddReferencesCount"), new LocalizedText("en", "AddReferencesCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_AddReferencesCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_AddReferencesCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_AddReferencesCount, Identifiers.HasComponent, Identifiers.SessionDiagnosticsVariableType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode651() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsVariableType_DeleteNodesCount, new QualifiedName(0, "DeleteNodesCount"), new LocalizedText("en", "DeleteNodesCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_DeleteNodesCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_DeleteNodesCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_DeleteNodesCount, Identifiers.HasComponent, Identifiers.SessionDiagnosticsVariableType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode652() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsVariableType_DeleteReferencesCount, new QualifiedName(0, "DeleteReferencesCount"), new LocalizedText("en", "DeleteReferencesCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_DeleteReferencesCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_DeleteReferencesCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_DeleteReferencesCount, Identifiers.HasComponent, Identifiers.SessionDiagnosticsVariableType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode653() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsVariableType_BrowseCount, new QualifiedName(0, "BrowseCount"), new LocalizedText("en", "BrowseCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_BrowseCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_BrowseCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_BrowseCount, Identifiers.HasComponent, Identifiers.SessionDiagnosticsVariableType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode654() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsVariableType_BrowseNextCount, new QualifiedName(0, "BrowseNextCount"), new LocalizedText("en", "BrowseNextCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_BrowseNextCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_BrowseNextCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_BrowseNextCount, Identifiers.HasComponent, Identifiers.SessionDiagnosticsVariableType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode655() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsVariableType_TranslateBrowsePathsToNodeIdsCount, new QualifiedName(0, "TranslateBrowsePathsToNodeIdsCount"), new LocalizedText("en", "TranslateBrowsePathsToNodeIdsCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_TranslateBrowsePathsToNodeIdsCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_TranslateBrowsePathsToNodeIdsCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_TranslateBrowsePathsToNodeIdsCount, Identifiers.HasComponent, Identifiers.SessionDiagnosticsVariableType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode656() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsVariableType_QueryFirstCount, new QualifiedName(0, "QueryFirstCount"), new LocalizedText("en", "QueryFirstCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_QueryFirstCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_QueryFirstCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_QueryFirstCount, Identifiers.HasComponent, Identifiers.SessionDiagnosticsVariableType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode657() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsVariableType_QueryNextCount, new QualifiedName(0, "QueryNextCount"), new LocalizedText("en", "QueryNextCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_QueryNextCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_QueryNextCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_QueryNextCount, Identifiers.HasComponent, Identifiers.SessionDiagnosticsVariableType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode658() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionSecurityDiagnosticsType_SessionId, new QualifiedName(0, "SessionId"), new LocalizedText("en", "SessionId"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.NodeId, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionSecurityDiagnosticsType_SessionId, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionSecurityDiagnosticsType_SessionId, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionSecurityDiagnosticsType_SessionId, Identifiers.HasComponent, Identifiers.SessionSecurityDiagnosticsType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode659() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionSecurityDiagnosticsType_ClientUserIdOfSession, new QualifiedName(0, "ClientUserIdOfSession"), new LocalizedText("en", "ClientUserIdOfSession"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionSecurityDiagnosticsType_ClientUserIdOfSession, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionSecurityDiagnosticsType_ClientUserIdOfSession, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionSecurityDiagnosticsType_ClientUserIdOfSession, Identifiers.HasComponent, Identifiers.SessionSecurityDiagnosticsType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode660() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionSecurityDiagnosticsType_ClientUserIdHistory, new QualifiedName(0, "ClientUserIdHistory"), new LocalizedText("en", "ClientUserIdHistory"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionSecurityDiagnosticsType_ClientUserIdHistory, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionSecurityDiagnosticsType_ClientUserIdHistory, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionSecurityDiagnosticsType_ClientUserIdHistory, Identifiers.HasComponent, Identifiers.SessionSecurityDiagnosticsType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode661() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionSecurityDiagnosticsType_AuthenticationMechanism, new QualifiedName(0, "AuthenticationMechanism"), new LocalizedText("en", "AuthenticationMechanism"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionSecurityDiagnosticsType_AuthenticationMechanism, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionSecurityDiagnosticsType_AuthenticationMechanism, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionSecurityDiagnosticsType_AuthenticationMechanism, Identifiers.HasComponent, Identifiers.SessionSecurityDiagnosticsType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode662() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionSecurityDiagnosticsType_Encoding, new QualifiedName(0, "Encoding"), new LocalizedText("en", "Encoding"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionSecurityDiagnosticsType_Encoding, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionSecurityDiagnosticsType_Encoding, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionSecurityDiagnosticsType_Encoding, Identifiers.HasComponent, Identifiers.SessionSecurityDiagnosticsType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode663() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionSecurityDiagnosticsType_TransportProtocol, new QualifiedName(0, "TransportProtocol"), new LocalizedText("en", "TransportProtocol"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionSecurityDiagnosticsType_TransportProtocol, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionSecurityDiagnosticsType_TransportProtocol, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionSecurityDiagnosticsType_TransportProtocol, Identifiers.HasComponent, Identifiers.SessionSecurityDiagnosticsType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode664() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionSecurityDiagnosticsType_SecurityMode, new QualifiedName(0, "SecurityMode"), new LocalizedText("en", "SecurityMode"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.MessageSecurityMode, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionSecurityDiagnosticsType_SecurityMode, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionSecurityDiagnosticsType_SecurityMode, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionSecurityDiagnosticsType_SecurityMode, Identifiers.HasComponent, Identifiers.SessionSecurityDiagnosticsType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode665() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionSecurityDiagnosticsType_SecurityPolicyUri, new QualifiedName(0, "SecurityPolicyUri"), new LocalizedText("en", "SecurityPolicyUri"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionSecurityDiagnosticsType_SecurityPolicyUri, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionSecurityDiagnosticsType_SecurityPolicyUri, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionSecurityDiagnosticsType_SecurityPolicyUri, Identifiers.HasComponent, Identifiers.SessionSecurityDiagnosticsType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode666() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.Server_ServerArray, new QualifiedName(0, "ServerArray"), new LocalizedText("en", "ServerArray"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 1000.0, false);
        node.addReference(new Reference(Identifiers.Server_ServerArray, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.Server_ServerArray, Identifiers.HasProperty, Identifiers.Server.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode667() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.Server_NamespaceArray, new QualifiedName(0, "NamespaceArray"), new LocalizedText("en", "NamespaceArray"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 1000.0, false);
        node.addReference(new Reference(Identifiers.Server_NamespaceArray, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.Server_NamespaceArray, Identifiers.HasProperty, Identifiers.Server.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode668() {
        ServerStatusTypeNode node = new ServerStatusTypeNode(this.context, Identifiers.Server_ServerStatus, new QualifiedName(0, "ServerStatus"), new LocalizedText("en", "ServerStatus"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServerStatusDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 1000.0, false);
        node.addReference(new Reference(Identifiers.Server_ServerStatus, Identifiers.HasComponent, Identifiers.Server_ServerStatus_StartTime.expanded(), true));
        node.addReference(new Reference(Identifiers.Server_ServerStatus, Identifiers.HasComponent, Identifiers.Server_ServerStatus_CurrentTime.expanded(), true));
        node.addReference(new Reference(Identifiers.Server_ServerStatus, Identifiers.HasComponent, Identifiers.Server_ServerStatus_State.expanded(), true));
        node.addReference(new Reference(Identifiers.Server_ServerStatus, Identifiers.HasComponent, Identifiers.Server_ServerStatus_BuildInfo.expanded(), true));
        node.addReference(new Reference(Identifiers.Server_ServerStatus, Identifiers.HasComponent, Identifiers.Server_ServerStatus_SecondsTillShutdown.expanded(), true));
        node.addReference(new Reference(Identifiers.Server_ServerStatus, Identifiers.HasComponent, Identifiers.Server_ServerStatus_ShutdownReason.expanded(), true));
        node.addReference(new Reference(Identifiers.Server_ServerStatus, Identifiers.HasTypeDefinition, Identifiers.ServerStatusType.expanded(), true));
        node.addReference(new Reference(Identifiers.Server_ServerStatus, Identifiers.HasComponent, Identifiers.Server.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode669() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.Server_ServerStatus_StartTime, new QualifiedName(0, "StartTime"), new LocalizedText("en", "StartTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UtcTime, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.Server_ServerStatus_StartTime, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.Server_ServerStatus_StartTime, Identifiers.HasComponent, Identifiers.Server_ServerStatus.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode670() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.Server_ServerStatus_CurrentTime, new QualifiedName(0, "CurrentTime"), new LocalizedText("en", "CurrentTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UtcTime, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.Server_ServerStatus_CurrentTime, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.Server_ServerStatus_CurrentTime, Identifiers.HasComponent, Identifiers.Server_ServerStatus.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode671() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.Server_ServerStatus_State, new QualifiedName(0, "State"), new LocalizedText("en", "State"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServerState, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.Server_ServerStatus_State, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.Server_ServerStatus_State, Identifiers.HasComponent, Identifiers.Server_ServerStatus.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode672() {
        BuildInfoTypeNode node = new BuildInfoTypeNode(this.context, Identifiers.Server_ServerStatus_BuildInfo, new QualifiedName(0, "BuildInfo"), new LocalizedText("en", "BuildInfo"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.BuildInfo, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.Server_ServerStatus_BuildInfo, Identifiers.HasComponent, Identifiers.Server_ServerStatus_BuildInfo_ProductUri.expanded(), true));
        node.addReference(new Reference(Identifiers.Server_ServerStatus_BuildInfo, Identifiers.HasComponent, Identifiers.Server_ServerStatus_BuildInfo_ManufacturerName.expanded(), true));
        node.addReference(new Reference(Identifiers.Server_ServerStatus_BuildInfo, Identifiers.HasComponent, Identifiers.Server_ServerStatus_BuildInfo_ProductName.expanded(), true));
        node.addReference(new Reference(Identifiers.Server_ServerStatus_BuildInfo, Identifiers.HasComponent, Identifiers.Server_ServerStatus_BuildInfo_SoftwareVersion.expanded(), true));
        node.addReference(new Reference(Identifiers.Server_ServerStatus_BuildInfo, Identifiers.HasComponent, Identifiers.Server_ServerStatus_BuildInfo_BuildNumber.expanded(), true));
        node.addReference(new Reference(Identifiers.Server_ServerStatus_BuildInfo, Identifiers.HasComponent, Identifiers.Server_ServerStatus_BuildInfo_BuildDate.expanded(), true));
        node.addReference(new Reference(Identifiers.Server_ServerStatus_BuildInfo, Identifiers.HasTypeDefinition, Identifiers.BuildInfoType.expanded(), true));
        node.addReference(new Reference(Identifiers.Server_ServerStatus_BuildInfo, Identifiers.HasComponent, Identifiers.Server_ServerStatus.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode673() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.Server_ServerStatus_BuildInfo_ProductName, new QualifiedName(0, "ProductName"), new LocalizedText("en", "ProductName"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 1000.0, false);
        node.addReference(new Reference(Identifiers.Server_ServerStatus_BuildInfo_ProductName, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.Server_ServerStatus_BuildInfo_ProductName, Identifiers.HasComponent, Identifiers.Server_ServerStatus_BuildInfo.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode674() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.Server_ServerStatus_BuildInfo_ProductUri, new QualifiedName(0, "ProductUri"), new LocalizedText("en", "ProductUri"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 1000.0, false);
        node.addReference(new Reference(Identifiers.Server_ServerStatus_BuildInfo_ProductUri, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.Server_ServerStatus_BuildInfo_ProductUri, Identifiers.HasComponent, Identifiers.Server_ServerStatus_BuildInfo.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode675() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.Server_ServerStatus_BuildInfo_ManufacturerName, new QualifiedName(0, "ManufacturerName"), new LocalizedText("en", "ManufacturerName"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 1000.0, false);
        node.addReference(new Reference(Identifiers.Server_ServerStatus_BuildInfo_ManufacturerName, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.Server_ServerStatus_BuildInfo_ManufacturerName, Identifiers.HasComponent, Identifiers.Server_ServerStatus_BuildInfo.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode676() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.Server_ServerStatus_BuildInfo_SoftwareVersion, new QualifiedName(0, "SoftwareVersion"), new LocalizedText("en", "SoftwareVersion"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 1000.0, false);
        node.addReference(new Reference(Identifiers.Server_ServerStatus_BuildInfo_SoftwareVersion, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.Server_ServerStatus_BuildInfo_SoftwareVersion, Identifiers.HasComponent, Identifiers.Server_ServerStatus_BuildInfo.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode677() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.Server_ServerStatus_BuildInfo_BuildNumber, new QualifiedName(0, "BuildNumber"), new LocalizedText("en", "BuildNumber"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 1000.0, false);
        node.addReference(new Reference(Identifiers.Server_ServerStatus_BuildInfo_BuildNumber, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.Server_ServerStatus_BuildInfo_BuildNumber, Identifiers.HasComponent, Identifiers.Server_ServerStatus_BuildInfo.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode678() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.Server_ServerStatus_BuildInfo_BuildDate, new QualifiedName(0, "BuildDate"), new LocalizedText("en", "BuildDate"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UtcTime, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 1000.0, false);
        node.addReference(new Reference(Identifiers.Server_ServerStatus_BuildInfo_BuildDate, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.Server_ServerStatus_BuildInfo_BuildDate, Identifiers.HasComponent, Identifiers.Server_ServerStatus_BuildInfo.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode679() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.Server_ServiceLevel, new QualifiedName(0, "ServiceLevel"), new LocalizedText("en", "ServiceLevel"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Byte, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 1000.0, false);
        node.addReference(new Reference(Identifiers.Server_ServiceLevel, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.Server_ServiceLevel, Identifiers.HasProperty, Identifiers.Server.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode680() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.Server_ServerCapabilities_ServerProfileArray, new QualifiedName(0, "ServerProfileArray"), new LocalizedText("en", "ServerProfileArray"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.Server_ServerCapabilities_ServerProfileArray, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.Server_ServerCapabilities_ServerProfileArray, Identifiers.HasProperty, Identifiers.Server_ServerCapabilities.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode681() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.Server_ServerCapabilities_LocaleIdArray, new QualifiedName(0, "LocaleIdArray"), new LocalizedText("en", "LocaleIdArray"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.LocaleId, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.Server_ServerCapabilities_LocaleIdArray, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.Server_ServerCapabilities_LocaleIdArray, Identifiers.HasProperty, Identifiers.Server_ServerCapabilities.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode682() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.Server_ServerCapabilities_MinSupportedSampleRate, new QualifiedName(0, "MinSupportedSampleRate"), new LocalizedText("en", "MinSupportedSampleRate"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Duration, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.Server_ServerCapabilities_MinSupportedSampleRate, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.Server_ServerCapabilities_MinSupportedSampleRate, Identifiers.HasProperty, Identifiers.Server_ServerCapabilities.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode683() {
        ServerDiagnosticsSummaryTypeNode node = new ServerDiagnosticsSummaryTypeNode(this.context, Identifiers.Server_ServerDiagnostics_ServerDiagnosticsSummary, new QualifiedName(0, "ServerDiagnosticsSummary"), new LocalizedText("en", "ServerDiagnosticsSummary"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServerDiagnosticsSummaryDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.Server_ServerDiagnostics_ServerDiagnosticsSummary, Identifiers.HasComponent, Identifiers.Server_ServerDiagnostics_ServerDiagnosticsSummary_ServerViewCount.expanded(), true));
        node.addReference(new Reference(Identifiers.Server_ServerDiagnostics_ServerDiagnosticsSummary, Identifiers.HasComponent, Identifiers.Server_ServerDiagnostics_ServerDiagnosticsSummary_CurrentSessionCount.expanded(), true));
        node.addReference(new Reference(Identifiers.Server_ServerDiagnostics_ServerDiagnosticsSummary, Identifiers.HasComponent, Identifiers.Server_ServerDiagnostics_ServerDiagnosticsSummary_CumulatedSessionCount.expanded(), true));
        node.addReference(new Reference(Identifiers.Server_ServerDiagnostics_ServerDiagnosticsSummary, Identifiers.HasComponent, Identifiers.Server_ServerDiagnostics_ServerDiagnosticsSummary_SecurityRejectedSessionCount.expanded(), true));
        node.addReference(new Reference(Identifiers.Server_ServerDiagnostics_ServerDiagnosticsSummary, Identifiers.HasComponent, Identifiers.Server_ServerDiagnostics_ServerDiagnosticsSummary_RejectedSessionCount.expanded(), true));
        node.addReference(new Reference(Identifiers.Server_ServerDiagnostics_ServerDiagnosticsSummary, Identifiers.HasComponent, Identifiers.Server_ServerDiagnostics_ServerDiagnosticsSummary_SessionTimeoutCount.expanded(), true));
        node.addReference(new Reference(Identifiers.Server_ServerDiagnostics_ServerDiagnosticsSummary, Identifiers.HasComponent, Identifiers.Server_ServerDiagnostics_ServerDiagnosticsSummary_SessionAbortCount.expanded(), true));
        node.addReference(new Reference(Identifiers.Server_ServerDiagnostics_ServerDiagnosticsSummary, Identifiers.HasComponent, Identifiers.Server_ServerDiagnostics_ServerDiagnosticsSummary_PublishingIntervalCount.expanded(), true));
        node.addReference(new Reference(Identifiers.Server_ServerDiagnostics_ServerDiagnosticsSummary, Identifiers.HasComponent, Identifiers.Server_ServerDiagnostics_ServerDiagnosticsSummary_CurrentSubscriptionCount.expanded(), true));
        node.addReference(new Reference(Identifiers.Server_ServerDiagnostics_ServerDiagnosticsSummary, Identifiers.HasComponent, Identifiers.Server_ServerDiagnostics_ServerDiagnosticsSummary_CumulatedSubscriptionCount.expanded(), true));
        node.addReference(new Reference(Identifiers.Server_ServerDiagnostics_ServerDiagnosticsSummary, Identifiers.HasComponent, Identifiers.Server_ServerDiagnostics_ServerDiagnosticsSummary_SecurityRejectedRequestsCount.expanded(), true));
        node.addReference(new Reference(Identifiers.Server_ServerDiagnostics_ServerDiagnosticsSummary, Identifiers.HasComponent, Identifiers.Server_ServerDiagnostics_ServerDiagnosticsSummary_RejectedRequestsCount.expanded(), true));
        node.addReference(new Reference(Identifiers.Server_ServerDiagnostics_ServerDiagnosticsSummary, Identifiers.HasTypeDefinition, Identifiers.ServerDiagnosticsSummaryType.expanded(), true));
        node.addReference(new Reference(Identifiers.Server_ServerDiagnostics_ServerDiagnosticsSummary, Identifiers.HasComponent, Identifiers.Server_ServerDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode684() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.Server_ServerDiagnostics_ServerDiagnosticsSummary_ServerViewCount, new QualifiedName(0, "ServerViewCount"), new LocalizedText("en", "ServerViewCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.Server_ServerDiagnostics_ServerDiagnosticsSummary_ServerViewCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.Server_ServerDiagnostics_ServerDiagnosticsSummary_ServerViewCount, Identifiers.HasComponent, Identifiers.Server_ServerDiagnostics_ServerDiagnosticsSummary.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode685() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.Server_ServerDiagnostics_ServerDiagnosticsSummary_CurrentSessionCount, new QualifiedName(0, "CurrentSessionCount"), new LocalizedText("en", "CurrentSessionCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.Server_ServerDiagnostics_ServerDiagnosticsSummary_CurrentSessionCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.Server_ServerDiagnostics_ServerDiagnosticsSummary_CurrentSessionCount, Identifiers.HasComponent, Identifiers.Server_ServerDiagnostics_ServerDiagnosticsSummary.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode686() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.Server_ServerDiagnostics_ServerDiagnosticsSummary_CumulatedSessionCount, new QualifiedName(0, "CumulatedSessionCount"), new LocalizedText("en", "CumulatedSessionCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.Server_ServerDiagnostics_ServerDiagnosticsSummary_CumulatedSessionCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.Server_ServerDiagnostics_ServerDiagnosticsSummary_CumulatedSessionCount, Identifiers.HasComponent, Identifiers.Server_ServerDiagnostics_ServerDiagnosticsSummary.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode687() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.Server_ServerDiagnostics_ServerDiagnosticsSummary_SecurityRejectedSessionCount, new QualifiedName(0, "SecurityRejectedSessionCount"), new LocalizedText("en", "SecurityRejectedSessionCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.Server_ServerDiagnostics_ServerDiagnosticsSummary_SecurityRejectedSessionCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.Server_ServerDiagnostics_ServerDiagnosticsSummary_SecurityRejectedSessionCount, Identifiers.HasComponent, Identifiers.Server_ServerDiagnostics_ServerDiagnosticsSummary.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode688() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.Server_ServerDiagnostics_ServerDiagnosticsSummary_SessionTimeoutCount, new QualifiedName(0, "SessionTimeoutCount"), new LocalizedText("en", "SessionTimeoutCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.Server_ServerDiagnostics_ServerDiagnosticsSummary_SessionTimeoutCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.Server_ServerDiagnostics_ServerDiagnosticsSummary_SessionTimeoutCount, Identifiers.HasComponent, Identifiers.Server_ServerDiagnostics_ServerDiagnosticsSummary.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode689() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.Server_ServerDiagnostics_ServerDiagnosticsSummary_SessionAbortCount, new QualifiedName(0, "SessionAbortCount"), new LocalizedText("en", "SessionAbortCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.Server_ServerDiagnostics_ServerDiagnosticsSummary_SessionAbortCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.Server_ServerDiagnostics_ServerDiagnosticsSummary_SessionAbortCount, Identifiers.HasComponent, Identifiers.Server_ServerDiagnostics_ServerDiagnosticsSummary.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode690() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.Server_ServerDiagnostics_ServerDiagnosticsSummary_PublishingIntervalCount, new QualifiedName(0, "PublishingIntervalCount"), new LocalizedText("en", "PublishingIntervalCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.Server_ServerDiagnostics_ServerDiagnosticsSummary_PublishingIntervalCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.Server_ServerDiagnostics_ServerDiagnosticsSummary_PublishingIntervalCount, Identifiers.HasComponent, Identifiers.Server_ServerDiagnostics_ServerDiagnosticsSummary.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode691() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.Server_ServerDiagnostics_ServerDiagnosticsSummary_CurrentSubscriptionCount, new QualifiedName(0, "CurrentSubscriptionCount"), new LocalizedText("en", "CurrentSubscriptionCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.Server_ServerDiagnostics_ServerDiagnosticsSummary_CurrentSubscriptionCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.Server_ServerDiagnostics_ServerDiagnosticsSummary_CurrentSubscriptionCount, Identifiers.HasComponent, Identifiers.Server_ServerDiagnostics_ServerDiagnosticsSummary.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode692() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.Server_ServerDiagnostics_ServerDiagnosticsSummary_CumulatedSubscriptionCount, new QualifiedName(0, "CumulatedSubscriptionCount"), new LocalizedText("en", "CumulatedSubscriptionCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.Server_ServerDiagnostics_ServerDiagnosticsSummary_CumulatedSubscriptionCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.Server_ServerDiagnostics_ServerDiagnosticsSummary_CumulatedSubscriptionCount, Identifiers.HasComponent, Identifiers.Server_ServerDiagnostics_ServerDiagnosticsSummary.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode693() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.Server_ServerDiagnostics_ServerDiagnosticsSummary_SecurityRejectedRequestsCount, new QualifiedName(0, "SecurityRejectedRequestsCount"), new LocalizedText("en", "SecurityRejectedRequestsCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.Server_ServerDiagnostics_ServerDiagnosticsSummary_SecurityRejectedRequestsCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.Server_ServerDiagnostics_ServerDiagnosticsSummary_SecurityRejectedRequestsCount, Identifiers.HasComponent, Identifiers.Server_ServerDiagnostics_ServerDiagnosticsSummary.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode694() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.Server_ServerDiagnostics_ServerDiagnosticsSummary_RejectedRequestsCount, new QualifiedName(0, "RejectedRequestsCount"), new LocalizedText("en", "RejectedRequestsCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.Server_ServerDiagnostics_ServerDiagnosticsSummary_RejectedRequestsCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.Server_ServerDiagnostics_ServerDiagnosticsSummary_RejectedRequestsCount, Identifiers.HasComponent, Identifiers.Server_ServerDiagnostics_ServerDiagnosticsSummary.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode695() {
        SamplingIntervalDiagnosticsArrayTypeNode node = new SamplingIntervalDiagnosticsArrayTypeNode(this.context, Identifiers.Server_ServerDiagnostics_SamplingIntervalDiagnosticsArray, new QualifiedName(0, "SamplingIntervalDiagnosticsArray"), new LocalizedText("en", "SamplingIntervalDiagnosticsArray"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.SamplingIntervalDiagnosticsDataType, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.Server_ServerDiagnostics_SamplingIntervalDiagnosticsArray, Identifiers.HasTypeDefinition, Identifiers.SamplingIntervalDiagnosticsArrayType.expanded(), true));
        node.addReference(new Reference(Identifiers.Server_ServerDiagnostics_SamplingIntervalDiagnosticsArray, Identifiers.HasComponent, Identifiers.Server_ServerDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode696() {
        SubscriptionDiagnosticsArrayTypeNode node = new SubscriptionDiagnosticsArrayTypeNode(this.context, Identifiers.Server_ServerDiagnostics_SubscriptionDiagnosticsArray, new QualifiedName(0, "SubscriptionDiagnosticsArray"), new LocalizedText("en", "SubscriptionDiagnosticsArray"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.SubscriptionDiagnosticsDataType, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.Server_ServerDiagnostics_SubscriptionDiagnosticsArray, Identifiers.HasTypeDefinition, Identifiers.SubscriptionDiagnosticsArrayType.expanded(), true));
        node.addReference(new Reference(Identifiers.Server_ServerDiagnostics_SubscriptionDiagnosticsArray, Identifiers.HasComponent, Identifiers.Server_ServerDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode697() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.Server_ServerDiagnostics_EnabledFlag, new QualifiedName(0, "EnabledFlag"), new LocalizedText("en", "EnabledFlag"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Boolean, -1, new UInteger[]{}, UByte.valueOf(3), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.Server_ServerDiagnostics_EnabledFlag, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.Server_ServerDiagnostics_EnabledFlag, Identifiers.HasProperty, Identifiers.Server_ServerDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode698() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.StateType_StateNumber, new QualifiedName(0, "StateNumber"), new LocalizedText("en", "StateNumber"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.StateType_StateNumber, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.StateType_StateNumber, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.StateType_StateNumber, Identifiers.HasProperty, Identifiers.StateType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode699() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.TransitionType_TransitionNumber, new QualifiedName(0, "TransitionNumber"), new LocalizedText("en", "TransitionNumber"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.TransitionType_TransitionNumber, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.TransitionType_TransitionNumber, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.TransitionType_TransitionNumber, Identifiers.HasProperty, Identifiers.TransitionType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode700() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.HistoricalDataConfigurationType_Stepped, new QualifiedName(0, "Stepped"), new LocalizedText("en", "Stepped"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Boolean, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.HistoricalDataConfigurationType_Stepped, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.HistoricalDataConfigurationType_Stepped, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.HistoricalDataConfigurationType_Stepped, Identifiers.HasProperty, Identifiers.HistoricalDataConfigurationType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode701() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.HistoricalDataConfigurationType_Definition, new QualifiedName(0, "Definition"), new LocalizedText("en", "Definition"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.HistoricalDataConfigurationType_Definition, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.HistoricalDataConfigurationType_Definition, Identifiers.HasModellingRule, Identifiers.ModellingRule_Optional.expanded(), true));
        node.addReference(new Reference(Identifiers.HistoricalDataConfigurationType_Definition, Identifiers.HasProperty, Identifiers.HistoricalDataConfigurationType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode702() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.HistoricalDataConfigurationType_MaxTimeInterval, new QualifiedName(0, "MaxTimeInterval"), new LocalizedText("en", "MaxTimeInterval"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Duration, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.HistoricalDataConfigurationType_MaxTimeInterval, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.HistoricalDataConfigurationType_MaxTimeInterval, Identifiers.HasModellingRule, Identifiers.ModellingRule_Optional.expanded(), true));
        node.addReference(new Reference(Identifiers.HistoricalDataConfigurationType_MaxTimeInterval, Identifiers.HasProperty, Identifiers.HistoricalDataConfigurationType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode703() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.HistoricalDataConfigurationType_MinTimeInterval, new QualifiedName(0, "MinTimeInterval"), new LocalizedText("en", "MinTimeInterval"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Duration, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.HistoricalDataConfigurationType_MinTimeInterval, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.HistoricalDataConfigurationType_MinTimeInterval, Identifiers.HasModellingRule, Identifiers.ModellingRule_Optional.expanded(), true));
        node.addReference(new Reference(Identifiers.HistoricalDataConfigurationType_MinTimeInterval, Identifiers.HasProperty, Identifiers.HistoricalDataConfigurationType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode704() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.HistoricalDataConfigurationType_ExceptionDeviation, new QualifiedName(0, "ExceptionDeviation"), new LocalizedText("en", "ExceptionDeviation"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Double, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.HistoricalDataConfigurationType_ExceptionDeviation, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.HistoricalDataConfigurationType_ExceptionDeviation, Identifiers.HasModellingRule, Identifiers.ModellingRule_Optional.expanded(), true));
        node.addReference(new Reference(Identifiers.HistoricalDataConfigurationType_ExceptionDeviation, Identifiers.HasProperty, Identifiers.HistoricalDataConfigurationType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode705() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.HistoricalDataConfigurationType_ExceptionDeviationFormat, new QualifiedName(0, "ExceptionDeviationFormat"), new LocalizedText("en", "ExceptionDeviationFormat"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ExceptionDeviationFormat, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.HistoricalDataConfigurationType_ExceptionDeviationFormat, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.HistoricalDataConfigurationType_ExceptionDeviationFormat, Identifiers.HasModellingRule, Identifiers.ModellingRule_Optional.expanded(), true));
        node.addReference(new Reference(Identifiers.HistoricalDataConfigurationType_ExceptionDeviationFormat, Identifiers.HasProperty, Identifiers.HistoricalDataConfigurationType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode706() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.NonExclusiveDeviationAlarmType_SetpointNode, new QualifiedName(0, "SetpointNode"), new LocalizedText("en", "SetpointNode"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.NodeId, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.NonExclusiveDeviationAlarmType_SetpointNode, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.NonExclusiveDeviationAlarmType_SetpointNode, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.NonExclusiveDeviationAlarmType_SetpointNode, Identifiers.HasProperty, Identifiers.NonExclusiveDeviationAlarmType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode707() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.HistoryServerCapabilitiesType_AccessHistoryDataCapability, new QualifiedName(0, "AccessHistoryDataCapability"), new LocalizedText("en", "AccessHistoryDataCapability"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Boolean, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.HistoryServerCapabilitiesType_AccessHistoryDataCapability, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.HistoryServerCapabilitiesType_AccessHistoryDataCapability, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.HistoryServerCapabilitiesType_AccessHistoryDataCapability, Identifiers.HasProperty, Identifiers.HistoryServerCapabilitiesType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode708() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.HistoryServerCapabilitiesType_AccessHistoryEventsCapability, new QualifiedName(0, "AccessHistoryEventsCapability"), new LocalizedText("en", "AccessHistoryEventsCapability"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Boolean, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.HistoryServerCapabilitiesType_AccessHistoryEventsCapability, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.HistoryServerCapabilitiesType_AccessHistoryEventsCapability, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.HistoryServerCapabilitiesType_AccessHistoryEventsCapability, Identifiers.HasProperty, Identifiers.HistoryServerCapabilitiesType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode709() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.HistoryServerCapabilitiesType_InsertDataCapability, new QualifiedName(0, "InsertDataCapability"), new LocalizedText("en", "InsertDataCapability"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Boolean, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.HistoryServerCapabilitiesType_InsertDataCapability, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.HistoryServerCapabilitiesType_InsertDataCapability, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.HistoryServerCapabilitiesType_InsertDataCapability, Identifiers.HasProperty, Identifiers.HistoryServerCapabilitiesType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode710() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.HistoryServerCapabilitiesType_ReplaceDataCapability, new QualifiedName(0, "ReplaceDataCapability"), new LocalizedText("en", "ReplaceDataCapability"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Boolean, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.HistoryServerCapabilitiesType_ReplaceDataCapability, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.HistoryServerCapabilitiesType_ReplaceDataCapability, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.HistoryServerCapabilitiesType_ReplaceDataCapability, Identifiers.HasProperty, Identifiers.HistoryServerCapabilitiesType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode711() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.HistoryServerCapabilitiesType_UpdateDataCapability, new QualifiedName(0, "UpdateDataCapability"), new LocalizedText("en", "UpdateDataCapability"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Boolean, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.HistoryServerCapabilitiesType_UpdateDataCapability, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.HistoryServerCapabilitiesType_UpdateDataCapability, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.HistoryServerCapabilitiesType_UpdateDataCapability, Identifiers.HasProperty, Identifiers.HistoryServerCapabilitiesType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode712() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.HistoryServerCapabilitiesType_DeleteRawCapability, new QualifiedName(0, "DeleteRawCapability"), new LocalizedText("en", "DeleteRawCapability"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Boolean, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.HistoryServerCapabilitiesType_DeleteRawCapability, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.HistoryServerCapabilitiesType_DeleteRawCapability, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.HistoryServerCapabilitiesType_DeleteRawCapability, Identifiers.HasProperty, Identifiers.HistoryServerCapabilitiesType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode713() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.HistoryServerCapabilitiesType_DeleteAtTimeCapability, new QualifiedName(0, "DeleteAtTimeCapability"), new LocalizedText("en", "DeleteAtTimeCapability"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Boolean, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.HistoryServerCapabilitiesType_DeleteAtTimeCapability, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.HistoryServerCapabilitiesType_DeleteAtTimeCapability, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.HistoryServerCapabilitiesType_DeleteAtTimeCapability, Identifiers.HasProperty, Identifiers.HistoryServerCapabilitiesType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode714() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.DataItemType_Definition, new QualifiedName(0, "Definition"), new LocalizedText("en", "Definition"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.DataItemType_Definition, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.DataItemType_Definition, Identifiers.HasModellingRule, Identifiers.ModellingRule_Optional.expanded(), true));
        node.addReference(new Reference(Identifiers.DataItemType_Definition, Identifiers.HasProperty, Identifiers.DataItemType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode715() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.DataItemType_ValuePrecision, new QualifiedName(0, "ValuePrecision"), new LocalizedText("en", "ValuePrecision"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Double, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.DataItemType_ValuePrecision, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.DataItemType_ValuePrecision, Identifiers.HasModellingRule, Identifiers.ModellingRule_Optional.expanded(), true));
        node.addReference(new Reference(Identifiers.DataItemType_ValuePrecision, Identifiers.HasProperty, Identifiers.DataItemType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode716() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.AnalogItemType_EURange, new QualifiedName(0, "EURange"), new LocalizedText("en", "EURange"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Range, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.AnalogItemType_EURange, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.AnalogItemType_EURange, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.AnalogItemType_EURange, Identifiers.HasProperty, Identifiers.AnalogItemType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode717() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.AnalogItemType_InstrumentRange, new QualifiedName(0, "InstrumentRange"), new LocalizedText("en", "InstrumentRange"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Range, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.AnalogItemType_InstrumentRange, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.AnalogItemType_InstrumentRange, Identifiers.HasModellingRule, Identifiers.ModellingRule_Optional.expanded(), true));
        node.addReference(new Reference(Identifiers.AnalogItemType_InstrumentRange, Identifiers.HasProperty, Identifiers.AnalogItemType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode718() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.AnalogItemType_EngineeringUnits, new QualifiedName(0, "EngineeringUnits"), new LocalizedText("en", "EngineeringUnits"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.EUInformation, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.AnalogItemType_EngineeringUnits, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.AnalogItemType_EngineeringUnits, Identifiers.HasModellingRule, Identifiers.ModellingRule_Optional.expanded(), true));
        node.addReference(new Reference(Identifiers.AnalogItemType_EngineeringUnits, Identifiers.HasProperty, Identifiers.AnalogItemType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode719() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.TwoStateDiscreteType_FalseState, new QualifiedName(0, "FalseState"), new LocalizedText("en", "FalseState"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.LocalizedText, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.TwoStateDiscreteType_FalseState, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.TwoStateDiscreteType_FalseState, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.TwoStateDiscreteType_FalseState, Identifiers.HasProperty, Identifiers.TwoStateDiscreteType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode720() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.TwoStateDiscreteType_TrueState, new QualifiedName(0, "TrueState"), new LocalizedText("en", "TrueState"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.LocalizedText, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.TwoStateDiscreteType_TrueState, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.TwoStateDiscreteType_TrueState, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.TwoStateDiscreteType_TrueState, Identifiers.HasProperty, Identifiers.TwoStateDiscreteType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode721() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.MultiStateDiscreteType_EnumStrings, new QualifiedName(0, "EnumStrings"), new LocalizedText("en", "EnumStrings"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.LocalizedText, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.MultiStateDiscreteType_EnumStrings, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.MultiStateDiscreteType_EnumStrings, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.MultiStateDiscreteType_EnumStrings, Identifiers.HasProperty, Identifiers.MultiStateDiscreteType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode722() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ProgramTransitionEventType_IntermediateResult, new QualifiedName(0, "IntermediateResult"), new LocalizedText("en", "IntermediateResult"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.BaseDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ProgramTransitionEventType_IntermediateResult, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramTransitionEventType_IntermediateResult, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramTransitionEventType_IntermediateResult, Identifiers.HasProperty, Identifiers.ProgramTransitionEventType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode723() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ProgramDiagnosticType_CreateSessionId, new QualifiedName(0, "CreateSessionId"), new LocalizedText("en", "CreateSessionId"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.NodeId, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ProgramDiagnosticType_CreateSessionId, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramDiagnosticType_CreateSessionId, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramDiagnosticType_CreateSessionId, Identifiers.HasProperty, Identifiers.ProgramDiagnosticType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode724() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ProgramDiagnosticType_CreateClientName, new QualifiedName(0, "CreateClientName"), new LocalizedText("en", "CreateClientName"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ProgramDiagnosticType_CreateClientName, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramDiagnosticType_CreateClientName, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramDiagnosticType_CreateClientName, Identifiers.HasProperty, Identifiers.ProgramDiagnosticType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode725() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ProgramDiagnosticType_InvocationCreationTime, new QualifiedName(0, "InvocationCreationTime"), new LocalizedText("en", "InvocationCreationTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UtcTime, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ProgramDiagnosticType_InvocationCreationTime, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramDiagnosticType_InvocationCreationTime, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramDiagnosticType_InvocationCreationTime, Identifiers.HasProperty, Identifiers.ProgramDiagnosticType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode726() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ProgramDiagnosticType_LastTransitionTime, new QualifiedName(0, "LastTransitionTime"), new LocalizedText("en", "LastTransitionTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UtcTime, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ProgramDiagnosticType_LastTransitionTime, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramDiagnosticType_LastTransitionTime, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramDiagnosticType_LastTransitionTime, Identifiers.HasProperty, Identifiers.ProgramDiagnosticType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode727() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ProgramDiagnosticType_LastMethodCall, new QualifiedName(0, "LastMethodCall"), new LocalizedText("en", "LastMethodCall"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ProgramDiagnosticType_LastMethodCall, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramDiagnosticType_LastMethodCall, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramDiagnosticType_LastMethodCall, Identifiers.HasProperty, Identifiers.ProgramDiagnosticType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode728() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ProgramDiagnosticType_LastMethodSessionId, new QualifiedName(0, "LastMethodSessionId"), new LocalizedText("en", "LastMethodSessionId"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.NodeId, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ProgramDiagnosticType_LastMethodSessionId, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramDiagnosticType_LastMethodSessionId, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramDiagnosticType_LastMethodSessionId, Identifiers.HasProperty, Identifiers.ProgramDiagnosticType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode729() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ProgramDiagnosticType_LastMethodInputArguments, new QualifiedName(0, "LastMethodInputArguments"), new LocalizedText("en", "LastMethodInputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ProgramDiagnosticType_LastMethodInputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramDiagnosticType_LastMethodInputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramDiagnosticType_LastMethodInputArguments, Identifiers.HasProperty, Identifiers.ProgramDiagnosticType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode730() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ProgramDiagnosticType_LastMethodOutputArguments, new QualifiedName(0, "LastMethodOutputArguments"), new LocalizedText("en", "LastMethodOutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ProgramDiagnosticType_LastMethodOutputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramDiagnosticType_LastMethodOutputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramDiagnosticType_LastMethodOutputArguments, Identifiers.HasProperty, Identifiers.ProgramDiagnosticType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode731() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ProgramDiagnosticType_LastMethodCallTime, new QualifiedName(0, "LastMethodCallTime"), new LocalizedText("en", "LastMethodCallTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UtcTime, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ProgramDiagnosticType_LastMethodCallTime, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramDiagnosticType_LastMethodCallTime, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramDiagnosticType_LastMethodCallTime, Identifiers.HasProperty, Identifiers.ProgramDiagnosticType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode732() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ProgramDiagnosticType_LastMethodReturnStatus, new QualifiedName(0, "LastMethodReturnStatus"), new LocalizedText("en", "LastMethodReturnStatus"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.StatusResult, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ProgramDiagnosticType_LastMethodReturnStatus, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramDiagnosticType_LastMethodReturnStatus, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramDiagnosticType_LastMethodReturnStatus, Identifiers.HasProperty, Identifiers.ProgramDiagnosticType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode733() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ProgramStateMachineType_Creatable, new QualifiedName(0, "Creatable"), new LocalizedText("en", "Creatable"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Boolean, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_Creatable, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_Creatable, Identifiers.HasProperty, Identifiers.ProgramStateMachineType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode734() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ProgramStateMachineType_Deletable, new QualifiedName(0, "Deletable"), new LocalizedText("en", "Deletable"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Boolean, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_Deletable, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_Deletable, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_Deletable, Identifiers.HasProperty, Identifiers.ProgramStateMachineType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode735() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ProgramStateMachineType_AutoDelete, new QualifiedName(0, "AutoDelete"), new LocalizedText("en", "AutoDelete"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Boolean, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_AutoDelete, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_AutoDelete, Identifiers.HasModellingRule, Identifiers.ModellingRule_MandatoryShared.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_AutoDelete, Identifiers.HasProperty, Identifiers.ProgramStateMachineType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode736() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ProgramStateMachineType_RecycleCount, new QualifiedName(0, "RecycleCount"), new LocalizedText("en", "RecycleCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Int32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_RecycleCount, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_RecycleCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_RecycleCount, Identifiers.HasProperty, Identifiers.ProgramStateMachineType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode737() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ProgramStateMachineType_InstanceCount, new QualifiedName(0, "InstanceCount"), new LocalizedText("en", "InstanceCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_InstanceCount, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_InstanceCount, Identifiers.HasProperty, Identifiers.ProgramStateMachineType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode738() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ProgramStateMachineType_MaxInstanceCount, new QualifiedName(0, "MaxInstanceCount"), new LocalizedText("en", "MaxInstanceCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_MaxInstanceCount, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_MaxInstanceCount, Identifiers.HasProperty, Identifiers.ProgramStateMachineType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode739() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ProgramStateMachineType_MaxRecycleCount, new QualifiedName(0, "MaxRecycleCount"), new LocalizedText("en", "MaxRecycleCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_MaxRecycleCount, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_MaxRecycleCount, Identifiers.HasProperty, Identifiers.ProgramStateMachineType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode740() {
        ProgramDiagnosticTypeNode node = new ProgramDiagnosticTypeNode(this.context, Identifiers.ProgramStateMachineType_ProgramDiagnostics, new QualifiedName(0, "ProgramDiagnostics"), new LocalizedText("en", "ProgramDiagnostics"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ProgramDiagnosticDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_ProgramDiagnostics, Identifiers.HasProperty, Identifiers.ProgramStateMachineType_ProgramDiagnostics_CreateSessionId.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_ProgramDiagnostics, Identifiers.HasProperty, Identifiers.ProgramStateMachineType_ProgramDiagnostics_CreateClientName.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_ProgramDiagnostics, Identifiers.HasProperty, Identifiers.ProgramStateMachineType_ProgramDiagnostics_InvocationCreationTime.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_ProgramDiagnostics, Identifiers.HasProperty, Identifiers.ProgramStateMachineType_ProgramDiagnostics_LastTransitionTime.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_ProgramDiagnostics, Identifiers.HasProperty, Identifiers.ProgramStateMachineType_ProgramDiagnostics_LastMethodCall.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_ProgramDiagnostics, Identifiers.HasProperty, Identifiers.ProgramStateMachineType_ProgramDiagnostics_LastMethodSessionId.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_ProgramDiagnostics, Identifiers.HasProperty, Identifiers.ProgramStateMachineType_ProgramDiagnostics_LastMethodInputArguments.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_ProgramDiagnostics, Identifiers.HasProperty, Identifiers.ProgramStateMachineType_ProgramDiagnostics_LastMethodOutputArguments.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_ProgramDiagnostics, Identifiers.HasProperty, Identifiers.ProgramStateMachineType_ProgramDiagnostics_LastMethodCallTime.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_ProgramDiagnostics, Identifiers.HasProperty, Identifiers.ProgramStateMachineType_ProgramDiagnostics_LastMethodReturnStatus.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_ProgramDiagnostics, Identifiers.HasTypeDefinition, Identifiers.ProgramDiagnosticType.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_ProgramDiagnostics, Identifiers.HasModellingRule, Identifiers.ModellingRule_Optional.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_ProgramDiagnostics, Identifiers.HasComponent, Identifiers.ProgramStateMachineType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode741() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ProgramStateMachineType_Ready_StateNumber, new QualifiedName(0, "StateNumber"), new LocalizedText("en", "StateNumber"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_Ready_StateNumber, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_Ready_StateNumber, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_Ready_StateNumber, Identifiers.HasProperty, Identifiers.ProgramStateMachineType_Ready.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<UInt32 xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">1</UInt32>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode742() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ProgramStateMachineType_Running_StateNumber, new QualifiedName(0, "StateNumber"), new LocalizedText("en", "StateNumber"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_Running_StateNumber, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_Running_StateNumber, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_Running_StateNumber, Identifiers.HasProperty, Identifiers.ProgramStateMachineType_Running.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<UInt32 xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">2</UInt32>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode743() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ProgramStateMachineType_Suspended_StateNumber, new QualifiedName(0, "StateNumber"), new LocalizedText("en", "StateNumber"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_Suspended_StateNumber, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_Suspended_StateNumber, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_Suspended_StateNumber, Identifiers.HasProperty, Identifiers.ProgramStateMachineType_Suspended.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<UInt32 xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">3</UInt32>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode744() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ProgramStateMachineType_Halted_StateNumber, new QualifiedName(0, "StateNumber"), new LocalizedText("en", "StateNumber"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_Halted_StateNumber, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_Halted_StateNumber, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_Halted_StateNumber, Identifiers.HasProperty, Identifiers.ProgramStateMachineType_Halted.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<UInt32 xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">4</UInt32>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode745() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ProgramStateMachineType_HaltedToReady_TransitionNumber, new QualifiedName(0, "TransitionNumber"), new LocalizedText("en", "TransitionNumber"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_HaltedToReady_TransitionNumber, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_HaltedToReady_TransitionNumber, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_HaltedToReady_TransitionNumber, Identifiers.HasProperty, Identifiers.ProgramStateMachineType_HaltedToReady.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<UInt32 xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">1</UInt32>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode746() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ProgramStateMachineType_ReadyToRunning_TransitionNumber, new QualifiedName(0, "TransitionNumber"), new LocalizedText("en", "TransitionNumber"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_ReadyToRunning_TransitionNumber, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_ReadyToRunning_TransitionNumber, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_ReadyToRunning_TransitionNumber, Identifiers.HasProperty, Identifiers.ProgramStateMachineType_ReadyToRunning.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<UInt32 xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">2</UInt32>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode747() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ProgramStateMachineType_RunningToHalted_TransitionNumber, new QualifiedName(0, "TransitionNumber"), new LocalizedText("en", "TransitionNumber"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_RunningToHalted_TransitionNumber, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_RunningToHalted_TransitionNumber, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_RunningToHalted_TransitionNumber, Identifiers.HasProperty, Identifiers.ProgramStateMachineType_RunningToHalted.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<UInt32 xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">3</UInt32>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode748() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ProgramStateMachineType_RunningToReady_TransitionNumber, new QualifiedName(0, "TransitionNumber"), new LocalizedText("en", "TransitionNumber"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_RunningToReady_TransitionNumber, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_RunningToReady_TransitionNumber, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_RunningToReady_TransitionNumber, Identifiers.HasProperty, Identifiers.ProgramStateMachineType_RunningToReady.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<UInt32 xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">4</UInt32>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode749() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ProgramStateMachineType_RunningToSuspended_TransitionNumber, new QualifiedName(0, "TransitionNumber"), new LocalizedText("en", "TransitionNumber"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_RunningToSuspended_TransitionNumber, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_RunningToSuspended_TransitionNumber, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_RunningToSuspended_TransitionNumber, Identifiers.HasProperty, Identifiers.ProgramStateMachineType_RunningToSuspended.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<UInt32 xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">5</UInt32>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode750() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ProgramStateMachineType_SuspendedToRunning_TransitionNumber, new QualifiedName(0, "TransitionNumber"), new LocalizedText("en", "TransitionNumber"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_SuspendedToRunning_TransitionNumber, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_SuspendedToRunning_TransitionNumber, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_SuspendedToRunning_TransitionNumber, Identifiers.HasProperty, Identifiers.ProgramStateMachineType_SuspendedToRunning.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<UInt32 xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">6</UInt32>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode751() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ProgramStateMachineType_SuspendedToHalted_TransitionNumber, new QualifiedName(0, "TransitionNumber"), new LocalizedText("en", "TransitionNumber"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_SuspendedToHalted_TransitionNumber, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_SuspendedToHalted_TransitionNumber, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_SuspendedToHalted_TransitionNumber, Identifiers.HasProperty, Identifiers.ProgramStateMachineType_SuspendedToHalted.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<UInt32 xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">7</UInt32>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode752() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ProgramStateMachineType_SuspendedToReady_TransitionNumber, new QualifiedName(0, "TransitionNumber"), new LocalizedText("en", "TransitionNumber"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_SuspendedToReady_TransitionNumber, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_SuspendedToReady_TransitionNumber, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_SuspendedToReady_TransitionNumber, Identifiers.HasProperty, Identifiers.ProgramStateMachineType_SuspendedToReady.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<UInt32 xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">8</UInt32>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode753() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ProgramStateMachineType_ReadyToHalted_TransitionNumber, new QualifiedName(0, "TransitionNumber"), new LocalizedText("en", "TransitionNumber"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_ReadyToHalted_TransitionNumber, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_ReadyToHalted_TransitionNumber, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_ReadyToHalted_TransitionNumber, Identifiers.HasProperty, Identifiers.ProgramStateMachineType_ReadyToHalted.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<UInt32 xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">9</UInt32>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode754() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.CertificateExpirationAlarmType_ExpirationLimit, new QualifiedName(0, "ExpirationLimit"), new LocalizedText("en", "ExpirationLimit"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Duration, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.CertificateExpirationAlarmType_ExpirationLimit, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateExpirationAlarmType_ExpirationLimit, Identifiers.HasModellingRule, Identifiers.ModellingRule_Optional.expanded(), true));
        node.addReference(new Reference(Identifiers.CertificateExpirationAlarmType_ExpirationLimit, Identifiers.HasProperty, Identifiers.CertificateExpirationAlarmType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode755() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 15001), new QualifiedName(0, "ConditionEventId"), new LocalizedText("en", "ConditionEventId"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ByteString, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 15001), Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(new NodeId(0, 15001), Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(new NodeId(0, 15001), Identifiers.HasProperty, Identifiers.AuditConditionCommentEventType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode756() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 15002), new QualifiedName(0, "ConditionEventId"), new LocalizedText("en", "ConditionEventId"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ByteString, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 15002), Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(new NodeId(0, 15002), Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(new NodeId(0, 15002), Identifiers.HasProperty, Identifiers.AuditConditionAcknowledgeEventType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode757() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, new NodeId(0, 15003), new QualifiedName(0, "ConditionEventId"), new LocalizedText("en", "ConditionEventId"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ByteString, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(new NodeId(0, 15003), Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(new NodeId(0, 15003), Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(new NodeId(0, 15003), Identifiers.HasProperty, Identifiers.AuditConditionConfirmEventType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode758() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsVariableType_RegisterNodesCount, new QualifiedName(0, "RegisterNodesCount"), new LocalizedText("en", "RegisterNodesCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_RegisterNodesCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_RegisterNodesCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_RegisterNodesCount, Identifiers.HasComponent, Identifiers.SessionDiagnosticsVariableType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode759() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsVariableType_UnregisterNodesCount, new QualifiedName(0, "UnregisterNodesCount"), new LocalizedText("en", "UnregisterNodesCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_UnregisterNodesCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_UnregisterNodesCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_UnregisterNodesCount, Identifiers.HasComponent, Identifiers.SessionDiagnosticsVariableType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode760() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerCapabilitiesType_MaxBrowseContinuationPoints, new QualifiedName(0, "MaxBrowseContinuationPoints"), new LocalizedText("en", "MaxBrowseContinuationPoints"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt16, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerCapabilitiesType_MaxBrowseContinuationPoints, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerCapabilitiesType_MaxBrowseContinuationPoints, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerCapabilitiesType_MaxBrowseContinuationPoints, Identifiers.HasProperty, Identifiers.ServerCapabilitiesType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode761() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerCapabilitiesType_MaxQueryContinuationPoints, new QualifiedName(0, "MaxQueryContinuationPoints"), new LocalizedText("en", "MaxQueryContinuationPoints"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt16, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerCapabilitiesType_MaxQueryContinuationPoints, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerCapabilitiesType_MaxQueryContinuationPoints, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerCapabilitiesType_MaxQueryContinuationPoints, Identifiers.HasProperty, Identifiers.ServerCapabilitiesType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode762() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerCapabilitiesType_MaxHistoryContinuationPoints, new QualifiedName(0, "MaxHistoryContinuationPoints"), new LocalizedText("en", "MaxHistoryContinuationPoints"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt16, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerCapabilitiesType_MaxHistoryContinuationPoints, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerCapabilitiesType_MaxHistoryContinuationPoints, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerCapabilitiesType_MaxHistoryContinuationPoints, Identifiers.HasProperty, Identifiers.ServerCapabilitiesType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode763() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.Server_ServerCapabilities_MaxBrowseContinuationPoints, new QualifiedName(0, "MaxBrowseContinuationPoints"), new LocalizedText("en", "MaxBrowseContinuationPoints"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt16, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.Server_ServerCapabilities_MaxBrowseContinuationPoints, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.Server_ServerCapabilities_MaxBrowseContinuationPoints, Identifiers.HasProperty, Identifiers.Server_ServerCapabilities.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode764() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.Server_ServerCapabilities_MaxQueryContinuationPoints, new QualifiedName(0, "MaxQueryContinuationPoints"), new LocalizedText("en", "MaxQueryContinuationPoints"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt16, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.Server_ServerCapabilities_MaxQueryContinuationPoints, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.Server_ServerCapabilities_MaxQueryContinuationPoints, Identifiers.HasProperty, Identifiers.Server_ServerCapabilities.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode765() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.Server_ServerCapabilities_MaxHistoryContinuationPoints, new QualifiedName(0, "MaxHistoryContinuationPoints"), new LocalizedText("en", "MaxHistoryContinuationPoints"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt16, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.Server_ServerCapabilities_MaxHistoryContinuationPoints, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.Server_ServerCapabilities_MaxHistoryContinuationPoints, Identifiers.HasProperty, Identifiers.Server_ServerCapabilities.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode766() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.SemanticChangeEventType_Changes, new QualifiedName(0, "Changes"), new LocalizedText("en", "Changes"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.SemanticChangeStructureDataType, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SemanticChangeEventType_Changes, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.SemanticChangeEventType_Changes, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SemanticChangeEventType_Changes, Identifiers.HasProperty, Identifiers.SemanticChangeEventType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode767() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerType_Auditing, new QualifiedName(0, "Auditing"), new LocalizedText("en", "Auditing"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Boolean, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 1000.0, false);
        node.addReference(new Reference(Identifiers.ServerType_Auditing, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_Auditing, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_Auditing, Identifiers.HasProperty, Identifiers.ServerType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode768() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.AuditChannelEventType_SecureChannelId, new QualifiedName(0, "SecureChannelId"), new LocalizedText("en", "SecureChannelId"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.AuditChannelEventType_SecureChannelId, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditChannelEventType_SecureChannelId, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditChannelEventType_SecureChannelId, Identifiers.HasProperty, Identifiers.AuditChannelEventType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode769() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.AuditOpenSecureChannelEventType_ClientCertificateThumbprint, new QualifiedName(0, "ClientCertificateThumbprint"), new LocalizedText("en", "ClientCertificateThumbprint"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.AuditOpenSecureChannelEventType_ClientCertificateThumbprint, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditOpenSecureChannelEventType_ClientCertificateThumbprint, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditOpenSecureChannelEventType_ClientCertificateThumbprint, Identifiers.HasProperty, Identifiers.AuditOpenSecureChannelEventType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode770() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.AuditCreateSessionEventType_ClientCertificateThumbprint, new QualifiedName(0, "ClientCertificateThumbprint"), new LocalizedText("en", "ClientCertificateThumbprint"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.AuditCreateSessionEventType_ClientCertificateThumbprint, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditCreateSessionEventType_ClientCertificateThumbprint, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditCreateSessionEventType_ClientCertificateThumbprint, Identifiers.HasProperty, Identifiers.AuditCreateSessionEventType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode771() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.AuditUrlMismatchEventType_EndpointUrl, new QualifiedName(0, "EndpointUrl"), new LocalizedText("en", "EndpointUrl"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.AuditUrlMismatchEventType_EndpointUrl, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditUrlMismatchEventType_EndpointUrl, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditUrlMismatchEventType_EndpointUrl, Identifiers.HasProperty, Identifiers.AuditUrlMismatchEventType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode772() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.AuditWriteUpdateEventType_AttributeId, new QualifiedName(0, "AttributeId"), new LocalizedText("en", "AttributeId"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.AuditWriteUpdateEventType_AttributeId, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditWriteUpdateEventType_AttributeId, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditWriteUpdateEventType_AttributeId, Identifiers.HasProperty, Identifiers.AuditWriteUpdateEventType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode773() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.AuditHistoryUpdateEventType_ParameterDataTypeId, new QualifiedName(0, "ParameterDataTypeId"), new LocalizedText("en", "ParameterDataTypeId"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.NodeId, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.AuditHistoryUpdateEventType_ParameterDataTypeId, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditHistoryUpdateEventType_ParameterDataTypeId, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditHistoryUpdateEventType_ParameterDataTypeId, Identifiers.HasProperty, Identifiers.AuditHistoryUpdateEventType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode774() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.ServerStatusType_SecondsTillShutdown, new QualifiedName(0, "SecondsTillShutdown"), new LocalizedText("en", "SecondsTillShutdown"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerStatusType_SecondsTillShutdown, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerStatusType_SecondsTillShutdown, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerStatusType_SecondsTillShutdown, Identifiers.HasComponent, Identifiers.ServerStatusType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode775() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.ServerStatusType_ShutdownReason, new QualifiedName(0, "ShutdownReason"), new LocalizedText("en", "ShutdownReason"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.LocalizedText, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerStatusType_ShutdownReason, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerStatusType_ShutdownReason, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerStatusType_ShutdownReason, Identifiers.HasComponent, Identifiers.ServerStatusType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode776() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.StateVariableType_Id, new QualifiedName(0, "Id"), new LocalizedText("en", "Id"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.BaseDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.StateVariableType_Id, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.StateVariableType_Id, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.StateVariableType_Id, Identifiers.HasProperty, Identifiers.StateVariableType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode777() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.StateVariableType_Name, new QualifiedName(0, "Name"), new LocalizedText("en", "Name"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.QualifiedName, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.StateVariableType_Name, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.StateVariableType_Name, Identifiers.HasModellingRule, Identifiers.ModellingRule_Optional.expanded(), true));
        node.addReference(new Reference(Identifiers.StateVariableType_Name, Identifiers.HasProperty, Identifiers.StateVariableType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode778() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.StateVariableType_Number, new QualifiedName(0, "Number"), new LocalizedText("en", "Number"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.StateVariableType_Number, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.StateVariableType_Number, Identifiers.HasModellingRule, Identifiers.ModellingRule_Optional.expanded(), true));
        node.addReference(new Reference(Identifiers.StateVariableType_Number, Identifiers.HasProperty, Identifiers.StateVariableType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode779() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.StateVariableType_EffectiveDisplayName, new QualifiedName(0, "EffectiveDisplayName"), new LocalizedText("en", "EffectiveDisplayName"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.LocalizedText, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.StateVariableType_EffectiveDisplayName, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.StateVariableType_EffectiveDisplayName, Identifiers.HasModellingRule, Identifiers.ModellingRule_Optional.expanded(), true));
        node.addReference(new Reference(Identifiers.StateVariableType_EffectiveDisplayName, Identifiers.HasProperty, Identifiers.StateVariableType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode780() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.FiniteStateVariableType_Id, new QualifiedName(0, "Id"), new LocalizedText("en", "Id"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.NodeId, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.FiniteStateVariableType_Id, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.FiniteStateVariableType_Id, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.FiniteStateVariableType_Id, Identifiers.HasProperty, Identifiers.FiniteStateVariableType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode781() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.TransitionVariableType_Id, new QualifiedName(0, "Id"), new LocalizedText("en", "Id"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.BaseDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.TransitionVariableType_Id, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.TransitionVariableType_Id, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.TransitionVariableType_Id, Identifiers.HasProperty, Identifiers.TransitionVariableType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode782() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.TransitionVariableType_Name, new QualifiedName(0, "Name"), new LocalizedText("en", "Name"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.QualifiedName, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.TransitionVariableType_Name, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.TransitionVariableType_Name, Identifiers.HasModellingRule, Identifiers.ModellingRule_Optional.expanded(), true));
        node.addReference(new Reference(Identifiers.TransitionVariableType_Name, Identifiers.HasProperty, Identifiers.TransitionVariableType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode783() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.TransitionVariableType_Number, new QualifiedName(0, "Number"), new LocalizedText("en", "Number"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.TransitionVariableType_Number, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.TransitionVariableType_Number, Identifiers.HasModellingRule, Identifiers.ModellingRule_Optional.expanded(), true));
        node.addReference(new Reference(Identifiers.TransitionVariableType_Number, Identifiers.HasProperty, Identifiers.TransitionVariableType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode784() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.TransitionVariableType_TransitionTime, new QualifiedName(0, "TransitionTime"), new LocalizedText("en", "TransitionTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UtcTime, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.TransitionVariableType_TransitionTime, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.TransitionVariableType_TransitionTime, Identifiers.HasModellingRule, Identifiers.ModellingRule_Optional.expanded(), true));
        node.addReference(new Reference(Identifiers.TransitionVariableType_TransitionTime, Identifiers.HasProperty, Identifiers.TransitionVariableType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode785() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.FiniteTransitionVariableType_Id, new QualifiedName(0, "Id"), new LocalizedText("en", "Id"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.NodeId, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.FiniteTransitionVariableType_Id, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.FiniteTransitionVariableType_Id, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.FiniteTransitionVariableType_Id, Identifiers.HasProperty, Identifiers.FiniteTransitionVariableType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode786() {
        StateVariableTypeNode node = new StateVariableTypeNode(this.context, Identifiers.StateMachineType_CurrentState, new QualifiedName(0, "CurrentState"), new LocalizedText("en", "CurrentState"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.LocalizedText, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.StateMachineType_CurrentState, Identifiers.HasProperty, Identifiers.StateMachineType_CurrentState_Id.expanded(), true));
        node.addReference(new Reference(Identifiers.StateMachineType_CurrentState, Identifiers.HasTypeDefinition, Identifiers.StateVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.StateMachineType_CurrentState, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.StateMachineType_CurrentState, Identifiers.HasComponent, Identifiers.StateMachineType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode787() {
        TransitionVariableTypeNode node = new TransitionVariableTypeNode(this.context, Identifiers.StateMachineType_LastTransition, new QualifiedName(0, "LastTransition"), new LocalizedText("en", "LastTransition"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.LocalizedText, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.StateMachineType_LastTransition, Identifiers.HasProperty, Identifiers.StateMachineType_LastTransition_Id.expanded(), true));
        node.addReference(new Reference(Identifiers.StateMachineType_LastTransition, Identifiers.HasTypeDefinition, Identifiers.TransitionVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.StateMachineType_LastTransition, Identifiers.HasModellingRule, Identifiers.ModellingRule_Optional.expanded(), true));
        node.addReference(new Reference(Identifiers.StateMachineType_LastTransition, Identifiers.HasComponent, Identifiers.StateMachineType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode788() {
        FiniteStateVariableTypeNode node = new FiniteStateVariableTypeNode(this.context, Identifiers.FiniteStateMachineType_CurrentState, new QualifiedName(0, "CurrentState"), new LocalizedText("en", "CurrentState"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.LocalizedText, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.FiniteStateMachineType_CurrentState, Identifiers.HasProperty, Identifiers.FiniteStateMachineType_CurrentState_Id.expanded(), true));
        node.addReference(new Reference(Identifiers.FiniteStateMachineType_CurrentState, Identifiers.HasTypeDefinition, Identifiers.FiniteStateVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.FiniteStateMachineType_CurrentState, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.FiniteStateMachineType_CurrentState, Identifiers.HasComponent, Identifiers.FiniteStateMachineType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode789() {
        FiniteTransitionVariableTypeNode node = new FiniteTransitionVariableTypeNode(this.context, Identifiers.FiniteStateMachineType_LastTransition, new QualifiedName(0, "LastTransition"), new LocalizedText("en", "LastTransition"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.LocalizedText, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.FiniteStateMachineType_LastTransition, Identifiers.HasProperty, Identifiers.FiniteStateMachineType_LastTransition_Id.expanded(), true));
        node.addReference(new Reference(Identifiers.FiniteStateMachineType_LastTransition, Identifiers.HasTypeDefinition, Identifiers.FiniteTransitionVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.FiniteStateMachineType_LastTransition, Identifiers.HasModellingRule, Identifiers.ModellingRule_Optional.expanded(), true));
        node.addReference(new Reference(Identifiers.FiniteStateMachineType_LastTransition, Identifiers.HasComponent, Identifiers.FiniteStateMachineType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode790() {
        TransitionVariableTypeNode node = new TransitionVariableTypeNode(this.context, Identifiers.TransitionEventType_Transition, new QualifiedName(0, "Transition"), new LocalizedText("en", "Transition"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.LocalizedText, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.TransitionEventType_Transition, Identifiers.HasProperty, Identifiers.TransitionEventType_Transition_Id.expanded(), true));
        node.addReference(new Reference(Identifiers.TransitionEventType_Transition, Identifiers.HasTypeDefinition, Identifiers.TransitionVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.TransitionEventType_Transition, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.TransitionEventType_Transition, Identifiers.HasComponent, Identifiers.TransitionEventType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode791() {
        StateVariableTypeNode node = new StateVariableTypeNode(this.context, Identifiers.TransitionEventType_FromState, new QualifiedName(0, "FromState"), new LocalizedText("en", "FromState"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.LocalizedText, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.TransitionEventType_FromState, Identifiers.HasProperty, Identifiers.TransitionEventType_FromState_Id.expanded(), true));
        node.addReference(new Reference(Identifiers.TransitionEventType_FromState, Identifiers.HasTypeDefinition, Identifiers.StateVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.TransitionEventType_FromState, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.TransitionEventType_FromState, Identifiers.HasComponent, Identifiers.TransitionEventType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode792() {
        StateVariableTypeNode node = new StateVariableTypeNode(this.context, Identifiers.TransitionEventType_ToState, new QualifiedName(0, "ToState"), new LocalizedText("en", "ToState"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.LocalizedText, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.TransitionEventType_ToState, Identifiers.HasProperty, Identifiers.TransitionEventType_ToState_Id.expanded(), true));
        node.addReference(new Reference(Identifiers.TransitionEventType_ToState, Identifiers.HasTypeDefinition, Identifiers.StateVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.TransitionEventType_ToState, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.TransitionEventType_ToState, Identifiers.HasComponent, Identifiers.TransitionEventType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode793() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.AuditUpdateStateEventType_OldStateId, new QualifiedName(0, "OldStateId"), new LocalizedText("en", "OldStateId"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.BaseDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.AuditUpdateStateEventType_OldStateId, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditUpdateStateEventType_OldStateId, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditUpdateStateEventType_OldStateId, Identifiers.HasProperty, Identifiers.AuditUpdateStateEventType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode794() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.AuditUpdateStateEventType_NewStateId, new QualifiedName(0, "NewStateId"), new LocalizedText("en", "NewStateId"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.BaseDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.AuditUpdateStateEventType_NewStateId, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditUpdateStateEventType_NewStateId, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditUpdateStateEventType_NewStateId, Identifiers.HasProperty, Identifiers.AuditUpdateStateEventType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode795() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.DialogConditionType_Prompt, new QualifiedName(0, "Prompt"), new LocalizedText("en", "Prompt"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.LocalizedText, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.DialogConditionType_Prompt, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.DialogConditionType_Prompt, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.DialogConditionType_Prompt, Identifiers.HasProperty, Identifiers.DialogConditionType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode796() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.Server_Namespaces_OPCUANamespaceUri_NamespaceUri, new QualifiedName(0, "NamespaceUri"), new LocalizedText("en", "NamespaceUri"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.Server_Namespaces_OPCUANamespaceUri_NamespaceUri, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.Server_Namespaces_OPCUANamespaceUri_NamespaceUri, Identifiers.HasProperty, Identifiers.Server_Namespaces_OPCUANamespaceUri.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">http://opcfoundation.org/UA/</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode797() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.Server_Namespaces_OPCUANamespaceUri_NamespaceVersion, new QualifiedName(0, "NamespaceVersion"), new LocalizedText("en", "NamespaceVersion"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.Server_Namespaces_OPCUANamespaceUri_NamespaceVersion, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.Server_Namespaces_OPCUANamespaceUri_NamespaceVersion, Identifiers.HasProperty, Identifiers.Server_Namespaces_OPCUANamespaceUri.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">1.03</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode798() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.Server_Namespaces_OPCUANamespaceUri_NamespacePublicationDate, new QualifiedName(0, "NamespacePublicationDate"), new LocalizedText("en", "NamespacePublicationDate"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.DateTime, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.Server_Namespaces_OPCUANamespaceUri_NamespacePublicationDate, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.Server_Namespaces_OPCUANamespaceUri_NamespacePublicationDate, Identifiers.HasProperty, Identifiers.Server_Namespaces_OPCUANamespaceUri.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<DateTime xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">2016-04-15T00:00:00Z</DateTime>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode799() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.Server_Namespaces_OPCUANamespaceUri_IsNamespaceSubset, new QualifiedName(0, "IsNamespaceSubset"), new LocalizedText("en", "IsNamespaceSubset"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Boolean, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.Server_Namespaces_OPCUANamespaceUri_IsNamespaceSubset, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.Server_Namespaces_OPCUANamespaceUri_IsNamespaceSubset, Identifiers.HasProperty, Identifiers.Server_Namespaces_OPCUANamespaceUri.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<Boolean xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">false</Boolean>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode800() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.Server_Namespaces_OPCUANamespaceUri_StaticNodeIdTypes, new QualifiedName(0, "StaticNodeIdTypes"), new LocalizedText("en", "StaticNodeIdTypes"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.IdType, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.Server_Namespaces_OPCUANamespaceUri_StaticNodeIdTypes, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.Server_Namespaces_OPCUANamespaceUri_StaticNodeIdTypes, Identifiers.HasProperty, Identifiers.Server_Namespaces_OPCUANamespaceUri.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode801() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.Server_Namespaces_OPCUANamespaceUri_StaticNumericNodeIdRange, new QualifiedName(0, "StaticNumericNodeIdRange"), new LocalizedText("en", "StaticNumericNodeIdRange"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.NumericRange, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.Server_Namespaces_OPCUANamespaceUri_StaticNumericNodeIdRange, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.Server_Namespaces_OPCUANamespaceUri_StaticNumericNodeIdRange, Identifiers.HasProperty, Identifiers.Server_Namespaces_OPCUANamespaceUri.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode802() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.Server_Namespaces_OPCUANamespaceUri_StaticStringNodeIdPattern, new QualifiedName(0, "StaticStringNodeIdPattern"), new LocalizedText("en", "StaticStringNodeIdPattern"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.Server_Namespaces_OPCUANamespaceUri_StaticStringNodeIdPattern, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.Server_Namespaces_OPCUANamespaceUri_StaticStringNodeIdPattern, Identifiers.HasProperty, Identifiers.Server_Namespaces_OPCUANamespaceUri.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode803() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.TwoStateVariableType_TrueState, new QualifiedName(0, "TrueState"), new LocalizedText("en", "TrueState"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.LocalizedText, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.TwoStateVariableType_TrueState, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.TwoStateVariableType_TrueState, Identifiers.HasModellingRule, Identifiers.ModellingRule_Optional.expanded(), true));
        node.addReference(new Reference(Identifiers.TwoStateVariableType_TrueState, Identifiers.HasProperty, Identifiers.TwoStateVariableType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode804() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.TwoStateVariableType_FalseState, new QualifiedName(0, "FalseState"), new LocalizedText("en", "FalseState"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.LocalizedText, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.TwoStateVariableType_FalseState, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.TwoStateVariableType_FalseState, Identifiers.HasModellingRule, Identifiers.ModellingRule_Optional.expanded(), true));
        node.addReference(new Reference(Identifiers.TwoStateVariableType_FalseState, Identifiers.HasProperty, Identifiers.TwoStateVariableType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode805() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ConditionType_ConditionClassId, new QualifiedName(0, "ConditionClassId"), new LocalizedText("en", "ConditionClassId"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.NodeId, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ConditionType_ConditionClassId, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ConditionType_ConditionClassId, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ConditionType_ConditionClassId, Identifiers.HasProperty, Identifiers.ConditionType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode806() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ConditionType_ConditionClassName, new QualifiedName(0, "ConditionClassName"), new LocalizedText("en", "ConditionClassName"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.LocalizedText, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ConditionType_ConditionClassName, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ConditionType_ConditionClassName, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ConditionType_ConditionClassName, Identifiers.HasProperty, Identifiers.ConditionType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode807() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.AlarmConditionType_InputNode, new QualifiedName(0, "InputNode"), new LocalizedText("en", "InputNode"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.NodeId, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.AlarmConditionType_InputNode, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.AlarmConditionType_InputNode, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.AlarmConditionType_InputNode, Identifiers.HasProperty, Identifiers.AlarmConditionType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode808() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.LimitAlarmType_HighHighLimit, new QualifiedName(0, "HighHighLimit"), new LocalizedText("en", "HighHighLimit"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Double, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.LimitAlarmType_HighHighLimit, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.LimitAlarmType_HighHighLimit, Identifiers.HasModellingRule, Identifiers.ModellingRule_Optional.expanded(), true));
        node.addReference(new Reference(Identifiers.LimitAlarmType_HighHighLimit, Identifiers.HasProperty, Identifiers.LimitAlarmType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode809() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.LimitAlarmType_HighLimit, new QualifiedName(0, "HighLimit"), new LocalizedText("en", "HighLimit"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Double, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.LimitAlarmType_HighLimit, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.LimitAlarmType_HighLimit, Identifiers.HasModellingRule, Identifiers.ModellingRule_Optional.expanded(), true));
        node.addReference(new Reference(Identifiers.LimitAlarmType_HighLimit, Identifiers.HasProperty, Identifiers.LimitAlarmType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode810() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.LimitAlarmType_LowLimit, new QualifiedName(0, "LowLimit"), new LocalizedText("en", "LowLimit"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Double, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.LimitAlarmType_LowLimit, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.LimitAlarmType_LowLimit, Identifiers.HasModellingRule, Identifiers.ModellingRule_Optional.expanded(), true));
        node.addReference(new Reference(Identifiers.LimitAlarmType_LowLimit, Identifiers.HasProperty, Identifiers.LimitAlarmType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode811() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.LimitAlarmType_LowLowLimit, new QualifiedName(0, "LowLowLimit"), new LocalizedText("en", "LowLowLimit"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Double, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.LimitAlarmType_LowLowLimit, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.LimitAlarmType_LowLowLimit, Identifiers.HasModellingRule, Identifiers.ModellingRule_Optional.expanded(), true));
        node.addReference(new Reference(Identifiers.LimitAlarmType_LowLowLimit, Identifiers.HasProperty, Identifiers.LimitAlarmType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode812() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.OffNormalAlarmType_NormalState, new QualifiedName(0, "NormalState"), new LocalizedText("en", "NormalState"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.NodeId, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OffNormalAlarmType_NormalState, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.OffNormalAlarmType_NormalState, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.OffNormalAlarmType_NormalState, Identifiers.HasProperty, Identifiers.OffNormalAlarmType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode813() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.HistoricalDataConfigurationType_AggregateConfiguration_TreatUncertainAsBad, new QualifiedName(0, "TreatUncertainAsBad"), new LocalizedText("en", "TreatUncertainAsBad"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Boolean, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.HistoricalDataConfigurationType_AggregateConfiguration_TreatUncertainAsBad, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.HistoricalDataConfigurationType_AggregateConfiguration_TreatUncertainAsBad, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.HistoricalDataConfigurationType_AggregateConfiguration_TreatUncertainAsBad, Identifiers.HasProperty, Identifiers.HistoricalDataConfigurationType_AggregateConfiguration.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode814() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.HistoricalDataConfigurationType_AggregateConfiguration_PercentDataBad, new QualifiedName(0, "PercentDataBad"), new LocalizedText("en", "PercentDataBad"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Byte, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.HistoricalDataConfigurationType_AggregateConfiguration_PercentDataBad, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.HistoricalDataConfigurationType_AggregateConfiguration_PercentDataBad, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.HistoricalDataConfigurationType_AggregateConfiguration_PercentDataBad, Identifiers.HasProperty, Identifiers.HistoricalDataConfigurationType_AggregateConfiguration.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode815() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.HistoricalDataConfigurationType_AggregateConfiguration_PercentDataGood, new QualifiedName(0, "PercentDataGood"), new LocalizedText("en", "PercentDataGood"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Byte, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.HistoricalDataConfigurationType_AggregateConfiguration_PercentDataGood, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.HistoricalDataConfigurationType_AggregateConfiguration_PercentDataGood, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.HistoricalDataConfigurationType_AggregateConfiguration_PercentDataGood, Identifiers.HasProperty, Identifiers.HistoricalDataConfigurationType_AggregateConfiguration.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode816() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.HistoricalDataConfigurationType_AggregateConfiguration_UseSlopedExtrapolation, new QualifiedName(0, "UseSlopedExtrapolation"), new LocalizedText("en", "UseSlopedExtrapolation"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Boolean, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.HistoricalDataConfigurationType_AggregateConfiguration_UseSlopedExtrapolation, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.HistoricalDataConfigurationType_AggregateConfiguration_UseSlopedExtrapolation, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.HistoricalDataConfigurationType_AggregateConfiguration_UseSlopedExtrapolation, Identifiers.HasProperty, Identifiers.HistoricalDataConfigurationType_AggregateConfiguration.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode817() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ShelvedStateMachineType_TimedShelve_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ShelvedStateMachineType_TimedShelve_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ShelvedStateMachineType_TimedShelve_InputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ShelvedStateMachineType_TimedShelve_InputArguments, Identifiers.HasProperty, Identifiers.ShelvedStateMachineType_TimedShelve.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>ShelvingTime</Name><DataType><Identifier>i=290</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description><Locale>                </Locale><Text>If not 0, this parameter specifies a fixed time for which the Alarm is to be shelved.</Text>              </Description>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode818() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.Server_ServerStatus_SecondsTillShutdown, new QualifiedName(0, "SecondsTillShutdown"), new LocalizedText("en", "SecondsTillShutdown"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.Server_ServerStatus_SecondsTillShutdown, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.Server_ServerStatus_SecondsTillShutdown, Identifiers.HasComponent, Identifiers.Server_ServerStatus.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode819() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.Server_ServerStatus_ShutdownReason, new QualifiedName(0, "ShutdownReason"), new LocalizedText("en", "ShutdownReason"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.LocalizedText, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.Server_ServerStatus_ShutdownReason, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.Server_ServerStatus_ShutdownReason, Identifiers.HasComponent, Identifiers.Server_ServerStatus.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode820() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.Server_Auditing, new QualifiedName(0, "Auditing"), new LocalizedText("en", "Auditing"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Boolean, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 1000.0, false);
        node.addReference(new Reference(Identifiers.Server_Auditing, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.Server_Auditing, Identifiers.HasProperty, Identifiers.Server.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode821() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.AggregateConfigurationType_TreatUncertainAsBad, new QualifiedName(0, "TreatUncertainAsBad"), new LocalizedText("en", "TreatUncertainAsBad"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Boolean, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.AggregateConfigurationType_TreatUncertainAsBad, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.AggregateConfigurationType_TreatUncertainAsBad, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.AggregateConfigurationType_TreatUncertainAsBad, Identifiers.HasProperty, Identifiers.AggregateConfigurationType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode822() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.AggregateConfigurationType_PercentDataBad, new QualifiedName(0, "PercentDataBad"), new LocalizedText("en", "PercentDataBad"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Byte, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.AggregateConfigurationType_PercentDataBad, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.AggregateConfigurationType_PercentDataBad, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.AggregateConfigurationType_PercentDataBad, Identifiers.HasProperty, Identifiers.AggregateConfigurationType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode823() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SubscriptionDiagnosticsType_EventNotificationsCount, new QualifiedName(0, "EventNotificationsCount"), new LocalizedText("en", "EventNotificationsCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsType_EventNotificationsCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsType_EventNotificationsCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SubscriptionDiagnosticsType_EventNotificationsCount, Identifiers.HasComponent, Identifiers.SubscriptionDiagnosticsType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode824() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.AggregateConfigurationType_PercentDataGood, new QualifiedName(0, "PercentDataGood"), new LocalizedText("en", "PercentDataGood"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Byte, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.AggregateConfigurationType_PercentDataGood, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.AggregateConfigurationType_PercentDataGood, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.AggregateConfigurationType_PercentDataGood, Identifiers.HasProperty, Identifiers.AggregateConfigurationType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode825() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.AggregateConfigurationType_UseSlopedExtrapolation, new QualifiedName(0, "UseSlopedExtrapolation"), new LocalizedText("en", "UseSlopedExtrapolation"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Boolean, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.AggregateConfigurationType_UseSlopedExtrapolation, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.AggregateConfigurationType_UseSlopedExtrapolation, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.AggregateConfigurationType_UseSlopedExtrapolation, Identifiers.HasProperty, Identifiers.AggregateConfigurationType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode826() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.HistoryServerCapabilities_AccessHistoryDataCapability, new QualifiedName(0, "AccessHistoryDataCapability"), new LocalizedText("en", "AccessHistoryDataCapability"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Boolean, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.HistoryServerCapabilities_AccessHistoryDataCapability, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.HistoryServerCapabilities_AccessHistoryDataCapability, Identifiers.HasProperty, Identifiers.HistoryServerCapabilities.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode827() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.AuditHistoryEventUpdateEventType_Filter, new QualifiedName(0, "Filter"), new LocalizedText("en", "Filter"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.EventFilter, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.AuditHistoryEventUpdateEventType_Filter, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditHistoryEventUpdateEventType_Filter, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditHistoryEventUpdateEventType_Filter, Identifiers.HasProperty, Identifiers.AuditHistoryEventUpdateEventType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode828() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.HistoryServerCapabilities_InsertDataCapability, new QualifiedName(0, "InsertDataCapability"), new LocalizedText("en", "InsertDataCapability"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Boolean, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.HistoryServerCapabilities_InsertDataCapability, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.HistoryServerCapabilities_InsertDataCapability, Identifiers.HasProperty, Identifiers.HistoryServerCapabilities.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode829() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.HistoryServerCapabilities_ReplaceDataCapability, new QualifiedName(0, "ReplaceDataCapability"), new LocalizedText("en", "ReplaceDataCapability"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Boolean, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.HistoryServerCapabilities_ReplaceDataCapability, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.HistoryServerCapabilities_ReplaceDataCapability, Identifiers.HasProperty, Identifiers.HistoryServerCapabilities.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode830() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.HistoryServerCapabilities_UpdateDataCapability, new QualifiedName(0, "UpdateDataCapability"), new LocalizedText("en", "UpdateDataCapability"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Boolean, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.HistoryServerCapabilities_UpdateDataCapability, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.HistoryServerCapabilities_UpdateDataCapability, Identifiers.HasProperty, Identifiers.HistoryServerCapabilities.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode831() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.HistoryServerCapabilities_DeleteRawCapability, new QualifiedName(0, "DeleteRawCapability"), new LocalizedText("en", "DeleteRawCapability"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Boolean, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.HistoryServerCapabilities_DeleteRawCapability, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.HistoryServerCapabilities_DeleteRawCapability, Identifiers.HasProperty, Identifiers.HistoryServerCapabilities.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode832() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.HistoryServerCapabilities_DeleteAtTimeCapability, new QualifiedName(0, "DeleteAtTimeCapability"), new LocalizedText("en", "DeleteAtTimeCapability"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Boolean, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.HistoryServerCapabilities_DeleteAtTimeCapability, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.HistoryServerCapabilities_DeleteAtTimeCapability, Identifiers.HasProperty, Identifiers.HistoryServerCapabilities.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode833() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.HAConfiguration_AggregateConfiguration_TreatUncertainAsBad, new QualifiedName(0, "TreatUncertainAsBad"), new LocalizedText("en", "TreatUncertainAsBad"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Boolean, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.HAConfiguration_AggregateConfiguration_TreatUncertainAsBad, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.HAConfiguration_AggregateConfiguration_TreatUncertainAsBad, Identifiers.HasProperty, Identifiers.HAConfiguration_AggregateConfiguration.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode834() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.HAConfiguration_AggregateConfiguration_PercentDataBad, new QualifiedName(0, "PercentDataBad"), new LocalizedText("en", "PercentDataBad"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Byte, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.HAConfiguration_AggregateConfiguration_PercentDataBad, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.HAConfiguration_AggregateConfiguration_PercentDataBad, Identifiers.HasProperty, Identifiers.HAConfiguration_AggregateConfiguration.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode835() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.HAConfiguration_AggregateConfiguration_PercentDataGood, new QualifiedName(0, "PercentDataGood"), new LocalizedText("en", "PercentDataGood"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Byte, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.HAConfiguration_AggregateConfiguration_PercentDataGood, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.HAConfiguration_AggregateConfiguration_PercentDataGood, Identifiers.HasProperty, Identifiers.HAConfiguration_AggregateConfiguration.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode836() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.HAConfiguration_AggregateConfiguration_UseSlopedExtrapolation, new QualifiedName(0, "UseSlopedExtrapolation"), new LocalizedText("en", "UseSlopedExtrapolation"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Boolean, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.HAConfiguration_AggregateConfiguration_UseSlopedExtrapolation, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.HAConfiguration_AggregateConfiguration_UseSlopedExtrapolation, Identifiers.HasProperty, Identifiers.HAConfiguration_AggregateConfiguration.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode837() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.AuditHistoryRawModifyDeleteEventType_IsDeleteModified, new QualifiedName(0, "IsDeleteModified"), new LocalizedText("en", "IsDeleteModified"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Boolean, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.AuditHistoryRawModifyDeleteEventType_IsDeleteModified, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditHistoryRawModifyDeleteEventType_IsDeleteModified, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditHistoryRawModifyDeleteEventType_IsDeleteModified, Identifiers.HasProperty, Identifiers.AuditHistoryRawModifyDeleteEventType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode838() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.HAConfiguration_Stepped, new QualifiedName(0, "Stepped"), new LocalizedText("en", "Stepped"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Boolean, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.HAConfiguration_Stepped, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.HAConfiguration_Stepped, Identifiers.HasProperty, Identifiers.HAConfiguration.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode839() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.AuditHistoryRawModifyDeleteEventType_StartTime, new QualifiedName(0, "StartTime"), new LocalizedText("en", "StartTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UtcTime, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.AuditHistoryRawModifyDeleteEventType_StartTime, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditHistoryRawModifyDeleteEventType_StartTime, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditHistoryRawModifyDeleteEventType_StartTime, Identifiers.HasProperty, Identifiers.AuditHistoryRawModifyDeleteEventType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode840() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.AuditHistoryRawModifyDeleteEventType_EndTime, new QualifiedName(0, "EndTime"), new LocalizedText("en", "EndTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UtcTime, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.AuditHistoryRawModifyDeleteEventType_EndTime, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditHistoryRawModifyDeleteEventType_EndTime, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditHistoryRawModifyDeleteEventType_EndTime, Identifiers.HasProperty, Identifiers.AuditHistoryRawModifyDeleteEventType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode841() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.AuditHistoryAtTimeDeleteEventType_ReqTimes, new QualifiedName(0, "ReqTimes"), new LocalizedText("en", "ReqTimes"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UtcTime, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.AuditHistoryAtTimeDeleteEventType_ReqTimes, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditHistoryAtTimeDeleteEventType_ReqTimes, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditHistoryAtTimeDeleteEventType_ReqTimes, Identifiers.HasProperty, Identifiers.AuditHistoryAtTimeDeleteEventType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode842() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.AuditHistoryAtTimeDeleteEventType_OldValues, new QualifiedName(0, "OldValues"), new LocalizedText("en", "OldValues"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.DataValue, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.AuditHistoryAtTimeDeleteEventType_OldValues, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditHistoryAtTimeDeleteEventType_OldValues, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditHistoryAtTimeDeleteEventType_OldValues, Identifiers.HasProperty, Identifiers.AuditHistoryAtTimeDeleteEventType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode843() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.Annotations, new QualifiedName(0, "Annotations"), new LocalizedText("en", "Annotations"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Annotation, -2, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.Annotations, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        this.nodeManager.addNode(node);
    }

    private void loadNode844() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.HistoricalEventFilter, new QualifiedName(0, "HistoricalEventFilter"), new LocalizedText("en", "HistoricalEventFilter"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.EventFilter, -2, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.HistoricalEventFilter, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        this.nodeManager.addNode(node);
    }

    private void loadNode845() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.AuditHistoryEventDeleteEventType_EventIds, new QualifiedName(0, "EventIds"), new LocalizedText("en", "EventIds"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ByteString, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.AuditHistoryEventDeleteEventType_EventIds, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditHistoryEventDeleteEventType_EventIds, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditHistoryEventDeleteEventType_EventIds, Identifiers.HasProperty, Identifiers.AuditHistoryEventDeleteEventType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode846() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.AuditHistoryEventDeleteEventType_OldValues, new QualifiedName(0, "OldValues"), new LocalizedText("en", "OldValues"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.HistoryEventFieldList, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.AuditHistoryEventDeleteEventType_OldValues, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditHistoryEventDeleteEventType_OldValues, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditHistoryEventDeleteEventType_OldValues, Identifiers.HasProperty, Identifiers.AuditHistoryEventDeleteEventType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode847() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.AuditHistoryEventUpdateEventType_UpdatedNode, new QualifiedName(0, "UpdatedNode"), new LocalizedText("en", "UpdatedNode"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.NodeId, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.AuditHistoryEventUpdateEventType_UpdatedNode, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditHistoryEventUpdateEventType_UpdatedNode, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditHistoryEventUpdateEventType_UpdatedNode, Identifiers.HasProperty, Identifiers.AuditHistoryEventUpdateEventType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode848() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.AuditHistoryValueUpdateEventType_UpdatedNode, new QualifiedName(0, "UpdatedNode"), new LocalizedText("en", "UpdatedNode"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.NodeId, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.AuditHistoryValueUpdateEventType_UpdatedNode, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditHistoryValueUpdateEventType_UpdatedNode, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditHistoryValueUpdateEventType_UpdatedNode, Identifiers.HasProperty, Identifiers.AuditHistoryValueUpdateEventType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode849() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.AuditHistoryDeleteEventType_UpdatedNode, new QualifiedName(0, "UpdatedNode"), new LocalizedText("en", "UpdatedNode"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.NodeId, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.AuditHistoryDeleteEventType_UpdatedNode, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditHistoryDeleteEventType_UpdatedNode, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditHistoryDeleteEventType_UpdatedNode, Identifiers.HasProperty, Identifiers.AuditHistoryDeleteEventType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode850() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.AuditHistoryEventUpdateEventType_PerformInsertReplace, new QualifiedName(0, "PerformInsertReplace"), new LocalizedText("en", "PerformInsertReplace"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.PerformUpdateType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.AuditHistoryEventUpdateEventType_PerformInsertReplace, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditHistoryEventUpdateEventType_PerformInsertReplace, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditHistoryEventUpdateEventType_PerformInsertReplace, Identifiers.HasProperty, Identifiers.AuditHistoryEventUpdateEventType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode851() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.AuditHistoryEventUpdateEventType_NewValues, new QualifiedName(0, "NewValues"), new LocalizedText("en", "NewValues"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.HistoryEventFieldList, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.AuditHistoryEventUpdateEventType_NewValues, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditHistoryEventUpdateEventType_NewValues, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditHistoryEventUpdateEventType_NewValues, Identifiers.HasProperty, Identifiers.AuditHistoryEventUpdateEventType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode852() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.AuditHistoryEventUpdateEventType_OldValues, new QualifiedName(0, "OldValues"), new LocalizedText("en", "OldValues"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.HistoryEventFieldList, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.AuditHistoryEventUpdateEventType_OldValues, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditHistoryEventUpdateEventType_OldValues, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditHistoryEventUpdateEventType_OldValues, Identifiers.HasProperty, Identifiers.AuditHistoryEventUpdateEventType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode853() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.AuditHistoryValueUpdateEventType_PerformInsertReplace, new QualifiedName(0, "PerformInsertReplace"), new LocalizedText("en", "PerformInsertReplace"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.PerformUpdateType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.AuditHistoryValueUpdateEventType_PerformInsertReplace, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditHistoryValueUpdateEventType_PerformInsertReplace, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditHistoryValueUpdateEventType_PerformInsertReplace, Identifiers.HasProperty, Identifiers.AuditHistoryValueUpdateEventType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode854() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.AuditHistoryValueUpdateEventType_NewValues, new QualifiedName(0, "NewValues"), new LocalizedText("en", "NewValues"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.DataValue, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.AuditHistoryValueUpdateEventType_NewValues, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditHistoryValueUpdateEventType_NewValues, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditHistoryValueUpdateEventType_NewValues, Identifiers.HasProperty, Identifiers.AuditHistoryValueUpdateEventType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode855() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.AuditHistoryValueUpdateEventType_OldValues, new QualifiedName(0, "OldValues"), new LocalizedText("en", "OldValues"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.DataValue, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.AuditHistoryValueUpdateEventType_OldValues, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditHistoryValueUpdateEventType_OldValues, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditHistoryValueUpdateEventType_OldValues, Identifiers.HasProperty, Identifiers.AuditHistoryValueUpdateEventType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode856() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.AuditHistoryRawModifyDeleteEventType_OldValues, new QualifiedName(0, "OldValues"), new LocalizedText("en", "OldValues"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.DataValue, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.AuditHistoryRawModifyDeleteEventType_OldValues, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditHistoryRawModifyDeleteEventType_OldValues, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditHistoryRawModifyDeleteEventType_OldValues, Identifiers.HasProperty, Identifiers.AuditHistoryRawModifyDeleteEventType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode857() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerCapabilitiesType_SoftwareCertificates, new QualifiedName(0, "SoftwareCertificates"), new LocalizedText("en", "SoftwareCertificates"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.SignedSoftwareCertificate, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerCapabilitiesType_SoftwareCertificates, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerCapabilitiesType_SoftwareCertificates, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerCapabilitiesType_SoftwareCertificates, Identifiers.HasProperty, Identifiers.ServerCapabilitiesType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode858() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.MultiStateValueDiscreteType_EnumValues, new QualifiedName(0, "EnumValues"), new LocalizedText("en", "EnumValues"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.EnumValueType, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.MultiStateValueDiscreteType_EnumValues, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.MultiStateValueDiscreteType_EnumValues, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.MultiStateValueDiscreteType_EnumValues, Identifiers.HasProperty, Identifiers.MultiStateValueDiscreteType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode859() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsVariableType_MaxResponseMessageSize, new QualifiedName(0, "MaxResponseMessageSize"), new LocalizedText("en", "MaxResponseMessageSize"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_MaxResponseMessageSize, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_MaxResponseMessageSize, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_MaxResponseMessageSize, Identifiers.HasComponent, Identifiers.SessionDiagnosticsVariableType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode860() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.HistoryServerCapabilities_AccessHistoryEventsCapability, new QualifiedName(0, "AccessHistoryEventsCapability"), new LocalizedText("en", "AccessHistoryEventsCapability"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Boolean, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.HistoryServerCapabilities_AccessHistoryEventsCapability, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.HistoryServerCapabilities_AccessHistoryEventsCapability, Identifiers.HasProperty, Identifiers.HistoryServerCapabilities.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode861() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.BuildInfoType_ProductUri, new QualifiedName(0, "ProductUri"), new LocalizedText("en", "ProductUri"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 1000.0, false);
        node.addReference(new Reference(Identifiers.BuildInfoType_ProductUri, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.BuildInfoType_ProductUri, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.BuildInfoType_ProductUri, Identifiers.HasComponent, Identifiers.BuildInfoType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode862() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.BuildInfoType_ManufacturerName, new QualifiedName(0, "ManufacturerName"), new LocalizedText("en", "ManufacturerName"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 1000.0, false);
        node.addReference(new Reference(Identifiers.BuildInfoType_ManufacturerName, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.BuildInfoType_ManufacturerName, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.BuildInfoType_ManufacturerName, Identifiers.HasComponent, Identifiers.BuildInfoType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode863() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.BuildInfoType_ProductName, new QualifiedName(0, "ProductName"), new LocalizedText("en", "ProductName"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 1000.0, false);
        node.addReference(new Reference(Identifiers.BuildInfoType_ProductName, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.BuildInfoType_ProductName, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.BuildInfoType_ProductName, Identifiers.HasComponent, Identifiers.BuildInfoType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode864() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.BuildInfoType_SoftwareVersion, new QualifiedName(0, "SoftwareVersion"), new LocalizedText("en", "SoftwareVersion"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 1000.0, false);
        node.addReference(new Reference(Identifiers.BuildInfoType_SoftwareVersion, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.BuildInfoType_SoftwareVersion, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.BuildInfoType_SoftwareVersion, Identifiers.HasComponent, Identifiers.BuildInfoType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode865() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.BuildInfoType_BuildNumber, new QualifiedName(0, "BuildNumber"), new LocalizedText("en", "BuildNumber"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 1000.0, false);
        node.addReference(new Reference(Identifiers.BuildInfoType_BuildNumber, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.BuildInfoType_BuildNumber, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.BuildInfoType_BuildNumber, Identifiers.HasComponent, Identifiers.BuildInfoType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode866() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.BuildInfoType_BuildDate, new QualifiedName(0, "BuildDate"), new LocalizedText("en", "BuildDate"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UtcTime, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 1000.0, false);
        node.addReference(new Reference(Identifiers.BuildInfoType_BuildDate, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.BuildInfoType_BuildDate, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.BuildInfoType_BuildDate, Identifiers.HasComponent, Identifiers.BuildInfoType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode867() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionSecurityDiagnosticsType_ClientCertificate, new QualifiedName(0, "ClientCertificate"), new LocalizedText("en", "ClientCertificate"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ByteString, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionSecurityDiagnosticsType_ClientCertificate, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionSecurityDiagnosticsType_ClientCertificate, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionSecurityDiagnosticsType_ClientCertificate, Identifiers.HasComponent, Identifiers.SessionSecurityDiagnosticsType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode868() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.Icon, new QualifiedName(0, "Icon"), new LocalizedText("en", "Icon"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Image, -2, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.Icon, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        this.nodeManager.addNode(node);
    }

    private void loadNode869() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.NodeVersion, new QualifiedName(0, "NodeVersion"), new LocalizedText("en", "NodeVersion"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -2, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.NodeVersion, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        this.nodeManager.addNode(node);
    }

    private void loadNode870() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.LocalTime, new QualifiedName(0, "LocalTime"), new LocalizedText("en", "LocalTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.TimeZoneDataType, -2, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.LocalTime, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        this.nodeManager.addNode(node);
    }

    private void loadNode871() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.AllowNulls, new QualifiedName(0, "AllowNulls"), new LocalizedText("en", "AllowNulls"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Boolean, -2, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.AllowNulls, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        this.nodeManager.addNode(node);
    }

    private void loadNode872() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.EnumValues, new QualifiedName(0, "EnumValues"), new LocalizedText("en", "EnumValues"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.EnumValueType, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.EnumValues, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        this.nodeManager.addNode(node);
    }

    private void loadNode873() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        this.nodeManager.addNode(node);
    }

    private void loadNode874() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.OutputArguments, new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OutputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        this.nodeManager.addNode(node);
    }

    private void loadNode875() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.ServerType_ServerStatus_StartTime, new QualifiedName(0, "StartTime"), new LocalizedText("en", "StartTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UtcTime, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerType_ServerStatus_StartTime, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_ServerStatus_StartTime, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_ServerStatus_StartTime, Identifiers.HasComponent, Identifiers.ServerType_ServerStatus.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode876() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.ServerType_ServerStatus_CurrentTime, new QualifiedName(0, "CurrentTime"), new LocalizedText("en", "CurrentTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UtcTime, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerType_ServerStatus_CurrentTime, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_ServerStatus_CurrentTime, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_ServerStatus_CurrentTime, Identifiers.HasComponent, Identifiers.ServerType_ServerStatus.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode877() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.ServerType_ServerStatus_State, new QualifiedName(0, "State"), new LocalizedText("en", "State"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServerState, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerType_ServerStatus_State, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_ServerStatus_State, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_ServerStatus_State, Identifiers.HasComponent, Identifiers.ServerType_ServerStatus.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode878() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.HistoryServerCapabilitiesType_MaxReturnDataValues, new QualifiedName(0, "MaxReturnDataValues"), new LocalizedText("en", "MaxReturnDataValues"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.HistoryServerCapabilitiesType_MaxReturnDataValues, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.HistoryServerCapabilitiesType_MaxReturnDataValues, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.HistoryServerCapabilitiesType_MaxReturnDataValues, Identifiers.HasProperty, Identifiers.HistoryServerCapabilitiesType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode879() {
        BuildInfoTypeNode node = new BuildInfoTypeNode(this.context, Identifiers.ServerType_ServerStatus_BuildInfo, new QualifiedName(0, "BuildInfo"), new LocalizedText("en", "BuildInfo"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.BuildInfo, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerType_ServerStatus_BuildInfo, Identifiers.HasComponent, Identifiers.ServerType_ServerStatus_BuildInfo_ProductUri.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_ServerStatus_BuildInfo, Identifiers.HasComponent, Identifiers.ServerType_ServerStatus_BuildInfo_ManufacturerName.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_ServerStatus_BuildInfo, Identifiers.HasComponent, Identifiers.ServerType_ServerStatus_BuildInfo_ProductName.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_ServerStatus_BuildInfo, Identifiers.HasComponent, Identifiers.ServerType_ServerStatus_BuildInfo_SoftwareVersion.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_ServerStatus_BuildInfo, Identifiers.HasComponent, Identifiers.ServerType_ServerStatus_BuildInfo_BuildNumber.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_ServerStatus_BuildInfo, Identifiers.HasComponent, Identifiers.ServerType_ServerStatus_BuildInfo_BuildDate.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_ServerStatus_BuildInfo, Identifiers.HasTypeDefinition, Identifiers.BuildInfoType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_ServerStatus_BuildInfo, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_ServerStatus_BuildInfo, Identifiers.HasComponent, Identifiers.ServerType_ServerStatus.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode880() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.HistoryServerCapabilitiesType_MaxReturnEventValues, new QualifiedName(0, "MaxReturnEventValues"), new LocalizedText("en", "MaxReturnEventValues"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.HistoryServerCapabilitiesType_MaxReturnEventValues, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.HistoryServerCapabilitiesType_MaxReturnEventValues, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.HistoryServerCapabilitiesType_MaxReturnEventValues, Identifiers.HasProperty, Identifiers.HistoryServerCapabilitiesType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode881() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.ServerType_ServerStatus_BuildInfo_ProductUri, new QualifiedName(0, "ProductUri"), new LocalizedText("en", "ProductUri"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 1000.0, false);
        node.addReference(new Reference(Identifiers.ServerType_ServerStatus_BuildInfo_ProductUri, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_ServerStatus_BuildInfo_ProductUri, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_ServerStatus_BuildInfo_ProductUri, Identifiers.HasComponent, Identifiers.ServerType_ServerStatus_BuildInfo.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode882() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.HistoryServerCapabilitiesType_InsertAnnotationCapability, new QualifiedName(0, "InsertAnnotationCapability"), new LocalizedText("en", "InsertAnnotationCapability"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Boolean, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.HistoryServerCapabilitiesType_InsertAnnotationCapability, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.HistoryServerCapabilitiesType_InsertAnnotationCapability, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.HistoryServerCapabilitiesType_InsertAnnotationCapability, Identifiers.HasProperty, Identifiers.HistoryServerCapabilitiesType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode883() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.ServerType_ServerStatus_BuildInfo_ManufacturerName, new QualifiedName(0, "ManufacturerName"), new LocalizedText("en", "ManufacturerName"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 1000.0, false);
        node.addReference(new Reference(Identifiers.ServerType_ServerStatus_BuildInfo_ManufacturerName, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_ServerStatus_BuildInfo_ManufacturerName, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_ServerStatus_BuildInfo_ManufacturerName, Identifiers.HasComponent, Identifiers.ServerType_ServerStatus_BuildInfo.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode884() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.ServerType_ServerStatus_BuildInfo_ProductName, new QualifiedName(0, "ProductName"), new LocalizedText("en", "ProductName"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 1000.0, false);
        node.addReference(new Reference(Identifiers.ServerType_ServerStatus_BuildInfo_ProductName, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_ServerStatus_BuildInfo_ProductName, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_ServerStatus_BuildInfo_ProductName, Identifiers.HasComponent, Identifiers.ServerType_ServerStatus_BuildInfo.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode885() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.ServerType_ServerStatus_BuildInfo_SoftwareVersion, new QualifiedName(0, "SoftwareVersion"), new LocalizedText("en", "SoftwareVersion"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 1000.0, false);
        node.addReference(new Reference(Identifiers.ServerType_ServerStatus_BuildInfo_SoftwareVersion, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_ServerStatus_BuildInfo_SoftwareVersion, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_ServerStatus_BuildInfo_SoftwareVersion, Identifiers.HasComponent, Identifiers.ServerType_ServerStatus_BuildInfo.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode886() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.HistoryServerCapabilities_MaxReturnDataValues, new QualifiedName(0, "MaxReturnDataValues"), new LocalizedText("en", "MaxReturnDataValues"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.HistoryServerCapabilities_MaxReturnDataValues, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.HistoryServerCapabilities_MaxReturnDataValues, Identifiers.HasProperty, Identifiers.HistoryServerCapabilities.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode887() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.ServerType_ServerStatus_BuildInfo_BuildNumber, new QualifiedName(0, "BuildNumber"), new LocalizedText("en", "BuildNumber"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 1000.0, false);
        node.addReference(new Reference(Identifiers.ServerType_ServerStatus_BuildInfo_BuildNumber, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_ServerStatus_BuildInfo_BuildNumber, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_ServerStatus_BuildInfo_BuildNumber, Identifiers.HasComponent, Identifiers.ServerType_ServerStatus_BuildInfo.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode888() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.HistoryServerCapabilities_MaxReturnEventValues, new QualifiedName(0, "MaxReturnEventValues"), new LocalizedText("en", "MaxReturnEventValues"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.HistoryServerCapabilities_MaxReturnEventValues, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.HistoryServerCapabilities_MaxReturnEventValues, Identifiers.HasProperty, Identifiers.HistoryServerCapabilities.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode889() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.ServerType_ServerStatus_BuildInfo_BuildDate, new QualifiedName(0, "BuildDate"), new LocalizedText("en", "BuildDate"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UtcTime, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 1000.0, false);
        node.addReference(new Reference(Identifiers.ServerType_ServerStatus_BuildInfo_BuildDate, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_ServerStatus_BuildInfo_BuildDate, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_ServerStatus_BuildInfo_BuildDate, Identifiers.HasComponent, Identifiers.ServerType_ServerStatus_BuildInfo.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode890() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.HistoryServerCapabilities_InsertAnnotationCapability, new QualifiedName(0, "InsertAnnotationCapability"), new LocalizedText("en", "InsertAnnotationCapability"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Boolean, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.HistoryServerCapabilities_InsertAnnotationCapability, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.HistoryServerCapabilities_InsertAnnotationCapability, Identifiers.HasProperty, Identifiers.HistoryServerCapabilities.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode891() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.ServerType_ServerStatus_SecondsTillShutdown, new QualifiedName(0, "SecondsTillShutdown"), new LocalizedText("en", "SecondsTillShutdown"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerType_ServerStatus_SecondsTillShutdown, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_ServerStatus_SecondsTillShutdown, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_ServerStatus_SecondsTillShutdown, Identifiers.HasComponent, Identifiers.ServerType_ServerStatus.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode892() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.ServerType_ServerStatus_ShutdownReason, new QualifiedName(0, "ShutdownReason"), new LocalizedText("en", "ShutdownReason"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.LocalizedText, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerType_ServerStatus_ShutdownReason, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_ServerStatus_ShutdownReason, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_ServerStatus_ShutdownReason, Identifiers.HasComponent, Identifiers.ServerType_ServerStatus.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode893() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerType_ServerCapabilities_ServerProfileArray, new QualifiedName(0, "ServerProfileArray"), new LocalizedText("en", "ServerProfileArray"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerType_ServerCapabilities_ServerProfileArray, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_ServerCapabilities_ServerProfileArray, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_ServerCapabilities_ServerProfileArray, Identifiers.HasProperty, Identifiers.ServerType_ServerCapabilities.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode894() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.HistoryServerCapabilitiesType_InsertEventCapability, new QualifiedName(0, "InsertEventCapability"), new LocalizedText("en", "InsertEventCapability"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Boolean, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.HistoryServerCapabilitiesType_InsertEventCapability, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.HistoryServerCapabilitiesType_InsertEventCapability, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.HistoryServerCapabilitiesType_InsertEventCapability, Identifiers.HasProperty, Identifiers.HistoryServerCapabilitiesType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode895() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerType_ServerCapabilities_LocaleIdArray, new QualifiedName(0, "LocaleIdArray"), new LocalizedText("en", "LocaleIdArray"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.LocaleId, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerType_ServerCapabilities_LocaleIdArray, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_ServerCapabilities_LocaleIdArray, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_ServerCapabilities_LocaleIdArray, Identifiers.HasProperty, Identifiers.ServerType_ServerCapabilities.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode896() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.HistoryServerCapabilitiesType_ReplaceEventCapability, new QualifiedName(0, "ReplaceEventCapability"), new LocalizedText("en", "ReplaceEventCapability"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Boolean, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.HistoryServerCapabilitiesType_ReplaceEventCapability, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.HistoryServerCapabilitiesType_ReplaceEventCapability, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.HistoryServerCapabilitiesType_ReplaceEventCapability, Identifiers.HasProperty, Identifiers.HistoryServerCapabilitiesType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode897() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerType_ServerCapabilities_MinSupportedSampleRate, new QualifiedName(0, "MinSupportedSampleRate"), new LocalizedText("en", "MinSupportedSampleRate"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Duration, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerType_ServerCapabilities_MinSupportedSampleRate, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_ServerCapabilities_MinSupportedSampleRate, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_ServerCapabilities_MinSupportedSampleRate, Identifiers.HasProperty, Identifiers.ServerType_ServerCapabilities.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode898() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.HistoryServerCapabilitiesType_UpdateEventCapability, new QualifiedName(0, "UpdateEventCapability"), new LocalizedText("en", "UpdateEventCapability"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Boolean, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.HistoryServerCapabilitiesType_UpdateEventCapability, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.HistoryServerCapabilitiesType_UpdateEventCapability, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.HistoryServerCapabilitiesType_UpdateEventCapability, Identifiers.HasProperty, Identifiers.HistoryServerCapabilitiesType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode899() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerType_ServerCapabilities_MaxBrowseContinuationPoints, new QualifiedName(0, "MaxBrowseContinuationPoints"), new LocalizedText("en", "MaxBrowseContinuationPoints"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt16, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerType_ServerCapabilities_MaxBrowseContinuationPoints, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_ServerCapabilities_MaxBrowseContinuationPoints, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_ServerCapabilities_MaxBrowseContinuationPoints, Identifiers.HasProperty, Identifiers.ServerType_ServerCapabilities.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode900() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.HistoryServerCapabilities_InsertEventCapability, new QualifiedName(0, "InsertEventCapability"), new LocalizedText("en", "InsertEventCapability"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Boolean, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.HistoryServerCapabilities_InsertEventCapability, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.HistoryServerCapabilities_InsertEventCapability, Identifiers.HasProperty, Identifiers.HistoryServerCapabilities.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode901() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerType_ServerCapabilities_MaxQueryContinuationPoints, new QualifiedName(0, "MaxQueryContinuationPoints"), new LocalizedText("en", "MaxQueryContinuationPoints"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt16, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerType_ServerCapabilities_MaxQueryContinuationPoints, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_ServerCapabilities_MaxQueryContinuationPoints, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_ServerCapabilities_MaxQueryContinuationPoints, Identifiers.HasProperty, Identifiers.ServerType_ServerCapabilities.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode902() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.HistoryServerCapabilities_ReplaceEventCapability, new QualifiedName(0, "ReplaceEventCapability"), new LocalizedText("en", "ReplaceEventCapability"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Boolean, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.HistoryServerCapabilities_ReplaceEventCapability, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.HistoryServerCapabilities_ReplaceEventCapability, Identifiers.HasProperty, Identifiers.HistoryServerCapabilities.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode903() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerType_ServerCapabilities_MaxHistoryContinuationPoints, new QualifiedName(0, "MaxHistoryContinuationPoints"), new LocalizedText("en", "MaxHistoryContinuationPoints"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt16, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerType_ServerCapabilities_MaxHistoryContinuationPoints, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_ServerCapabilities_MaxHistoryContinuationPoints, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_ServerCapabilities_MaxHistoryContinuationPoints, Identifiers.HasProperty, Identifiers.ServerType_ServerCapabilities.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode904() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.HistoryServerCapabilities_UpdateEventCapability, new QualifiedName(0, "UpdateEventCapability"), new LocalizedText("en", "UpdateEventCapability"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Boolean, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.HistoryServerCapabilities_UpdateEventCapability, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.HistoryServerCapabilities_UpdateEventCapability, Identifiers.HasProperty, Identifiers.HistoryServerCapabilities.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode905() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerType_ServerCapabilities_SoftwareCertificates, new QualifiedName(0, "SoftwareCertificates"), new LocalizedText("en", "SoftwareCertificates"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.SignedSoftwareCertificate, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerType_ServerCapabilities_SoftwareCertificates, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_ServerCapabilities_SoftwareCertificates, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_ServerCapabilities_SoftwareCertificates, Identifiers.HasProperty, Identifiers.ServerType_ServerCapabilities.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode906() {
        ServerDiagnosticsSummaryTypeNode node = new ServerDiagnosticsSummaryTypeNode(this.context, Identifiers.ServerType_ServerDiagnostics_ServerDiagnosticsSummary, new QualifiedName(0, "ServerDiagnosticsSummary"), new LocalizedText("en", "ServerDiagnosticsSummary"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServerDiagnosticsSummaryDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerType_ServerDiagnostics_ServerDiagnosticsSummary, Identifiers.HasComponent, Identifiers.ServerType_ServerDiagnostics_ServerDiagnosticsSummary_ServerViewCount.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_ServerDiagnostics_ServerDiagnosticsSummary, Identifiers.HasComponent, Identifiers.ServerType_ServerDiagnostics_ServerDiagnosticsSummary_CurrentSessionCount.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_ServerDiagnostics_ServerDiagnosticsSummary, Identifiers.HasComponent, Identifiers.ServerType_ServerDiagnostics_ServerDiagnosticsSummary_CumulatedSessionCount.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_ServerDiagnostics_ServerDiagnosticsSummary, Identifiers.HasComponent, Identifiers.ServerType_ServerDiagnostics_ServerDiagnosticsSummary_SecurityRejectedSessionCount.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_ServerDiagnostics_ServerDiagnosticsSummary, Identifiers.HasComponent, Identifiers.ServerType_ServerDiagnostics_ServerDiagnosticsSummary_RejectedSessionCount.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_ServerDiagnostics_ServerDiagnosticsSummary, Identifiers.HasComponent, Identifiers.ServerType_ServerDiagnostics_ServerDiagnosticsSummary_SessionTimeoutCount.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_ServerDiagnostics_ServerDiagnosticsSummary, Identifiers.HasComponent, Identifiers.ServerType_ServerDiagnostics_ServerDiagnosticsSummary_SessionAbortCount.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_ServerDiagnostics_ServerDiagnosticsSummary, Identifiers.HasComponent, Identifiers.ServerType_ServerDiagnostics_ServerDiagnosticsSummary_PublishingIntervalCount.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_ServerDiagnostics_ServerDiagnosticsSummary, Identifiers.HasComponent, Identifiers.ServerType_ServerDiagnostics_ServerDiagnosticsSummary_CurrentSubscriptionCount.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_ServerDiagnostics_ServerDiagnosticsSummary, Identifiers.HasComponent, Identifiers.ServerType_ServerDiagnostics_ServerDiagnosticsSummary_CumulatedSubscriptionCount.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_ServerDiagnostics_ServerDiagnosticsSummary, Identifiers.HasComponent, Identifiers.ServerType_ServerDiagnostics_ServerDiagnosticsSummary_SecurityRejectedRequestsCount.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_ServerDiagnostics_ServerDiagnosticsSummary, Identifiers.HasComponent, Identifiers.ServerType_ServerDiagnostics_ServerDiagnosticsSummary_RejectedRequestsCount.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_ServerDiagnostics_ServerDiagnosticsSummary, Identifiers.HasTypeDefinition, Identifiers.ServerDiagnosticsSummaryType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_ServerDiagnostics_ServerDiagnosticsSummary, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_ServerDiagnostics_ServerDiagnosticsSummary, Identifiers.HasComponent, Identifiers.ServerType_ServerDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode907() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.ServerType_ServerDiagnostics_ServerDiagnosticsSummary_ServerViewCount, new QualifiedName(0, "ServerViewCount"), new LocalizedText("en", "ServerViewCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerType_ServerDiagnostics_ServerDiagnosticsSummary_ServerViewCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_ServerDiagnostics_ServerDiagnosticsSummary_ServerViewCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_ServerDiagnostics_ServerDiagnosticsSummary_ServerViewCount, Identifiers.HasComponent, Identifiers.ServerType_ServerDiagnostics_ServerDiagnosticsSummary.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode908() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.ServerType_ServerDiagnostics_ServerDiagnosticsSummary_CurrentSessionCount, new QualifiedName(0, "CurrentSessionCount"), new LocalizedText("en", "CurrentSessionCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerType_ServerDiagnostics_ServerDiagnosticsSummary_CurrentSessionCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_ServerDiagnostics_ServerDiagnosticsSummary_CurrentSessionCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_ServerDiagnostics_ServerDiagnosticsSummary_CurrentSessionCount, Identifiers.HasComponent, Identifiers.ServerType_ServerDiagnostics_ServerDiagnosticsSummary.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode909() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.ServerType_ServerDiagnostics_ServerDiagnosticsSummary_CumulatedSessionCount, new QualifiedName(0, "CumulatedSessionCount"), new LocalizedText("en", "CumulatedSessionCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerType_ServerDiagnostics_ServerDiagnosticsSummary_CumulatedSessionCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_ServerDiagnostics_ServerDiagnosticsSummary_CumulatedSessionCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_ServerDiagnostics_ServerDiagnosticsSummary_CumulatedSessionCount, Identifiers.HasComponent, Identifiers.ServerType_ServerDiagnostics_ServerDiagnosticsSummary.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode910() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.ServerType_ServerDiagnostics_ServerDiagnosticsSummary_SecurityRejectedSessionCount, new QualifiedName(0, "SecurityRejectedSessionCount"), new LocalizedText("en", "SecurityRejectedSessionCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerType_ServerDiagnostics_ServerDiagnosticsSummary_SecurityRejectedSessionCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_ServerDiagnostics_ServerDiagnosticsSummary_SecurityRejectedSessionCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_ServerDiagnostics_ServerDiagnosticsSummary_SecurityRejectedSessionCount, Identifiers.HasComponent, Identifiers.ServerType_ServerDiagnostics_ServerDiagnosticsSummary.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode911() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.ServerType_ServerDiagnostics_ServerDiagnosticsSummary_RejectedSessionCount, new QualifiedName(0, "RejectedSessionCount"), new LocalizedText("en", "RejectedSessionCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerType_ServerDiagnostics_ServerDiagnosticsSummary_RejectedSessionCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_ServerDiagnostics_ServerDiagnosticsSummary_RejectedSessionCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_ServerDiagnostics_ServerDiagnosticsSummary_RejectedSessionCount, Identifiers.HasComponent, Identifiers.ServerType_ServerDiagnostics_ServerDiagnosticsSummary.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode912() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.ServerType_ServerDiagnostics_ServerDiagnosticsSummary_SessionTimeoutCount, new QualifiedName(0, "SessionTimeoutCount"), new LocalizedText("en", "SessionTimeoutCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerType_ServerDiagnostics_ServerDiagnosticsSummary_SessionTimeoutCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_ServerDiagnostics_ServerDiagnosticsSummary_SessionTimeoutCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_ServerDiagnostics_ServerDiagnosticsSummary_SessionTimeoutCount, Identifiers.HasComponent, Identifiers.ServerType_ServerDiagnostics_ServerDiagnosticsSummary.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode913() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.ServerType_ServerDiagnostics_ServerDiagnosticsSummary_SessionAbortCount, new QualifiedName(0, "SessionAbortCount"), new LocalizedText("en", "SessionAbortCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerType_ServerDiagnostics_ServerDiagnosticsSummary_SessionAbortCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_ServerDiagnostics_ServerDiagnosticsSummary_SessionAbortCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_ServerDiagnostics_ServerDiagnosticsSummary_SessionAbortCount, Identifiers.HasComponent, Identifiers.ServerType_ServerDiagnostics_ServerDiagnosticsSummary.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode914() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.ServerType_ServerDiagnostics_ServerDiagnosticsSummary_PublishingIntervalCount, new QualifiedName(0, "PublishingIntervalCount"), new LocalizedText("en", "PublishingIntervalCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerType_ServerDiagnostics_ServerDiagnosticsSummary_PublishingIntervalCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_ServerDiagnostics_ServerDiagnosticsSummary_PublishingIntervalCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_ServerDiagnostics_ServerDiagnosticsSummary_PublishingIntervalCount, Identifiers.HasComponent, Identifiers.ServerType_ServerDiagnostics_ServerDiagnosticsSummary.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode915() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.ServerType_ServerDiagnostics_ServerDiagnosticsSummary_CurrentSubscriptionCount, new QualifiedName(0, "CurrentSubscriptionCount"), new LocalizedText("en", "CurrentSubscriptionCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerType_ServerDiagnostics_ServerDiagnosticsSummary_CurrentSubscriptionCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_ServerDiagnostics_ServerDiagnosticsSummary_CurrentSubscriptionCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_ServerDiagnostics_ServerDiagnosticsSummary_CurrentSubscriptionCount, Identifiers.HasComponent, Identifiers.ServerType_ServerDiagnostics_ServerDiagnosticsSummary.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode916() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.ServerType_ServerDiagnostics_ServerDiagnosticsSummary_CumulatedSubscriptionCount, new QualifiedName(0, "CumulatedSubscriptionCount"), new LocalizedText("en", "CumulatedSubscriptionCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerType_ServerDiagnostics_ServerDiagnosticsSummary_CumulatedSubscriptionCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_ServerDiagnostics_ServerDiagnosticsSummary_CumulatedSubscriptionCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_ServerDiagnostics_ServerDiagnosticsSummary_CumulatedSubscriptionCount, Identifiers.HasComponent, Identifiers.ServerType_ServerDiagnostics_ServerDiagnosticsSummary.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode917() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.ServerType_ServerDiagnostics_ServerDiagnosticsSummary_SecurityRejectedRequestsCount, new QualifiedName(0, "SecurityRejectedRequestsCount"), new LocalizedText("en", "SecurityRejectedRequestsCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerType_ServerDiagnostics_ServerDiagnosticsSummary_SecurityRejectedRequestsCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_ServerDiagnostics_ServerDiagnosticsSummary_SecurityRejectedRequestsCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_ServerDiagnostics_ServerDiagnosticsSummary_SecurityRejectedRequestsCount, Identifiers.HasComponent, Identifiers.ServerType_ServerDiagnostics_ServerDiagnosticsSummary.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode918() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.ServerType_ServerDiagnostics_ServerDiagnosticsSummary_RejectedRequestsCount, new QualifiedName(0, "RejectedRequestsCount"), new LocalizedText("en", "RejectedRequestsCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerType_ServerDiagnostics_ServerDiagnosticsSummary_RejectedRequestsCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_ServerDiagnostics_ServerDiagnosticsSummary_RejectedRequestsCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_ServerDiagnostics_ServerDiagnosticsSummary_RejectedRequestsCount, Identifiers.HasComponent, Identifiers.ServerType_ServerDiagnostics_ServerDiagnosticsSummary.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode919() {
        SubscriptionDiagnosticsArrayTypeNode node = new SubscriptionDiagnosticsArrayTypeNode(this.context, Identifiers.ServerType_ServerDiagnostics_SubscriptionDiagnosticsArray, new QualifiedName(0, "SubscriptionDiagnosticsArray"), new LocalizedText("en", "SubscriptionDiagnosticsArray"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.SubscriptionDiagnosticsDataType, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerType_ServerDiagnostics_SubscriptionDiagnosticsArray, Identifiers.HasTypeDefinition, Identifiers.SubscriptionDiagnosticsArrayType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_ServerDiagnostics_SubscriptionDiagnosticsArray, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_ServerDiagnostics_SubscriptionDiagnosticsArray, Identifiers.HasComponent, Identifiers.ServerType_ServerDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode920() {
        SessionDiagnosticsArrayTypeNode node = new SessionDiagnosticsArrayTypeNode(this.context, Identifiers.ServerType_ServerDiagnostics_SessionsDiagnosticsSummary_SessionDiagnosticsArray, new QualifiedName(0, "SessionDiagnosticsArray"), new LocalizedText("en", "SessionDiagnosticsArray"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.SessionDiagnosticsDataType, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerType_ServerDiagnostics_SessionsDiagnosticsSummary_SessionDiagnosticsArray, Identifiers.HasTypeDefinition, Identifiers.SessionDiagnosticsArrayType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_ServerDiagnostics_SessionsDiagnosticsSummary_SessionDiagnosticsArray, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_ServerDiagnostics_SessionsDiagnosticsSummary_SessionDiagnosticsArray, Identifiers.HasComponent, Identifiers.ServerType_ServerDiagnostics_SessionsDiagnosticsSummary.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode921() {
        SessionSecurityDiagnosticsArrayTypeNode node = new SessionSecurityDiagnosticsArrayTypeNode(this.context, Identifiers.ServerType_ServerDiagnostics_SessionsDiagnosticsSummary_SessionSecurityDiagnosticsArray, new QualifiedName(0, "SessionSecurityDiagnosticsArray"), new LocalizedText("en", "SessionSecurityDiagnosticsArray"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.SessionSecurityDiagnosticsDataType, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerType_ServerDiagnostics_SessionsDiagnosticsSummary_SessionSecurityDiagnosticsArray, Identifiers.HasTypeDefinition, Identifiers.SessionSecurityDiagnosticsArrayType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_ServerDiagnostics_SessionsDiagnosticsSummary_SessionSecurityDiagnosticsArray, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_ServerDiagnostics_SessionsDiagnosticsSummary_SessionSecurityDiagnosticsArray, Identifiers.HasComponent, Identifiers.ServerType_ServerDiagnostics_SessionsDiagnosticsSummary.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode922() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerType_ServerDiagnostics_EnabledFlag, new QualifiedName(0, "EnabledFlag"), new LocalizedText("en", "EnabledFlag"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Boolean, -1, new UInteger[]{}, UByte.valueOf(3), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerType_ServerDiagnostics_EnabledFlag, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_ServerDiagnostics_EnabledFlag, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_ServerDiagnostics_EnabledFlag, Identifiers.HasProperty, Identifiers.ServerType_ServerDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode923() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerType_ServerRedundancy_RedundancySupport, new QualifiedName(0, "RedundancySupport"), new LocalizedText("en", "RedundancySupport"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.RedundancySupport, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerType_ServerRedundancy_RedundancySupport, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_ServerRedundancy_RedundancySupport, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_ServerRedundancy_RedundancySupport, Identifiers.HasProperty, Identifiers.ServerType_ServerRedundancy.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode924() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.ServerDiagnosticsType_ServerDiagnosticsSummary_ServerViewCount, new QualifiedName(0, "ServerViewCount"), new LocalizedText("en", "ServerViewCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerDiagnosticsType_ServerDiagnosticsSummary_ServerViewCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerDiagnosticsType_ServerDiagnosticsSummary_ServerViewCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerDiagnosticsType_ServerDiagnosticsSummary_ServerViewCount, Identifiers.HasComponent, Identifiers.ServerDiagnosticsType_ServerDiagnosticsSummary.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode925() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.ServerDiagnosticsType_ServerDiagnosticsSummary_CurrentSessionCount, new QualifiedName(0, "CurrentSessionCount"), new LocalizedText("en", "CurrentSessionCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerDiagnosticsType_ServerDiagnosticsSummary_CurrentSessionCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerDiagnosticsType_ServerDiagnosticsSummary_CurrentSessionCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerDiagnosticsType_ServerDiagnosticsSummary_CurrentSessionCount, Identifiers.HasComponent, Identifiers.ServerDiagnosticsType_ServerDiagnosticsSummary.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode926() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.ServerDiagnosticsType_ServerDiagnosticsSummary_CumulatedSessionCount, new QualifiedName(0, "CumulatedSessionCount"), new LocalizedText("en", "CumulatedSessionCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerDiagnosticsType_ServerDiagnosticsSummary_CumulatedSessionCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerDiagnosticsType_ServerDiagnosticsSummary_CumulatedSessionCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerDiagnosticsType_ServerDiagnosticsSummary_CumulatedSessionCount, Identifiers.HasComponent, Identifiers.ServerDiagnosticsType_ServerDiagnosticsSummary.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode927() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.ServerDiagnosticsType_ServerDiagnosticsSummary_SecurityRejectedSessionCount, new QualifiedName(0, "SecurityRejectedSessionCount"), new LocalizedText("en", "SecurityRejectedSessionCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerDiagnosticsType_ServerDiagnosticsSummary_SecurityRejectedSessionCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerDiagnosticsType_ServerDiagnosticsSummary_SecurityRejectedSessionCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerDiagnosticsType_ServerDiagnosticsSummary_SecurityRejectedSessionCount, Identifiers.HasComponent, Identifiers.ServerDiagnosticsType_ServerDiagnosticsSummary.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode928() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.ServerDiagnosticsType_ServerDiagnosticsSummary_RejectedSessionCount, new QualifiedName(0, "RejectedSessionCount"), new LocalizedText("en", "RejectedSessionCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerDiagnosticsType_ServerDiagnosticsSummary_RejectedSessionCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerDiagnosticsType_ServerDiagnosticsSummary_RejectedSessionCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerDiagnosticsType_ServerDiagnosticsSummary_RejectedSessionCount, Identifiers.HasComponent, Identifiers.ServerDiagnosticsType_ServerDiagnosticsSummary.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode929() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.ServerDiagnosticsType_ServerDiagnosticsSummary_SessionTimeoutCount, new QualifiedName(0, "SessionTimeoutCount"), new LocalizedText("en", "SessionTimeoutCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerDiagnosticsType_ServerDiagnosticsSummary_SessionTimeoutCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerDiagnosticsType_ServerDiagnosticsSummary_SessionTimeoutCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerDiagnosticsType_ServerDiagnosticsSummary_SessionTimeoutCount, Identifiers.HasComponent, Identifiers.ServerDiagnosticsType_ServerDiagnosticsSummary.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode930() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.ServerDiagnosticsType_ServerDiagnosticsSummary_SessionAbortCount, new QualifiedName(0, "SessionAbortCount"), new LocalizedText("en", "SessionAbortCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerDiagnosticsType_ServerDiagnosticsSummary_SessionAbortCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerDiagnosticsType_ServerDiagnosticsSummary_SessionAbortCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerDiagnosticsType_ServerDiagnosticsSummary_SessionAbortCount, Identifiers.HasComponent, Identifiers.ServerDiagnosticsType_ServerDiagnosticsSummary.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode931() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.ServerDiagnosticsType_ServerDiagnosticsSummary_PublishingIntervalCount, new QualifiedName(0, "PublishingIntervalCount"), new LocalizedText("en", "PublishingIntervalCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerDiagnosticsType_ServerDiagnosticsSummary_PublishingIntervalCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerDiagnosticsType_ServerDiagnosticsSummary_PublishingIntervalCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerDiagnosticsType_ServerDiagnosticsSummary_PublishingIntervalCount, Identifiers.HasComponent, Identifiers.ServerDiagnosticsType_ServerDiagnosticsSummary.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode932() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.ServerDiagnosticsType_ServerDiagnosticsSummary_CurrentSubscriptionCount, new QualifiedName(0, "CurrentSubscriptionCount"), new LocalizedText("en", "CurrentSubscriptionCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerDiagnosticsType_ServerDiagnosticsSummary_CurrentSubscriptionCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerDiagnosticsType_ServerDiagnosticsSummary_CurrentSubscriptionCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerDiagnosticsType_ServerDiagnosticsSummary_CurrentSubscriptionCount, Identifiers.HasComponent, Identifiers.ServerDiagnosticsType_ServerDiagnosticsSummary.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode933() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.ServerDiagnosticsType_ServerDiagnosticsSummary_CumulatedSubscriptionCount, new QualifiedName(0, "CumulatedSubscriptionCount"), new LocalizedText("en", "CumulatedSubscriptionCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerDiagnosticsType_ServerDiagnosticsSummary_CumulatedSubscriptionCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerDiagnosticsType_ServerDiagnosticsSummary_CumulatedSubscriptionCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerDiagnosticsType_ServerDiagnosticsSummary_CumulatedSubscriptionCount, Identifiers.HasComponent, Identifiers.ServerDiagnosticsType_ServerDiagnosticsSummary.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode934() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.ServerDiagnosticsType_ServerDiagnosticsSummary_SecurityRejectedRequestsCount, new QualifiedName(0, "SecurityRejectedRequestsCount"), new LocalizedText("en", "SecurityRejectedRequestsCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerDiagnosticsType_ServerDiagnosticsSummary_SecurityRejectedRequestsCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerDiagnosticsType_ServerDiagnosticsSummary_SecurityRejectedRequestsCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerDiagnosticsType_ServerDiagnosticsSummary_SecurityRejectedRequestsCount, Identifiers.HasComponent, Identifiers.ServerDiagnosticsType_ServerDiagnosticsSummary.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode935() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.ServerDiagnosticsType_ServerDiagnosticsSummary_RejectedRequestsCount, new QualifiedName(0, "RejectedRequestsCount"), new LocalizedText("en", "RejectedRequestsCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerDiagnosticsType_ServerDiagnosticsSummary_RejectedRequestsCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerDiagnosticsType_ServerDiagnosticsSummary_RejectedRequestsCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerDiagnosticsType_ServerDiagnosticsSummary_RejectedRequestsCount, Identifiers.HasComponent, Identifiers.ServerDiagnosticsType_ServerDiagnosticsSummary.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode936() {
        SessionDiagnosticsArrayTypeNode node = new SessionDiagnosticsArrayTypeNode(this.context, Identifiers.ServerDiagnosticsType_SessionsDiagnosticsSummary_SessionDiagnosticsArray, new QualifiedName(0, "SessionDiagnosticsArray"), new LocalizedText("en", "SessionDiagnosticsArray"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.SessionDiagnosticsDataType, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerDiagnosticsType_SessionsDiagnosticsSummary_SessionDiagnosticsArray, Identifiers.HasTypeDefinition, Identifiers.SessionDiagnosticsArrayType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerDiagnosticsType_SessionsDiagnosticsSummary_SessionDiagnosticsArray, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerDiagnosticsType_SessionsDiagnosticsSummary_SessionDiagnosticsArray, Identifiers.HasComponent, Identifiers.ServerDiagnosticsType_SessionsDiagnosticsSummary.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode937() {
        SessionSecurityDiagnosticsArrayTypeNode node = new SessionSecurityDiagnosticsArrayTypeNode(this.context, Identifiers.ServerDiagnosticsType_SessionsDiagnosticsSummary_SessionSecurityDiagnosticsArray, new QualifiedName(0, "SessionSecurityDiagnosticsArray"), new LocalizedText("en", "SessionSecurityDiagnosticsArray"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.SessionSecurityDiagnosticsDataType, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerDiagnosticsType_SessionsDiagnosticsSummary_SessionSecurityDiagnosticsArray, Identifiers.HasTypeDefinition, Identifiers.SessionSecurityDiagnosticsArrayType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerDiagnosticsType_SessionsDiagnosticsSummary_SessionSecurityDiagnosticsArray, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerDiagnosticsType_SessionsDiagnosticsSummary_SessionSecurityDiagnosticsArray, Identifiers.HasComponent, Identifiers.ServerDiagnosticsType_SessionsDiagnosticsSummary.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode938() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ShelvedStateMachineType_UnshelvedToTimedShelved_TransitionNumber, new QualifiedName(0, "TransitionNumber"), new LocalizedText("en", "TransitionNumber"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ShelvedStateMachineType_UnshelvedToTimedShelved_TransitionNumber, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ShelvedStateMachineType_UnshelvedToTimedShelved_TransitionNumber, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ShelvedStateMachineType_UnshelvedToTimedShelved_TransitionNumber, Identifiers.HasProperty, Identifiers.ShelvedStateMachineType_UnshelvedToTimedShelved.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode939() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_SessionId, new QualifiedName(0, "SessionId"), new LocalizedText("en", "SessionId"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.NodeId, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_SessionId, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_SessionId, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_SessionId, Identifiers.HasComponent, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode940() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ShelvedStateMachineType_UnshelvedToOneShotShelved_TransitionNumber, new QualifiedName(0, "TransitionNumber"), new LocalizedText("en", "TransitionNumber"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ShelvedStateMachineType_UnshelvedToOneShotShelved_TransitionNumber, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ShelvedStateMachineType_UnshelvedToOneShotShelved_TransitionNumber, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ShelvedStateMachineType_UnshelvedToOneShotShelved_TransitionNumber, Identifiers.HasProperty, Identifiers.ShelvedStateMachineType_UnshelvedToOneShotShelved.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode941() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_SessionName, new QualifiedName(0, "SessionName"), new LocalizedText("en", "SessionName"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_SessionName, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_SessionName, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_SessionName, Identifiers.HasComponent, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode942() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ShelvedStateMachineType_TimedShelvedToUnshelved_TransitionNumber, new QualifiedName(0, "TransitionNumber"), new LocalizedText("en", "TransitionNumber"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ShelvedStateMachineType_TimedShelvedToUnshelved_TransitionNumber, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ShelvedStateMachineType_TimedShelvedToUnshelved_TransitionNumber, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ShelvedStateMachineType_TimedShelvedToUnshelved_TransitionNumber, Identifiers.HasProperty, Identifiers.ShelvedStateMachineType_TimedShelvedToUnshelved.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode943() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_ClientDescription, new QualifiedName(0, "ClientDescription"), new LocalizedText("en", "ClientDescription"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ApplicationDescription, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_ClientDescription, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_ClientDescription, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_ClientDescription, Identifiers.HasComponent, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode944() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ShelvedStateMachineType_TimedShelvedToOneShotShelved_TransitionNumber, new QualifiedName(0, "TransitionNumber"), new LocalizedText("en", "TransitionNumber"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ShelvedStateMachineType_TimedShelvedToOneShotShelved_TransitionNumber, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ShelvedStateMachineType_TimedShelvedToOneShotShelved_TransitionNumber, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ShelvedStateMachineType_TimedShelvedToOneShotShelved_TransitionNumber, Identifiers.HasProperty, Identifiers.ShelvedStateMachineType_TimedShelvedToOneShotShelved.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode945() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_ServerUri, new QualifiedName(0, "ServerUri"), new LocalizedText("en", "ServerUri"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_ServerUri, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_ServerUri, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_ServerUri, Identifiers.HasComponent, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode946() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ShelvedStateMachineType_OneShotShelvedToUnshelved_TransitionNumber, new QualifiedName(0, "TransitionNumber"), new LocalizedText("en", "TransitionNumber"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ShelvedStateMachineType_OneShotShelvedToUnshelved_TransitionNumber, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ShelvedStateMachineType_OneShotShelvedToUnshelved_TransitionNumber, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ShelvedStateMachineType_OneShotShelvedToUnshelved_TransitionNumber, Identifiers.HasProperty, Identifiers.ShelvedStateMachineType_OneShotShelvedToUnshelved.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode947() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_EndpointUrl, new QualifiedName(0, "EndpointUrl"), new LocalizedText("en", "EndpointUrl"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_EndpointUrl, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_EndpointUrl, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_EndpointUrl, Identifiers.HasComponent, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode948() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ShelvedStateMachineType_OneShotShelvedToTimedShelved_TransitionNumber, new QualifiedName(0, "TransitionNumber"), new LocalizedText("en", "TransitionNumber"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ShelvedStateMachineType_OneShotShelvedToTimedShelved_TransitionNumber, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ShelvedStateMachineType_OneShotShelvedToTimedShelved_TransitionNumber, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ShelvedStateMachineType_OneShotShelvedToTimedShelved_TransitionNumber, Identifiers.HasProperty, Identifiers.ShelvedStateMachineType_OneShotShelvedToTimedShelved.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode949() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_LocaleIds, new QualifiedName(0, "LocaleIds"), new LocalizedText("en", "LocaleIds"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.LocaleId, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_LocaleIds, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_LocaleIds, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_LocaleIds, Identifiers.HasComponent, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode950() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_ActualSessionTimeout, new QualifiedName(0, "ActualSessionTimeout"), new LocalizedText("en", "ActualSessionTimeout"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Duration, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_ActualSessionTimeout, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_ActualSessionTimeout, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_ActualSessionTimeout, Identifiers.HasComponent, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode951() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_MaxResponseMessageSize, new QualifiedName(0, "MaxResponseMessageSize"), new LocalizedText("en", "MaxResponseMessageSize"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_MaxResponseMessageSize, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_MaxResponseMessageSize, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_MaxResponseMessageSize, Identifiers.HasComponent, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode952() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_ClientConnectionTime, new QualifiedName(0, "ClientConnectionTime"), new LocalizedText("en", "ClientConnectionTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UtcTime, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_ClientConnectionTime, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_ClientConnectionTime, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_ClientConnectionTime, Identifiers.HasComponent, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode953() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_ClientLastContactTime, new QualifiedName(0, "ClientLastContactTime"), new LocalizedText("en", "ClientLastContactTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UtcTime, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_ClientLastContactTime, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_ClientLastContactTime, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_ClientLastContactTime, Identifiers.HasComponent, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode954() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_CurrentSubscriptionsCount, new QualifiedName(0, "CurrentSubscriptionsCount"), new LocalizedText("en", "CurrentSubscriptionsCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_CurrentSubscriptionsCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_CurrentSubscriptionsCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_CurrentSubscriptionsCount, Identifiers.HasComponent, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode955() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_CurrentMonitoredItemsCount, new QualifiedName(0, "CurrentMonitoredItemsCount"), new LocalizedText("en", "CurrentMonitoredItemsCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_CurrentMonitoredItemsCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_CurrentMonitoredItemsCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_CurrentMonitoredItemsCount, Identifiers.HasComponent, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode956() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_CurrentPublishRequestsInQueue, new QualifiedName(0, "CurrentPublishRequestsInQueue"), new LocalizedText("en", "CurrentPublishRequestsInQueue"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_CurrentPublishRequestsInQueue, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_CurrentPublishRequestsInQueue, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_CurrentPublishRequestsInQueue, Identifiers.HasComponent, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode957() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ExclusiveLimitStateMachineType_LowLowToLow_TransitionNumber, new QualifiedName(0, "TransitionNumber"), new LocalizedText("en", "TransitionNumber"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ExclusiveLimitStateMachineType_LowLowToLow_TransitionNumber, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ExclusiveLimitStateMachineType_LowLowToLow_TransitionNumber, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ExclusiveLimitStateMachineType_LowLowToLow_TransitionNumber, Identifiers.HasProperty, Identifiers.ExclusiveLimitStateMachineType_LowLowToLow.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode958() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ExclusiveLimitStateMachineType_LowToLowLow_TransitionNumber, new QualifiedName(0, "TransitionNumber"), new LocalizedText("en", "TransitionNumber"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ExclusiveLimitStateMachineType_LowToLowLow_TransitionNumber, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ExclusiveLimitStateMachineType_LowToLowLow_TransitionNumber, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ExclusiveLimitStateMachineType_LowToLowLow_TransitionNumber, Identifiers.HasProperty, Identifiers.ExclusiveLimitStateMachineType_LowToLowLow.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode959() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ExclusiveLimitStateMachineType_HighHighToHigh_TransitionNumber, new QualifiedName(0, "TransitionNumber"), new LocalizedText("en", "TransitionNumber"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ExclusiveLimitStateMachineType_HighHighToHigh_TransitionNumber, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ExclusiveLimitStateMachineType_HighHighToHigh_TransitionNumber, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ExclusiveLimitStateMachineType_HighHighToHigh_TransitionNumber, Identifiers.HasProperty, Identifiers.ExclusiveLimitStateMachineType_HighHighToHigh.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode960() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_ReadCount, new QualifiedName(0, "ReadCount"), new LocalizedText("en", "ReadCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_ReadCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_ReadCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_ReadCount, Identifiers.HasComponent, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode961() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ExclusiveLimitStateMachineType_HighToHighHigh_TransitionNumber, new QualifiedName(0, "TransitionNumber"), new LocalizedText("en", "TransitionNumber"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ExclusiveLimitStateMachineType_HighToHighHigh_TransitionNumber, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ExclusiveLimitStateMachineType_HighToHighHigh_TransitionNumber, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ExclusiveLimitStateMachineType_HighToHighHigh_TransitionNumber, Identifiers.HasProperty, Identifiers.ExclusiveLimitStateMachineType_HighToHighHigh.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode962() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_HistoryReadCount, new QualifiedName(0, "HistoryReadCount"), new LocalizedText("en", "HistoryReadCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_HistoryReadCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_HistoryReadCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_HistoryReadCount, Identifiers.HasComponent, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode963() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_WriteCount, new QualifiedName(0, "WriteCount"), new LocalizedText("en", "WriteCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_WriteCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_WriteCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_WriteCount, Identifiers.HasComponent, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode964() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_HistoryUpdateCount, new QualifiedName(0, "HistoryUpdateCount"), new LocalizedText("en", "HistoryUpdateCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_HistoryUpdateCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_HistoryUpdateCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_HistoryUpdateCount, Identifiers.HasComponent, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode965() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_CallCount, new QualifiedName(0, "CallCount"), new LocalizedText("en", "CallCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_CallCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_CallCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_CallCount, Identifiers.HasComponent, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode966() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_CreateMonitoredItemsCount, new QualifiedName(0, "CreateMonitoredItemsCount"), new LocalizedText("en", "CreateMonitoredItemsCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_CreateMonitoredItemsCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_CreateMonitoredItemsCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_CreateMonitoredItemsCount, Identifiers.HasComponent, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode967() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_ModifyMonitoredItemsCount, new QualifiedName(0, "ModifyMonitoredItemsCount"), new LocalizedText("en", "ModifyMonitoredItemsCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_ModifyMonitoredItemsCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_ModifyMonitoredItemsCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_ModifyMonitoredItemsCount, Identifiers.HasComponent, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode968() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_SetMonitoringModeCount, new QualifiedName(0, "SetMonitoringModeCount"), new LocalizedText("en", "SetMonitoringModeCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_SetMonitoringModeCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_SetMonitoringModeCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_SetMonitoringModeCount, Identifiers.HasComponent, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode969() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_SetTriggeringCount, new QualifiedName(0, "SetTriggeringCount"), new LocalizedText("en", "SetTriggeringCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_SetTriggeringCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_SetTriggeringCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_SetTriggeringCount, Identifiers.HasComponent, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode970() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_DeleteMonitoredItemsCount, new QualifiedName(0, "DeleteMonitoredItemsCount"), new LocalizedText("en", "DeleteMonitoredItemsCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_DeleteMonitoredItemsCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_DeleteMonitoredItemsCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_DeleteMonitoredItemsCount, Identifiers.HasComponent, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode971() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_CreateSubscriptionCount, new QualifiedName(0, "CreateSubscriptionCount"), new LocalizedText("en", "CreateSubscriptionCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_CreateSubscriptionCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_CreateSubscriptionCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_CreateSubscriptionCount, Identifiers.HasComponent, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode972() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_ModifySubscriptionCount, new QualifiedName(0, "ModifySubscriptionCount"), new LocalizedText("en", "ModifySubscriptionCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_ModifySubscriptionCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_ModifySubscriptionCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_ModifySubscriptionCount, Identifiers.HasComponent, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode973() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_SetPublishingModeCount, new QualifiedName(0, "SetPublishingModeCount"), new LocalizedText("en", "SetPublishingModeCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_SetPublishingModeCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_SetPublishingModeCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_SetPublishingModeCount, Identifiers.HasComponent, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode974() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_PublishCount, new QualifiedName(0, "PublishCount"), new LocalizedText("en", "PublishCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_PublishCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_PublishCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_PublishCount, Identifiers.HasComponent, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode975() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_RepublishCount, new QualifiedName(0, "RepublishCount"), new LocalizedText("en", "RepublishCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_RepublishCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_RepublishCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_RepublishCount, Identifiers.HasComponent, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode976() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_TransferSubscriptionsCount, new QualifiedName(0, "TransferSubscriptionsCount"), new LocalizedText("en", "TransferSubscriptionsCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_TransferSubscriptionsCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_TransferSubscriptionsCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_TransferSubscriptionsCount, Identifiers.HasComponent, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode977() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_DeleteSubscriptionsCount, new QualifiedName(0, "DeleteSubscriptionsCount"), new LocalizedText("en", "DeleteSubscriptionsCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_DeleteSubscriptionsCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_DeleteSubscriptionsCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_DeleteSubscriptionsCount, Identifiers.HasComponent, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode978() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_AddNodesCount, new QualifiedName(0, "AddNodesCount"), new LocalizedText("en", "AddNodesCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_AddNodesCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_AddNodesCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_AddNodesCount, Identifiers.HasComponent, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode979() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_AddReferencesCount, new QualifiedName(0, "AddReferencesCount"), new LocalizedText("en", "AddReferencesCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_AddReferencesCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_AddReferencesCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_AddReferencesCount, Identifiers.HasComponent, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode980() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_DeleteNodesCount, new QualifiedName(0, "DeleteNodesCount"), new LocalizedText("en", "DeleteNodesCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_DeleteNodesCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_DeleteNodesCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_DeleteNodesCount, Identifiers.HasComponent, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode981() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_DeleteReferencesCount, new QualifiedName(0, "DeleteReferencesCount"), new LocalizedText("en", "DeleteReferencesCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_DeleteReferencesCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_DeleteReferencesCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_DeleteReferencesCount, Identifiers.HasComponent, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode982() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_BrowseCount, new QualifiedName(0, "BrowseCount"), new LocalizedText("en", "BrowseCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_BrowseCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_BrowseCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_BrowseCount, Identifiers.HasComponent, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode983() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_BrowseNextCount, new QualifiedName(0, "BrowseNextCount"), new LocalizedText("en", "BrowseNextCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_BrowseNextCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_BrowseNextCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_BrowseNextCount, Identifiers.HasComponent, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode984() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_TranslateBrowsePathsToNodeIdsCount, new QualifiedName(0, "TranslateBrowsePathsToNodeIdsCount"), new LocalizedText("en", "TranslateBrowsePathsToNodeIdsCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_TranslateBrowsePathsToNodeIdsCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_TranslateBrowsePathsToNodeIdsCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_TranslateBrowsePathsToNodeIdsCount, Identifiers.HasComponent, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode985() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_QueryFirstCount, new QualifiedName(0, "QueryFirstCount"), new LocalizedText("en", "QueryFirstCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_QueryFirstCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_QueryFirstCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_QueryFirstCount, Identifiers.HasComponent, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode986() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_QueryNextCount, new QualifiedName(0, "QueryNextCount"), new LocalizedText("en", "QueryNextCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_QueryNextCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_QueryNextCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_QueryNextCount, Identifiers.HasComponent, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode987() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_RegisterNodesCount, new QualifiedName(0, "RegisterNodesCount"), new LocalizedText("en", "RegisterNodesCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_RegisterNodesCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_RegisterNodesCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_RegisterNodesCount, Identifiers.HasComponent, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode988() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_UnregisterNodesCount, new QualifiedName(0, "UnregisterNodesCount"), new LocalizedText("en", "UnregisterNodesCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_UnregisterNodesCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_UnregisterNodesCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_UnregisterNodesCount, Identifiers.HasComponent, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode989() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsObjectType_SessionSecurityDiagnostics_SessionId, new QualifiedName(0, "SessionId"), new LocalizedText("en", "SessionId"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.NodeId, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionSecurityDiagnostics_SessionId, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionSecurityDiagnostics_SessionId, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionSecurityDiagnostics_SessionId, Identifiers.HasComponent, Identifiers.SessionDiagnosticsObjectType_SessionSecurityDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode990() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsObjectType_SessionSecurityDiagnostics_ClientUserIdOfSession, new QualifiedName(0, "ClientUserIdOfSession"), new LocalizedText("en", "ClientUserIdOfSession"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionSecurityDiagnostics_ClientUserIdOfSession, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionSecurityDiagnostics_ClientUserIdOfSession, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionSecurityDiagnostics_ClientUserIdOfSession, Identifiers.HasComponent, Identifiers.SessionDiagnosticsObjectType_SessionSecurityDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode991() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsObjectType_SessionSecurityDiagnostics_ClientUserIdHistory, new QualifiedName(0, "ClientUserIdHistory"), new LocalizedText("en", "ClientUserIdHistory"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionSecurityDiagnostics_ClientUserIdHistory, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionSecurityDiagnostics_ClientUserIdHistory, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionSecurityDiagnostics_ClientUserIdHistory, Identifiers.HasComponent, Identifiers.SessionDiagnosticsObjectType_SessionSecurityDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode992() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsObjectType_SessionSecurityDiagnostics_AuthenticationMechanism, new QualifiedName(0, "AuthenticationMechanism"), new LocalizedText("en", "AuthenticationMechanism"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionSecurityDiagnostics_AuthenticationMechanism, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionSecurityDiagnostics_AuthenticationMechanism, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionSecurityDiagnostics_AuthenticationMechanism, Identifiers.HasComponent, Identifiers.SessionDiagnosticsObjectType_SessionSecurityDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode993() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsObjectType_SessionSecurityDiagnostics_Encoding, new QualifiedName(0, "Encoding"), new LocalizedText("en", "Encoding"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionSecurityDiagnostics_Encoding, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionSecurityDiagnostics_Encoding, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionSecurityDiagnostics_Encoding, Identifiers.HasComponent, Identifiers.SessionDiagnosticsObjectType_SessionSecurityDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode994() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsObjectType_SessionSecurityDiagnostics_TransportProtocol, new QualifiedName(0, "TransportProtocol"), new LocalizedText("en", "TransportProtocol"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionSecurityDiagnostics_TransportProtocol, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionSecurityDiagnostics_TransportProtocol, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionSecurityDiagnostics_TransportProtocol, Identifiers.HasComponent, Identifiers.SessionDiagnosticsObjectType_SessionSecurityDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode995() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsObjectType_SessionSecurityDiagnostics_SecurityMode, new QualifiedName(0, "SecurityMode"), new LocalizedText("en", "SecurityMode"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.MessageSecurityMode, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionSecurityDiagnostics_SecurityMode, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionSecurityDiagnostics_SecurityMode, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionSecurityDiagnostics_SecurityMode, Identifiers.HasComponent, Identifiers.SessionDiagnosticsObjectType_SessionSecurityDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode996() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsObjectType_SessionSecurityDiagnostics_SecurityPolicyUri, new QualifiedName(0, "SecurityPolicyUri"), new LocalizedText("en", "SecurityPolicyUri"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionSecurityDiagnostics_SecurityPolicyUri, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionSecurityDiagnostics_SecurityPolicyUri, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionSecurityDiagnostics_SecurityPolicyUri, Identifiers.HasComponent, Identifiers.SessionDiagnosticsObjectType_SessionSecurityDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode997() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsObjectType_SessionSecurityDiagnostics_ClientCertificate, new QualifiedName(0, "ClientCertificate"), new LocalizedText("en", "ClientCertificate"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ByteString, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionSecurityDiagnostics_ClientCertificate, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionSecurityDiagnostics_ClientCertificate, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionSecurityDiagnostics_ClientCertificate, Identifiers.HasComponent, Identifiers.SessionDiagnosticsObjectType_SessionSecurityDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode998() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.BaseEventType_LocalTime, new QualifiedName(0, "LocalTime"), new LocalizedText("en", "LocalTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.TimeZoneDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.BaseEventType_LocalTime, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.BaseEventType_LocalTime, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.BaseEventType_LocalTime, Identifiers.HasProperty, Identifiers.BaseEventType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode999() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.EnumStrings, new QualifiedName(0, "EnumStrings"), new LocalizedText("en", "EnumStrings"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.LocalizedText, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.EnumStrings, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        this.nodeManager.addNode(node);
    }

    private void loadNode1000() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ValueAsText, new QualifiedName(0, "ValueAsText"), new LocalizedText("en", "ValueAsText"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.LocalizedText, -2, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ValueAsText, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        this.nodeManager.addNode(node);
    }

    private void loadNode1001() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.TransitionVariableType_EffectiveTransitionTime, new QualifiedName(0, "EffectiveTransitionTime"), new LocalizedText("en", "EffectiveTransitionTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UtcTime, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.TransitionVariableType_EffectiveTransitionTime, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.TransitionVariableType_EffectiveTransitionTime, Identifiers.HasModellingRule, Identifiers.ModellingRule_Optional.expanded(), true));
        node.addReference(new Reference(Identifiers.TransitionVariableType_EffectiveTransitionTime, Identifiers.HasProperty, Identifiers.TransitionVariableType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1002() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.MultiStateValueDiscreteType_ValueAsText, new QualifiedName(0, "ValueAsText"), new LocalizedText("en", "ValueAsText"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.LocalizedText, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.MultiStateValueDiscreteType_ValueAsText, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.MultiStateValueDiscreteType_ValueAsText, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.MultiStateValueDiscreteType_ValueAsText, Identifiers.HasProperty, Identifiers.MultiStateValueDiscreteType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1003() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.AuditActivateSessionEventType_SecureChannelId, new QualifiedName(0, "SecureChannelId"), new LocalizedText("en", "SecureChannelId"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.AuditActivateSessionEventType_SecureChannelId, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditActivateSessionEventType_SecureChannelId, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditActivateSessionEventType_SecureChannelId, Identifiers.HasProperty, Identifiers.AuditActivateSessionEventType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1004() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.OptionSetType_OptionSetValues, new QualifiedName(0, "OptionSetValues"), new LocalizedText("en", "OptionSetValues"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.LocalizedText, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OptionSetType_OptionSetValues, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.OptionSetType_OptionSetValues, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.OptionSetType_OptionSetValues, Identifiers.HasProperty, Identifiers.OptionSetType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1005() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerType_GetMonitoredItems_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerType_GetMonitoredItems_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_GetMonitoredItems_InputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_GetMonitoredItems_InputArguments, Identifiers.HasProperty, Identifiers.ServerType_GetMonitoredItems.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>SubscriptionId</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1006() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerType_GetMonitoredItems_OutputArguments, new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerType_GetMonitoredItems_OutputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_GetMonitoredItems_OutputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerType_GetMonitoredItems_OutputArguments, Identifiers.HasProperty, Identifiers.ServerType_GetMonitoredItems.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>ServerHandles</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>1</ValueRank><ArrayDimensions><UInt32>0</UInt32>              </ArrayDimensions>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>ClientHandles</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>1</ValueRank><ArrayDimensions><UInt32>0</UInt32>              </ArrayDimensions>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1007() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.Server_GetMonitoredItems_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.Server_GetMonitoredItems_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.Server_GetMonitoredItems_InputArguments, Identifiers.HasProperty, Identifiers.Server_GetMonitoredItems.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>SubscriptionId</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1008() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.Server_GetMonitoredItems_OutputArguments, new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.Server_GetMonitoredItems_OutputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.Server_GetMonitoredItems_OutputArguments, Identifiers.HasProperty, Identifiers.Server_GetMonitoredItems.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>ServerHandles</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>1</ValueRank><ArrayDimensions><UInt32>0</UInt32>              </ArrayDimensions>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>ClientHandles</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>1</ValueRank><ArrayDimensions><UInt32>0</UInt32>              </ArrayDimensions>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1009() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.MaxStringLength, new QualifiedName(0, "MaxStringLength"), new LocalizedText("en", "MaxStringLength"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -2, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.MaxStringLength, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        this.nodeManager.addNode(node);
    }

    private void loadNode1010() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.HistoricalDataConfigurationType_StartOfArchive, new QualifiedName(0, "StartOfArchive"), new LocalizedText("en", "StartOfArchive"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UtcTime, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.HistoricalDataConfigurationType_StartOfArchive, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.HistoricalDataConfigurationType_StartOfArchive, Identifiers.HasModellingRule, Identifiers.ModellingRule_Optional.expanded(), true));
        node.addReference(new Reference(Identifiers.HistoricalDataConfigurationType_StartOfArchive, Identifiers.HasProperty, Identifiers.HistoricalDataConfigurationType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1011() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.HistoricalDataConfigurationType_StartOfOnlineArchive, new QualifiedName(0, "StartOfOnlineArchive"), new LocalizedText("en", "StartOfOnlineArchive"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UtcTime, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.HistoricalDataConfigurationType_StartOfOnlineArchive, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.HistoricalDataConfigurationType_StartOfOnlineArchive, Identifiers.HasModellingRule, Identifiers.ModellingRule_Optional.expanded(), true));
        node.addReference(new Reference(Identifiers.HistoricalDataConfigurationType_StartOfOnlineArchive, Identifiers.HasProperty, Identifiers.HistoricalDataConfigurationType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1012() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.HistoryServerCapabilitiesType_DeleteEventCapability, new QualifiedName(0, "DeleteEventCapability"), new LocalizedText("en", "DeleteEventCapability"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Boolean, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.HistoryServerCapabilitiesType_DeleteEventCapability, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.HistoryServerCapabilitiesType_DeleteEventCapability, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.HistoryServerCapabilitiesType_DeleteEventCapability, Identifiers.HasProperty, Identifiers.HistoryServerCapabilitiesType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1013() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.HistoryServerCapabilities_DeleteEventCapability, new QualifiedName(0, "DeleteEventCapability"), new LocalizedText("en", "DeleteEventCapability"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Boolean, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.HistoryServerCapabilities_DeleteEventCapability, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.HistoryServerCapabilities_DeleteEventCapability, Identifiers.HasProperty, Identifiers.HistoryServerCapabilities.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1014() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ModellingRule_OptionalPlaceholder_NamingRule, new QualifiedName(0, "NamingRule"), new LocalizedText("en", "NamingRule"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.NamingRuleType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ModellingRule_OptionalPlaceholder_NamingRule, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ModellingRule_OptionalPlaceholder_NamingRule, Identifiers.HasProperty, Identifiers.ModellingRule_OptionalPlaceholder.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<Int32 xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">2</Int32>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1015() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ModellingRule_MandatoryPlaceholder_NamingRule, new QualifiedName(0, "NamingRule"), new LocalizedText("en", "NamingRule"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.NamingRuleType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ModellingRule_MandatoryPlaceholder_NamingRule, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ModellingRule_MandatoryPlaceholder_NamingRule, Identifiers.HasProperty, Identifiers.ModellingRule_MandatoryPlaceholder.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<Int32 xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">1</Int32>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1016() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.MaxArrayLength, new QualifiedName(0, "MaxArrayLength"), new LocalizedText("en", "MaxArrayLength"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -2, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.MaxArrayLength, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        this.nodeManager.addNode(node);
    }

    private void loadNode1017() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.EngineeringUnits, new QualifiedName(0, "EngineeringUnits"), new LocalizedText("en", "EngineeringUnits"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.EUInformation, -2, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.EngineeringUnits, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        this.nodeManager.addNode(node);
    }

    private void loadNode1018() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerCapabilitiesType_MaxArrayLength, new QualifiedName(0, "MaxArrayLength"), new LocalizedText("en", "MaxArrayLength"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerCapabilitiesType_MaxArrayLength, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerCapabilitiesType_MaxArrayLength, Identifiers.HasModellingRule, Identifiers.ModellingRule_Optional.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerCapabilitiesType_MaxArrayLength, Identifiers.HasProperty, Identifiers.ServerCapabilitiesType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1019() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerCapabilitiesType_MaxStringLength, new QualifiedName(0, "MaxStringLength"), new LocalizedText("en", "MaxStringLength"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerCapabilitiesType_MaxStringLength, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerCapabilitiesType_MaxStringLength, Identifiers.HasModellingRule, Identifiers.ModellingRule_Optional.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerCapabilitiesType_MaxStringLength, Identifiers.HasProperty, Identifiers.ServerCapabilitiesType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1020() {
        ServerVendorCapabilityTypeNode node = new ServerVendorCapabilityTypeNode(this.context, Identifiers.ServerCapabilitiesType_VendorCapability_Placeholder, new QualifiedName(0, "<VendorCapability>"), new LocalizedText("en", "<VendorCapability>"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.BaseDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerCapabilitiesType_VendorCapability_Placeholder, Identifiers.HasTypeDefinition, Identifiers.ServerVendorCapabilityType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerCapabilitiesType_VendorCapability_Placeholder, Identifiers.HasModellingRule, Identifiers.ModellingRule_OptionalPlaceholder.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerCapabilitiesType_VendorCapability_Placeholder, Identifiers.HasComponent, Identifiers.ServerCapabilitiesType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1021() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.OperationLimitsType_MaxNodesPerRead, new QualifiedName(0, "MaxNodesPerRead"), new LocalizedText("en", "MaxNodesPerRead"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OperationLimitsType_MaxNodesPerRead, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.OperationLimitsType_MaxNodesPerRead, Identifiers.HasModellingRule, Identifiers.ModellingRule_Optional.expanded(), true));
        node.addReference(new Reference(Identifiers.OperationLimitsType_MaxNodesPerRead, Identifiers.HasProperty, Identifiers.OperationLimitsType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1022() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.OperationLimitsType_MaxNodesPerWrite, new QualifiedName(0, "MaxNodesPerWrite"), new LocalizedText("en", "MaxNodesPerWrite"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OperationLimitsType_MaxNodesPerWrite, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.OperationLimitsType_MaxNodesPerWrite, Identifiers.HasModellingRule, Identifiers.ModellingRule_Optional.expanded(), true));
        node.addReference(new Reference(Identifiers.OperationLimitsType_MaxNodesPerWrite, Identifiers.HasProperty, Identifiers.OperationLimitsType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1023() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.OperationLimitsType_MaxNodesPerMethodCall, new QualifiedName(0, "MaxNodesPerMethodCall"), new LocalizedText("en", "MaxNodesPerMethodCall"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OperationLimitsType_MaxNodesPerMethodCall, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.OperationLimitsType_MaxNodesPerMethodCall, Identifiers.HasModellingRule, Identifiers.ModellingRule_Optional.expanded(), true));
        node.addReference(new Reference(Identifiers.OperationLimitsType_MaxNodesPerMethodCall, Identifiers.HasProperty, Identifiers.OperationLimitsType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1024() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.OperationLimitsType_MaxNodesPerBrowse, new QualifiedName(0, "MaxNodesPerBrowse"), new LocalizedText("en", "MaxNodesPerBrowse"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OperationLimitsType_MaxNodesPerBrowse, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.OperationLimitsType_MaxNodesPerBrowse, Identifiers.HasModellingRule, Identifiers.ModellingRule_Optional.expanded(), true));
        node.addReference(new Reference(Identifiers.OperationLimitsType_MaxNodesPerBrowse, Identifiers.HasProperty, Identifiers.OperationLimitsType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1025() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.OperationLimitsType_MaxNodesPerRegisterNodes, new QualifiedName(0, "MaxNodesPerRegisterNodes"), new LocalizedText("en", "MaxNodesPerRegisterNodes"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OperationLimitsType_MaxNodesPerRegisterNodes, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.OperationLimitsType_MaxNodesPerRegisterNodes, Identifiers.HasModellingRule, Identifiers.ModellingRule_Optional.expanded(), true));
        node.addReference(new Reference(Identifiers.OperationLimitsType_MaxNodesPerRegisterNodes, Identifiers.HasProperty, Identifiers.OperationLimitsType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1026() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.OperationLimitsType_MaxNodesPerTranslateBrowsePathsToNodeIds, new QualifiedName(0, "MaxNodesPerTranslateBrowsePathsToNodeIds"), new LocalizedText("en", "MaxNodesPerTranslateBrowsePathsToNodeIds"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OperationLimitsType_MaxNodesPerTranslateBrowsePathsToNodeIds, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.OperationLimitsType_MaxNodesPerTranslateBrowsePathsToNodeIds, Identifiers.HasModellingRule, Identifiers.ModellingRule_Optional.expanded(), true));
        node.addReference(new Reference(Identifiers.OperationLimitsType_MaxNodesPerTranslateBrowsePathsToNodeIds, Identifiers.HasProperty, Identifiers.OperationLimitsType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1027() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.OperationLimitsType_MaxNodesPerNodeManagement, new QualifiedName(0, "MaxNodesPerNodeManagement"), new LocalizedText("en", "MaxNodesPerNodeManagement"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OperationLimitsType_MaxNodesPerNodeManagement, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.OperationLimitsType_MaxNodesPerNodeManagement, Identifiers.HasModellingRule, Identifiers.ModellingRule_Optional.expanded(), true));
        node.addReference(new Reference(Identifiers.OperationLimitsType_MaxNodesPerNodeManagement, Identifiers.HasProperty, Identifiers.OperationLimitsType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1028() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.OperationLimitsType_MaxMonitoredItemsPerCall, new QualifiedName(0, "MaxMonitoredItemsPerCall"), new LocalizedText("en", "MaxMonitoredItemsPerCall"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OperationLimitsType_MaxMonitoredItemsPerCall, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.OperationLimitsType_MaxMonitoredItemsPerCall, Identifiers.HasModellingRule, Identifiers.ModellingRule_Optional.expanded(), true));
        node.addReference(new Reference(Identifiers.OperationLimitsType_MaxMonitoredItemsPerCall, Identifiers.HasProperty, Identifiers.OperationLimitsType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1029() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.FileType_Size, new QualifiedName(0, "Size"), new LocalizedText("en", "Size"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt64, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.FileType_Size, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.FileType_Size, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.FileType_Size, Identifiers.HasProperty, Identifiers.FileType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1030() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.FileType_OpenCount, new QualifiedName(0, "OpenCount"), new LocalizedText("en", "OpenCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt16, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.FileType_OpenCount, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.FileType_OpenCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.FileType_OpenCount, Identifiers.HasProperty, Identifiers.FileType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1031() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.FileType_Open_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.FileType_Open_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.FileType_Open_InputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.FileType_Open_InputArguments, Identifiers.HasProperty, Identifiers.FileType_Open.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Mode</Name><DataType><Identifier>i=3</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1032() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.FileType_Open_OutputArguments, new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.FileType_Open_OutputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.FileType_Open_OutputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.FileType_Open_OutputArguments, Identifiers.HasProperty, Identifiers.FileType_Open.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1033() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.FileType_Close_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.FileType_Close_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.FileType_Close_InputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.FileType_Close_InputArguments, Identifiers.HasProperty, Identifiers.FileType_Close.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1034() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.FileType_Read_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.FileType_Read_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.FileType_Read_InputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.FileType_Read_InputArguments, Identifiers.HasProperty, Identifiers.FileType_Read.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Length</Name><DataType><Identifier>i=6</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1035() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.FileType_Read_OutputArguments, new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.FileType_Read_OutputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.FileType_Read_OutputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.FileType_Read_OutputArguments, Identifiers.HasProperty, Identifiers.FileType_Read.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Data</Name><DataType><Identifier>i=15</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1036() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.FileType_Write_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.FileType_Write_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.FileType_Write_InputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.FileType_Write_InputArguments, Identifiers.HasProperty, Identifiers.FileType_Write.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Data</Name><DataType><Identifier>i=15</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1037() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.FileType_GetPosition_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.FileType_GetPosition_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.FileType_GetPosition_InputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.FileType_GetPosition_InputArguments, Identifiers.HasProperty, Identifiers.FileType_GetPosition.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1038() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.FileType_GetPosition_OutputArguments, new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.FileType_GetPosition_OutputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.FileType_GetPosition_OutputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.FileType_GetPosition_OutputArguments, Identifiers.HasProperty, Identifiers.FileType_GetPosition.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Position</Name><DataType><Identifier>i=9</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1039() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.FileType_SetPosition_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.FileType_SetPosition_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.FileType_SetPosition_InputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.FileType_SetPosition_InputArguments, Identifiers.HasProperty, Identifiers.FileType_SetPosition.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Position</Name><DataType><Identifier>i=9</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1040() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.NamespaceMetadataType_NamespaceUri, new QualifiedName(0, "NamespaceUri"), new LocalizedText("en", "NamespaceUri"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.NamespaceMetadataType_NamespaceUri, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.NamespaceMetadataType_NamespaceUri, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.NamespaceMetadataType_NamespaceUri, Identifiers.HasProperty, Identifiers.NamespaceMetadataType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1041() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.NamespaceMetadataType_NamespaceVersion, new QualifiedName(0, "NamespaceVersion"), new LocalizedText("en", "NamespaceVersion"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.NamespaceMetadataType_NamespaceVersion, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.NamespaceMetadataType_NamespaceVersion, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.NamespaceMetadataType_NamespaceVersion, Identifiers.HasProperty, Identifiers.NamespaceMetadataType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1042() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.NamespaceMetadataType_NamespacePublicationDate, new QualifiedName(0, "NamespacePublicationDate"), new LocalizedText("en", "NamespacePublicationDate"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.DateTime, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.NamespaceMetadataType_NamespacePublicationDate, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.NamespaceMetadataType_NamespacePublicationDate, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.NamespaceMetadataType_NamespacePublicationDate, Identifiers.HasProperty, Identifiers.NamespaceMetadataType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1043() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.NamespaceMetadataType_IsNamespaceSubset, new QualifiedName(0, "IsNamespaceSubset"), new LocalizedText("en", "IsNamespaceSubset"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Boolean, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.NamespaceMetadataType_IsNamespaceSubset, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.NamespaceMetadataType_IsNamespaceSubset, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.NamespaceMetadataType_IsNamespaceSubset, Identifiers.HasProperty, Identifiers.NamespaceMetadataType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1044() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.NamespaceMetadataType_StaticNodeIdTypes, new QualifiedName(0, "StaticNodeIdTypes"), new LocalizedText("en", "StaticNodeIdTypes"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.IdType, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.NamespaceMetadataType_StaticNodeIdTypes, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.NamespaceMetadataType_StaticNodeIdTypes, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.NamespaceMetadataType_StaticNodeIdTypes, Identifiers.HasProperty, Identifiers.NamespaceMetadataType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1045() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.NamespaceMetadataType_StaticNumericNodeIdRange, new QualifiedName(0, "StaticNumericNodeIdRange"), new LocalizedText("en", "StaticNumericNodeIdRange"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.NumericRange, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.NamespaceMetadataType_StaticNumericNodeIdRange, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.NamespaceMetadataType_StaticNumericNodeIdRange, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.NamespaceMetadataType_StaticNumericNodeIdRange, Identifiers.HasProperty, Identifiers.NamespaceMetadataType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1046() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.NamespaceMetadataType_StaticStringNodeIdPattern, new QualifiedName(0, "StaticStringNodeIdPattern"), new LocalizedText("en", "StaticStringNodeIdPattern"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.NamespaceMetadataType_StaticStringNodeIdPattern, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.NamespaceMetadataType_StaticStringNodeIdPattern, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.NamespaceMetadataType_StaticStringNodeIdPattern, Identifiers.HasProperty, Identifiers.NamespaceMetadataType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1047() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.NamespaceMetadataType_NamespaceFile_Size, new QualifiedName(0, "Size"), new LocalizedText("en", "Size"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt64, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.NamespaceMetadataType_NamespaceFile_Size, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.NamespaceMetadataType_NamespaceFile_Size, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.NamespaceMetadataType_NamespaceFile_Size, Identifiers.HasProperty, Identifiers.NamespaceMetadataType_NamespaceFile.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1048() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.NamespaceMetadataType_NamespaceFile_OpenCount, new QualifiedName(0, "OpenCount"), new LocalizedText("en", "OpenCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt16, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.NamespaceMetadataType_NamespaceFile_OpenCount, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.NamespaceMetadataType_NamespaceFile_OpenCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.NamespaceMetadataType_NamespaceFile_OpenCount, Identifiers.HasProperty, Identifiers.NamespaceMetadataType_NamespaceFile.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1049() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.NamespaceMetadataType_NamespaceFile_Open_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.NamespaceMetadataType_NamespaceFile_Open_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.NamespaceMetadataType_NamespaceFile_Open_InputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.NamespaceMetadataType_NamespaceFile_Open_InputArguments, Identifiers.HasProperty, Identifiers.NamespaceMetadataType_NamespaceFile_Open.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Mode</Name><DataType><Identifier>i=3</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1050() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.NamespaceMetadataType_NamespaceFile_Open_OutputArguments, new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.NamespaceMetadataType_NamespaceFile_Open_OutputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.NamespaceMetadataType_NamespaceFile_Open_OutputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.NamespaceMetadataType_NamespaceFile_Open_OutputArguments, Identifiers.HasProperty, Identifiers.NamespaceMetadataType_NamespaceFile_Open.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1051() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.NamespaceMetadataType_NamespaceFile_Close_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.NamespaceMetadataType_NamespaceFile_Close_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.NamespaceMetadataType_NamespaceFile_Close_InputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.NamespaceMetadataType_NamespaceFile_Close_InputArguments, Identifiers.HasProperty, Identifiers.NamespaceMetadataType_NamespaceFile_Close.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1052() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.NamespaceMetadataType_NamespaceFile_Read_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.NamespaceMetadataType_NamespaceFile_Read_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.NamespaceMetadataType_NamespaceFile_Read_InputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.NamespaceMetadataType_NamespaceFile_Read_InputArguments, Identifiers.HasProperty, Identifiers.NamespaceMetadataType_NamespaceFile_Read.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Length</Name><DataType><Identifier>i=6</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1053() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.NamespaceMetadataType_NamespaceFile_Read_OutputArguments, new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.NamespaceMetadataType_NamespaceFile_Read_OutputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.NamespaceMetadataType_NamespaceFile_Read_OutputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.NamespaceMetadataType_NamespaceFile_Read_OutputArguments, Identifiers.HasProperty, Identifiers.NamespaceMetadataType_NamespaceFile_Read.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Data</Name><DataType><Identifier>i=15</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1054() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.NamespaceMetadataType_NamespaceFile_Write_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.NamespaceMetadataType_NamespaceFile_Write_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.NamespaceMetadataType_NamespaceFile_Write_InputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.NamespaceMetadataType_NamespaceFile_Write_InputArguments, Identifiers.HasProperty, Identifiers.NamespaceMetadataType_NamespaceFile_Write.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Data</Name><DataType><Identifier>i=15</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1055() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.NamespaceMetadataType_NamespaceFile_GetPosition_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.NamespaceMetadataType_NamespaceFile_GetPosition_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.NamespaceMetadataType_NamespaceFile_GetPosition_InputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.NamespaceMetadataType_NamespaceFile_GetPosition_InputArguments, Identifiers.HasProperty, Identifiers.NamespaceMetadataType_NamespaceFile_GetPosition.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1056() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.NamespaceMetadataType_NamespaceFile_GetPosition_OutputArguments, new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.NamespaceMetadataType_NamespaceFile_GetPosition_OutputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.NamespaceMetadataType_NamespaceFile_GetPosition_OutputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.NamespaceMetadataType_NamespaceFile_GetPosition_OutputArguments, Identifiers.HasProperty, Identifiers.NamespaceMetadataType_NamespaceFile_GetPosition.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Position</Name><DataType><Identifier>i=9</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1057() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.NamespaceMetadataType_NamespaceFile_SetPosition_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.NamespaceMetadataType_NamespaceFile_SetPosition_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.NamespaceMetadataType_NamespaceFile_SetPosition_InputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.NamespaceMetadataType_NamespaceFile_SetPosition_InputArguments, Identifiers.HasProperty, Identifiers.NamespaceMetadataType_NamespaceFile_SetPosition.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Position</Name><DataType><Identifier>i=9</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1058() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.NamespacesType_NamespaceIdentifier_Placeholder_NamespaceUri, new QualifiedName(0, "NamespaceUri"), new LocalizedText("en", "NamespaceUri"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.NamespacesType_NamespaceIdentifier_Placeholder_NamespaceUri, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.NamespacesType_NamespaceIdentifier_Placeholder_NamespaceUri, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.NamespacesType_NamespaceIdentifier_Placeholder_NamespaceUri, Identifiers.HasProperty, Identifiers.NamespacesType_NamespaceIdentifier_Placeholder.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1059() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.NamespacesType_NamespaceIdentifier_Placeholder_NamespaceVersion, new QualifiedName(0, "NamespaceVersion"), new LocalizedText("en", "NamespaceVersion"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.NamespacesType_NamespaceIdentifier_Placeholder_NamespaceVersion, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.NamespacesType_NamespaceIdentifier_Placeholder_NamespaceVersion, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.NamespacesType_NamespaceIdentifier_Placeholder_NamespaceVersion, Identifiers.HasProperty, Identifiers.NamespacesType_NamespaceIdentifier_Placeholder.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1060() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.NamespacesType_NamespaceIdentifier_Placeholder_NamespacePublicationDate, new QualifiedName(0, "NamespacePublicationDate"), new LocalizedText("en", "NamespacePublicationDate"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.DateTime, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.NamespacesType_NamespaceIdentifier_Placeholder_NamespacePublicationDate, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.NamespacesType_NamespaceIdentifier_Placeholder_NamespacePublicationDate, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.NamespacesType_NamespaceIdentifier_Placeholder_NamespacePublicationDate, Identifiers.HasProperty, Identifiers.NamespacesType_NamespaceIdentifier_Placeholder.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1061() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.NamespacesType_NamespaceIdentifier_Placeholder_IsNamespaceSubset, new QualifiedName(0, "IsNamespaceSubset"), new LocalizedText("en", "IsNamespaceSubset"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Boolean, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.NamespacesType_NamespaceIdentifier_Placeholder_IsNamespaceSubset, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.NamespacesType_NamespaceIdentifier_Placeholder_IsNamespaceSubset, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.NamespacesType_NamespaceIdentifier_Placeholder_IsNamespaceSubset, Identifiers.HasProperty, Identifiers.NamespacesType_NamespaceIdentifier_Placeholder.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1062() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.NamespacesType_NamespaceIdentifier_Placeholder_StaticNodeIdTypes, new QualifiedName(0, "StaticNodeIdTypes"), new LocalizedText("en", "StaticNodeIdTypes"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.IdType, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.NamespacesType_NamespaceIdentifier_Placeholder_StaticNodeIdTypes, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.NamespacesType_NamespaceIdentifier_Placeholder_StaticNodeIdTypes, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.NamespacesType_NamespaceIdentifier_Placeholder_StaticNodeIdTypes, Identifiers.HasProperty, Identifiers.NamespacesType_NamespaceIdentifier_Placeholder.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1063() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.NamespacesType_NamespaceIdentifier_Placeholder_StaticNumericNodeIdRange, new QualifiedName(0, "StaticNumericNodeIdRange"), new LocalizedText("en", "StaticNumericNodeIdRange"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.NumericRange, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.NamespacesType_NamespaceIdentifier_Placeholder_StaticNumericNodeIdRange, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.NamespacesType_NamespaceIdentifier_Placeholder_StaticNumericNodeIdRange, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.NamespacesType_NamespaceIdentifier_Placeholder_StaticNumericNodeIdRange, Identifiers.HasProperty, Identifiers.NamespacesType_NamespaceIdentifier_Placeholder.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1064() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.NamespacesType_NamespaceIdentifier_Placeholder_StaticStringNodeIdPattern, new QualifiedName(0, "StaticStringNodeIdPattern"), new LocalizedText("en", "StaticStringNodeIdPattern"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.NamespacesType_NamespaceIdentifier_Placeholder_StaticStringNodeIdPattern, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.NamespacesType_NamespaceIdentifier_Placeholder_StaticStringNodeIdPattern, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.NamespacesType_NamespaceIdentifier_Placeholder_StaticStringNodeIdPattern, Identifiers.HasProperty, Identifiers.NamespacesType_NamespaceIdentifier_Placeholder.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1065() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.NamespacesType_AddressSpaceFile_Size, new QualifiedName(0, "Size"), new LocalizedText("en", "Size"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt64, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.NamespacesType_AddressSpaceFile_Size, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.NamespacesType_AddressSpaceFile_Size, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.NamespacesType_AddressSpaceFile_Size, Identifiers.HasProperty, Identifiers.NamespacesType_AddressSpaceFile.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1066() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.NamespacesType_AddressSpaceFile_OpenCount, new QualifiedName(0, "OpenCount"), new LocalizedText("en", "OpenCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt16, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.NamespacesType_AddressSpaceFile_OpenCount, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.NamespacesType_AddressSpaceFile_OpenCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.NamespacesType_AddressSpaceFile_OpenCount, Identifiers.HasProperty, Identifiers.NamespacesType_AddressSpaceFile.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1067() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.NamespacesType_AddressSpaceFile_Open_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.NamespacesType_AddressSpaceFile_Open_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.NamespacesType_AddressSpaceFile_Open_InputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.NamespacesType_AddressSpaceFile_Open_InputArguments, Identifiers.HasProperty, Identifiers.NamespacesType_AddressSpaceFile_Open.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Mode</Name><DataType><Identifier>i=3</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1068() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.NamespacesType_AddressSpaceFile_Open_OutputArguments, new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.NamespacesType_AddressSpaceFile_Open_OutputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.NamespacesType_AddressSpaceFile_Open_OutputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.NamespacesType_AddressSpaceFile_Open_OutputArguments, Identifiers.HasProperty, Identifiers.NamespacesType_AddressSpaceFile_Open.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1069() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.NamespacesType_AddressSpaceFile_Close_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.NamespacesType_AddressSpaceFile_Close_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.NamespacesType_AddressSpaceFile_Close_InputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.NamespacesType_AddressSpaceFile_Close_InputArguments, Identifiers.HasProperty, Identifiers.NamespacesType_AddressSpaceFile_Close.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1070() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.NamespacesType_AddressSpaceFile_Read_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.NamespacesType_AddressSpaceFile_Read_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.NamespacesType_AddressSpaceFile_Read_InputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.NamespacesType_AddressSpaceFile_Read_InputArguments, Identifiers.HasProperty, Identifiers.NamespacesType_AddressSpaceFile_Read.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Length</Name><DataType><Identifier>i=6</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1071() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.NamespacesType_AddressSpaceFile_Read_OutputArguments, new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.NamespacesType_AddressSpaceFile_Read_OutputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.NamespacesType_AddressSpaceFile_Read_OutputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.NamespacesType_AddressSpaceFile_Read_OutputArguments, Identifiers.HasProperty, Identifiers.NamespacesType_AddressSpaceFile_Read.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Data</Name><DataType><Identifier>i=15</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1072() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.IdType_EnumStrings, new QualifiedName(0, "EnumStrings"), new LocalizedText("en", "EnumStrings"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.LocalizedText, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.IdType_EnumStrings, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.IdType_EnumStrings, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.IdType_EnumStrings, Identifiers.HasProperty, Identifiers.IdType.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfLocalizedText xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><LocalizedText><Locale>          </Locale><Text>Numeric</Text>        </LocalizedText><LocalizedText><Locale>          </Locale><Text>String</Text>        </LocalizedText><LocalizedText><Locale>          </Locale><Text>Guid</Text>        </LocalizedText><LocalizedText><Locale>          </Locale><Text>Opaque</Text>        </LocalizedText>      </ListOfLocalizedText>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1073() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.NamespacesType_AddressSpaceFile_Write_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.NamespacesType_AddressSpaceFile_Write_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.NamespacesType_AddressSpaceFile_Write_InputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.NamespacesType_AddressSpaceFile_Write_InputArguments, Identifiers.HasProperty, Identifiers.NamespacesType_AddressSpaceFile_Write.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Data</Name><DataType><Identifier>i=15</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1074() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.NamespacesType_AddressSpaceFile_GetPosition_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.NamespacesType_AddressSpaceFile_GetPosition_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.NamespacesType_AddressSpaceFile_GetPosition_InputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.NamespacesType_AddressSpaceFile_GetPosition_InputArguments, Identifiers.HasProperty, Identifiers.NamespacesType_AddressSpaceFile_GetPosition.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1075() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.MessageSecurityMode_EnumStrings, new QualifiedName(0, "EnumStrings"), new LocalizedText("en", "EnumStrings"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.LocalizedText, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.MessageSecurityMode_EnumStrings, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.MessageSecurityMode_EnumStrings, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.MessageSecurityMode_EnumStrings, Identifiers.HasProperty, Identifiers.MessageSecurityMode.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfLocalizedText xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><LocalizedText><Locale>          </Locale><Text>Invalid</Text>        </LocalizedText><LocalizedText><Locale>          </Locale><Text>None</Text>        </LocalizedText><LocalizedText><Locale>          </Locale><Text>Sign</Text>        </LocalizedText><LocalizedText><Locale>          </Locale><Text>SignAndEncrypt</Text>        </LocalizedText>      </ListOfLocalizedText>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1076() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.NamespacesType_AddressSpaceFile_GetPosition_OutputArguments, new QualifiedName(0, "OutputArguments"), new LocalizedText("en", "OutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.NamespacesType_AddressSpaceFile_GetPosition_OutputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.NamespacesType_AddressSpaceFile_GetPosition_OutputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.NamespacesType_AddressSpaceFile_GetPosition_OutputArguments, Identifiers.HasProperty, Identifiers.NamespacesType_AddressSpaceFile_GetPosition.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Position</Name><DataType><Identifier>i=9</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1077() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.UserTokenType_EnumStrings, new QualifiedName(0, "EnumStrings"), new LocalizedText("en", "EnumStrings"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.LocalizedText, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.UserTokenType_EnumStrings, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.UserTokenType_EnumStrings, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.UserTokenType_EnumStrings, Identifiers.HasProperty, Identifiers.UserTokenType.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfLocalizedText xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><LocalizedText><Locale>          </Locale><Text>Anonymous</Text>        </LocalizedText><LocalizedText><Locale>          </Locale><Text>UserName</Text>        </LocalizedText><LocalizedText><Locale>          </Locale><Text>Certificate</Text>        </LocalizedText><LocalizedText><Locale>          </Locale><Text>IssuedToken</Text>        </LocalizedText>      </ListOfLocalizedText>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1078() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ApplicationType_EnumStrings, new QualifiedName(0, "EnumStrings"), new LocalizedText("en", "EnumStrings"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.LocalizedText, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ApplicationType_EnumStrings, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ApplicationType_EnumStrings, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ApplicationType_EnumStrings, Identifiers.HasProperty, Identifiers.ApplicationType.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfLocalizedText xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><LocalizedText><Locale>          </Locale><Text>Server</Text>        </LocalizedText><LocalizedText><Locale>          </Locale><Text>Client</Text>        </LocalizedText><LocalizedText><Locale>          </Locale><Text>ClientAndServer</Text>        </LocalizedText><LocalizedText><Locale>          </Locale><Text>DiscoveryServer</Text>        </LocalizedText>      </ListOfLocalizedText>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1079() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.NamespacesType_AddressSpaceFile_SetPosition_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.NamespacesType_AddressSpaceFile_SetPosition_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.NamespacesType_AddressSpaceFile_SetPosition_InputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.NamespacesType_AddressSpaceFile_SetPosition_InputArguments, Identifiers.HasProperty, Identifiers.NamespacesType_AddressSpaceFile_SetPosition.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>FileHandle</Name><DataType><Identifier>i=7</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>Position</Name><DataType><Identifier>i=9</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1080() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.SecurityTokenRequestType_EnumStrings, new QualifiedName(0, "EnumStrings"), new LocalizedText("en", "EnumStrings"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.LocalizedText, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SecurityTokenRequestType_EnumStrings, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.SecurityTokenRequestType_EnumStrings, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SecurityTokenRequestType_EnumStrings, Identifiers.HasProperty, Identifiers.SecurityTokenRequestType.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfLocalizedText xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><LocalizedText><Locale>          </Locale><Text>Issue</Text>        </LocalizedText><LocalizedText><Locale>          </Locale><Text>Renew</Text>        </LocalizedText>      </ListOfLocalizedText>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1081() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.SystemStatusChangeEventType_SystemState, new QualifiedName(0, "SystemState"), new LocalizedText("en", "SystemState"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServerState, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SystemStatusChangeEventType_SystemState, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.SystemStatusChangeEventType_SystemState, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SystemStatusChangeEventType_SystemState, Identifiers.HasProperty, Identifiers.SystemStatusChangeEventType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1082() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SamplingIntervalDiagnosticsType_SampledMonitoredItemsCount, new QualifiedName(0, "SampledMonitoredItemsCount"), new LocalizedText("en", "SampledMonitoredItemsCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SamplingIntervalDiagnosticsType_SampledMonitoredItemsCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SamplingIntervalDiagnosticsType_SampledMonitoredItemsCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SamplingIntervalDiagnosticsType_SampledMonitoredItemsCount, Identifiers.HasComponent, Identifiers.SamplingIntervalDiagnosticsType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1083() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SamplingIntervalDiagnosticsType_MaxSampledMonitoredItemsCount, new QualifiedName(0, "MaxSampledMonitoredItemsCount"), new LocalizedText("en", "MaxSampledMonitoredItemsCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SamplingIntervalDiagnosticsType_MaxSampledMonitoredItemsCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SamplingIntervalDiagnosticsType_MaxSampledMonitoredItemsCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SamplingIntervalDiagnosticsType_MaxSampledMonitoredItemsCount, Identifiers.HasComponent, Identifiers.SamplingIntervalDiagnosticsType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1084() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SamplingIntervalDiagnosticsType_DisabledMonitoredItemsSamplingCount, new QualifiedName(0, "DisabledMonitoredItemsSamplingCount"), new LocalizedText("en", "DisabledMonitoredItemsSamplingCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SamplingIntervalDiagnosticsType_DisabledMonitoredItemsSamplingCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SamplingIntervalDiagnosticsType_DisabledMonitoredItemsSamplingCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SamplingIntervalDiagnosticsType_DisabledMonitoredItemsSamplingCount, Identifiers.HasComponent, Identifiers.SamplingIntervalDiagnosticsType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1085() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.OptionSetType_BitMask, new QualifiedName(0, "BitMask"), new LocalizedText("en", "BitMask"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Boolean, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OptionSetType_BitMask, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.OptionSetType_BitMask, Identifiers.HasModellingRule, Identifiers.ModellingRule_Optional.expanded(), true));
        node.addReference(new Reference(Identifiers.OptionSetType_BitMask, Identifiers.HasProperty, Identifiers.OptionSetType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1086() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.FilterOperator_EnumStrings, new QualifiedName(0, "EnumStrings"), new LocalizedText("en", "EnumStrings"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.LocalizedText, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.FilterOperator_EnumStrings, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.FilterOperator_EnumStrings, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.FilterOperator_EnumStrings, Identifiers.HasProperty, Identifiers.FilterOperator.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfLocalizedText xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><LocalizedText><Locale>          </Locale><Text>Equals</Text>        </LocalizedText><LocalizedText><Locale>          </Locale><Text>IsNull</Text>        </LocalizedText><LocalizedText><Locale>          </Locale><Text>GreaterThan</Text>        </LocalizedText><LocalizedText><Locale>          </Locale><Text>LessThan</Text>        </LocalizedText><LocalizedText><Locale>          </Locale><Text>GreaterThanOrEqual</Text>        </LocalizedText><LocalizedText><Locale>          </Locale><Text>LessThanOrEqual</Text>        </LocalizedText><LocalizedText><Locale>          </Locale><Text>Like</Text>        </LocalizedText><LocalizedText><Locale>          </Locale><Text>Not</Text>        </LocalizedText><LocalizedText><Locale>          </Locale><Text>Between</Text>        </LocalizedText><LocalizedText><Locale>          </Locale><Text>InList</Text>        </LocalizedText><LocalizedText><Locale>          </Locale><Text>And</Text>        </LocalizedText><LocalizedText><Locale>          </Locale><Text>Or</Text>        </LocalizedText><LocalizedText><Locale>          </Locale><Text>Cast</Text>        </LocalizedText><LocalizedText><Locale>          </Locale><Text>InView</Text>        </LocalizedText><LocalizedText><Locale>          </Locale><Text>OfType</Text>        </LocalizedText><LocalizedText><Locale>          </Locale><Text>RelatedTo</Text>        </LocalizedText><LocalizedText><Locale>          </Locale><Text>BitwiseAnd</Text>        </LocalizedText><LocalizedText><Locale>          </Locale><Text>BitwiseOr</Text>        </LocalizedText>      </ListOfLocalizedText>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1087() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.Server_ServerCapabilities_MaxArrayLength, new QualifiedName(0, "MaxArrayLength"), new LocalizedText("en", "MaxArrayLength"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.Server_ServerCapabilities_MaxArrayLength, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.Server_ServerCapabilities_MaxArrayLength, Identifiers.HasProperty, Identifiers.Server_ServerCapabilities.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1088() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.Server_ServerCapabilities_MaxStringLength, new QualifiedName(0, "MaxStringLength"), new LocalizedText("en", "MaxStringLength"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.Server_ServerCapabilities_MaxStringLength, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.Server_ServerCapabilities_MaxStringLength, Identifiers.HasProperty, Identifiers.Server_ServerCapabilities.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1089() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.Server_ServerCapabilities_OperationLimits_MaxNodesPerRead, new QualifiedName(0, "MaxNodesPerRead"), new LocalizedText("en", "MaxNodesPerRead"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.Server_ServerCapabilities_OperationLimits_MaxNodesPerRead, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.Server_ServerCapabilities_OperationLimits_MaxNodesPerRead, Identifiers.HasProperty, Identifiers.Server_ServerCapabilities_OperationLimits.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1090() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.Server_ServerCapabilities_OperationLimits_MaxNodesPerWrite, new QualifiedName(0, "MaxNodesPerWrite"), new LocalizedText("en", "MaxNodesPerWrite"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.Server_ServerCapabilities_OperationLimits_MaxNodesPerWrite, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.Server_ServerCapabilities_OperationLimits_MaxNodesPerWrite, Identifiers.HasProperty, Identifiers.Server_ServerCapabilities_OperationLimits.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1091() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.RedundancySupport_EnumStrings, new QualifiedName(0, "EnumStrings"), new LocalizedText("en", "EnumStrings"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.LocalizedText, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.RedundancySupport_EnumStrings, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.RedundancySupport_EnumStrings, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.RedundancySupport_EnumStrings, Identifiers.HasProperty, Identifiers.RedundancySupport.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfLocalizedText xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><LocalizedText><Locale>          </Locale><Text>None</Text>        </LocalizedText><LocalizedText><Locale>          </Locale><Text>Cold</Text>        </LocalizedText><LocalizedText><Locale>          </Locale><Text>Warm</Text>        </LocalizedText><LocalizedText><Locale>          </Locale><Text>Hot</Text>        </LocalizedText><LocalizedText><Locale>          </Locale><Text>Transparent</Text>        </LocalizedText><LocalizedText><Locale>          </Locale><Text>HotAndMirrored</Text>        </LocalizedText>      </ListOfLocalizedText>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1092() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ServerState_EnumStrings, new QualifiedName(0, "EnumStrings"), new LocalizedText("en", "EnumStrings"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.LocalizedText, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ServerState_EnumStrings, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerState_EnumStrings, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerState_EnumStrings, Identifiers.HasProperty, Identifiers.ServerState.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfLocalizedText xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><LocalizedText><Locale>          </Locale><Text>Running</Text>        </LocalizedText><LocalizedText><Locale>          </Locale><Text>Failed</Text>        </LocalizedText><LocalizedText><Locale>          </Locale><Text>NoConfiguration</Text>        </LocalizedText><LocalizedText><Locale>          </Locale><Text>Suspended</Text>        </LocalizedText><LocalizedText><Locale>          </Locale><Text>Shutdown</Text>        </LocalizedText><LocalizedText><Locale>          </Locale><Text>Test</Text>        </LocalizedText><LocalizedText><Locale>          </Locale><Text>CommunicationFault</Text>        </LocalizedText><LocalizedText><Locale>          </Locale><Text>Unknown</Text>        </LocalizedText>      </ListOfLocalizedText>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1093() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.Server_ServerCapabilities_OperationLimits_MaxNodesPerMethodCall, new QualifiedName(0, "MaxNodesPerMethodCall"), new LocalizedText("en", "MaxNodesPerMethodCall"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.Server_ServerCapabilities_OperationLimits_MaxNodesPerMethodCall, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.Server_ServerCapabilities_OperationLimits_MaxNodesPerMethodCall, Identifiers.HasProperty, Identifiers.Server_ServerCapabilities_OperationLimits.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1094() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.Server_ServerCapabilities_OperationLimits_MaxNodesPerBrowse, new QualifiedName(0, "MaxNodesPerBrowse"), new LocalizedText("en", "MaxNodesPerBrowse"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.Server_ServerCapabilities_OperationLimits_MaxNodesPerBrowse, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.Server_ServerCapabilities_OperationLimits_MaxNodesPerBrowse, Identifiers.HasProperty, Identifiers.Server_ServerCapabilities_OperationLimits.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1095() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ExceptionDeviationFormat_EnumStrings, new QualifiedName(0, "EnumStrings"), new LocalizedText("en", "EnumStrings"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.LocalizedText, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ExceptionDeviationFormat_EnumStrings, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ExceptionDeviationFormat_EnumStrings, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ExceptionDeviationFormat_EnumStrings, Identifiers.HasProperty, Identifiers.ExceptionDeviationFormat.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfLocalizedText xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><LocalizedText><Locale>          </Locale><Text>AbsoluteValue</Text>        </LocalizedText><LocalizedText><Locale>          </Locale><Text>PercentOfValue</Text>        </LocalizedText><LocalizedText><Locale>          </Locale><Text>PercentOfRange</Text>        </LocalizedText><LocalizedText><Locale>          </Locale><Text>PercentOfEURange</Text>        </LocalizedText><LocalizedText><Locale>          </Locale><Text>Unknown</Text>        </LocalizedText>      </ListOfLocalizedText>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1096() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.Server_ServerCapabilities_OperationLimits_MaxNodesPerRegisterNodes, new QualifiedName(0, "MaxNodesPerRegisterNodes"), new LocalizedText("en", "MaxNodesPerRegisterNodes"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.Server_ServerCapabilities_OperationLimits_MaxNodesPerRegisterNodes, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.Server_ServerCapabilities_OperationLimits_MaxNodesPerRegisterNodes, Identifiers.HasProperty, Identifiers.Server_ServerCapabilities_OperationLimits.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1097() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.Server_ServerCapabilities_OperationLimits_MaxNodesPerTranslateBrowsePathsToNodeIds, new QualifiedName(0, "MaxNodesPerTranslateBrowsePathsToNodeIds"), new LocalizedText("en", "MaxNodesPerTranslateBrowsePathsToNodeIds"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.Server_ServerCapabilities_OperationLimits_MaxNodesPerTranslateBrowsePathsToNodeIds, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.Server_ServerCapabilities_OperationLimits_MaxNodesPerTranslateBrowsePathsToNodeIds, Identifiers.HasProperty, Identifiers.Server_ServerCapabilities_OperationLimits.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1098() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.Server_ServerCapabilities_OperationLimits_MaxNodesPerNodeManagement, new QualifiedName(0, "MaxNodesPerNodeManagement"), new LocalizedText("en", "MaxNodesPerNodeManagement"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.Server_ServerCapabilities_OperationLimits_MaxNodesPerNodeManagement, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.Server_ServerCapabilities_OperationLimits_MaxNodesPerNodeManagement, Identifiers.HasProperty, Identifiers.Server_ServerCapabilities_OperationLimits.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1099() throws IOException, SAXException {
        DataTypeDictionaryTypeNode node = new DataTypeDictionaryTypeNode(this.context, Identifiers.OpcUa_BinarySchema, new QualifiedName(0, "Opc.Ua"), new LocalizedText("en", "Opc.Ua"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ByteString, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema, Identifiers.HasProperty, Identifiers.OpcUa_BinarySchema_NamespaceUri.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema_TrustListDataType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema_Argument.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema_EnumValueType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema_OptionSet.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema_Union.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema_TimeZoneDataType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema_ApplicationDescription.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema_ServerOnNetwork.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema_UserTokenPolicy.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema_EndpointDescription.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema_RegisteredServer.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema_DiscoveryConfiguration.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema_MdnsDiscoveryConfiguration.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema_SignedSoftwareCertificate.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema_UserIdentityToken.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema_AnonymousIdentityToken.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema_UserNameIdentityToken.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema_X509IdentityToken.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema_IssuedIdentityToken.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema_AddNodesItem.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema_AddReferencesItem.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema_DeleteNodesItem.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema_DeleteReferencesItem.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema_RelativePathElement.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema_RelativePath.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema_EndpointConfiguration.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema_ContentFilterElement.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema_ContentFilter.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema_FilterOperand.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema_ElementOperand.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema_LiteralOperand.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema_AttributeOperand.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema_SimpleAttributeOperand.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema_HistoryEvent.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema_MonitoringFilter.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema_EventFilter.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema_AggregateConfiguration.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema_HistoryEventFieldList.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema_BuildInfo.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema_RedundantServerDataType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema_EndpointUrlListDataType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema_NetworkGroupDataType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema_SamplingIntervalDiagnosticsDataType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema_ServerDiagnosticsSummaryDataType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema_ServerStatusDataType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema_SessionDiagnosticsDataType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema_SessionSecurityDiagnosticsDataType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema_ServiceCounterDataType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema_StatusResult.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema_SubscriptionDiagnosticsDataType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema_ModelChangeStructureDataType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema_SemanticChangeStructureDataType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema_Range.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema_EUInformation.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema_ComplexNumberType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema_DoubleComplexNumberType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema_AxisInformation.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema_XVType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema_ProgramDiagnosticDataType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema_Annotation.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema, Identifiers.HasComponent, Identifiers.OPCBinarySchema_TypeSystem.expanded(), false));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema, Identifiers.HasTypeDefinition, Identifiers.DataTypeDictionaryType.expanded(), true));
        StringBuilder sb = new StringBuilder();
        sb.append("<ByteString xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">");
        sb.append("");
        sb.append("");
        sb.append("");
        sb.append("");
        sb.append("</ByteString>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1100() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.Server_ServerCapabilities_OperationLimits_MaxMonitoredItemsPerCall, new QualifiedName(0, "MaxMonitoredItemsPerCall"), new LocalizedText("en", "MaxMonitoredItemsPerCall"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.Server_ServerCapabilities_OperationLimits_MaxMonitoredItemsPerCall, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.Server_ServerCapabilities_OperationLimits_MaxMonitoredItemsPerCall, Identifiers.HasProperty, Identifiers.Server_ServerCapabilities_OperationLimits.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1101() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.OpcUa_BinarySchema_NamespaceUri, new QualifiedName(0, "NamespaceUri"), new LocalizedText("en", "NamespaceUri"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_NamespaceUri, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_NamespaceUri, Identifiers.HasProperty, Identifiers.OpcUa_BinarySchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">http://opcfoundation.org/UA/</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1102() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_BinarySchema_Argument, new QualifiedName(0, "Argument"), new LocalizedText("en", "Argument"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_Argument, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_Argument, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">Argument</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1103() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_BinarySchema_EnumValueType, new QualifiedName(0, "EnumValueType"), new LocalizedText("en", "EnumValueType"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_EnumValueType, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_EnumValueType, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">EnumValueType</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1104() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_BinarySchema_StatusResult, new QualifiedName(0, "StatusResult"), new LocalizedText("en", "StatusResult"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_StatusResult, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_StatusResult, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">StatusResult</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1105() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_BinarySchema_UserTokenPolicy, new QualifiedName(0, "UserTokenPolicy"), new LocalizedText("en", "UserTokenPolicy"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_UserTokenPolicy, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_UserTokenPolicy, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">UserTokenPolicy</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1106() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_BinarySchema_ApplicationDescription, new QualifiedName(0, "ApplicationDescription"), new LocalizedText("en", "ApplicationDescription"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_ApplicationDescription, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_ApplicationDescription, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">ApplicationDescription</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1107() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_BinarySchema_EndpointDescription, new QualifiedName(0, "EndpointDescription"), new LocalizedText("en", "EndpointDescription"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_EndpointDescription, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_EndpointDescription, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">EndpointDescription</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1108() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_BinarySchema_UserIdentityToken, new QualifiedName(0, "UserIdentityToken"), new LocalizedText("en", "UserIdentityToken"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_UserIdentityToken, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_UserIdentityToken, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">UserIdentityToken</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1109() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_BinarySchema_AnonymousIdentityToken, new QualifiedName(0, "AnonymousIdentityToken"), new LocalizedText("en", "AnonymousIdentityToken"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_AnonymousIdentityToken, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_AnonymousIdentityToken, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">AnonymousIdentityToken</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1110() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_BinarySchema_UserNameIdentityToken, new QualifiedName(0, "UserNameIdentityToken"), new LocalizedText("en", "UserNameIdentityToken"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_UserNameIdentityToken, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_UserNameIdentityToken, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">UserNameIdentityToken</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1111() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_BinarySchema_X509IdentityToken, new QualifiedName(0, "X509IdentityToken"), new LocalizedText("en", "X509IdentityToken"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_X509IdentityToken, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_X509IdentityToken, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">X509IdentityToken</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1112() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_BinarySchema_IssuedIdentityToken, new QualifiedName(0, "IssuedIdentityToken"), new LocalizedText("en", "IssuedIdentityToken"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_IssuedIdentityToken, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_IssuedIdentityToken, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">IssuedIdentityToken</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1113() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_BinarySchema_EndpointConfiguration, new QualifiedName(0, "EndpointConfiguration"), new LocalizedText("en", "EndpointConfiguration"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_EndpointConfiguration, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_EndpointConfiguration, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">EndpointConfiguration</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1114() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_BinarySchema_BuildInfo, new QualifiedName(0, "BuildInfo"), new LocalizedText("en", "BuildInfo"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_BuildInfo, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_BuildInfo, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">BuildInfo</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1115() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_BinarySchema_SignedSoftwareCertificate, new QualifiedName(0, "SignedSoftwareCertificate"), new LocalizedText("en", "SignedSoftwareCertificate"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_SignedSoftwareCertificate, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_SignedSoftwareCertificate, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">SignedSoftwareCertificate</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1116() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_BinarySchema_AddNodesItem, new QualifiedName(0, "AddNodesItem"), new LocalizedText("en", "AddNodesItem"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_AddNodesItem, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_AddNodesItem, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">AddNodesItem</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1117() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_BinarySchema_AddReferencesItem, new QualifiedName(0, "AddReferencesItem"), new LocalizedText("en", "AddReferencesItem"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_AddReferencesItem, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_AddReferencesItem, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">AddReferencesItem</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1118() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_BinarySchema_DeleteNodesItem, new QualifiedName(0, "DeleteNodesItem"), new LocalizedText("en", "DeleteNodesItem"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_DeleteNodesItem, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_DeleteNodesItem, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">DeleteNodesItem</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1119() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_BinarySchema_DeleteReferencesItem, new QualifiedName(0, "DeleteReferencesItem"), new LocalizedText("en", "DeleteReferencesItem"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_DeleteReferencesItem, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_DeleteReferencesItem, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">DeleteReferencesItem</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1120() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.AuditConditionCommentEventType_Comment, new QualifiedName(0, "Comment"), new LocalizedText("en", "Comment"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.LocalizedText, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.AuditConditionCommentEventType_Comment, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditConditionCommentEventType_Comment, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditConditionCommentEventType_Comment, Identifiers.HasProperty, Identifiers.AuditConditionCommentEventType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1121() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.AuditConditionRespondEventType_SelectedResponse, new QualifiedName(0, "SelectedResponse"), new LocalizedText("en", "SelectedResponse"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Int32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.AuditConditionRespondEventType_SelectedResponse, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditConditionRespondEventType_SelectedResponse, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditConditionRespondEventType_SelectedResponse, Identifiers.HasProperty, Identifiers.AuditConditionRespondEventType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1122() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.AuditConditionAcknowledgeEventType_Comment, new QualifiedName(0, "Comment"), new LocalizedText("en", "Comment"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.LocalizedText, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.AuditConditionAcknowledgeEventType_Comment, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditConditionAcknowledgeEventType_Comment, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditConditionAcknowledgeEventType_Comment, Identifiers.HasProperty, Identifiers.AuditConditionAcknowledgeEventType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1123() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.AuditConditionConfirmEventType_Comment, new QualifiedName(0, "Comment"), new LocalizedText("en", "Comment"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.LocalizedText, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.AuditConditionConfirmEventType_Comment, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditConditionConfirmEventType_Comment, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditConditionConfirmEventType_Comment, Identifiers.HasProperty, Identifiers.AuditConditionConfirmEventType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1124() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.AuditConditionShelvingEventType_ShelvingTime, new QualifiedName(0, "ShelvingTime"), new LocalizedText("en", "ShelvingTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Duration, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.AuditConditionShelvingEventType_ShelvingTime, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditConditionShelvingEventType_ShelvingTime, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditConditionShelvingEventType_ShelvingTime, Identifiers.HasProperty, Identifiers.AuditConditionShelvingEventType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1125() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.AuditProgramTransitionEventType_TransitionNumber, new QualifiedName(0, "TransitionNumber"), new LocalizedText("en", "TransitionNumber"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.AuditProgramTransitionEventType_TransitionNumber, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditProgramTransitionEventType_TransitionNumber, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.AuditProgramTransitionEventType_TransitionNumber, Identifiers.HasProperty, Identifiers.AuditProgramTransitionEventType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1126() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.NodeClass_EnumValues, new QualifiedName(0, "EnumValues"), new LocalizedText("en", "EnumValues"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.EnumValueType, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.NodeClass_EnumValues, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.NodeClass_EnumValues, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.NodeClass_EnumValues, Identifiers.HasProperty, Identifiers.NodeClass.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>0</Value><DisplayName><Locale>                </Locale><Text>Unspecified</Text>              </DisplayName>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>1</Value><DisplayName><Locale>                </Locale><Text>Object</Text>              </DisplayName>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>2</Value><DisplayName><Locale>                </Locale><Text>Variable</Text>              </DisplayName>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>4</Value><DisplayName><Locale>                </Locale><Text>Method</Text>              </DisplayName>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>8</Value><DisplayName><Locale>                </Locale><Text>ObjectType</Text>              </DisplayName>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>16</Value><DisplayName><Locale>                </Locale><Text>VariableType</Text>              </DisplayName>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>32</Value><DisplayName><Locale>                </Locale><Text>ReferenceType</Text>              </DisplayName>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>64</Value><DisplayName><Locale>                </Locale><Text>DataType</Text>              </DisplayName>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>128</Value><DisplayName><Locale>                </Locale><Text>View</Text>              </DisplayName>            </EnumValueType>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1127() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_BinarySchema_RegisteredServer, new QualifiedName(0, "RegisteredServer"), new LocalizedText("en", "RegisteredServer"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_RegisteredServer, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_RegisteredServer, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">RegisteredServer</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1128() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.NodeAttributesMask_EnumValues, new QualifiedName(0, "EnumValues"), new LocalizedText("en", "EnumValues"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.EnumValueType, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.NodeAttributesMask_EnumValues, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.NodeAttributesMask_EnumValues, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.NodeAttributesMask_EnumValues, Identifiers.HasProperty, Identifiers.NodeAttributesMask.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>0</Value><DisplayName><Locale>                </Locale><Text>None</Text>              </DisplayName>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>1</Value><DisplayName><Locale>                </Locale><Text>AccessLevel</Text>              </DisplayName>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>2</Value><DisplayName><Locale>                </Locale><Text>ArrayDimensions</Text>              </DisplayName>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>4</Value><DisplayName><Locale>                </Locale><Text>BrowseName</Text>              </DisplayName>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>8</Value><DisplayName><Locale>                </Locale><Text>ContainsNoLoops</Text>              </DisplayName>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>16</Value><DisplayName><Locale>                </Locale><Text>DataType</Text>              </DisplayName>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>32</Value><DisplayName><Locale>                </Locale><Text>Description</Text>              </DisplayName>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>64</Value><DisplayName><Locale>                </Locale><Text>DisplayName</Text>              </DisplayName>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>128</Value><DisplayName><Locale>                </Locale><Text>EventNotifier</Text>              </DisplayName>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>256</Value><DisplayName><Locale>                </Locale><Text>Executable</Text>              </DisplayName>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>512</Value><DisplayName><Locale>                </Locale><Text>Historizing</Text>              </DisplayName>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>1024</Value><DisplayName><Locale>                </Locale><Text>InverseName</Text>              </DisplayName>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>2048</Value><DisplayName><Locale>                </Locale><Text>IsAbstract</Text>              </DisplayName>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>4096</Value><DisplayName><Locale>                </Locale><Text>MinimumSamplingInterval</Text>              </DisplayName>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>8192</Value><DisplayName><Locale>                </Locale><Text>NodeClass</Text>              </DisplayName>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>16384</Value><DisplayName><Locale>                </Locale><Text>NodeId</Text>              </DisplayName>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>32768</Value><DisplayName><Locale>                </Locale><Text>Symmetric</Text>              </DisplayName>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>65536</Value><DisplayName><Locale>                </Locale><Text>UserAccessLevel</Text>              </DisplayName>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>131072</Value><DisplayName><Locale>                </Locale><Text>UserExecutable</Text>              </DisplayName>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>262144</Value><DisplayName><Locale>                </Locale><Text>UserWriteMask</Text>              </DisplayName>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>524288</Value><DisplayName><Locale>                </Locale><Text>ValueRank</Text>              </DisplayName>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>1048576</Value><DisplayName><Locale>                </Locale><Text>WriteMask</Text>              </DisplayName>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>2097152</Value><DisplayName><Locale>                </Locale><Text>Value</Text>              </DisplayName>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>4194303</Value><DisplayName><Locale>                </Locale><Text>All</Text>              </DisplayName>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>1335396</Value><DisplayName><Locale>                </Locale><Text>BaseNode</Text>              </DisplayName>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>1335524</Value><DisplayName><Locale>                </Locale><Text>Object</Text>              </DisplayName>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>1337444</Value><DisplayName><Locale>                </Locale><Text>ObjectTypeOrDataType</Text>              </DisplayName>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>4026999</Value><DisplayName><Locale>                </Locale><Text>Variable</Text>              </DisplayName>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>3958902</Value><DisplayName><Locale>                </Locale><Text>VariableType</Text>              </DisplayName>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>1466724</Value><DisplayName><Locale>                </Locale><Text>Method</Text>              </DisplayName>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>1371236</Value><DisplayName><Locale>                </Locale><Text>ReferenceType</Text>              </DisplayName>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>1335532</Value><DisplayName><Locale>                </Locale><Text>View</Text>              </DisplayName>            </EnumValueType>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1129() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.AttributeWriteMask_EnumValues, new QualifiedName(0, "EnumValues"), new LocalizedText("en", "EnumValues"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.EnumValueType, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.AttributeWriteMask_EnumValues, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.AttributeWriteMask_EnumValues, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.AttributeWriteMask_EnumValues, Identifiers.HasProperty, Identifiers.AttributeWriteMask.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>0</Value><DisplayName><Locale>                </Locale><Text>None</Text>              </DisplayName>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>1</Value><DisplayName><Locale>                </Locale><Text>AccessLevel</Text>              </DisplayName>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>2</Value><DisplayName><Locale>                </Locale><Text>ArrayDimensions</Text>              </DisplayName>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>4</Value><DisplayName><Locale>                </Locale><Text>BrowseName</Text>              </DisplayName>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>8</Value><DisplayName><Locale>                </Locale><Text>ContainsNoLoops</Text>              </DisplayName>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>16</Value><DisplayName><Locale>                </Locale><Text>DataType</Text>              </DisplayName>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>32</Value><DisplayName><Locale>                </Locale><Text>Description</Text>              </DisplayName>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>64</Value><DisplayName><Locale>                </Locale><Text>DisplayName</Text>              </DisplayName>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>128</Value><DisplayName><Locale>                </Locale><Text>EventNotifier</Text>              </DisplayName>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>256</Value><DisplayName><Locale>                </Locale><Text>Executable</Text>              </DisplayName>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>512</Value><DisplayName><Locale>                </Locale><Text>Historizing</Text>              </DisplayName>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>1024</Value><DisplayName><Locale>                </Locale><Text>InverseName</Text>              </DisplayName>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>2048</Value><DisplayName><Locale>                </Locale><Text>IsAbstract</Text>              </DisplayName>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>4096</Value><DisplayName><Locale>                </Locale><Text>MinimumSamplingInterval</Text>              </DisplayName>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>8192</Value><DisplayName><Locale>                </Locale><Text>NodeClass</Text>              </DisplayName>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>16384</Value><DisplayName><Locale>                </Locale><Text>NodeId</Text>              </DisplayName>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>32768</Value><DisplayName><Locale>                </Locale><Text>Symmetric</Text>              </DisplayName>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>65536</Value><DisplayName><Locale>                </Locale><Text>UserAccessLevel</Text>              </DisplayName>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>131072</Value><DisplayName><Locale>                </Locale><Text>UserExecutable</Text>              </DisplayName>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>262144</Value><DisplayName><Locale>                </Locale><Text>UserWriteMask</Text>              </DisplayName>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>524288</Value><DisplayName><Locale>                </Locale><Text>ValueRank</Text>              </DisplayName>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>1048576</Value><DisplayName><Locale>                </Locale><Text>WriteMask</Text>              </DisplayName>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>2097152</Value><DisplayName><Locale>                </Locale><Text>ValueForVariableType</Text>              </DisplayName>            </EnumValueType>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1130() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.HistoryUpdateType_EnumValues, new QualifiedName(0, "EnumValues"), new LocalizedText("en", "EnumValues"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.EnumValueType, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.HistoryUpdateType_EnumValues, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.HistoryUpdateType_EnumValues, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.HistoryUpdateType_EnumValues, Identifiers.HasProperty, Identifiers.HistoryUpdateType.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>1</Value><DisplayName><Locale>                </Locale><Text>Insert</Text>              </DisplayName>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>2</Value><DisplayName><Locale>                </Locale><Text>Replace</Text>              </DisplayName>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>3</Value><DisplayName><Locale>                </Locale><Text>Update</Text>              </DisplayName>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>4</Value><DisplayName><Locale>                </Locale><Text>Delete</Text>              </DisplayName>            </EnumValueType>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1131() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.PerformUpdateType_EnumValues, new QualifiedName(0, "EnumValues"), new LocalizedText("en", "EnumValues"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.EnumValueType, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.PerformUpdateType_EnumValues, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.PerformUpdateType_EnumValues, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.PerformUpdateType_EnumValues, Identifiers.HasProperty, Identifiers.PerformUpdateType.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>1</Value><DisplayName><Locale>                </Locale><Text>Insert</Text>              </DisplayName>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>2</Value><DisplayName><Locale>                </Locale><Text>Replace</Text>              </DisplayName>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>3</Value><DisplayName><Locale>                </Locale><Text>Update</Text>              </DisplayName>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>4</Value><DisplayName><Locale>                </Locale><Text>Remove</Text>              </DisplayName>            </EnumValueType>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1132() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.ServerStatusType_BuildInfo_ProductUri, new QualifiedName(0, "ProductUri"), new LocalizedText("en", "ProductUri"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 1000.0, false);
        node.addReference(new Reference(Identifiers.ServerStatusType_BuildInfo_ProductUri, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerStatusType_BuildInfo_ProductUri, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerStatusType_BuildInfo_ProductUri, Identifiers.HasComponent, Identifiers.ServerStatusType_BuildInfo.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1133() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_UnauthorizedRequestCount, new QualifiedName(0, "UnauthorizedRequestCount"), new LocalizedText("en", "UnauthorizedRequestCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_UnauthorizedRequestCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_UnauthorizedRequestCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics_UnauthorizedRequestCount, Identifiers.HasComponent, Identifiers.SessionDiagnosticsObjectType_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1134() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.ServerStatusType_BuildInfo_ManufacturerName, new QualifiedName(0, "ManufacturerName"), new LocalizedText("en", "ManufacturerName"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 1000.0, false);
        node.addReference(new Reference(Identifiers.ServerStatusType_BuildInfo_ManufacturerName, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerStatusType_BuildInfo_ManufacturerName, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerStatusType_BuildInfo_ManufacturerName, Identifiers.HasComponent, Identifiers.ServerStatusType_BuildInfo.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1135() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.ServerStatusType_BuildInfo_ProductName, new QualifiedName(0, "ProductName"), new LocalizedText("en", "ProductName"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 1000.0, false);
        node.addReference(new Reference(Identifiers.ServerStatusType_BuildInfo_ProductName, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerStatusType_BuildInfo_ProductName, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerStatusType_BuildInfo_ProductName, Identifiers.HasComponent, Identifiers.ServerStatusType_BuildInfo.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1136() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionDiagnosticsVariableType_UnauthorizedRequestCount, new QualifiedName(0, "UnauthorizedRequestCount"), new LocalizedText("en", "UnauthorizedRequestCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_UnauthorizedRequestCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_UnauthorizedRequestCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionDiagnosticsVariableType_UnauthorizedRequestCount, Identifiers.HasComponent, Identifiers.SessionDiagnosticsVariableType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1137() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.ServerStatusType_BuildInfo_SoftwareVersion, new QualifiedName(0, "SoftwareVersion"), new LocalizedText("en", "SoftwareVersion"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 1000.0, false);
        node.addReference(new Reference(Identifiers.ServerStatusType_BuildInfo_SoftwareVersion, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerStatusType_BuildInfo_SoftwareVersion, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerStatusType_BuildInfo_SoftwareVersion, Identifiers.HasComponent, Identifiers.ServerStatusType_BuildInfo.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1138() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.ServerStatusType_BuildInfo_BuildNumber, new QualifiedName(0, "BuildNumber"), new LocalizedText("en", "BuildNumber"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 1000.0, false);
        node.addReference(new Reference(Identifiers.ServerStatusType_BuildInfo_BuildNumber, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerStatusType_BuildInfo_BuildNumber, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerStatusType_BuildInfo_BuildNumber, Identifiers.HasComponent, Identifiers.ServerStatusType_BuildInfo.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1139() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.ServerStatusType_BuildInfo_BuildDate, new QualifiedName(0, "BuildDate"), new LocalizedText("en", "BuildDate"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UtcTime, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 1000.0, false);
        node.addReference(new Reference(Identifiers.ServerStatusType_BuildInfo_BuildDate, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerStatusType_BuildInfo_BuildDate, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ServerStatusType_BuildInfo_BuildDate, Identifiers.HasComponent, Identifiers.ServerStatusType_BuildInfo.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1140() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.Server_ServerCapabilities_SoftwareCertificates, new QualifiedName(0, "SoftwareCertificates"), new LocalizedText("en", "SoftwareCertificates"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.SignedSoftwareCertificate, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.Server_ServerCapabilities_SoftwareCertificates, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.Server_ServerCapabilities_SoftwareCertificates, Identifiers.HasProperty, Identifiers.Server_ServerCapabilities.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1141() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.Server_ServerDiagnostics_ServerDiagnosticsSummary_RejectedSessionCount, new QualifiedName(0, "RejectedSessionCount"), new LocalizedText("en", "RejectedSessionCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.Server_ServerDiagnostics_ServerDiagnosticsSummary_RejectedSessionCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.Server_ServerDiagnostics_ServerDiagnosticsSummary_RejectedSessionCount, Identifiers.HasComponent, Identifiers.Server_ServerDiagnostics_ServerDiagnosticsSummary.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1142() {
        SessionDiagnosticsArrayTypeNode node = new SessionDiagnosticsArrayTypeNode(this.context, Identifiers.Server_ServerDiagnostics_SessionsDiagnosticsSummary_SessionDiagnosticsArray, new QualifiedName(0, "SessionDiagnosticsArray"), new LocalizedText("en", "SessionDiagnosticsArray"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.SessionDiagnosticsDataType, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.Server_ServerDiagnostics_SessionsDiagnosticsSummary_SessionDiagnosticsArray, Identifiers.HasTypeDefinition, Identifiers.SessionDiagnosticsArrayType.expanded(), true));
        node.addReference(new Reference(Identifiers.Server_ServerDiagnostics_SessionsDiagnosticsSummary_SessionDiagnosticsArray, Identifiers.HasComponent, Identifiers.Server_ServerDiagnostics_SessionsDiagnosticsSummary.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1143() {
        SessionSecurityDiagnosticsArrayTypeNode node = new SessionSecurityDiagnosticsArrayTypeNode(this.context, Identifiers.Server_ServerDiagnostics_SessionsDiagnosticsSummary_SessionSecurityDiagnosticsArray, new QualifiedName(0, "SessionSecurityDiagnosticsArray"), new LocalizedText("en", "SessionSecurityDiagnosticsArray"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.SessionSecurityDiagnosticsDataType, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.Server_ServerDiagnostics_SessionsDiagnosticsSummary_SessionSecurityDiagnosticsArray, Identifiers.HasTypeDefinition, Identifiers.SessionSecurityDiagnosticsArrayType.expanded(), true));
        node.addReference(new Reference(Identifiers.Server_ServerDiagnostics_SessionsDiagnosticsSummary_SessionSecurityDiagnosticsArray, Identifiers.HasComponent, Identifiers.Server_ServerDiagnostics_SessionsDiagnosticsSummary.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1144() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.Server_ServerRedundancy_RedundancySupport, new QualifiedName(0, "RedundancySupport"), new LocalizedText("en", "RedundancySupport"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.RedundancySupport, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.Server_ServerRedundancy_RedundancySupport, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.Server_ServerRedundancy_RedundancySupport, Identifiers.HasProperty, Identifiers.Server_ServerRedundancy.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1145() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.StateMachineType_CurrentState_Id, new QualifiedName(0, "Id"), new LocalizedText("en", "Id"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.BaseDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.StateMachineType_CurrentState_Id, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.StateMachineType_CurrentState_Id, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.StateMachineType_CurrentState_Id, Identifiers.HasProperty, Identifiers.StateMachineType_CurrentState.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1146() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.StateMachineType_LastTransition_Id, new QualifiedName(0, "Id"), new LocalizedText("en", "Id"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.BaseDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.StateMachineType_LastTransition_Id, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.StateMachineType_LastTransition_Id, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.StateMachineType_LastTransition_Id, Identifiers.HasProperty, Identifiers.StateMachineType_LastTransition.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1147() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.FiniteStateMachineType_CurrentState_Id, new QualifiedName(0, "Id"), new LocalizedText("en", "Id"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.NodeId, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.FiniteStateMachineType_CurrentState_Id, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.FiniteStateMachineType_CurrentState_Id, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.FiniteStateMachineType_CurrentState_Id, Identifiers.HasProperty, Identifiers.FiniteStateMachineType_CurrentState.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1148() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.FiniteStateMachineType_LastTransition_Id, new QualifiedName(0, "Id"), new LocalizedText("en", "Id"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.NodeId, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.FiniteStateMachineType_LastTransition_Id, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.FiniteStateMachineType_LastTransition_Id, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.FiniteStateMachineType_LastTransition_Id, Identifiers.HasProperty, Identifiers.FiniteStateMachineType_LastTransition.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1149() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.TransitionEventType_FromState_Id, new QualifiedName(0, "Id"), new LocalizedText("en", "Id"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.BaseDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.TransitionEventType_FromState_Id, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.TransitionEventType_FromState_Id, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.TransitionEventType_FromState_Id, Identifiers.HasProperty, Identifiers.TransitionEventType_FromState.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1150() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.OpenFileMode_EnumValues, new QualifiedName(0, "EnumValues"), new LocalizedText("en", "EnumValues"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.EnumValueType, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpenFileMode_EnumValues, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpenFileMode_EnumValues, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.OpenFileMode_EnumValues, Identifiers.HasProperty, Identifiers.OpenFileMode.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>1</Value><DisplayName><Locale>                </Locale><Text>Read</Text>              </DisplayName>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>2</Value><DisplayName><Locale>                </Locale><Text>Write</Text>              </DisplayName>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>4</Value><DisplayName><Locale>                </Locale><Text>EraseExisting</Text>              </DisplayName>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>8</Value><DisplayName><Locale>                </Locale><Text>Append</Text>              </DisplayName>            </EnumValueType>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1151() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.TransitionEventType_ToState_Id, new QualifiedName(0, "Id"), new LocalizedText("en", "Id"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.BaseDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.TransitionEventType_ToState_Id, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.TransitionEventType_ToState_Id, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.TransitionEventType_ToState_Id, Identifiers.HasProperty, Identifiers.TransitionEventType_ToState.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1152() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.TransitionEventType_Transition_Id, new QualifiedName(0, "Id"), new LocalizedText("en", "Id"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.BaseDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.TransitionEventType_Transition_Id, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.TransitionEventType_Transition_Id, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.TransitionEventType_Transition_Id, Identifiers.HasProperty, Identifiers.TransitionEventType_Transition.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1153() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.NonTransparentNetworkRedundancyType_ServerNetworkGroups, new QualifiedName(0, "ServerNetworkGroups"), new LocalizedText("en", "ServerNetworkGroups"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.NetworkGroupDataType, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.NonTransparentNetworkRedundancyType_ServerNetworkGroups, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.NonTransparentNetworkRedundancyType_ServerNetworkGroups, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.NonTransparentNetworkRedundancyType_ServerNetworkGroups, Identifiers.HasProperty, Identifiers.NonTransparentNetworkRedundancyType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1154() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_XmlSchema_EndpointUrlListDataType, new QualifiedName(0, "EndpointUrlListDataType"), new LocalizedText("en", "EndpointUrlListDataType"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_EndpointUrlListDataType, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_EndpointUrlListDataType, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">//xs:element[@name='EndpointUrlListDataType']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1155() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_XmlSchema_NetworkGroupDataType, new QualifiedName(0, "NetworkGroupDataType"), new LocalizedText("en", "NetworkGroupDataType"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_NetworkGroupDataType, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_NetworkGroupDataType, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">//xs:element[@name='NetworkGroupDataType']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1156() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_BinarySchema_EndpointUrlListDataType, new QualifiedName(0, "EndpointUrlListDataType"), new LocalizedText("en", "EndpointUrlListDataType"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_EndpointUrlListDataType, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_EndpointUrlListDataType, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">EndpointUrlListDataType</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1157() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_BinarySchema_NetworkGroupDataType, new QualifiedName(0, "NetworkGroupDataType"), new LocalizedText("en", "NetworkGroupDataType"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_NetworkGroupDataType, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_NetworkGroupDataType, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">NetworkGroupDataType</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1158() {
        FiniteTransitionVariableTypeNode node = new FiniteTransitionVariableTypeNode(this.context, Identifiers.ProgramTransitionAuditEventType_Transition, new QualifiedName(0, "Transition"), new LocalizedText("en", "Transition"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.LocalizedText, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ProgramTransitionAuditEventType_Transition, Identifiers.HasProperty, Identifiers.ProgramTransitionAuditEventType_Transition_Id.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramTransitionAuditEventType_Transition, Identifiers.HasTypeDefinition, Identifiers.FiniteTransitionVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramTransitionAuditEventType_Transition, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramTransitionAuditEventType_Transition, Identifiers.HasComponent, Identifiers.ProgramTransitionAuditEventType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1159() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ProgramTransitionAuditEventType_Transition_Id, new QualifiedName(0, "Id"), new LocalizedText("en", "Id"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.NodeId, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ProgramTransitionAuditEventType_Transition_Id, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramTransitionAuditEventType_Transition_Id, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramTransitionAuditEventType_Transition_Id, Identifiers.HasProperty, Identifiers.ProgramTransitionAuditEventType_Transition.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1160() {
        FiniteStateVariableTypeNode node = new FiniteStateVariableTypeNode(this.context, Identifiers.ProgramStateMachineType_CurrentState, new QualifiedName(0, "CurrentState"), new LocalizedText("en", "CurrentState"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.LocalizedText, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_CurrentState, Identifiers.HasProperty, Identifiers.ProgramStateMachineType_CurrentState_Id.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_CurrentState, Identifiers.HasProperty, Identifiers.ProgramStateMachineType_CurrentState_Number.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_CurrentState, Identifiers.HasTypeDefinition, Identifiers.FiniteStateVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_CurrentState, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_CurrentState, Identifiers.HasComponent, Identifiers.ProgramStateMachineType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1161() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ProgramStateMachineType_CurrentState_Id, new QualifiedName(0, "Id"), new LocalizedText("en", "Id"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.NodeId, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_CurrentState_Id, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_CurrentState_Id, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_CurrentState_Id, Identifiers.HasProperty, Identifiers.ProgramStateMachineType_CurrentState.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1162() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ArrayItemType_InstrumentRange, new QualifiedName(0, "InstrumentRange"), new LocalizedText("en", "InstrumentRange"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Range, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ArrayItemType_InstrumentRange, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ArrayItemType_InstrumentRange, Identifiers.HasModellingRule, Identifiers.ModellingRule_Optional.expanded(), true));
        node.addReference(new Reference(Identifiers.ArrayItemType_InstrumentRange, Identifiers.HasProperty, Identifiers.ArrayItemType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1163() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ArrayItemType_EURange, new QualifiedName(0, "EURange"), new LocalizedText("en", "EURange"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Range, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ArrayItemType_EURange, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ArrayItemType_EURange, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ArrayItemType_EURange, Identifiers.HasProperty, Identifiers.ArrayItemType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1164() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ProgramStateMachineType_CurrentState_Number, new QualifiedName(0, "Number"), new LocalizedText("en", "Number"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_CurrentState_Number, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_CurrentState_Number, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_CurrentState_Number, Identifiers.HasProperty, Identifiers.ProgramStateMachineType_CurrentState.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1165() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_BinarySchema_ContentFilterElement, new QualifiedName(0, "ContentFilterElement"), new LocalizedText("en", "ContentFilterElement"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_ContentFilterElement, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_ContentFilterElement, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">ContentFilterElement</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1166() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ArrayItemType_EngineeringUnits, new QualifiedName(0, "EngineeringUnits"), new LocalizedText("en", "EngineeringUnits"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.EUInformation, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ArrayItemType_EngineeringUnits, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ArrayItemType_EngineeringUnits, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ArrayItemType_EngineeringUnits, Identifiers.HasProperty, Identifiers.ArrayItemType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1167() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ArrayItemType_Title, new QualifiedName(0, "Title"), new LocalizedText("en", "Title"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.LocalizedText, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ArrayItemType_Title, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ArrayItemType_Title, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ArrayItemType_Title, Identifiers.HasProperty, Identifiers.ArrayItemType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1168() {
        FiniteTransitionVariableTypeNode node = new FiniteTransitionVariableTypeNode(this.context, Identifiers.ProgramStateMachineType_LastTransition, new QualifiedName(0, "LastTransition"), new LocalizedText("en", "LastTransition"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.LocalizedText, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_LastTransition, Identifiers.HasProperty, Identifiers.ProgramStateMachineType_LastTransition_Id.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_LastTransition, Identifiers.HasProperty, Identifiers.ProgramStateMachineType_LastTransition_Number.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_LastTransition, Identifiers.HasProperty, Identifiers.ProgramStateMachineType_LastTransition_TransitionTime.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_LastTransition, Identifiers.HasTypeDefinition, Identifiers.FiniteTransitionVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_LastTransition, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_LastTransition, Identifiers.HasComponent, Identifiers.ProgramStateMachineType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1169() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ArrayItemType_AxisScaleType, new QualifiedName(0, "AxisScaleType"), new LocalizedText("en", "AxisScaleType"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.AxisScaleEnumeration, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ArrayItemType_AxisScaleType, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ArrayItemType_AxisScaleType, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ArrayItemType_AxisScaleType, Identifiers.HasProperty, Identifiers.ArrayItemType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1170() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ProgramStateMachineType_LastTransition_Id, new QualifiedName(0, "Id"), new LocalizedText("en", "Id"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.NodeId, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_LastTransition_Id, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_LastTransition_Id, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_LastTransition_Id, Identifiers.HasProperty, Identifiers.ProgramStateMachineType_LastTransition.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1171() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_BinarySchema_ContentFilter, new QualifiedName(0, "ContentFilter"), new LocalizedText("en", "ContentFilter"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_ContentFilter, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_ContentFilter, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">ContentFilter</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1172() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ProgramStateMachineType_LastTransition_Number, new QualifiedName(0, "Number"), new LocalizedText("en", "Number"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_LastTransition_Number, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_LastTransition_Number, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_LastTransition_Number, Identifiers.HasProperty, Identifiers.ProgramStateMachineType_LastTransition.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1173() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ProgramStateMachineType_LastTransition_TransitionTime, new QualifiedName(0, "TransitionTime"), new LocalizedText("en", "TransitionTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UtcTime, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_LastTransition_TransitionTime, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_LastTransition_TransitionTime, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_LastTransition_TransitionTime, Identifiers.HasProperty, Identifiers.ProgramStateMachineType_LastTransition.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1174() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_BinarySchema_FilterOperand, new QualifiedName(0, "FilterOperand"), new LocalizedText("en", "FilterOperand"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_FilterOperand, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_FilterOperand, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">FilterOperand</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1175() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ProgramStateMachineType_ProgramDiagnostics_CreateSessionId, new QualifiedName(0, "CreateSessionId"), new LocalizedText("en", "CreateSessionId"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.NodeId, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_ProgramDiagnostics_CreateSessionId, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_ProgramDiagnostics_CreateSessionId, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_ProgramDiagnostics_CreateSessionId, Identifiers.HasProperty, Identifiers.ProgramStateMachineType_ProgramDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1176() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ProgramStateMachineType_ProgramDiagnostics_CreateClientName, new QualifiedName(0, "CreateClientName"), new LocalizedText("en", "CreateClientName"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_ProgramDiagnostics_CreateClientName, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_ProgramDiagnostics_CreateClientName, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_ProgramDiagnostics_CreateClientName, Identifiers.HasProperty, Identifiers.ProgramStateMachineType_ProgramDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1177() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ProgramStateMachineType_ProgramDiagnostics_InvocationCreationTime, new QualifiedName(0, "InvocationCreationTime"), new LocalizedText("en", "InvocationCreationTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UtcTime, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_ProgramDiagnostics_InvocationCreationTime, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_ProgramDiagnostics_InvocationCreationTime, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_ProgramDiagnostics_InvocationCreationTime, Identifiers.HasProperty, Identifiers.ProgramStateMachineType_ProgramDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1178() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_BinarySchema_ElementOperand, new QualifiedName(0, "ElementOperand"), new LocalizedText("en", "ElementOperand"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_ElementOperand, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_ElementOperand, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">ElementOperand</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1179() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ProgramStateMachineType_ProgramDiagnostics_LastTransitionTime, new QualifiedName(0, "LastTransitionTime"), new LocalizedText("en", "LastTransitionTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UtcTime, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_ProgramDiagnostics_LastTransitionTime, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_ProgramDiagnostics_LastTransitionTime, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_ProgramDiagnostics_LastTransitionTime, Identifiers.HasProperty, Identifiers.ProgramStateMachineType_ProgramDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1180() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ProgramStateMachineType_ProgramDiagnostics_LastMethodCall, new QualifiedName(0, "LastMethodCall"), new LocalizedText("en", "LastMethodCall"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_ProgramDiagnostics_LastMethodCall, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_ProgramDiagnostics_LastMethodCall, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_ProgramDiagnostics_LastMethodCall, Identifiers.HasProperty, Identifiers.ProgramStateMachineType_ProgramDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1181() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.YArrayItemType_XAxisDefinition, new QualifiedName(0, "XAxisDefinition"), new LocalizedText("en", "XAxisDefinition"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.AxisInformation, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.YArrayItemType_XAxisDefinition, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.YArrayItemType_XAxisDefinition, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.YArrayItemType_XAxisDefinition, Identifiers.HasProperty, Identifiers.YArrayItemType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1182() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ProgramStateMachineType_ProgramDiagnostics_LastMethodSessionId, new QualifiedName(0, "LastMethodSessionId"), new LocalizedText("en", "LastMethodSessionId"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.NodeId, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_ProgramDiagnostics_LastMethodSessionId, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_ProgramDiagnostics_LastMethodSessionId, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_ProgramDiagnostics_LastMethodSessionId, Identifiers.HasProperty, Identifiers.ProgramStateMachineType_ProgramDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1183() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_BinarySchema_LiteralOperand, new QualifiedName(0, "LiteralOperand"), new LocalizedText("en", "LiteralOperand"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_LiteralOperand, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_LiteralOperand, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">LiteralOperand</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1184() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ProgramStateMachineType_ProgramDiagnostics_LastMethodInputArguments, new QualifiedName(0, "LastMethodInputArguments"), new LocalizedText("en", "LastMethodInputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_ProgramDiagnostics_LastMethodInputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_ProgramDiagnostics_LastMethodInputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_ProgramDiagnostics_LastMethodInputArguments, Identifiers.HasProperty, Identifiers.ProgramStateMachineType_ProgramDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1185() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ProgramStateMachineType_ProgramDiagnostics_LastMethodOutputArguments, new QualifiedName(0, "LastMethodOutputArguments"), new LocalizedText("en", "LastMethodOutputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_ProgramDiagnostics_LastMethodOutputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_ProgramDiagnostics_LastMethodOutputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_ProgramDiagnostics_LastMethodOutputArguments, Identifiers.HasProperty, Identifiers.ProgramStateMachineType_ProgramDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1186() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ProgramStateMachineType_ProgramDiagnostics_LastMethodCallTime, new QualifiedName(0, "LastMethodCallTime"), new LocalizedText("en", "LastMethodCallTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UtcTime, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_ProgramDiagnostics_LastMethodCallTime, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_ProgramDiagnostics_LastMethodCallTime, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_ProgramDiagnostics_LastMethodCallTime, Identifiers.HasProperty, Identifiers.ProgramStateMachineType_ProgramDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1187() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_BinarySchema_AttributeOperand, new QualifiedName(0, "AttributeOperand"), new LocalizedText("en", "AttributeOperand"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_AttributeOperand, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_AttributeOperand, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">AttributeOperand</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1188() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ProgramStateMachineType_ProgramDiagnostics_LastMethodReturnStatus, new QualifiedName(0, "LastMethodReturnStatus"), new LocalizedText("en", "LastMethodReturnStatus"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.StatusResult, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_ProgramDiagnostics_LastMethodReturnStatus, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_ProgramDiagnostics_LastMethodReturnStatus, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ProgramStateMachineType_ProgramDiagnostics_LastMethodReturnStatus, Identifiers.HasProperty, Identifiers.ProgramStateMachineType_ProgramDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1189() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_BinarySchema_SimpleAttributeOperand, new QualifiedName(0, "SimpleAttributeOperand"), new LocalizedText("en", "SimpleAttributeOperand"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_SimpleAttributeOperand, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_SimpleAttributeOperand, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">SimpleAttributeOperand</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1190() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.XYArrayItemType_XAxisDefinition, new QualifiedName(0, "XAxisDefinition"), new LocalizedText("en", "XAxisDefinition"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.AxisInformation, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.XYArrayItemType_XAxisDefinition, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.XYArrayItemType_XAxisDefinition, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.XYArrayItemType_XAxisDefinition, Identifiers.HasProperty, Identifiers.XYArrayItemType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1191() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ImageItemType_XAxisDefinition, new QualifiedName(0, "XAxisDefinition"), new LocalizedText("en", "XAxisDefinition"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.AxisInformation, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ImageItemType_XAxisDefinition, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ImageItemType_XAxisDefinition, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ImageItemType_XAxisDefinition, Identifiers.HasProperty, Identifiers.ImageItemType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1192() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ImageItemType_YAxisDefinition, new QualifiedName(0, "YAxisDefinition"), new LocalizedText("en", "YAxisDefinition"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.AxisInformation, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ImageItemType_YAxisDefinition, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ImageItemType_YAxisDefinition, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ImageItemType_YAxisDefinition, Identifiers.HasProperty, Identifiers.ImageItemType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1193() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.CubeItemType_XAxisDefinition, new QualifiedName(0, "XAxisDefinition"), new LocalizedText("en", "XAxisDefinition"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.AxisInformation, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.CubeItemType_XAxisDefinition, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.CubeItemType_XAxisDefinition, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.CubeItemType_XAxisDefinition, Identifiers.HasProperty, Identifiers.CubeItemType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1194() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.CubeItemType_YAxisDefinition, new QualifiedName(0, "YAxisDefinition"), new LocalizedText("en", "YAxisDefinition"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.AxisInformation, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.CubeItemType_YAxisDefinition, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.CubeItemType_YAxisDefinition, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.CubeItemType_YAxisDefinition, Identifiers.HasProperty, Identifiers.CubeItemType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1195() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ConditionType_Retain, new QualifiedName(0, "Retain"), new LocalizedText("en", "Retain"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Boolean, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ConditionType_Retain, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ConditionType_Retain, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ConditionType_Retain, Identifiers.HasProperty, Identifiers.ConditionType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1196() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.CubeItemType_ZAxisDefinition, new QualifiedName(0, "ZAxisDefinition"), new LocalizedText("en", "ZAxisDefinition"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.AxisInformation, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.CubeItemType_ZAxisDefinition, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.CubeItemType_ZAxisDefinition, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.CubeItemType_ZAxisDefinition, Identifiers.HasProperty, Identifiers.CubeItemType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1197() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ConditionType_ConditionRefresh_InputArguments, new QualifiedName(0, "InputArguments"), new LocalizedText("en", "InputArguments"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Argument, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ConditionType_ConditionRefresh_InputArguments, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.ConditionType_ConditionRefresh_InputArguments, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.ConditionType_ConditionRefresh_InputArguments, Identifiers.HasProperty, Identifiers.ConditionType_ConditionRefresh.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=297</Identifier>          </TypeId><Body><Argument><Name>SubscriptionId</Name><DataType><Identifier>i=288</Identifier>              </DataType><ValueRank>-1</ValueRank><ArrayDimensions/><Description><Locale>                </Locale><Text>The identifier for the suscription to refresh.</Text>              </Description>            </Argument>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1198() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.NDimensionArrayItemType_AxisDefinition, new QualifiedName(0, "AxisDefinition"), new LocalizedText("en", "AxisDefinition"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.AxisInformation, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.NDimensionArrayItemType_AxisDefinition, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.NDimensionArrayItemType_AxisDefinition, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.NDimensionArrayItemType_AxisDefinition, Identifiers.HasProperty, Identifiers.NDimensionArrayItemType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1199() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.AxisScaleEnumeration_EnumStrings, new QualifiedName(0, "EnumStrings"), new LocalizedText("en", "EnumStrings"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.LocalizedText, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.AxisScaleEnumeration_EnumStrings, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.AxisScaleEnumeration_EnumStrings, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.AxisScaleEnumeration_EnumStrings, Identifiers.HasProperty, Identifiers.AxisScaleEnumeration.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfLocalizedText xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><LocalizedText><Locale>          </Locale><Text>Linear</Text>        </LocalizedText><LocalizedText><Locale>          </Locale><Text>Log</Text>        </LocalizedText><LocalizedText><Locale>          </Locale><Text>Ln</Text>        </LocalizedText>      </ListOfLocalizedText>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1200() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_XmlSchema_AxisInformation, new QualifiedName(0, "AxisInformation"), new LocalizedText("en", "AxisInformation"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_AxisInformation, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_AxisInformation, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">//xs:element[@name='AxisInformation']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1201() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_XmlSchema_XVType, new QualifiedName(0, "XVType"), new LocalizedText("en", "XVType"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_XVType, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_XVType, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">//xs:element[@name='XVType']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1202() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_BinarySchema_AxisInformation, new QualifiedName(0, "AxisInformation"), new LocalizedText("en", "AxisInformation"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_AxisInformation, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_AxisInformation, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">AxisInformation</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1203() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_BinarySchema_XVType, new QualifiedName(0, "XVType"), new LocalizedText("en", "XVType"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_XVType, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_XVType, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">XVType</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1204() {
        SessionDiagnosticsVariableTypeNode node = new SessionDiagnosticsVariableTypeNode(this.context, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics, new QualifiedName(0, "SessionDiagnostics"), new LocalizedText("en", "SessionDiagnostics"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.SessionDiagnosticsDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_SessionId.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_SessionName.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ClientDescription.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ServerUri.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_EndpointUrl.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_LocaleIds.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ActualSessionTimeout.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_MaxResponseMessageSize.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ClientConnectionTime.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ClientLastContactTime.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_CurrentSubscriptionsCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_CurrentMonitoredItemsCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_CurrentPublishRequestsInQueue.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_TotalRequestCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_UnauthorizedRequestCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ReadCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_HistoryReadCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_WriteCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_HistoryUpdateCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_CallCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_CreateMonitoredItemsCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ModifyMonitoredItemsCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_SetMonitoringModeCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_SetTriggeringCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_DeleteMonitoredItemsCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_CreateSubscriptionCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ModifySubscriptionCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_SetPublishingModeCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_PublishCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_RepublishCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_TransferSubscriptionsCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_DeleteSubscriptionsCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_AddNodesCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_AddReferencesCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_DeleteNodesCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_DeleteReferencesCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_BrowseCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_BrowseNextCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_TranslateBrowsePathsToNodeIdsCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_QueryFirstCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_QueryNextCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_RegisterNodesCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_UnregisterNodesCount.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics, Identifiers.HasTypeDefinition, Identifiers.SessionDiagnosticsVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1205() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_SessionId, new QualifiedName(0, "SessionId"), new LocalizedText("en", "SessionId"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.NodeId, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_SessionId, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_SessionId, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_SessionId, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1206() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_SessionName, new QualifiedName(0, "SessionName"), new LocalizedText("en", "SessionName"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_SessionName, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_SessionName, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_SessionName, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1207() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_BinarySchema_HistoryEvent, new QualifiedName(0, "HistoryEvent"), new LocalizedText("en", "HistoryEvent"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_HistoryEvent, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_HistoryEvent, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">HistoryEvent</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1208() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ClientDescription, new QualifiedName(0, "ClientDescription"), new LocalizedText("en", "ClientDescription"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ApplicationDescription, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ClientDescription, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ClientDescription, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ClientDescription, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1209() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ServerUri, new QualifiedName(0, "ServerUri"), new LocalizedText("en", "ServerUri"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ServerUri, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ServerUri, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ServerUri, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1210() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_EndpointUrl, new QualifiedName(0, "EndpointUrl"), new LocalizedText("en", "EndpointUrl"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_EndpointUrl, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_EndpointUrl, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_EndpointUrl, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1211() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_LocaleIds, new QualifiedName(0, "LocaleIds"), new LocalizedText("en", "LocaleIds"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.LocaleId, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_LocaleIds, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_LocaleIds, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_LocaleIds, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1212() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ActualSessionTimeout, new QualifiedName(0, "ActualSessionTimeout"), new LocalizedText("en", "ActualSessionTimeout"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.Duration, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ActualSessionTimeout, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ActualSessionTimeout, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ActualSessionTimeout, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1213() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_MaxResponseMessageSize, new QualifiedName(0, "MaxResponseMessageSize"), new LocalizedText("en", "MaxResponseMessageSize"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_MaxResponseMessageSize, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_MaxResponseMessageSize, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_MaxResponseMessageSize, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1214() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ClientConnectionTime, new QualifiedName(0, "ClientConnectionTime"), new LocalizedText("en", "ClientConnectionTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UtcTime, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ClientConnectionTime, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ClientConnectionTime, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ClientConnectionTime, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1215() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ClientLastContactTime, new QualifiedName(0, "ClientLastContactTime"), new LocalizedText("en", "ClientLastContactTime"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UtcTime, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ClientLastContactTime, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ClientLastContactTime, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ClientLastContactTime, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1216() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_CurrentSubscriptionsCount, new QualifiedName(0, "CurrentSubscriptionsCount"), new LocalizedText("en", "CurrentSubscriptionsCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_CurrentSubscriptionsCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_CurrentSubscriptionsCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_CurrentSubscriptionsCount, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1217() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_CurrentMonitoredItemsCount, new QualifiedName(0, "CurrentMonitoredItemsCount"), new LocalizedText("en", "CurrentMonitoredItemsCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_CurrentMonitoredItemsCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_CurrentMonitoredItemsCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_CurrentMonitoredItemsCount, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1218() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_CurrentPublishRequestsInQueue, new QualifiedName(0, "CurrentPublishRequestsInQueue"), new LocalizedText("en", "CurrentPublishRequestsInQueue"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_CurrentPublishRequestsInQueue, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_CurrentPublishRequestsInQueue, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_CurrentPublishRequestsInQueue, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1219() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_TotalRequestCount, new QualifiedName(0, "TotalRequestCount"), new LocalizedText("en", "TotalRequestCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_TotalRequestCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_TotalRequestCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_TotalRequestCount, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1220() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_UnauthorizedRequestCount, new QualifiedName(0, "UnauthorizedRequestCount"), new LocalizedText("en", "UnauthorizedRequestCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_UnauthorizedRequestCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_UnauthorizedRequestCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_UnauthorizedRequestCount, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1221() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ReadCount, new QualifiedName(0, "ReadCount"), new LocalizedText("en", "ReadCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ReadCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ReadCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ReadCount, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1222() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_HistoryReadCount, new QualifiedName(0, "HistoryReadCount"), new LocalizedText("en", "HistoryReadCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_HistoryReadCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_HistoryReadCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_HistoryReadCount, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1223() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_WriteCount, new QualifiedName(0, "WriteCount"), new LocalizedText("en", "WriteCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_WriteCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_WriteCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_WriteCount, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1224() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_HistoryUpdateCount, new QualifiedName(0, "HistoryUpdateCount"), new LocalizedText("en", "HistoryUpdateCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_HistoryUpdateCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_HistoryUpdateCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_HistoryUpdateCount, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1225() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_CallCount, new QualifiedName(0, "CallCount"), new LocalizedText("en", "CallCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_CallCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_CallCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_CallCount, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1226() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_CreateMonitoredItemsCount, new QualifiedName(0, "CreateMonitoredItemsCount"), new LocalizedText("en", "CreateMonitoredItemsCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_CreateMonitoredItemsCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_CreateMonitoredItemsCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_CreateMonitoredItemsCount, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1227() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ModifyMonitoredItemsCount, new QualifiedName(0, "ModifyMonitoredItemsCount"), new LocalizedText("en", "ModifyMonitoredItemsCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ModifyMonitoredItemsCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ModifyMonitoredItemsCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ModifyMonitoredItemsCount, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1228() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_SetMonitoringModeCount, new QualifiedName(0, "SetMonitoringModeCount"), new LocalizedText("en", "SetMonitoringModeCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_SetMonitoringModeCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_SetMonitoringModeCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_SetMonitoringModeCount, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1229() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_SetTriggeringCount, new QualifiedName(0, "SetTriggeringCount"), new LocalizedText("en", "SetTriggeringCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_SetTriggeringCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_SetTriggeringCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_SetTriggeringCount, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1230() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_DeleteMonitoredItemsCount, new QualifiedName(0, "DeleteMonitoredItemsCount"), new LocalizedText("en", "DeleteMonitoredItemsCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_DeleteMonitoredItemsCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_DeleteMonitoredItemsCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_DeleteMonitoredItemsCount, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1231() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_CreateSubscriptionCount, new QualifiedName(0, "CreateSubscriptionCount"), new LocalizedText("en", "CreateSubscriptionCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_CreateSubscriptionCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_CreateSubscriptionCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_CreateSubscriptionCount, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1232() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ModifySubscriptionCount, new QualifiedName(0, "ModifySubscriptionCount"), new LocalizedText("en", "ModifySubscriptionCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ModifySubscriptionCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ModifySubscriptionCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ModifySubscriptionCount, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1233() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_SetPublishingModeCount, new QualifiedName(0, "SetPublishingModeCount"), new LocalizedText("en", "SetPublishingModeCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_SetPublishingModeCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_SetPublishingModeCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_SetPublishingModeCount, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1234() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_PublishCount, new QualifiedName(0, "PublishCount"), new LocalizedText("en", "PublishCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_PublishCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_PublishCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_PublishCount, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1235() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_RepublishCount, new QualifiedName(0, "RepublishCount"), new LocalizedText("en", "RepublishCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_RepublishCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_RepublishCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_RepublishCount, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1236() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_TransferSubscriptionsCount, new QualifiedName(0, "TransferSubscriptionsCount"), new LocalizedText("en", "TransferSubscriptionsCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_TransferSubscriptionsCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_TransferSubscriptionsCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_TransferSubscriptionsCount, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1237() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_DeleteSubscriptionsCount, new QualifiedName(0, "DeleteSubscriptionsCount"), new LocalizedText("en", "DeleteSubscriptionsCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_DeleteSubscriptionsCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_DeleteSubscriptionsCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_DeleteSubscriptionsCount, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1238() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_AddNodesCount, new QualifiedName(0, "AddNodesCount"), new LocalizedText("en", "AddNodesCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_AddNodesCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_AddNodesCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_AddNodesCount, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1239() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_AddReferencesCount, new QualifiedName(0, "AddReferencesCount"), new LocalizedText("en", "AddReferencesCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_AddReferencesCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_AddReferencesCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_AddReferencesCount, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1240() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_DeleteNodesCount, new QualifiedName(0, "DeleteNodesCount"), new LocalizedText("en", "DeleteNodesCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_DeleteNodesCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_DeleteNodesCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_DeleteNodesCount, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1241() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_DeleteReferencesCount, new QualifiedName(0, "DeleteReferencesCount"), new LocalizedText("en", "DeleteReferencesCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_DeleteReferencesCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_DeleteReferencesCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_DeleteReferencesCount, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1242() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_BrowseCount, new QualifiedName(0, "BrowseCount"), new LocalizedText("en", "BrowseCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_BrowseCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_BrowseCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_BrowseCount, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1243() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_BrowseNextCount, new QualifiedName(0, "BrowseNextCount"), new LocalizedText("en", "BrowseNextCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_BrowseNextCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_BrowseNextCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_BrowseNextCount, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1244() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_TranslateBrowsePathsToNodeIdsCount, new QualifiedName(0, "TranslateBrowsePathsToNodeIdsCount"), new LocalizedText("en", "TranslateBrowsePathsToNodeIdsCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_TranslateBrowsePathsToNodeIdsCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_TranslateBrowsePathsToNodeIdsCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_TranslateBrowsePathsToNodeIdsCount, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1245() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_QueryFirstCount, new QualifiedName(0, "QueryFirstCount"), new LocalizedText("en", "QueryFirstCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_QueryFirstCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_QueryFirstCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_QueryFirstCount, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1246() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_QueryNextCount, new QualifiedName(0, "QueryNextCount"), new LocalizedText("en", "QueryNextCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_QueryNextCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_QueryNextCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_QueryNextCount, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1247() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_RegisterNodesCount, new QualifiedName(0, "RegisterNodesCount"), new LocalizedText("en", "RegisterNodesCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_RegisterNodesCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_RegisterNodesCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_RegisterNodesCount, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1248() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_UnregisterNodesCount, new QualifiedName(0, "UnregisterNodesCount"), new LocalizedText("en", "UnregisterNodesCount"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ServiceCounterDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_UnregisterNodesCount, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_UnregisterNodesCount, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_UnregisterNodesCount, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1249() {
        SessionSecurityDiagnosticsTypeNode node = new SessionSecurityDiagnosticsTypeNode(this.context, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics, new QualifiedName(0, "SessionSecurityDiagnostics"), new LocalizedText("en", "SessionSecurityDiagnostics"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.SessionSecurityDiagnosticsDataType, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_SessionId.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_ClientUserIdOfSession.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_ClientUserIdHistory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_AuthenticationMechanism.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_Encoding.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_TransportProtocol.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_SecurityMode.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_SecurityPolicyUri.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_ClientCertificate.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics, Identifiers.HasTypeDefinition, Identifiers.SessionSecurityDiagnosticsType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1250() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_SessionId, new QualifiedName(0, "SessionId"), new LocalizedText("en", "SessionId"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.NodeId, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_SessionId, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_SessionId, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_SessionId, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1251() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_ClientUserIdOfSession, new QualifiedName(0, "ClientUserIdOfSession"), new LocalizedText("en", "ClientUserIdOfSession"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_ClientUserIdOfSession, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_ClientUserIdOfSession, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_ClientUserIdOfSession, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1252() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_ClientUserIdHistory, new QualifiedName(0, "ClientUserIdHistory"), new LocalizedText("en", "ClientUserIdHistory"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_ClientUserIdHistory, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_ClientUserIdHistory, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_ClientUserIdHistory, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1253() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_AuthenticationMechanism, new QualifiedName(0, "AuthenticationMechanism"), new LocalizedText("en", "AuthenticationMechanism"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_AuthenticationMechanism, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_AuthenticationMechanism, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_AuthenticationMechanism, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1254() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_Encoding, new QualifiedName(0, "Encoding"), new LocalizedText("en", "Encoding"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_Encoding, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_Encoding, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_Encoding, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1255() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_TransportProtocol, new QualifiedName(0, "TransportProtocol"), new LocalizedText("en", "TransportProtocol"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_TransportProtocol, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_TransportProtocol, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_TransportProtocol, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1256() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_SecurityMode, new QualifiedName(0, "SecurityMode"), new LocalizedText("en", "SecurityMode"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.MessageSecurityMode, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_SecurityMode, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_SecurityMode, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_SecurityMode, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1257() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_SecurityPolicyUri, new QualifiedName(0, "SecurityPolicyUri"), new LocalizedText("en", "SecurityPolicyUri"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_SecurityPolicyUri, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_SecurityPolicyUri, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_SecurityPolicyUri, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1258() {
        BaseDataVariableTypeNode node = new BaseDataVariableTypeNode(this.context, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_ClientCertificate, new QualifiedName(0, "ClientCertificate"), new LocalizedText("en", "ClientCertificate"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.ByteString, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_ClientCertificate, Identifiers.HasTypeDefinition, Identifiers.BaseDataVariableType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_ClientCertificate, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_ClientCertificate, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1259() {
        SubscriptionDiagnosticsArrayTypeNode node = new SubscriptionDiagnosticsArrayTypeNode(this.context, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SubscriptionDiagnosticsArray, new QualifiedName(0, "SubscriptionDiagnosticsArray"), new LocalizedText("en", "SubscriptionDiagnosticsArray"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.SubscriptionDiagnosticsDataType, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SubscriptionDiagnosticsArray, Identifiers.HasTypeDefinition, Identifiers.SubscriptionDiagnosticsArrayType.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SubscriptionDiagnosticsArray, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder_SubscriptionDiagnosticsArray, Identifiers.HasComponent, Identifiers.SessionsDiagnosticsSummaryType_ClientName_Placeholder.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1260() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.OperationLimitsType_MaxNodesPerHistoryReadData, new QualifiedName(0, "MaxNodesPerHistoryReadData"), new LocalizedText("en", "MaxNodesPerHistoryReadData"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OperationLimitsType_MaxNodesPerHistoryReadData, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.OperationLimitsType_MaxNodesPerHistoryReadData, Identifiers.HasModellingRule, Identifiers.ModellingRule_Optional.expanded(), true));
        node.addReference(new Reference(Identifiers.OperationLimitsType_MaxNodesPerHistoryReadData, Identifiers.HasProperty, Identifiers.OperationLimitsType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1261() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.OperationLimitsType_MaxNodesPerHistoryReadEvents, new QualifiedName(0, "MaxNodesPerHistoryReadEvents"), new LocalizedText("en", "MaxNodesPerHistoryReadEvents"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OperationLimitsType_MaxNodesPerHistoryReadEvents, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.OperationLimitsType_MaxNodesPerHistoryReadEvents, Identifiers.HasModellingRule, Identifiers.ModellingRule_Optional.expanded(), true));
        node.addReference(new Reference(Identifiers.OperationLimitsType_MaxNodesPerHistoryReadEvents, Identifiers.HasProperty, Identifiers.OperationLimitsType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1262() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.OperationLimitsType_MaxNodesPerHistoryUpdateData, new QualifiedName(0, "MaxNodesPerHistoryUpdateData"), new LocalizedText("en", "MaxNodesPerHistoryUpdateData"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OperationLimitsType_MaxNodesPerHistoryUpdateData, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.OperationLimitsType_MaxNodesPerHistoryUpdateData, Identifiers.HasModellingRule, Identifiers.ModellingRule_Optional.expanded(), true));
        node.addReference(new Reference(Identifiers.OperationLimitsType_MaxNodesPerHistoryUpdateData, Identifiers.HasProperty, Identifiers.OperationLimitsType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1263() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_BinarySchema_MonitoringFilter, new QualifiedName(0, "MonitoringFilter"), new LocalizedText("en", "MonitoringFilter"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_MonitoringFilter, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_MonitoringFilter, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">MonitoringFilter</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1264() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.OperationLimitsType_MaxNodesPerHistoryUpdateEvents, new QualifiedName(0, "MaxNodesPerHistoryUpdateEvents"), new LocalizedText("en", "MaxNodesPerHistoryUpdateEvents"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OperationLimitsType_MaxNodesPerHistoryUpdateEvents, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.OperationLimitsType_MaxNodesPerHistoryUpdateEvents, Identifiers.HasModellingRule, Identifiers.ModellingRule_Optional.expanded(), true));
        node.addReference(new Reference(Identifiers.OperationLimitsType_MaxNodesPerHistoryUpdateEvents, Identifiers.HasProperty, Identifiers.OperationLimitsType.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1265() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.Server_ServerCapabilities_OperationLimits_MaxNodesPerHistoryReadData, new QualifiedName(0, "MaxNodesPerHistoryReadData"), new LocalizedText("en", "MaxNodesPerHistoryReadData"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.Server_ServerCapabilities_OperationLimits_MaxNodesPerHistoryReadData, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.Server_ServerCapabilities_OperationLimits_MaxNodesPerHistoryReadData, Identifiers.HasProperty, Identifiers.Server_ServerCapabilities_OperationLimits.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1266() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.Server_ServerCapabilities_OperationLimits_MaxNodesPerHistoryReadEvents, new QualifiedName(0, "MaxNodesPerHistoryReadEvents"), new LocalizedText("en", "MaxNodesPerHistoryReadEvents"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.Server_ServerCapabilities_OperationLimits_MaxNodesPerHistoryReadEvents, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.Server_ServerCapabilities_OperationLimits_MaxNodesPerHistoryReadEvents, Identifiers.HasProperty, Identifiers.Server_ServerCapabilities_OperationLimits.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1267() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.Server_ServerCapabilities_OperationLimits_MaxNodesPerHistoryUpdateData, new QualifiedName(0, "MaxNodesPerHistoryUpdateData"), new LocalizedText("en", "MaxNodesPerHistoryUpdateData"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.Server_ServerCapabilities_OperationLimits_MaxNodesPerHistoryUpdateData, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.Server_ServerCapabilities_OperationLimits_MaxNodesPerHistoryUpdateData, Identifiers.HasProperty, Identifiers.Server_ServerCapabilities_OperationLimits.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1268() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.Server_ServerCapabilities_OperationLimits_MaxNodesPerHistoryUpdateEvents, new QualifiedName(0, "MaxNodesPerHistoryUpdateEvents"), new LocalizedText("en", "MaxNodesPerHistoryUpdateEvents"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.Server_ServerCapabilities_OperationLimits_MaxNodesPerHistoryUpdateEvents, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.Server_ServerCapabilities_OperationLimits_MaxNodesPerHistoryUpdateEvents, Identifiers.HasProperty, Identifiers.Server_ServerCapabilities_OperationLimits.expanded(), false));
        this.nodeManager.addNode(node);
    }

    private void loadNode1269() throws IOException, SAXException {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.NamingRuleType_EnumValues, new QualifiedName(0, "EnumValues"), new LocalizedText("en", "EnumValues"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.EnumValueType, 1, new UInteger[]{org.eclipse.milo.opcua.stack.core.types.builtin.unsigned.UInteger.valueOf(0)}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.NamingRuleType_EnumValues, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        node.addReference(new Reference(Identifiers.NamingRuleType_EnumValues, Identifiers.HasModellingRule, Identifiers.ModellingRule_Mandatory.expanded(), true));
        node.addReference(new Reference(Identifiers.NamingRuleType_EnumValues, Identifiers.HasProperty, Identifiers.NamingRuleType.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<ListOfExtensionObject xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\"><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>1</Value><DisplayName><Locale>                </Locale><Text>Mandatory</Text>              </DisplayName><Description><Locale>                </Locale><Text>The BrowseName must appear in all instances of the type.</Text>              </Description>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>2</Value><DisplayName><Locale>                </Locale><Text>Optional</Text>              </DisplayName><Description><Locale>                </Locale><Text>The BrowseName may appear in an instance of the type.</Text>              </Description>            </EnumValueType>          </Body>        </ExtensionObject><ExtensionObject><TypeId><Identifier>i=7616</Identifier>          </TypeId><Body><EnumValueType><Value>3</Value><DisplayName><Locale>                </Locale><Text>Constraint</Text>              </DisplayName><Description><Locale>                </Locale><Text>The modelling rule defines a constraint and the BrowseName is not used in an instance of the type.</Text>              </Description>            </EnumValueType>          </Body>        </ExtensionObject>      </ListOfExtensionObject>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1270() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_BinarySchema_EventFilter, new QualifiedName(0, "EventFilter"), new LocalizedText("en", "EventFilter"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_EventFilter, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_EventFilter, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">EventFilter</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1271() {
        PropertyTypeNode node = new PropertyTypeNode(this.context, Identifiers.ViewVersion, new QualifiedName(0, "ViewVersion"), new LocalizedText("en", "ViewVersion"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.UInt32, -2, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.ViewVersion, Identifiers.HasTypeDefinition, Identifiers.PropertyType.expanded(), true));
        this.nodeManager.addNode(node);
    }

    private void loadNode1272() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_BinarySchema_AggregateConfiguration, new QualifiedName(0, "AggregateConfiguration"), new LocalizedText("en", "AggregateConfiguration"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_AggregateConfiguration, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_AggregateConfiguration, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">AggregateConfiguration</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1273() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_XmlSchema_ComplexNumberType, new QualifiedName(0, "ComplexNumberType"), new LocalizedText("en", "ComplexNumberType"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_ComplexNumberType, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_ComplexNumberType, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">//xs:element[@name='ComplexNumberType']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1274() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_XmlSchema_DoubleComplexNumberType, new QualifiedName(0, "DoubleComplexNumberType"), new LocalizedText("en", "DoubleComplexNumberType"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_DoubleComplexNumberType, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_DoubleComplexNumberType, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">//xs:element[@name='DoubleComplexNumberType']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1275() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_BinarySchema_ComplexNumberType, new QualifiedName(0, "ComplexNumberType"), new LocalizedText("en", "ComplexNumberType"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_ComplexNumberType, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_ComplexNumberType, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">ComplexNumberType</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1276() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_BinarySchema_DoubleComplexNumberType, new QualifiedName(0, "DoubleComplexNumberType"), new LocalizedText("en", "DoubleComplexNumberType"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_DoubleComplexNumberType, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_DoubleComplexNumberType, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">DoubleComplexNumberType</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1277() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_XmlSchema_ServerOnNetwork, new QualifiedName(0, "ServerOnNetwork"), new LocalizedText("en", "ServerOnNetwork"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_ServerOnNetwork, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_XmlSchema_ServerOnNetwork, Identifiers.HasComponent, Identifiers.OpcUa_XmlSchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">//xs:element[@name='ServerOnNetwork']</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1278() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_BinarySchema_ServerOnNetwork, new QualifiedName(0, "ServerOnNetwork"), new LocalizedText("en", "ServerOnNetwork"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_ServerOnNetwork, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_ServerOnNetwork, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">ServerOnNetwork</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    private void loadNode1279() throws IOException, SAXException {
        DataTypeDescriptionTypeNode node = new DataTypeDescriptionTypeNode(this.context, Identifiers.OpcUa_BinarySchema_HistoryEventFieldList, new QualifiedName(0, "HistoryEventFieldList"), new LocalizedText("en", "HistoryEventFieldList"), LocalizedText.NULL_VALUE, UInteger.valueOf(0), UInteger.valueOf(0), new DataValue(Variant.NULL_VALUE), Identifiers.String, -1, new UInteger[]{}, UByte.valueOf(1), UByte.valueOf(1), 0.0, false);
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_HistoryEventFieldList, Identifiers.HasTypeDefinition, Identifiers.DataTypeDescriptionType.expanded(), true));
        node.addReference(new Reference(Identifiers.OpcUa_BinarySchema_HistoryEventFieldList, Identifiers.HasComponent, Identifiers.OpcUa_BinarySchema.expanded(), false));
        StringBuilder sb = new StringBuilder();
        sb.append("<String xmlns=\"http://opcfoundation.org/UA/2008/02/Types.xsd\">HistoryEventFieldList</String>");
        String xml = sb.toString();
        OpcUaXmlStreamDecoder decoder = new OpcUaXmlStreamDecoder(context.getServer().getSerializationContext()).setInput(new StringReader(xml));
        Object o = decoder.readVariantValue();
        DataValue value = new DataValue(new Variant(o));
        node.setValue(value);
        this.nodeManager.addNode(node);
    }

    public void loadAllNodes() throws IOException, SAXException {
        loadNode0();
        loadNode1();
        loadNode2();
        loadNode3();
        loadNode4();
        loadNode5();
        loadNode6();
        loadNode7();
        loadNode8();
        loadNode9();
        loadNode10();
        loadNode11();
        loadNode12();
        loadNode13();
        loadNode14();
        loadNode15();
        loadNode16();
        loadNode17();
        loadNode18();
        loadNode19();
        loadNode20();
        loadNode21();
        loadNode22();
        loadNode23();
        loadNode24();
        loadNode25();
        loadNode26();
        loadNode27();
        loadNode28();
        loadNode29();
        loadNode30();
        loadNode31();
        loadNode32();
        loadNode33();
        loadNode34();
        loadNode35();
        loadNode36();
        loadNode37();
        loadNode38();
        loadNode39();
        loadNode40();
        loadNode41();
        loadNode42();
        loadNode43();
        loadNode44();
        loadNode45();
        loadNode46();
        loadNode47();
        loadNode48();
        loadNode49();
        loadNode50();
        loadNode51();
        loadNode52();
        loadNode53();
        loadNode54();
        loadNode55();
        loadNode56();
        loadNode57();
        loadNode58();
        loadNode59();
        loadNode60();
        loadNode61();
        loadNode62();
        loadNode63();
        loadNode64();
        loadNode65();
        loadNode66();
        loadNode67();
        loadNode68();
        loadNode69();
        loadNode70();
        loadNode71();
        loadNode72();
        loadNode73();
        loadNode74();
        loadNode75();
        loadNode76();
        loadNode77();
        loadNode78();
        loadNode79();
        loadNode80();
        loadNode81();
        loadNode82();
        loadNode83();
        loadNode84();
        loadNode85();
        loadNode86();
        loadNode87();
        loadNode88();
        loadNode89();
        loadNode90();
        loadNode91();
        loadNode92();
        loadNode93();
        loadNode94();
        loadNode95();
        loadNode96();
        loadNode97();
        loadNode98();
        loadNode99();
        loadNode100();
        loadNode101();
        loadNode102();
        loadNode103();
        loadNode104();
        loadNode105();
        loadNode106();
        loadNode107();
        loadNode108();
        loadNode109();
        loadNode110();
        loadNode111();
        loadNode112();
        loadNode113();
        loadNode114();
        loadNode115();
        loadNode116();
        loadNode117();
        loadNode118();
        loadNode119();
        loadNode120();
        loadNode121();
        loadNode122();
        loadNode123();
        loadNode124();
        loadNode125();
        loadNode126();
        loadNode127();
        loadNode128();
        loadNode129();
        loadNode130();
        loadNode131();
        loadNode132();
        loadNode133();
        loadNode134();
        loadNode135();
        loadNode136();
        loadNode137();
        loadNode138();
        loadNode139();
        loadNode140();
        loadNode141();
        loadNode142();
        loadNode143();
        loadNode144();
        loadNode145();
        loadNode146();
        loadNode147();
        loadNode148();
        loadNode149();
        loadNode150();
        loadNode151();
        loadNode152();
        loadNode153();
        loadNode154();
        loadNode155();
        loadNode156();
        loadNode157();
        loadNode158();
        loadNode159();
        loadNode160();
        loadNode161();
        loadNode162();
        loadNode163();
        loadNode164();
        loadNode165();
        loadNode166();
        loadNode167();
        loadNode168();
        loadNode169();
        loadNode170();
        loadNode171();
        loadNode172();
        loadNode173();
        loadNode174();
        loadNode175();
        loadNode176();
        loadNode177();
        loadNode178();
        loadNode179();
        loadNode180();
        loadNode181();
        loadNode182();
        loadNode183();
        loadNode184();
        loadNode185();
        loadNode186();
        loadNode187();
        loadNode188();
        loadNode189();
        loadNode190();
        loadNode191();
        loadNode192();
        loadNode193();
        loadNode194();
        loadNode195();
        loadNode196();
        loadNode197();
        loadNode198();
        loadNode199();
        loadNode200();
        loadNode201();
        loadNode202();
        loadNode203();
        loadNode204();
        loadNode205();
        loadNode206();
        loadNode207();
        loadNode208();
        loadNode209();
        loadNode210();
        loadNode211();
        loadNode212();
        loadNode213();
        loadNode214();
        loadNode215();
        loadNode216();
        loadNode217();
        loadNode218();
        loadNode219();
        loadNode220();
        loadNode221();
        loadNode222();
        loadNode223();
        loadNode224();
        loadNode225();
        loadNode226();
        loadNode227();
        loadNode228();
        loadNode229();
        loadNode230();
        loadNode231();
        loadNode232();
        loadNode233();
        loadNode234();
        loadNode235();
        loadNode236();
        loadNode237();
        loadNode238();
        loadNode239();
        loadNode240();
        loadNode241();
        loadNode242();
        loadNode243();
        loadNode244();
        loadNode245();
        loadNode246();
        loadNode247();
        loadNode248();
        loadNode249();
        loadNode250();
        loadNode251();
        loadNode252();
        loadNode253();
        loadNode254();
        loadNode255();
        loadNode256();
        loadNode257();
        loadNode258();
        loadNode259();
        loadNode260();
        loadNode261();
        loadNode262();
        loadNode263();
        loadNode264();
        loadNode265();
        loadNode266();
        loadNode267();
        loadNode268();
        loadNode269();
        loadNode270();
        loadNode271();
        loadNode272();
        loadNode273();
        loadNode274();
        loadNode275();
        loadNode276();
        loadNode277();
        loadNode278();
        loadNode279();
        loadNode280();
        loadNode281();
        loadNode282();
        loadNode283();
        loadNode284();
        loadNode285();
        loadNode286();
        loadNode287();
        loadNode288();
        loadNode289();
        loadNode290();
        loadNode291();
        loadNode292();
        loadNode293();
        loadNode294();
        loadNode295();
        loadNode296();
        loadNode297();
        loadNode298();
        loadNode299();
        loadNode300();
        loadNode301();
        loadNode302();
        loadNode303();
        loadNode304();
        loadNode305();
        loadNode306();
        loadNode307();
        loadNode308();
        loadNode309();
        loadNode310();
        loadNode311();
        loadNode312();
        loadNode313();
        loadNode314();
        loadNode315();
        loadNode316();
        loadNode317();
        loadNode318();
        loadNode319();
        loadNode320();
        loadNode321();
        loadNode322();
        loadNode323();
        loadNode324();
        loadNode325();
        loadNode326();
        loadNode327();
        loadNode328();
        loadNode329();
        loadNode330();
        loadNode331();
        loadNode332();
        loadNode333();
        loadNode334();
        loadNode335();
        loadNode336();
        loadNode337();
        loadNode338();
        loadNode339();
        loadNode340();
        loadNode341();
        loadNode342();
        loadNode343();
        loadNode344();
        loadNode345();
        loadNode346();
        loadNode347();
        loadNode348();
        loadNode349();
        loadNode350();
        loadNode351();
        loadNode352();
        loadNode353();
        loadNode354();
        loadNode355();
        loadNode356();
        loadNode357();
        loadNode358();
        loadNode359();
        loadNode360();
        loadNode361();
        loadNode362();
        loadNode363();
        loadNode364();
        loadNode365();
        loadNode366();
        loadNode367();
        loadNode368();
        loadNode369();
        loadNode370();
        loadNode371();
        loadNode372();
        loadNode373();
        loadNode374();
        loadNode375();
        loadNode376();
        loadNode377();
        loadNode378();
        loadNode379();
        loadNode380();
        loadNode381();
        loadNode382();
        loadNode383();
        loadNode384();
        loadNode385();
        loadNode386();
        loadNode387();
        loadNode388();
        loadNode389();
        loadNode390();
        loadNode391();
        loadNode392();
        loadNode393();
        loadNode394();
        loadNode395();
        loadNode396();
        loadNode397();
        loadNode398();
        loadNode399();
        loadNode400();
        loadNode401();
        loadNode402();
        loadNode403();
        loadNode404();
        loadNode405();
        loadNode406();
        loadNode407();
        loadNode408();
        loadNode409();
        loadNode410();
        loadNode411();
        loadNode412();
        loadNode413();
        loadNode414();
        loadNode415();
        loadNode416();
        loadNode417();
        loadNode418();
        loadNode419();
        loadNode420();
        loadNode421();
        loadNode422();
        loadNode423();
        loadNode424();
        loadNode425();
        loadNode426();
        loadNode427();
        loadNode428();
        loadNode429();
        loadNode430();
        loadNode431();
        loadNode432();
        loadNode433();
        loadNode434();
        loadNode435();
        loadNode436();
        loadNode437();
        loadNode438();
        loadNode439();
        loadNode440();
        loadNode441();
        loadNode442();
        loadNode443();
        loadNode444();
        loadNode445();
        loadNode446();
        loadNode447();
        loadNode448();
        loadNode449();
        loadNode450();
        loadNode451();
        loadNode452();
        loadNode453();
        loadNode454();
        loadNode455();
        loadNode456();
        loadNode457();
        loadNode458();
        loadNode459();
        loadNode460();
        loadNode461();
        loadNode462();
        loadNode463();
        loadNode464();
        loadNode465();
        loadNode466();
        loadNode467();
        loadNode468();
        loadNode469();
        loadNode470();
        loadNode471();
        loadNode472();
        loadNode473();
        loadNode474();
        loadNode475();
        loadNode476();
        loadNode477();
        loadNode478();
        loadNode479();
        loadNode480();
        loadNode481();
        loadNode482();
        loadNode483();
        loadNode484();
        loadNode485();
        loadNode486();
        loadNode487();
        loadNode488();
        loadNode489();
        loadNode490();
        loadNode491();
        loadNode492();
        loadNode493();
        loadNode494();
        loadNode495();
        loadNode496();
        loadNode497();
        loadNode498();
        loadNode499();
        loadNode500();
        loadNode501();
        loadNode502();
        loadNode503();
        loadNode504();
        loadNode505();
        loadNode506();
        loadNode507();
        loadNode508();
        loadNode509();
        loadNode510();
        loadNode511();
        loadNode512();
        loadNode513();
        loadNode514();
        loadNode515();
        loadNode516();
        loadNode517();
        loadNode518();
        loadNode519();
        loadNode520();
        loadNode521();
        loadNode522();
        loadNode523();
        loadNode524();
        loadNode525();
        loadNode526();
        loadNode527();
        loadNode528();
        loadNode529();
        loadNode530();
        loadNode531();
        loadNode532();
        loadNode533();
        loadNode534();
        loadNode535();
        loadNode536();
        loadNode537();
        loadNode538();
        loadNode539();
        loadNode540();
        loadNode541();
        loadNode542();
        loadNode543();
        loadNode544();
        loadNode545();
        loadNode546();
        loadNode547();
        loadNode548();
        loadNode549();
        loadNode550();
        loadNode551();
        loadNode552();
        loadNode553();
        loadNode554();
        loadNode555();
        loadNode556();
        loadNode557();
        loadNode558();
        loadNode559();
        loadNode560();
        loadNode561();
        loadNode562();
        loadNode563();
        loadNode564();
        loadNode565();
        loadNode566();
        loadNode567();
        loadNode568();
        loadNode569();
        loadNode570();
        loadNode571();
        loadNode572();
        loadNode573();
        loadNode574();
        loadNode575();
        loadNode576();
        loadNode577();
        loadNode578();
        loadNode579();
        loadNode580();
        loadNode581();
        loadNode582();
        loadNode583();
        loadNode584();
        loadNode585();
        loadNode586();
        loadNode587();
        loadNode588();
        loadNode589();
        loadNode590();
        loadNode591();
        loadNode592();
        loadNode593();
        loadNode594();
        loadNode595();
        loadNode596();
        loadNode597();
        loadNode598();
        loadNode599();
        loadNode600();
        loadNode601();
        loadNode602();
        loadNode603();
        loadNode604();
        loadNode605();
        loadNode606();
        loadNode607();
        loadNode608();
        loadNode609();
        loadNode610();
        loadNode611();
        loadNode612();
        loadNode613();
        loadNode614();
        loadNode615();
        loadNode616();
        loadNode617();
        loadNode618();
        loadNode619();
        loadNode620();
        loadNode621();
        loadNode622();
        loadNode623();
        loadNode624();
        loadNode625();
        loadNode626();
        loadNode627();
        loadNode628();
        loadNode629();
        loadNode630();
        loadNode631();
        loadNode632();
        loadNode633();
        loadNode634();
        loadNode635();
        loadNode636();
        loadNode637();
        loadNode638();
        loadNode639();
        loadNode640();
        loadNode641();
        loadNode642();
        loadNode643();
        loadNode644();
        loadNode645();
        loadNode646();
        loadNode647();
        loadNode648();
        loadNode649();
        loadNode650();
        loadNode651();
        loadNode652();
        loadNode653();
        loadNode654();
        loadNode655();
        loadNode656();
        loadNode657();
        loadNode658();
        loadNode659();
        loadNode660();
        loadNode661();
        loadNode662();
        loadNode663();
        loadNode664();
        loadNode665();
        loadNode666();
        loadNode667();
        loadNode668();
        loadNode669();
        loadNode670();
        loadNode671();
        loadNode672();
        loadNode673();
        loadNode674();
        loadNode675();
        loadNode676();
        loadNode677();
        loadNode678();
        loadNode679();
        loadNode680();
        loadNode681();
        loadNode682();
        loadNode683();
        loadNode684();
        loadNode685();
        loadNode686();
        loadNode687();
        loadNode688();
        loadNode689();
        loadNode690();
        loadNode691();
        loadNode692();
        loadNode693();
        loadNode694();
        loadNode695();
        loadNode696();
        loadNode697();
        loadNode698();
        loadNode699();
        loadNode700();
        loadNode701();
        loadNode702();
        loadNode703();
        loadNode704();
        loadNode705();
        loadNode706();
        loadNode707();
        loadNode708();
        loadNode709();
        loadNode710();
        loadNode711();
        loadNode712();
        loadNode713();
        loadNode714();
        loadNode715();
        loadNode716();
        loadNode717();
        loadNode718();
        loadNode719();
        loadNode720();
        loadNode721();
        loadNode722();
        loadNode723();
        loadNode724();
        loadNode725();
        loadNode726();
        loadNode727();
        loadNode728();
        loadNode729();
        loadNode730();
        loadNode731();
        loadNode732();
        loadNode733();
        loadNode734();
        loadNode735();
        loadNode736();
        loadNode737();
        loadNode738();
        loadNode739();
        loadNode740();
        loadNode741();
        loadNode742();
        loadNode743();
        loadNode744();
        loadNode745();
        loadNode746();
        loadNode747();
        loadNode748();
        loadNode749();
        loadNode750();
        loadNode751();
        loadNode752();
        loadNode753();
        loadNode754();
        loadNode755();
        loadNode756();
        loadNode757();
        loadNode758();
        loadNode759();
        loadNode760();
        loadNode761();
        loadNode762();
        loadNode763();
        loadNode764();
        loadNode765();
        loadNode766();
        loadNode767();
        loadNode768();
        loadNode769();
        loadNode770();
        loadNode771();
        loadNode772();
        loadNode773();
        loadNode774();
        loadNode775();
        loadNode776();
        loadNode777();
        loadNode778();
        loadNode779();
        loadNode780();
        loadNode781();
        loadNode782();
        loadNode783();
        loadNode784();
        loadNode785();
        loadNode786();
        loadNode787();
        loadNode788();
        loadNode789();
        loadNode790();
        loadNode791();
        loadNode792();
        loadNode793();
        loadNode794();
        loadNode795();
        loadNode796();
        loadNode797();
        loadNode798();
        loadNode799();
        loadNode800();
        loadNode801();
        loadNode802();
        loadNode803();
        loadNode804();
        loadNode805();
        loadNode806();
        loadNode807();
        loadNode808();
        loadNode809();
        loadNode810();
        loadNode811();
        loadNode812();
        loadNode813();
        loadNode814();
        loadNode815();
        loadNode816();
        loadNode817();
        loadNode818();
        loadNode819();
        loadNode820();
        loadNode821();
        loadNode822();
        loadNode823();
        loadNode824();
        loadNode825();
        loadNode826();
        loadNode827();
        loadNode828();
        loadNode829();
        loadNode830();
        loadNode831();
        loadNode832();
        loadNode833();
        loadNode834();
        loadNode835();
        loadNode836();
        loadNode837();
        loadNode838();
        loadNode839();
        loadNode840();
        loadNode841();
        loadNode842();
        loadNode843();
        loadNode844();
        loadNode845();
        loadNode846();
        loadNode847();
        loadNode848();
        loadNode849();
        loadNode850();
        loadNode851();
        loadNode852();
        loadNode853();
        loadNode854();
        loadNode855();
        loadNode856();
        loadNode857();
        loadNode858();
        loadNode859();
        loadNode860();
        loadNode861();
        loadNode862();
        loadNode863();
        loadNode864();
        loadNode865();
        loadNode866();
        loadNode867();
        loadNode868();
        loadNode869();
        loadNode870();
        loadNode871();
        loadNode872();
        loadNode873();
        loadNode874();
        loadNode875();
        loadNode876();
        loadNode877();
        loadNode878();
        loadNode879();
        loadNode880();
        loadNode881();
        loadNode882();
        loadNode883();
        loadNode884();
        loadNode885();
        loadNode886();
        loadNode887();
        loadNode888();
        loadNode889();
        loadNode890();
        loadNode891();
        loadNode892();
        loadNode893();
        loadNode894();
        loadNode895();
        loadNode896();
        loadNode897();
        loadNode898();
        loadNode899();
        loadNode900();
        loadNode901();
        loadNode902();
        loadNode903();
        loadNode904();
        loadNode905();
        loadNode906();
        loadNode907();
        loadNode908();
        loadNode909();
        loadNode910();
        loadNode911();
        loadNode912();
        loadNode913();
        loadNode914();
        loadNode915();
        loadNode916();
        loadNode917();
        loadNode918();
        loadNode919();
        loadNode920();
        loadNode921();
        loadNode922();
        loadNode923();
        loadNode924();
        loadNode925();
        loadNode926();
        loadNode927();
        loadNode928();
        loadNode929();
        loadNode930();
        loadNode931();
        loadNode932();
        loadNode933();
        loadNode934();
        loadNode935();
        loadNode936();
        loadNode937();
        loadNode938();
        loadNode939();
        loadNode940();
        loadNode941();
        loadNode942();
        loadNode943();
        loadNode944();
        loadNode945();
        loadNode946();
        loadNode947();
        loadNode948();
        loadNode949();
        loadNode950();
        loadNode951();
        loadNode952();
        loadNode953();
        loadNode954();
        loadNode955();
        loadNode956();
        loadNode957();
        loadNode958();
        loadNode959();
        loadNode960();
        loadNode961();
        loadNode962();
        loadNode963();
        loadNode964();
        loadNode965();
        loadNode966();
        loadNode967();
        loadNode968();
        loadNode969();
        loadNode970();
        loadNode971();
        loadNode972();
        loadNode973();
        loadNode974();
        loadNode975();
        loadNode976();
        loadNode977();
        loadNode978();
        loadNode979();
        loadNode980();
        loadNode981();
        loadNode982();
        loadNode983();
        loadNode984();
        loadNode985();
        loadNode986();
        loadNode987();
        loadNode988();
        loadNode989();
        loadNode990();
        loadNode991();
        loadNode992();
        loadNode993();
        loadNode994();
        loadNode995();
        loadNode996();
        loadNode997();
        loadNode998();
        loadNode999();
        loadNode1000();
        loadNode1001();
        loadNode1002();
        loadNode1003();
        loadNode1004();
        loadNode1005();
        loadNode1006();
        loadNode1007();
        loadNode1008();
        loadNode1009();
        loadNode1010();
        loadNode1011();
        loadNode1012();
        loadNode1013();
        loadNode1014();
        loadNode1015();
        loadNode1016();
        loadNode1017();
        loadNode1018();
        loadNode1019();
        loadNode1020();
        loadNode1021();
        loadNode1022();
        loadNode1023();
        loadNode1024();
        loadNode1025();
        loadNode1026();
        loadNode1027();
        loadNode1028();
        loadNode1029();
        loadNode1030();
        loadNode1031();
        loadNode1032();
        loadNode1033();
        loadNode1034();
        loadNode1035();
        loadNode1036();
        loadNode1037();
        loadNode1038();
        loadNode1039();
        loadNode1040();
        loadNode1041();
        loadNode1042();
        loadNode1043();
        loadNode1044();
        loadNode1045();
        loadNode1046();
        loadNode1047();
        loadNode1048();
        loadNode1049();
        loadNode1050();
        loadNode1051();
        loadNode1052();
        loadNode1053();
        loadNode1054();
        loadNode1055();
        loadNode1056();
        loadNode1057();
        loadNode1058();
        loadNode1059();
        loadNode1060();
        loadNode1061();
        loadNode1062();
        loadNode1063();
        loadNode1064();
        loadNode1065();
        loadNode1066();
        loadNode1067();
        loadNode1068();
        loadNode1069();
        loadNode1070();
        loadNode1071();
        loadNode1072();
        loadNode1073();
        loadNode1074();
        loadNode1075();
        loadNode1076();
        loadNode1077();
        loadNode1078();
        loadNode1079();
        loadNode1080();
        loadNode1081();
        loadNode1082();
        loadNode1083();
        loadNode1084();
        loadNode1085();
        loadNode1086();
        loadNode1087();
        loadNode1088();
        loadNode1089();
        loadNode1090();
        loadNode1091();
        loadNode1092();
        loadNode1093();
        loadNode1094();
        loadNode1095();
        loadNode1096();
        loadNode1097();
        loadNode1098();
        loadNode1099();
        loadNode1100();
        loadNode1101();
        loadNode1102();
        loadNode1103();
        loadNode1104();
        loadNode1105();
        loadNode1106();
        loadNode1107();
        loadNode1108();
        loadNode1109();
        loadNode1110();
        loadNode1111();
        loadNode1112();
        loadNode1113();
        loadNode1114();
        loadNode1115();
        loadNode1116();
        loadNode1117();
        loadNode1118();
        loadNode1119();
        loadNode1120();
        loadNode1121();
        loadNode1122();
        loadNode1123();
        loadNode1124();
        loadNode1125();
        loadNode1126();
        loadNode1127();
        loadNode1128();
        loadNode1129();
        loadNode1130();
        loadNode1131();
        loadNode1132();
        loadNode1133();
        loadNode1134();
        loadNode1135();
        loadNode1136();
        loadNode1137();
        loadNode1138();
        loadNode1139();
        loadNode1140();
        loadNode1141();
        loadNode1142();
        loadNode1143();
        loadNode1144();
        loadNode1145();
        loadNode1146();
        loadNode1147();
        loadNode1148();
        loadNode1149();
        loadNode1150();
        loadNode1151();
        loadNode1152();
        loadNode1153();
        loadNode1154();
        loadNode1155();
        loadNode1156();
        loadNode1157();
        loadNode1158();
        loadNode1159();
        loadNode1160();
        loadNode1161();
        loadNode1162();
        loadNode1163();
        loadNode1164();
        loadNode1165();
        loadNode1166();
        loadNode1167();
        loadNode1168();
        loadNode1169();
        loadNode1170();
        loadNode1171();
        loadNode1172();
        loadNode1173();
        loadNode1174();
        loadNode1175();
        loadNode1176();
        loadNode1177();
        loadNode1178();
        loadNode1179();
        loadNode1180();
        loadNode1181();
        loadNode1182();
        loadNode1183();
        loadNode1184();
        loadNode1185();
        loadNode1186();
        loadNode1187();
        loadNode1188();
        loadNode1189();
        loadNode1190();
        loadNode1191();
        loadNode1192();
        loadNode1193();
        loadNode1194();
        loadNode1195();
        loadNode1196();
        loadNode1197();
        loadNode1198();
        loadNode1199();
        loadNode1200();
        loadNode1201();
        loadNode1202();
        loadNode1203();
        loadNode1204();
        loadNode1205();
        loadNode1206();
        loadNode1207();
        loadNode1208();
        loadNode1209();
        loadNode1210();
        loadNode1211();
        loadNode1212();
        loadNode1213();
        loadNode1214();
        loadNode1215();
        loadNode1216();
        loadNode1217();
        loadNode1218();
        loadNode1219();
        loadNode1220();
        loadNode1221();
        loadNode1222();
        loadNode1223();
        loadNode1224();
        loadNode1225();
        loadNode1226();
        loadNode1227();
        loadNode1228();
        loadNode1229();
        loadNode1230();
        loadNode1231();
        loadNode1232();
        loadNode1233();
        loadNode1234();
        loadNode1235();
        loadNode1236();
        loadNode1237();
        loadNode1238();
        loadNode1239();
        loadNode1240();
        loadNode1241();
        loadNode1242();
        loadNode1243();
        loadNode1244();
        loadNode1245();
        loadNode1246();
        loadNode1247();
        loadNode1248();
        loadNode1249();
        loadNode1250();
        loadNode1251();
        loadNode1252();
        loadNode1253();
        loadNode1254();
        loadNode1255();
        loadNode1256();
        loadNode1257();
        loadNode1258();
        loadNode1259();
        loadNode1260();
        loadNode1261();
        loadNode1262();
        loadNode1263();
        loadNode1264();
        loadNode1265();
        loadNode1266();
        loadNode1267();
        loadNode1268();
        loadNode1269();
        loadNode1270();
        loadNode1271();
        loadNode1272();
        loadNode1273();
        loadNode1274();
        loadNode1275();
        loadNode1276();
        loadNode1277();
        loadNode1278();
        loadNode1279();
    }
}
