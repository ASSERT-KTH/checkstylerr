[
    {
        "line": "18",
        "column": "5",
        "severity": "error",
        "message": "Class 'SetStartCommand' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SetStartCommand' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "23",
        "column": "5",
        "severity": "error",
        "message": "Class 'SetStartCommand' looks like designed for extension (can be subclassed), but the method 'getAliases' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SetStartCommand' final or making the method 'getAliases' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "28",
        "column": "5",
        "severity": "error",
        "message": "Class 'SetStartCommand' looks like designed for extension (can be subclassed), but the method 'canBeConsole' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SetStartCommand' final or making the method 'canBeConsole' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "33",
        "column": "5",
        "severity": "error",
        "message": "Class 'SetStartCommand' looks like designed for extension (can be subclassed), but the method 'getDescription' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SetStartCommand' final or making the method 'getDescription' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "35",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 119).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "38",
        "column": "5",
        "severity": "error",
        "message": "Class 'SetStartCommand' looks like designed for extension (can be subclassed), but the method 'getParameters' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SetStartCommand' final or making the method 'getParameters' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "43",
        "column": "5",
        "severity": "error",
        "message": "Class 'SetStartCommand' looks like designed for extension (can be subclassed), but the method 'getUsage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SetStartCommand' final or making the method 'getUsage' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "50",
        "column": "5",
        "severity": "error",
        "message": "Class 'SetStartCommand' looks like designed for extension (can be subclassed), but the method 'getPermissionMessage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SetStartCommand' final or making the method 'getPermissionMessage' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "55",
        "column": "5",
        "severity": "error",
        "message": "Class 'SetStartCommand' looks like designed for extension (can be subclassed), but the method 'getPermission' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SetStartCommand' final or making the method 'getPermission' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "60",
        "column": "5",
        "severity": "error",
        "message": "Class 'SetStartCommand' looks like designed for extension (can be subclassed), but the method 'onCommand' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SetStartCommand' final or making the method 'onCommand' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "61",
        "column": "30",
        "severity": "error",
        "message": "Parameter sender should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "61",
        "column": "52",
        "severity": "error",
        "message": "Parameter minigame should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "61",
        "column": "71",
        "severity": "error",
        "message": "Parameter label should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "61",
        "column": "85",
        "severity": "error",
        "message": "Parameter args should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "66",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 113).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "73",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 108).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "79",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 108).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "81",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 103).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "89",
        "column": "78",
        "severity": "error",
        "message": "'+' should be on a new line.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
    },
    {
        "line": "90",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 129).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "98",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 107).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "100",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 102).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "105",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 142).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "105",
        "column": "142",
        "severity": "error",
        "message": "'+' should be on a new line.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
    },
    {
        "line": "110",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 107).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "116",
        "column": "5",
        "severity": "error",
        "message": "Class 'SetStartCommand' looks like designed for extension (can be subclassed), but the method 'onTabComplete' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SetStartCommand' final or making the method 'onTabComplete' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "117",
        "column": "39",
        "severity": "error",
        "message": "Parameter sender should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "117",
        "column": "61",
        "severity": "error",
        "message": "Parameter minigame should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "118",
        "column": "39",
        "severity": "error",
        "message": "Parameter alias should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "118",
        "column": "53",
        "severity": "error",
        "message": "Parameter args should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "119",
        "severity": "error",
        "message": "'if' construct must use '{}'s.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.NeedBracesCheck"
    },
    {
        "line": "120",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 105).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "121",
        "severity": "error",
        "message": "'if' construct must use '{}'s.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.NeedBracesCheck"
    }
]