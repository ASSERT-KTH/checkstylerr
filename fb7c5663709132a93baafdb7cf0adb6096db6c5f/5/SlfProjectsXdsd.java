/*
 * This file is generated by jOOQ.
 */
package com.selfxdsd.storage.generated.jooq.tables;


import com.selfxdsd.storage.generated.jooq.Indexes;
import com.selfxdsd.storage.generated.jooq.Keys;
import com.selfxdsd.storage.generated.jooq.SelfXdsd;
import com.selfxdsd.storage.generated.jooq.tables.records.SlfProjectsXdsdRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row5;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SlfProjectsXdsd extends TableImpl<SlfProjectsXdsdRecord> {

    private static final long serialVersionUID = -102054943;

    /**
     * The reference instance of <code>self_xdsd.slf_projects_xdsd</code>
     */
    public static final SlfProjectsXdsd SLF_PROJECTS_XDSD = new SlfProjectsXdsd();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SlfProjectsXdsdRecord> getRecordType() {
        return SlfProjectsXdsdRecord.class;
    }

    /**
     * The column <code>self_xdsd.slf_projects_xdsd.repo_fullname</code>.
     */
    public final TableField<SlfProjectsXdsdRecord, String> REPO_FULLNAME = createField(DSL.name("repo_fullname"), org.jooq.impl.SQLDataType.VARCHAR(256).nullable(false), this, "");

    /**
     * The column <code>self_xdsd.slf_projects_xdsd.provider</code>.
     */
    public final TableField<SlfProjectsXdsdRecord, String> PROVIDER = createField(DSL.name("provider"), org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "");

    /**
     * The column <code>self_xdsd.slf_projects_xdsd.username</code>.
     */
    public final TableField<SlfProjectsXdsdRecord, String> USERNAME = createField(DSL.name("username"), org.jooq.impl.SQLDataType.VARCHAR(100).nullable(false), this, "");

    /**
     * The column <code>self_xdsd.slf_projects_xdsd.pmid</code>.
     */
    public final TableField<SlfProjectsXdsdRecord, Integer> PMID = createField(DSL.name("pmid"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>self_xdsd.slf_projects_xdsd.webhook_token</code>.
     */
    public final TableField<SlfProjectsXdsdRecord, String> WEBHOOK_TOKEN = createField(DSL.name("webhook_token"), org.jooq.impl.SQLDataType.VARCHAR(256).nullable(false), this, "");

    /**
     * Create a <code>self_xdsd.slf_projects_xdsd</code> table reference
     */
    public SlfProjectsXdsd() {
        this(DSL.name("slf_projects_xdsd"), null);
    }

    /**
     * Create an aliased <code>self_xdsd.slf_projects_xdsd</code> table reference
     */
    public SlfProjectsXdsd(String alias) {
        this(DSL.name(alias), SLF_PROJECTS_XDSD);
    }

    /**
     * Create an aliased <code>self_xdsd.slf_projects_xdsd</code> table reference
     */
    public SlfProjectsXdsd(Name alias) {
        this(alias, SLF_PROJECTS_XDSD);
    }

    private SlfProjectsXdsd(Name alias, Table<SlfProjectsXdsdRecord> aliased) {
        this(alias, aliased, null);
    }

    private SlfProjectsXdsd(Name alias, Table<SlfProjectsXdsdRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> SlfProjectsXdsd(Table<O> child, ForeignKey<O, SlfProjectsXdsdRecord> key) {
        super(child, key, SLF_PROJECTS_XDSD);
    }

    @Override
    public Schema getSchema() {
        return SelfXdsd.SELF_XDSD;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.SLF_PROJECTS_XDSD_OWNER_IDX, Indexes.SLF_PROJECTS_XDSD_PM_IDX, Indexes.SLF_PROJECTS_XDSD_PROJECT_IDX);
    }

    @Override
    public UniqueKey<SlfProjectsXdsdRecord> getPrimaryKey() {
        return Keys.KEY_SLF_PROJECTS_XDSD_PRIMARY;
    }

    @Override
    public List<UniqueKey<SlfProjectsXdsdRecord>> getKeys() {
        return Arrays.<UniqueKey<SlfProjectsXdsdRecord>>asList(Keys.KEY_SLF_PROJECTS_XDSD_PRIMARY);
    }

    @Override
    public List<ForeignKey<SlfProjectsXdsdRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<SlfProjectsXdsdRecord, ?>>asList(Keys.OWNER, Keys.PM);
    }

    public SlfUsersXdsd slfUsersXdsd() {
        return new SlfUsersXdsd(this, Keys.OWNER);
    }

    public SlfPmsXdsd slfPmsXdsd() {
        return new SlfPmsXdsd(this, Keys.PM);
    }

    @Override
    public SlfProjectsXdsd as(String alias) {
        return new SlfProjectsXdsd(DSL.name(alias), this);
    }

    @Override
    public SlfProjectsXdsd as(Name alias) {
        return new SlfProjectsXdsd(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SlfProjectsXdsd rename(String name) {
        return new SlfProjectsXdsd(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SlfProjectsXdsd rename(Name name) {
        return new SlfProjectsXdsd(name, null);
    }

    // -------------------------------------------------------------------------
    // Row5 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row5<String, String, String, Integer, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }
}
