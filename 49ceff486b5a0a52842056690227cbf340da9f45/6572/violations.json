[
    {
        "line": "35",
        "severity": "error",
        "message": "Type Javadoc comment is missing @param <K> tag.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck"
    },
    {
        "line": "35",
        "severity": "error",
        "message": "Type Javadoc comment is missing @param <V> tag.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck"
    },
    {
        "line": "37",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "37",
        "column": "12",
        "severity": "error",
        "message": "Variable 'keySet' must be private and have accessor methods.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheck"
    },
    {
        "line": "40",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "40",
        "column": "19",
        "severity": "error",
        "message": "Variable 'valuesCollection' must be private and have accessor methods.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheck"
    },
    {
        "line": "48",
        "severity": "error",
        "message": "Type Javadoc comment is missing @param <K> tag.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck"
    },
    {
        "line": "48",
        "severity": "error",
        "message": "Type Javadoc comment is missing @param <V> tag.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck"
    },
    {
        "line": "52",
        "column": "9",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "53",
        "column": "9",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "55",
        "column": "37",
        "severity": "error",
        "message": "Parameter theKey should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "55",
        "column": "47",
        "severity": "error",
        "message": "Parameter theValue should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "63",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 83).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "63",
        "column": "37",
        "severity": "error",
        "message": "Parameter copyFrom should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "63",
        "column": "73",
        "severity": "error",
        "message": "Expected @param tag for 'copyFrom'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "68",
        "column": "9",
        "severity": "error",
        "message": "Class 'SimpleImmutableEntry' looks like designed for extension (can be subclassed), but the method 'getKey' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SimpleImmutableEntry' final or making the method 'getKey' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "72",
        "column": "9",
        "severity": "error",
        "message": "Class 'SimpleImmutableEntry' looks like designed for extension (can be subclassed), but the method 'getValue' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SimpleImmutableEntry' final or making the method 'getValue' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "80",
        "severity": "error",
        "message": "Expected @return tag.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "80",
        "column": "27",
        "severity": "error",
        "message": "Parameter object should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "80",
        "column": "29",
        "severity": "error",
        "message": "Expected @param tag for 'object'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "84",
        "column": "9",
        "severity": "error",
        "message": "Class 'SimpleImmutableEntry' looks like designed for extension (can be subclassed), but the method 'equals' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SimpleImmutableEntry' final or making the method 'equals' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "84",
        "column": "41",
        "severity": "error",
        "message": "Parameter object should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "90",
        "column": "37",
        "severity": "error",
        "message": "Avoid inline conditionals.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.AvoidInlineConditionalsCheck"
    },
    {
        "line": "92",
        "column": "43",
        "severity": "error",
        "message": "Avoid inline conditionals.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.AvoidInlineConditionalsCheck"
    },
    {
        "line": "98",
        "column": "9",
        "severity": "error",
        "message": "Class 'SimpleImmutableEntry' looks like designed for extension (can be subclassed), but the method 'hashCode' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SimpleImmutableEntry' final or making the method 'hashCode' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "99",
        "column": "33",
        "severity": "error",
        "message": "Avoid inline conditionals.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.AvoidInlineConditionalsCheck"
    },
    {
        "line": "100",
        "column": "38",
        "severity": "error",
        "message": "Avoid inline conditionals.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.AvoidInlineConditionalsCheck"
    },
    {
        "line": "103",
        "column": "9",
        "severity": "error",
        "message": "Class 'SimpleImmutableEntry' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SimpleImmutableEntry' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "113",
        "severity": "error",
        "message": "Type Javadoc comment is missing @param <K> tag.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck"
    },
    {
        "line": "113",
        "severity": "error",
        "message": "Type Javadoc comment is missing @param <V> tag.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck"
    },
    {
        "line": "117",
        "column": "9",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "118",
        "column": "9",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "120",
        "column": "28",
        "severity": "error",
        "message": "Parameter theKey should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "120",
        "column": "38",
        "severity": "error",
        "message": "Parameter theValue should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "128",
        "column": "28",
        "severity": "error",
        "message": "Parameter copyFrom should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "128",
        "column": "64",
        "severity": "error",
        "message": "Expected @param tag for 'copyFrom'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "133",
        "column": "9",
        "severity": "error",
        "message": "Class 'SimpleEntry' looks like designed for extension (can be subclassed), but the method 'getKey' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SimpleEntry' final or making the method 'getKey' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "137",
        "column": "9",
        "severity": "error",
        "message": "Class 'SimpleEntry' looks like designed for extension (can be subclassed), but the method 'getValue' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SimpleEntry' final or making the method 'getValue' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "141",
        "column": "9",
        "severity": "error",
        "message": "Class 'SimpleEntry' looks like designed for extension (can be subclassed), but the method 'setValue' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SimpleEntry' final or making the method 'setValue' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "141",
        "column": "27",
        "severity": "error",
        "message": "Parameter object should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "147",
        "column": "9",
        "severity": "error",
        "message": "Class 'SimpleEntry' looks like designed for extension (can be subclassed), but the method 'equals' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SimpleEntry' final or making the method 'equals' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "147",
        "column": "41",
        "severity": "error",
        "message": "Parameter object should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "153",
        "column": "37",
        "severity": "error",
        "message": "Avoid inline conditionals.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.AvoidInlineConditionalsCheck"
    },
    {
        "line": "155",
        "column": "43",
        "severity": "error",
        "message": "Avoid inline conditionals.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.AvoidInlineConditionalsCheck"
    },
    {
        "line": "161",
        "column": "9",
        "severity": "error",
        "message": "Class 'SimpleEntry' looks like designed for extension (can be subclassed), but the method 'hashCode' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SimpleEntry' final or making the method 'hashCode' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "162",
        "column": "33",
        "severity": "error",
        "message": "Avoid inline conditionals.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.AvoidInlineConditionalsCheck"
    },
    {
        "line": "163",
        "column": "38",
        "severity": "error",
        "message": "Avoid inline conditionals.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.AvoidInlineConditionalsCheck"
    },
    {
        "line": "166",
        "column": "9",
        "severity": "error",
        "message": "Class 'SimpleEntry' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SimpleEntry' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "189",
        "column": "32",
        "severity": "error",
        "message": "Parameter key should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "213",
        "column": "34",
        "severity": "error",
        "message": "Parameter value should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "242",
        "column": "37",
        "severity": "error",
        "message": "Parameter object should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "281",
        "column": "18",
        "severity": "error",
        "message": "Parameter key should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "334",
        "column": "51",
        "severity": "error",
        "message": "Parameter object should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "344",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 86).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "344",
        "column": "51",
        "severity": "error",
        "message": "Variable 'setIterator' must be private and have accessor methods.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheck"
    },
    {
        "line": "369",
        "column": "18",
        "severity": "error",
        "message": "Parameter key should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "369",
        "column": "25",
        "severity": "error",
        "message": "Parameter value should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "379",
        "column": "24",
        "severity": "error",
        "message": "Parameter map should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "391",
        "column": "21",
        "severity": "error",
        "message": "Parameter key should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "434",
        "column": "59",
        "severity": "error",
        "message": "'28' is a magic number.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck"
    },
    {
        "line": "473",
        "column": "51",
        "severity": "error",
        "message": "Parameter object should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "479",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 86).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "479",
        "column": "51",
        "severity": "error",
        "message": "Variable 'setIterator' must be private and have accessor methods.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheck"
    },
    {
        "line": "499",
        "column": "5",
        "severity": "error",
        "message": "Class 'AbstractMap' looks like designed for extension (can be subclassed), but the method 'clone' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AbstractMap' final or making the method 'clone' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    }
]