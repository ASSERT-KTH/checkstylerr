[
    {
        "line": "3",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - beaver.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "3",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - java.io.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "3",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - java.util.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "3",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - java.util.zip.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "3",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - soot.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "3",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - soot.jimple.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "3",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - soot.util.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "3",
        "column": "8",
        "severity": "error",
        "message": "Unused import - java.util.HashSet.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck"
    },
    {
        "line": "3",
        "column": "25",
        "severity": "error",
        "message": "';' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "3",
        "column": "33",
        "severity": "error",
        "message": "Unused import - java.util.LinkedHashSet.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck"
    },
    {
        "line": "3",
        "column": "56",
        "severity": "error",
        "message": "';' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "3",
        "column": "64",
        "severity": "error",
        "message": "Unused import - java.io.File.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck"
    },
    {
        "line": "3",
        "column": "76",
        "severity": "error",
        "message": "';' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "3",
        "column": "95",
        "severity": "error",
        "message": "';' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "3",
        "column": "111",
        "severity": "error",
        "message": "';' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "3",
        "column": "119",
        "severity": "error",
        "message": "Unused import - java.util.ArrayList.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck"
    },
    {
        "line": "3",
        "column": "138",
        "severity": "error",
        "message": "';' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "3",
        "column": "161",
        "severity": "error",
        "message": "';' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "3",
        "column": "178",
        "severity": "error",
        "message": "';' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "3",
        "column": "186",
        "severity": "error",
        "message": "Unused import - java.io.FileNotFoundException.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck"
    },
    {
        "line": "3",
        "column": "215",
        "severity": "error",
        "message": "';' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "3",
        "column": "223",
        "severity": "error",
        "message": "Unused import - java.util.Collection.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck"
    },
    {
        "line": "3",
        "column": "243",
        "severity": "error",
        "message": "';' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "3",
        "column": "257",
        "severity": "error",
        "message": "';' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "3",
        "column": "276",
        "severity": "error",
        "message": "';' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "3",
        "column": "297",
        "severity": "error",
        "message": "';' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "3",
        "column": "305",
        "severity": "error",
        "message": "Unused import - soot.coffi.ClassFile.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck"
    },
    {
        "line": "3",
        "column": "325",
        "severity": "error",
        "message": "';' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "3",
        "column": "333",
        "severity": "error",
        "message": "Unused import - soot.coffi.method_info.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck"
    },
    {
        "line": "3",
        "column": "355",
        "severity": "error",
        "message": "';' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "3",
        "column": "363",
        "severity": "error",
        "message": "Unused import - soot.coffi.CONSTANT_Utf8_info.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck"
    },
    {
        "line": "3",
        "column": "392",
        "severity": "error",
        "message": "';' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "3",
        "column": "400",
        "severity": "error",
        "message": "Unused import - soot.tagkit.SourceFileTag.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck"
    },
    {
        "line": "3",
        "column": "425",
        "severity": "error",
        "message": "';' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "3",
        "column": "433",
        "severity": "error",
        "message": "Unused import - soot.coffi.CoffiMethodSource.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck"
    },
    {
        "line": "7",
        "column": "5",
        "severity": "error",
        "message": "Class 'IntegralType' looks like designed for extension (can be subclassed), but the method 'flushCache' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'IntegralType' final or making the method 'flushCache' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "10",
        "column": "5",
        "severity": "error",
        "message": "Class 'IntegralType' looks like designed for extension (can be subclassed), but the method 'flushCollectionCache' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'IntegralType' final or making the method 'flushCollectionCache' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "13",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 110).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "13",
        "column": "6",
        "severity": "error",
        "message": "Class 'IntegralType' looks like designed for extension (can be subclassed), but the method 'clone' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'IntegralType' final or making the method 'clone' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "14",
        "column": "42",
        "severity": "error",
        "message": "'typecast' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "34",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 85).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "34",
        "column": "25",
        "severity": "error",
        "message": "Parameter p0 should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "34",
        "column": "39",
        "severity": "error",
        "message": "Parameter p1 should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "34",
        "column": "50",
        "severity": "error",
        "message": "Parameter p2 should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "34",
        "column": "66",
        "severity": "error",
        "message": "Parameter p3 should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "45",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 92).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "45",
        "column": "25",
        "severity": "error",
        "message": "Parameter p0 should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "45",
        "column": "39",
        "severity": "error",
        "message": "Parameter p1 should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "45",
        "column": "57",
        "severity": "error",
        "message": "Parameter p2 should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "45",
        "column": "73",
        "severity": "error",
        "message": "Parameter p3 should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "55",
        "column": "3",
        "severity": "error",
        "message": "Class 'IntegralType' looks like designed for extension (can be subclassed), but the method 'numChildren' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'IntegralType' final or making the method 'numChildren' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "56",
        "column": "12",
        "severity": "error",
        "message": "'3' is a magic number.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck"
    },
    {
        "line": "61",
        "column": "5",
        "severity": "error",
        "message": "Class 'IntegralType' looks like designed for extension (can be subclassed), but the method 'mayHaveRewrite' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'IntegralType' final or making the method 'mayHaveRewrite' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "67",
        "column": "5",
        "severity": "error",
        "message": "Class 'IntegralType' looks like designed for extension (can be subclassed), but the method 'setModifiers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'IntegralType' final or making the method 'setModifiers' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "67",
        "column": "30",
        "severity": "error",
        "message": "Parameter node should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "73",
        "column": "5",
        "severity": "error",
        "message": "Class 'IntegralType' looks like designed for extension (can be subclassed), but the method 'getModifiers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'IntegralType' final or making the method 'getModifiers' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "74",
        "column": "26",
        "severity": "error",
        "message": "'typecast' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "80",
        "column": "5",
        "severity": "error",
        "message": "Class 'IntegralType' looks like designed for extension (can be subclassed), but the method 'getModifiersNoTransform' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'IntegralType' final or making the method 'getModifiersNoTransform' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "81",
        "column": "26",
        "severity": "error",
        "message": "'typecast' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "86",
        "column": "5",
        "severity": "error",
        "message": "Class 'IntegralType' looks like designed for extension (can be subclassed), but the method 'setID' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'IntegralType' final or making the method 'setID' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "86",
        "column": "23",
        "severity": "error",
        "message": "Parameter value should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "92",
        "column": "5",
        "severity": "error",
        "message": "Class 'IntegralType' looks like designed for extension (can be subclassed), but the method 'setID' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'IntegralType' final or making the method 'setID' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "92",
        "column": "23",
        "severity": "error",
        "message": "Parameter symbol should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "93",
        "severity": "error",
        "message": "'if' construct must use '{}'s.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.NeedBracesCheck"
    },
    {
        "line": "93",
        "column": "9",
        "severity": "error",
        "message": "'if' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "94",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 92).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "95",
        "column": "33",
        "severity": "error",
        "message": "'typecast' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "102",
        "column": "5",
        "severity": "error",
        "message": "Class 'IntegralType' looks like designed for extension (can be subclassed), but the method 'getID' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'IntegralType' final or making the method 'getID' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "103",
        "column": "39",
        "severity": "error",
        "message": "Avoid inline conditionals.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.AvoidInlineConditionalsCheck"
    },
    {
        "line": "108",
        "column": "5",
        "severity": "error",
        "message": "Class 'IntegralType' looks like designed for extension (can be subclassed), but the method 'setSuperClassAccessOpt' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'IntegralType' final or making the method 'setSuperClassAccessOpt' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "108",
        "column": "40",
        "severity": "error",
        "message": "Parameter opt should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "115",
        "column": "5",
        "severity": "error",
        "message": "Class 'IntegralType' looks like designed for extension (can be subclassed), but the method 'hasSuperClassAccess' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'IntegralType' final or making the method 'hasSuperClassAccess' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "122",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 84).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "122",
        "column": "6",
        "severity": "error",
        "message": "Class 'IntegralType' looks like designed for extension (can be subclassed), but the method 'getSuperClassAccess' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'IntegralType' final or making the method 'getSuperClassAccess' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "123",
        "column": "23",
        "severity": "error",
        "message": "'typecast' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "129",
        "column": "5",
        "severity": "error",
        "message": "Class 'IntegralType' looks like designed for extension (can be subclassed), but the method 'setSuperClassAccess' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'IntegralType' final or making the method 'setSuperClassAccess' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "129",
        "column": "37",
        "severity": "error",
        "message": "Parameter node should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "135",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 92).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "135",
        "column": "6",
        "severity": "error",
        "message": "Class 'IntegralType' looks like designed for extension (can be subclassed), but the method 'getSuperClassAccessOpt' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'IntegralType' final or making the method 'getSuperClassAccessOpt' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "136",
        "column": "28",
        "severity": "error",
        "message": "'typecast' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "142",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 103).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "142",
        "column": "6",
        "severity": "error",
        "message": "Class 'IntegralType' looks like designed for extension (can be subclassed), but the method 'getSuperClassAccessOptNoTransform' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'IntegralType' final or making the method 'getSuperClassAccessOptNoTransform' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "143",
        "column": "28",
        "severity": "error",
        "message": "'typecast' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "148",
        "column": "5",
        "severity": "error",
        "message": "Class 'IntegralType' looks like designed for extension (can be subclassed), but the method 'setBodyDeclList' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'IntegralType' final or making the method 'setBodyDeclList' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "148",
        "column": "33",
        "severity": "error",
        "message": "Parameter list should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "155",
        "column": "5",
        "severity": "error",
        "message": "Class 'IntegralType' looks like designed for extension (can be subclassed), but the method 'getNumBodyDecl' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'IntegralType' final or making the method 'getNumBodyDecl' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "162",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 83).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "162",
        "column": "6",
        "severity": "error",
        "message": "Class 'IntegralType' looks like designed for extension (can be subclassed), but the method 'getBodyDecl' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'IntegralType' final or making the method 'getBodyDecl' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "162",
        "column": "76",
        "severity": "error",
        "message": "Parameter i should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "163",
        "column": "25",
        "severity": "error",
        "message": "'typecast' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "169",
        "column": "5",
        "severity": "error",
        "message": "Class 'IntegralType' looks like designed for extension (can be subclassed), but the method 'addBodyDecl' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'IntegralType' final or making the method 'addBodyDecl' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "169",
        "column": "29",
        "severity": "error",
        "message": "Parameter node should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "170",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 115).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "170",
        "column": "65",
        "severity": "error",
        "message": "Avoid inline conditionals.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.AvoidInlineConditionalsCheck"
    },
    {
        "line": "177",
        "column": "5",
        "severity": "error",
        "message": "Class 'IntegralType' looks like designed for extension (can be subclassed), but the method 'addBodyDeclNoTransform' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'IntegralType' final or making the method 'addBodyDeclNoTransform' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "177",
        "column": "40",
        "severity": "error",
        "message": "Parameter node should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "185",
        "column": "5",
        "severity": "error",
        "message": "Class 'IntegralType' looks like designed for extension (can be subclassed), but the method 'setBodyDecl' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'IntegralType' final or making the method 'setBodyDecl' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "185",
        "column": "29",
        "severity": "error",
        "message": "Parameter node should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "185",
        "column": "44",
        "severity": "error",
        "message": "Parameter i should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "192",
        "column": "5",
        "severity": "error",
        "message": "Class 'IntegralType' looks like designed for extension (can be subclassed), but the method 'getBodyDecls' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'IntegralType' final or making the method 'getBodyDecls' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "198",
        "column": "5",
        "severity": "error",
        "message": "Class 'IntegralType' looks like designed for extension (can be subclassed), but the method 'getBodyDeclsNoTransform' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'IntegralType' final or making the method 'getBodyDeclsNoTransform' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "205",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 88).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "205",
        "column": "6",
        "severity": "error",
        "message": "Class 'IntegralType' looks like designed for extension (can be subclassed), but the method 'getBodyDeclList' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'IntegralType' final or making the method 'getBodyDeclList' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "206",
        "column": "46",
        "severity": "error",
        "message": "'typecast' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "214",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 99).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "214",
        "column": "6",
        "severity": "error",
        "message": "Class 'IntegralType' looks like designed for extension (can be subclassed), but the method 'getBodyDeclListNoTransform' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'IntegralType' final or making the method 'getBodyDeclListNoTransform' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "215",
        "column": "31",
        "severity": "error",
        "message": "'typecast' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "219",
        "column": "2",
        "severity": "error",
        "message": "Class 'IntegralType' looks like designed for extension (can be subclassed), but the method 'cast' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'IntegralType' final or making the method 'cast' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "219",
        "column": "68",
        "severity": "error",
        "message": "Parameter c should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "221",
        "column": "18",
        "severity": "error",
        "message": "Name 'cast_Constant_value' must match pattern '^[a-z][a-zA-Z0-9]*$'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.naming.LocalVariableNameCheck"
    },
    {
        "line": "225",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 89).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "225",
        "column": "22",
        "severity": "error",
        "message": "Name 'cast_compute' must match pattern '^[a-z][a-zA-Z0-9]*$'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.naming.MethodNameCheck"
    },
    {
        "line": "225",
        "column": "35",
        "severity": "error",
        "message": "Parameter c should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "225",
        "column": "47",
        "severity": "error",
        "message": "'{' at column 47 should have line break after.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
    },
    {
        "line": "228",
        "column": "2",
        "severity": "error",
        "message": "Class 'IntegralType' looks like designed for extension (can be subclassed), but the method 'plus' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'IntegralType' final or making the method 'plus' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "228",
        "column": "68",
        "severity": "error",
        "message": "Parameter c should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "230",
        "column": "18",
        "severity": "error",
        "message": "Name 'plus_Constant_value' must match pattern '^[a-z][a-zA-Z0-9]*$'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.naming.LocalVariableNameCheck"
    },
    {
        "line": "234",
        "column": "22",
        "severity": "error",
        "message": "Name 'plus_compute' must match pattern '^[a-z][a-zA-Z0-9]*$'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.naming.MethodNameCheck"
    },
    {
        "line": "234",
        "column": "35",
        "severity": "error",
        "message": "Parameter c should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "234",
        "column": "47",
        "severity": "error",
        "message": "'{' at column 47 should have line break after.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
    },
    {
        "line": "237",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 81).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "237",
        "column": "2",
        "severity": "error",
        "message": "Class 'IntegralType' looks like designed for extension (can be subclassed), but the method 'minus' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'IntegralType' final or making the method 'minus' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "237",
        "column": "69",
        "severity": "error",
        "message": "Parameter c should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "239",
        "column": "18",
        "severity": "error",
        "message": "Name 'minus_Constant_value' must match pattern '^[a-z][a-zA-Z0-9]*$'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.naming.LocalVariableNameCheck"
    },
    {
        "line": "243",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 91).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "243",
        "column": "22",
        "severity": "error",
        "message": "Name 'minus_compute' must match pattern '^[a-z][a-zA-Z0-9]*$'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.naming.MethodNameCheck"
    },
    {
        "line": "243",
        "column": "36",
        "severity": "error",
        "message": "Parameter c should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "243",
        "column": "48",
        "severity": "error",
        "message": "'{' at column 48 should have line break after.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
    },
    {
        "line": "246",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 82).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "246",
        "column": "2",
        "severity": "error",
        "message": "Class 'IntegralType' looks like designed for extension (can be subclassed), but the method 'bitNot' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'IntegralType' final or making the method 'bitNot' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "246",
        "column": "70",
        "severity": "error",
        "message": "Parameter c should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "248",
        "column": "18",
        "severity": "error",
        "message": "Name 'bitNot_Constant_value' must match pattern '^[a-z][a-zA-Z0-9]*$'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.naming.LocalVariableNameCheck"
    },
    {
        "line": "252",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 92).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "252",
        "column": "22",
        "severity": "error",
        "message": "Name 'bitNot_compute' must match pattern '^[a-z][a-zA-Z0-9]*$'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.naming.MethodNameCheck"
    },
    {
        "line": "252",
        "column": "37",
        "severity": "error",
        "message": "Parameter c should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "252",
        "column": "49",
        "severity": "error",
        "message": "'{' at column 49 should have line break after.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
    },
    {
        "line": "255",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 93).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "255",
        "column": "2",
        "severity": "error",
        "message": "Class 'IntegralType' looks like designed for extension (can be subclassed), but the method 'mul' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'IntegralType' final or making the method 'mul' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "255",
        "column": "67",
        "severity": "error",
        "message": "Parameter c1 should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "255",
        "column": "80",
        "severity": "error",
        "message": "Parameter c2 should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "257",
        "column": "18",
        "severity": "error",
        "message": "Name 'mul_Constant_Constant_value' must match pattern '^[a-z][a-zA-Z0-9]*$'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.naming.LocalVariableNameCheck"
    },
    {
        "line": "261",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 119).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "261",
        "column": "22",
        "severity": "error",
        "message": "Name 'mul_compute' must match pattern '^[a-z][a-zA-Z0-9]*$'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.naming.MethodNameCheck"
    },
    {
        "line": "261",
        "column": "34",
        "severity": "error",
        "message": "Parameter c1 should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "261",
        "column": "47",
        "severity": "error",
        "message": "Parameter c2 should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "261",
        "column": "60",
        "severity": "error",
        "message": "'{' at column 60 should have line break after.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
    },
    {
        "line": "264",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 93).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "264",
        "column": "2",
        "severity": "error",
        "message": "Class 'IntegralType' looks like designed for extension (can be subclassed), but the method 'div' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'IntegralType' final or making the method 'div' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "264",
        "column": "67",
        "severity": "error",
        "message": "Parameter c1 should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "264",
        "column": "80",
        "severity": "error",
        "message": "Parameter c2 should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "266",
        "column": "18",
        "severity": "error",
        "message": "Name 'div_Constant_Constant_value' must match pattern '^[a-z][a-zA-Z0-9]*$'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.naming.LocalVariableNameCheck"
    },
    {
        "line": "270",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 119).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "270",
        "column": "22",
        "severity": "error",
        "message": "Name 'div_compute' must match pattern '^[a-z][a-zA-Z0-9]*$'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.naming.MethodNameCheck"
    },
    {
        "line": "270",
        "column": "34",
        "severity": "error",
        "message": "Parameter c1 should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "270",
        "column": "47",
        "severity": "error",
        "message": "Parameter c2 should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "270",
        "column": "60",
        "severity": "error",
        "message": "'{' at column 60 should have line break after.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
    },
    {
        "line": "273",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 93).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "273",
        "column": "2",
        "severity": "error",
        "message": "Class 'IntegralType' looks like designed for extension (can be subclassed), but the method 'mod' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'IntegralType' final or making the method 'mod' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "273",
        "column": "67",
        "severity": "error",
        "message": "Parameter c1 should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "273",
        "column": "80",
        "severity": "error",
        "message": "Parameter c2 should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "275",
        "column": "18",
        "severity": "error",
        "message": "Name 'mod_Constant_Constant_value' must match pattern '^[a-z][a-zA-Z0-9]*$'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.naming.LocalVariableNameCheck"
    },
    {
        "line": "279",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 119).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "279",
        "column": "22",
        "severity": "error",
        "message": "Name 'mod_compute' must match pattern '^[a-z][a-zA-Z0-9]*$'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.naming.MethodNameCheck"
    },
    {
        "line": "279",
        "column": "34",
        "severity": "error",
        "message": "Parameter c1 should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "279",
        "column": "47",
        "severity": "error",
        "message": "Parameter c2 should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "279",
        "column": "60",
        "severity": "error",
        "message": "'{' at column 60 should have line break after.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
    },
    {
        "line": "282",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 93).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "282",
        "column": "2",
        "severity": "error",
        "message": "Class 'IntegralType' looks like designed for extension (can be subclassed), but the method 'add' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'IntegralType' final or making the method 'add' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "282",
        "column": "67",
        "severity": "error",
        "message": "Parameter c1 should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "282",
        "column": "80",
        "severity": "error",
        "message": "Parameter c2 should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "284",
        "column": "18",
        "severity": "error",
        "message": "Name 'add_Constant_Constant_value' must match pattern '^[a-z][a-zA-Z0-9]*$'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.naming.LocalVariableNameCheck"
    },
    {
        "line": "288",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 119).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "288",
        "column": "22",
        "severity": "error",
        "message": "Name 'add_compute' must match pattern '^[a-z][a-zA-Z0-9]*$'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.naming.MethodNameCheck"
    },
    {
        "line": "288",
        "column": "34",
        "severity": "error",
        "message": "Parameter c1 should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "288",
        "column": "47",
        "severity": "error",
        "message": "Parameter c2 should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "288",
        "column": "60",
        "severity": "error",
        "message": "'{' at column 60 should have line break after.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
    },
    {
        "line": "291",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 93).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "291",
        "column": "2",
        "severity": "error",
        "message": "Class 'IntegralType' looks like designed for extension (can be subclassed), but the method 'sub' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'IntegralType' final or making the method 'sub' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "291",
        "column": "67",
        "severity": "error",
        "message": "Parameter c1 should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "291",
        "column": "80",
        "severity": "error",
        "message": "Parameter c2 should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "293",
        "column": "18",
        "severity": "error",
        "message": "Name 'sub_Constant_Constant_value' must match pattern '^[a-z][a-zA-Z0-9]*$'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.naming.LocalVariableNameCheck"
    },
    {
        "line": "297",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 119).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "297",
        "column": "22",
        "severity": "error",
        "message": "Name 'sub_compute' must match pattern '^[a-z][a-zA-Z0-9]*$'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.naming.MethodNameCheck"
    },
    {
        "line": "297",
        "column": "34",
        "severity": "error",
        "message": "Parameter c1 should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "297",
        "column": "47",
        "severity": "error",
        "message": "Parameter c2 should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "297",
        "column": "60",
        "severity": "error",
        "message": "'{' at column 60 should have line break after.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
    },
    {
        "line": "300",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 96).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "300",
        "column": "2",
        "severity": "error",
        "message": "Class 'IntegralType' looks like designed for extension (can be subclassed), but the method 'lshift' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'IntegralType' final or making the method 'lshift' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "300",
        "column": "70",
        "severity": "error",
        "message": "Parameter c1 should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "300",
        "column": "83",
        "severity": "error",
        "message": "Parameter c2 should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "302",
        "column": "18",
        "severity": "error",
        "message": "Name 'lshift_Constant_Constant_value' must match pattern '^[a-z][a-zA-Z0-9]*$'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.naming.LocalVariableNameCheck"
    },
    {
        "line": "306",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 123).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "306",
        "column": "22",
        "severity": "error",
        "message": "Name 'lshift_compute' must match pattern '^[a-z][a-zA-Z0-9]*$'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.naming.MethodNameCheck"
    },
    {
        "line": "306",
        "column": "37",
        "severity": "error",
        "message": "Parameter c1 should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "306",
        "column": "50",
        "severity": "error",
        "message": "Parameter c2 should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "306",
        "column": "63",
        "severity": "error",
        "message": "'{' at column 63 should have line break after.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
    },
    {
        "line": "309",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 96).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "309",
        "column": "2",
        "severity": "error",
        "message": "Class 'IntegralType' looks like designed for extension (can be subclassed), but the method 'rshift' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'IntegralType' final or making the method 'rshift' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "309",
        "column": "70",
        "severity": "error",
        "message": "Parameter c1 should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "309",
        "column": "83",
        "severity": "error",
        "message": "Parameter c2 should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "311",
        "column": "18",
        "severity": "error",
        "message": "Name 'rshift_Constant_Constant_value' must match pattern '^[a-z][a-zA-Z0-9]*$'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.naming.LocalVariableNameCheck"
    },
    {
        "line": "315",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 123).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "315",
        "column": "22",
        "severity": "error",
        "message": "Name 'rshift_compute' must match pattern '^[a-z][a-zA-Z0-9]*$'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.naming.MethodNameCheck"
    },
    {
        "line": "315",
        "column": "37",
        "severity": "error",
        "message": "Parameter c1 should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "315",
        "column": "50",
        "severity": "error",
        "message": "Parameter c2 should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "315",
        "column": "63",
        "severity": "error",
        "message": "'{' at column 63 should have line break after.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
    },
    {
        "line": "318",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 97).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "318",
        "column": "2",
        "severity": "error",
        "message": "Class 'IntegralType' looks like designed for extension (can be subclassed), but the method 'urshift' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'IntegralType' final or making the method 'urshift' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "318",
        "column": "71",
        "severity": "error",
        "message": "Parameter c1 should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "318",
        "column": "84",
        "severity": "error",
        "message": "Parameter c2 should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "320",
        "column": "18",
        "severity": "error",
        "message": "Name 'urshift_Constant_Constant_value' must match pattern '^[a-z][a-zA-Z0-9]*$'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.naming.LocalVariableNameCheck"
    },
    {
        "line": "324",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 125).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "324",
        "column": "22",
        "severity": "error",
        "message": "Name 'urshift_compute' must match pattern '^[a-z][a-zA-Z0-9]*$'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.naming.MethodNameCheck"
    },
    {
        "line": "324",
        "column": "38",
        "severity": "error",
        "message": "Parameter c1 should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "324",
        "column": "51",
        "severity": "error",
        "message": "Parameter c2 should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "324",
        "column": "64",
        "severity": "error",
        "message": "'{' at column 64 should have line break after.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
    },
    {
        "line": "327",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 100).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "327",
        "column": "2",
        "severity": "error",
        "message": "Class 'IntegralType' looks like designed for extension (can be subclassed), but the method 'andBitwise' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'IntegralType' final or making the method 'andBitwise' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "327",
        "column": "74",
        "severity": "error",
        "message": "Parameter c1 should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "327",
        "column": "87",
        "severity": "error",
        "message": "Parameter c2 should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "329",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 81).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "329",
        "column": "18",
        "severity": "error",
        "message": "Name 'andBitwise_Constant_Constant_value' must match pattern '^[a-z][a-zA-Z0-9]*$'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.naming.LocalVariableNameCheck"
    },
    {
        "line": "333",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 126).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "333",
        "column": "22",
        "severity": "error",
        "message": "Name 'andBitwise_compute' must match pattern '^[a-z][a-zA-Z0-9]*$'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.naming.MethodNameCheck"
    },
    {
        "line": "333",
        "column": "41",
        "severity": "error",
        "message": "Parameter c1 should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "333",
        "column": "54",
        "severity": "error",
        "message": "Parameter c2 should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "333",
        "column": "67",
        "severity": "error",
        "message": "'{' at column 67 should have line break after.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
    },
    {
        "line": "336",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 100).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "336",
        "column": "2",
        "severity": "error",
        "message": "Class 'IntegralType' looks like designed for extension (can be subclassed), but the method 'xorBitwise' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'IntegralType' final or making the method 'xorBitwise' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "336",
        "column": "74",
        "severity": "error",
        "message": "Parameter c1 should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "336",
        "column": "87",
        "severity": "error",
        "message": "Parameter c2 should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "338",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 81).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "338",
        "column": "18",
        "severity": "error",
        "message": "Name 'xorBitwise_Constant_Constant_value' must match pattern '^[a-z][a-zA-Z0-9]*$'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.naming.LocalVariableNameCheck"
    },
    {
        "line": "342",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 126).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "342",
        "column": "22",
        "severity": "error",
        "message": "Name 'xorBitwise_compute' must match pattern '^[a-z][a-zA-Z0-9]*$'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.naming.MethodNameCheck"
    },
    {
        "line": "342",
        "column": "41",
        "severity": "error",
        "message": "Parameter c1 should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "342",
        "column": "54",
        "severity": "error",
        "message": "Parameter c2 should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "342",
        "column": "67",
        "severity": "error",
        "message": "'{' at column 67 should have line break after.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
    },
    {
        "line": "345",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 99).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "345",
        "column": "2",
        "severity": "error",
        "message": "Class 'IntegralType' looks like designed for extension (can be subclassed), but the method 'orBitwise' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'IntegralType' final or making the method 'orBitwise' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "345",
        "column": "73",
        "severity": "error",
        "message": "Parameter c1 should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "345",
        "column": "86",
        "severity": "error",
        "message": "Parameter c2 should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "347",
        "column": "18",
        "severity": "error",
        "message": "Name 'orBitwise_Constant_Constant_value' must match pattern '^[a-z][a-zA-Z0-9]*$'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.naming.LocalVariableNameCheck"
    },
    {
        "line": "351",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 125).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "351",
        "column": "22",
        "severity": "error",
        "message": "Name 'orBitwise_compute' must match pattern '^[a-z][a-zA-Z0-9]*$'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.naming.MethodNameCheck"
    },
    {
        "line": "351",
        "column": "40",
        "severity": "error",
        "message": "Parameter c1 should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "351",
        "column": "53",
        "severity": "error",
        "message": "Parameter c2 should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "351",
        "column": "66",
        "severity": "error",
        "message": "'{' at column 66 should have line break after.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
    },
    {
        "line": "354",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 118).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "354",
        "column": "2",
        "severity": "error",
        "message": "Class 'IntegralType' looks like designed for extension (can be subclassed), but the method 'questionColon' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'IntegralType' final or making the method 'questionColon' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "354",
        "column": "77",
        "severity": "error",
        "message": "Parameter cond should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "354",
        "column": "92",
        "severity": "error",
        "message": "Parameter c1 should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "354",
        "column": "105",
        "severity": "error",
        "message": "Parameter c2 should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "356",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 102).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "356",
        "column": "18",
        "severity": "error",
        "message": "Name 'questionColon_Constant_Constant_Constant_value' must match pattern '^[a-z][a-zA-Z0-9]*$'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.naming.LocalVariableNameCheck"
    },
    {
        "line": "360",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 166).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "360",
        "column": "22",
        "severity": "error",
        "message": "Name 'questionColon_compute' must match pattern '^[a-z][a-zA-Z0-9]*$'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.naming.MethodNameCheck"
    },
    {
        "line": "360",
        "column": "44",
        "severity": "error",
        "message": "Parameter cond should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "360",
        "column": "59",
        "severity": "error",
        "message": "Parameter c1 should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "360",
        "column": "72",
        "severity": "error",
        "message": "Parameter c2 should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "360",
        "column": "85",
        "severity": "error",
        "message": "'{' at column 85 should have line break after.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
    },
    {
        "line": "360",
        "column": "131",
        "severity": "error",
        "message": "Avoid inline conditionals.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.AvoidInlineConditionalsCheck"
    },
    {
        "line": "363",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 94).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "363",
        "column": "2",
        "severity": "error",
        "message": "Class 'IntegralType' looks like designed for extension (can be subclassed), but the method 'eqIsTrue' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'IntegralType' final or making the method 'eqIsTrue' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "363",
        "column": "71",
        "severity": "error",
        "message": "Parameter left should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "363",
        "column": "82",
        "severity": "error",
        "message": "Parameter right should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "365",
        "column": "17",
        "severity": "error",
        "message": "Name 'eqIsTrue_Expr_Expr_value' must match pattern '^[a-z][a-zA-Z0-9]*$'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.naming.LocalVariableNameCheck"
    },
    {
        "line": "369",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 131).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "369",
        "column": "21",
        "severity": "error",
        "message": "Name 'eqIsTrue_compute' must match pattern '^[a-z][a-zA-Z0-9]*$'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.naming.MethodNameCheck"
    },
    {
        "line": "369",
        "column": "38",
        "severity": "error",
        "message": "Parameter left should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "369",
        "column": "49",
        "severity": "error",
        "message": "Parameter right should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "369",
        "column": "61",
        "severity": "error",
        "message": "'{' at column 61 should have line break after.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
    },
    {
        "line": "372",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 94).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "372",
        "column": "2",
        "severity": "error",
        "message": "Class 'IntegralType' looks like designed for extension (can be subclassed), but the method 'ltIsTrue' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'IntegralType' final or making the method 'ltIsTrue' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "372",
        "column": "71",
        "severity": "error",
        "message": "Parameter left should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "372",
        "column": "82",
        "severity": "error",
        "message": "Parameter right should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "374",
        "column": "17",
        "severity": "error",
        "message": "Name 'ltIsTrue_Expr_Expr_value' must match pattern '^[a-z][a-zA-Z0-9]*$'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.naming.LocalVariableNameCheck"
    },
    {
        "line": "378",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 130).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "378",
        "column": "21",
        "severity": "error",
        "message": "Name 'ltIsTrue_compute' must match pattern '^[a-z][a-zA-Z0-9]*$'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.naming.MethodNameCheck"
    },
    {
        "line": "378",
        "column": "38",
        "severity": "error",
        "message": "Parameter left should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "378",
        "column": "49",
        "severity": "error",
        "message": "Parameter right should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "378",
        "column": "61",
        "severity": "error",
        "message": "'{' at column 61 should have line break after.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
    },
    {
        "line": "381",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 94).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "381",
        "column": "2",
        "severity": "error",
        "message": "Class 'IntegralType' looks like designed for extension (can be subclassed), but the method 'leIsTrue' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'IntegralType' final or making the method 'leIsTrue' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "381",
        "column": "71",
        "severity": "error",
        "message": "Parameter left should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "381",
        "column": "82",
        "severity": "error",
        "message": "Parameter right should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "383",
        "column": "17",
        "severity": "error",
        "message": "Name 'leIsTrue_Expr_Expr_value' must match pattern '^[a-z][a-zA-Z0-9]*$'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.naming.LocalVariableNameCheck"
    },
    {
        "line": "387",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 131).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "387",
        "column": "21",
        "severity": "error",
        "message": "Name 'leIsTrue_compute' must match pattern '^[a-z][a-zA-Z0-9]*$'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.naming.MethodNameCheck"
    },
    {
        "line": "387",
        "column": "38",
        "severity": "error",
        "message": "Parameter left should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "387",
        "column": "49",
        "severity": "error",
        "message": "Parameter right should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "387",
        "column": "61",
        "severity": "error",
        "message": "'{' at column 61 should have line break after.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
    },
    {
        "line": "390",
        "column": "2",
        "severity": "error",
        "message": "Class 'IntegralType' looks like designed for extension (can be subclassed), but the method 'assignableToInt' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'IntegralType' final or making the method 'assignableToInt' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "392",
        "column": "17",
        "severity": "error",
        "message": "Name 'assignableToInt_value' must match pattern '^[a-z][a-zA-Z0-9]*$'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.naming.LocalVariableNameCheck"
    },
    {
        "line": "396",
        "column": "21",
        "severity": "error",
        "message": "Name 'assignableToInt_compute' must match pattern '^[a-z][a-zA-Z0-9]*$'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.naming.MethodNameCheck"
    },
    {
        "line": "396",
        "column": "47",
        "severity": "error",
        "message": "'{' at column 47 should have line break after.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
    },
    {
        "line": "399",
        "column": "2",
        "severity": "error",
        "message": "Class 'IntegralType' looks like designed for extension (can be subclassed), but the method 'isIntegralType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'IntegralType' final or making the method 'isIntegralType' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "401",
        "column": "17",
        "severity": "error",
        "message": "Name 'isIntegralType_value' must match pattern '^[a-z][a-zA-Z0-9]*$'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.naming.LocalVariableNameCheck"
    },
    {
        "line": "405",
        "column": "21",
        "severity": "error",
        "message": "Name 'isIntegralType_compute' must match pattern '^[a-z][a-zA-Z0-9]*$'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.naming.MethodNameCheck"
    },
    {
        "line": "405",
        "column": "46",
        "severity": "error",
        "message": "'{' at column 46 should have line break after.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
    },
    {
        "line": "407",
        "column": "1",
        "severity": "error",
        "message": "Class 'IntegralType' looks like designed for extension (can be subclassed), but the method 'rewriteTo' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'IntegralType' final or making the method 'rewriteTo' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    }
]