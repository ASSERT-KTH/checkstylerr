[
    {
        "line": "45",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "45",
        "column": "24",
        "severity": "error",
        "message": "Variable 'children' must be private and have accessor methods.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheck"
    },
    {
        "line": "47",
        "column": "29",
        "severity": "error",
        "message": "Parameter document should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "51",
        "column": "5",
        "severity": "error",
        "message": "Class 'InnerNodeImpl' looks like designed for extension (can be subclassed), but the method 'appendChild' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InnerNodeImpl' final or making the method 'appendChild' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "51",
        "column": "29",
        "severity": "error",
        "message": "Parameter newChild should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "55",
        "column": "5",
        "severity": "error",
        "message": "Class 'InnerNodeImpl' looks like designed for extension (can be subclassed), but the method 'getChildNodes' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InnerNodeImpl' final or making the method 'getChildNodes' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "65",
        "column": "5",
        "severity": "error",
        "message": "Class 'InnerNodeImpl' looks like designed for extension (can be subclassed), but the method 'getFirstChild' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InnerNodeImpl' final or making the method 'getFirstChild' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "66",
        "column": "37",
        "severity": "error",
        "message": "Avoid inline conditionals.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.AvoidInlineConditionalsCheck"
    },
    {
        "line": "69",
        "column": "5",
        "severity": "error",
        "message": "Class 'InnerNodeImpl' looks like designed for extension (can be subclassed), but the method 'getLastChild' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InnerNodeImpl' final or making the method 'getLastChild' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "70",
        "column": "37",
        "severity": "error",
        "message": "Avoid inline conditionals.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.AvoidInlineConditionalsCheck"
    },
    {
        "line": "73",
        "column": "5",
        "severity": "error",
        "message": "Class 'InnerNodeImpl' looks like designed for extension (can be subclassed), but the method 'getNextSibling' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InnerNodeImpl' final or making the method 'getNextSibling' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "81",
        "column": "5",
        "severity": "error",
        "message": "Class 'InnerNodeImpl' looks like designed for extension (can be subclassed), but the method 'hasChildNodes' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InnerNodeImpl' final or making the method 'hasChildNodes' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "85",
        "column": "5",
        "severity": "error",
        "message": "Class 'InnerNodeImpl' looks like designed for extension (can be subclassed), but the method 'insertBefore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InnerNodeImpl' final or making the method 'insertBefore' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "85",
        "column": "30",
        "severity": "error",
        "message": "Parameter newChild should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "85",
        "column": "45",
        "severity": "error",
        "message": "Parameter refChild should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "107",
        "severity": "error",
        "message": "Expected @return tag.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "107",
        "column": "24",
        "severity": "error",
        "message": "Parameter newChild should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "107",
        "column": "29",
        "severity": "error",
        "message": "Expected @param tag for 'newChild'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "107",
        "column": "39",
        "severity": "error",
        "message": "Parameter index should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "107",
        "column": "43",
        "severity": "error",
        "message": "Expected @param tag for 'index'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "107",
        "column": "57",
        "severity": "error",
        "message": "Expected @throws tag for 'DOMException'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "117",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 93).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "137",
        "column": "5",
        "severity": "error",
        "message": "Class 'InnerNodeImpl' looks like designed for extension (can be subclassed), but the method 'isParentOf' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InnerNodeImpl' final or making the method 'isParentOf' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "137",
        "column": "31",
        "severity": "error",
        "message": "Parameter node should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "168",
        "column": "33",
        "severity": "error",
        "message": "Parameter fromIndex should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "174",
        "column": "5",
        "severity": "error",
        "message": "Class 'InnerNodeImpl' looks like designed for extension (can be subclassed), but the method 'removeChild' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InnerNodeImpl' final or making the method 'removeChild' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "174",
        "column": "29",
        "severity": "error",
        "message": "Parameter oldChild should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "196",
        "severity": "error",
        "message": "Expected @return tag.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "196",
        "column": "30",
        "severity": "error",
        "message": "Parameter newChild should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "196",
        "column": "35",
        "severity": "error",
        "message": "Expected @param tag for 'newChild'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "196",
        "column": "45",
        "severity": "error",
        "message": "Parameter oldChild should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "196",
        "column": "50",
        "severity": "error",
        "message": "Expected @param tag for 'oldChild'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "196",
        "column": "67",
        "severity": "error",
        "message": "Expected @throws tag for 'DOMException'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "203",
        "column": "5",
        "severity": "error",
        "message": "Class 'InnerNodeImpl' looks like designed for extension (can be subclassed), but the method 'getTextContent' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InnerNodeImpl' final or making the method 'getTextContent' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "211",
        "column": "42",
        "severity": "error",
        "message": "Avoid inline conditionals.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.AvoidInlineConditionalsCheck"
    },
    {
        "line": "219",
        "column": "5",
        "severity": "error",
        "message": "Class 'InnerNodeImpl' looks like designed for extension (can be subclassed), but the method 'getTextContent' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InnerNodeImpl' final or making the method 'getTextContent' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "219",
        "column": "25",
        "severity": "error",
        "message": "Parameter buf should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "229",
        "column": "34",
        "severity": "error",
        "message": "Parameter child should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "230",
        "severity": "error",
        "message": "Comment matches to-do format 'TODO:'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.TodoCommentCheck"
    },
    {
        "line": "235",
        "column": "5",
        "severity": "error",
        "message": "Class 'InnerNodeImpl' looks like designed for extension (can be subclassed), but the method 'getElementsByTagName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InnerNodeImpl' final or making the method 'getElementsByTagName' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "235",
        "column": "31",
        "severity": "error",
        "message": "Parameter out should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "235",
        "column": "49",
        "severity": "error",
        "message": "Parameter name should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "247",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 90).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "247",
        "column": "5",
        "severity": "error",
        "message": "Class 'InnerNodeImpl' looks like designed for extension (can be subclassed), but the method 'getElementsByTagNameNS' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InnerNodeImpl' final or making the method 'getElementsByTagNameNS' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "247",
        "column": "33",
        "severity": "error",
        "message": "Parameter out should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "247",
        "column": "51",
        "severity": "error",
        "message": "Parameter namespaceURI should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "247",
        "column": "72",
        "severity": "error",
        "message": "Parameter localName should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "251",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 82).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "252",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 86).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "264",
        "severity": "error",
        "message": "Expected @return tag.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "264",
        "column": "50",
        "severity": "error",
        "message": "Parameter pattern should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "264",
        "column": "57",
        "severity": "error",
        "message": "Expected @param tag for 'pattern'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "264",
        "column": "66",
        "severity": "error",
        "message": "Parameter s should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "264",
        "column": "73",
        "severity": "error",
        "message": "Expected @param tag for 's'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    }
]