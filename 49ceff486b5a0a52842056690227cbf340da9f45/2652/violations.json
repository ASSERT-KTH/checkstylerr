[
    {
        "line": "19",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - java.io.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "20",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - java.nio.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "21",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - java.util.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "22",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - com.bugvm.objc.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "23",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - com.bugvm.objc.annotation.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "24",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - com.bugvm.objc.block.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "25",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - com.bugvm.rt.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "26",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - com.bugvm.rt.annotation.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "27",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - com.bugvm.rt.bro.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "28",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - com.bugvm.rt.bro.annotation.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "29",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - com.bugvm.rt.bro.ptr.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "30",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - com.bugvm.apple.foundation.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "31",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - com.bugvm.apple.coreanimation.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "32",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - com.bugvm.apple.coregraphics.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "33",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - com.bugvm.apple.coredata.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "34",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - com.bugvm.apple.coreimage.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "35",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - com.bugvm.apple.coretext.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "36",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - com.bugvm.apple.corelocation.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "45",
        "severity": "error",
        "message": "Line has trailing spaces.",
        "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
    },
    {
        "line": "45",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 83).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "46",
        "severity": "error",
        "message": "Line has trailing spaces.",
        "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
    },
    {
        "line": "47",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 87).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "49",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 113).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "49",
        "column": "102",
        "severity": "error",
        "message": "'{' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "49",
        "column": "103",
        "severity": "error",
        "message": "'}' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "49",
        "column": "103",
        "severity": "error",
        "message": "'}' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "50",
        "column": "22",
        "severity": "error",
        "message": "'{' at column 22 should have line break after.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
    },
    {
        "line": "50",
        "column": "65",
        "severity": "error",
        "message": "'}' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "53",
        "column": "30",
        "severity": "error",
        "message": "'{' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "53",
        "column": "31",
        "severity": "error",
        "message": "'}' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "54",
        "column": "31",
        "severity": "error",
        "message": "Parameter skipInit should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "54",
        "column": "50",
        "severity": "error",
        "message": "'{' at column 50 should have line break after.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
    },
    {
        "line": "58",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 148).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "58",
        "column": "28",
        "severity": "error",
        "message": "Parameter style should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "58",
        "column": "49",
        "severity": "error",
        "message": "Expected @param tag for 'style'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "58",
        "column": "56",
        "severity": "error",
        "message": "Parameter reuseIdentifier should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "58",
        "column": "63",
        "severity": "error",
        "message": "Expected @param tag for 'reuseIdentifier'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "58",
        "column": "80",
        "severity": "error",
        "message": "'{' at column 80 should have line break after.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
    },
    {
        "line": "59",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 100).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "59",
        "column": "28",
        "severity": "error",
        "message": "Parameter aDecoder should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "59",
        "column": "46",
        "severity": "error",
        "message": "'{' at column 46 should have line break after.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
    },
    {
        "line": "61",
        "severity": "error",
        "message": "Line has trailing spaces.",
        "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
    },
    {
        "line": "62",
        "column": "28",
        "severity": "error",
        "message": "Parameter frame should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "69",
        "severity": "error",
        "message": "Expected @return tag.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "74",
        "severity": "error",
        "message": "Expected @return tag.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "79",
        "severity": "error",
        "message": "Expected @return tag.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "81",
        "column": "5",
        "severity": "error",
        "message": "Class 'UITableViewCell' looks like designed for extension (can be subclassed), but the method 'getContentView' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UITableViewCell' final or making the method 'getContentView' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "83",
        "column": "5",
        "severity": "error",
        "message": "Class 'UITableViewCell' looks like designed for extension (can be subclassed), but the method 'getBackgroundView' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UITableViewCell' final or making the method 'getBackgroundView' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "85",
        "column": "5",
        "severity": "error",
        "message": "Class 'UITableViewCell' looks like designed for extension (can be subclassed), but the method 'setBackgroundView' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UITableViewCell' final or making the method 'setBackgroundView' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "87",
        "column": "5",
        "severity": "error",
        "message": "Class 'UITableViewCell' looks like designed for extension (can be subclassed), but the method 'getSelectedBackgroundView' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UITableViewCell' final or making the method 'getSelectedBackgroundView' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "89",
        "column": "5",
        "severity": "error",
        "message": "Class 'UITableViewCell' looks like designed for extension (can be subclassed), but the method 'setSelectedBackgroundView' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UITableViewCell' final or making the method 'setSelectedBackgroundView' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "94",
        "severity": "error",
        "message": "Expected @return tag.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "100",
        "column": "66",
        "severity": "error",
        "message": "Expected @param tag for 'v'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "101",
        "column": "5",
        "severity": "error",
        "message": "Class 'UITableViewCell' looks like designed for extension (can be subclassed), but the method 'getReuseIdentifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UITableViewCell' final or making the method 'getReuseIdentifier' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "103",
        "column": "5",
        "severity": "error",
        "message": "Class 'UITableViewCell' looks like designed for extension (can be subclassed), but the method 'getSelectionStyle' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UITableViewCell' final or making the method 'getSelectionStyle' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "105",
        "column": "5",
        "severity": "error",
        "message": "Class 'UITableViewCell' looks like designed for extension (can be subclassed), but the method 'setSelectionStyle' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UITableViewCell' final or making the method 'setSelectionStyle' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "107",
        "column": "5",
        "severity": "error",
        "message": "Class 'UITableViewCell' looks like designed for extension (can be subclassed), but the method 'isSelected' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UITableViewCell' final or making the method 'isSelected' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "109",
        "column": "5",
        "severity": "error",
        "message": "Class 'UITableViewCell' looks like designed for extension (can be subclassed), but the method 'setSelected' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UITableViewCell' final or making the method 'setSelected' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "111",
        "column": "5",
        "severity": "error",
        "message": "Class 'UITableViewCell' looks like designed for extension (can be subclassed), but the method 'isHighlighted' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UITableViewCell' final or making the method 'isHighlighted' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "113",
        "column": "5",
        "severity": "error",
        "message": "Class 'UITableViewCell' looks like designed for extension (can be subclassed), but the method 'setHighlighted' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UITableViewCell' final or making the method 'setHighlighted' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "115",
        "column": "5",
        "severity": "error",
        "message": "Class 'UITableViewCell' looks like designed for extension (can be subclassed), but the method 'getEditingStyle' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UITableViewCell' final or making the method 'getEditingStyle' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "117",
        "column": "5",
        "severity": "error",
        "message": "Class 'UITableViewCell' looks like designed for extension (can be subclassed), but the method 'showsReorderControl' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UITableViewCell' final or making the method 'showsReorderControl' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "119",
        "column": "5",
        "severity": "error",
        "message": "Class 'UITableViewCell' looks like designed for extension (can be subclassed), but the method 'setShowsReorderControl' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UITableViewCell' final or making the method 'setShowsReorderControl' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "121",
        "column": "5",
        "severity": "error",
        "message": "Class 'UITableViewCell' looks like designed for extension (can be subclassed), but the method 'shouldIndentWhileEditing' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UITableViewCell' final or making the method 'shouldIndentWhileEditing' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "123",
        "column": "5",
        "severity": "error",
        "message": "Class 'UITableViewCell' looks like designed for extension (can be subclassed), but the method 'setShouldIndentWhileEditing' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UITableViewCell' final or making the method 'setShouldIndentWhileEditing' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "125",
        "column": "5",
        "severity": "error",
        "message": "Class 'UITableViewCell' looks like designed for extension (can be subclassed), but the method 'getAccessoryType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UITableViewCell' final or making the method 'getAccessoryType' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "127",
        "column": "5",
        "severity": "error",
        "message": "Class 'UITableViewCell' looks like designed for extension (can be subclassed), but the method 'setAccessoryType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UITableViewCell' final or making the method 'setAccessoryType' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "129",
        "column": "5",
        "severity": "error",
        "message": "Class 'UITableViewCell' looks like designed for extension (can be subclassed), but the method 'getAccessoryView' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UITableViewCell' final or making the method 'getAccessoryView' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "131",
        "column": "5",
        "severity": "error",
        "message": "Class 'UITableViewCell' looks like designed for extension (can be subclassed), but the method 'setAccessoryView' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UITableViewCell' final or making the method 'setAccessoryView' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "133",
        "column": "5",
        "severity": "error",
        "message": "Class 'UITableViewCell' looks like designed for extension (can be subclassed), but the method 'getEditingAccessoryType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UITableViewCell' final or making the method 'getEditingAccessoryType' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "135",
        "column": "5",
        "severity": "error",
        "message": "Class 'UITableViewCell' looks like designed for extension (can be subclassed), but the method 'setEditingAccessoryType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UITableViewCell' final or making the method 'setEditingAccessoryType' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "137",
        "column": "5",
        "severity": "error",
        "message": "Class 'UITableViewCell' looks like designed for extension (can be subclassed), but the method 'getEditingAccessoryView' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UITableViewCell' final or making the method 'getEditingAccessoryView' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "139",
        "column": "5",
        "severity": "error",
        "message": "Class 'UITableViewCell' looks like designed for extension (can be subclassed), but the method 'setEditingAccessoryView' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UITableViewCell' final or making the method 'setEditingAccessoryView' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "141",
        "column": "5",
        "severity": "error",
        "message": "Class 'UITableViewCell' looks like designed for extension (can be subclassed), but the method 'getIndentationLevel' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UITableViewCell' final or making the method 'getIndentationLevel' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "143",
        "column": "5",
        "severity": "error",
        "message": "Class 'UITableViewCell' looks like designed for extension (can be subclassed), but the method 'setIndentationLevel' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UITableViewCell' final or making the method 'setIndentationLevel' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "145",
        "column": "5",
        "severity": "error",
        "message": "Class 'UITableViewCell' looks like designed for extension (can be subclassed), but the method 'getIndentationWidth' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UITableViewCell' final or making the method 'getIndentationWidth' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "147",
        "column": "5",
        "severity": "error",
        "message": "Class 'UITableViewCell' looks like designed for extension (can be subclassed), but the method 'setIndentationWidth' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UITableViewCell' final or making the method 'setIndentationWidth' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "152",
        "severity": "error",
        "message": "Expected @return tag.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "158",
        "column": "62",
        "severity": "error",
        "message": "Expected @param tag for 'v'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "159",
        "column": "5",
        "severity": "error",
        "message": "Class 'UITableViewCell' looks like designed for extension (can be subclassed), but the method 'isEditing' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UITableViewCell' final or making the method 'isEditing' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "161",
        "column": "5",
        "severity": "error",
        "message": "Class 'UITableViewCell' looks like designed for extension (can be subclassed), but the method 'setEditing' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UITableViewCell' final or making the method 'setEditing' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "163",
        "column": "5",
        "severity": "error",
        "message": "Class 'UITableViewCell' looks like designed for extension (can be subclassed), but the method 'isShowingDeleteConfirmation' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UITableViewCell' final or making the method 'isShowingDeleteConfirmation' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "171",
        "severity": "error",
        "message": "Expected @return tag.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "172",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 92).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "172",
        "column": "62",
        "severity": "error",
        "message": "Expected @param tag for 'style'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "172",
        "column": "76",
        "severity": "error",
        "message": "Expected @param tag for 'reuseIdentifier'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "173",
        "column": "5",
        "severity": "error",
        "message": "Class 'UITableViewCell' looks like designed for extension (can be subclassed), but the method 'init' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UITableViewCell' final or making the method 'init' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "175",
        "column": "5",
        "severity": "error",
        "message": "Class 'UITableViewCell' looks like designed for extension (can be subclassed), but the method 'prepareForReuse' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UITableViewCell' final or making the method 'prepareForReuse' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "177",
        "column": "5",
        "severity": "error",
        "message": "Class 'UITableViewCell' looks like designed for extension (can be subclassed), but the method 'setSelected' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UITableViewCell' final or making the method 'setSelected' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "179",
        "column": "5",
        "severity": "error",
        "message": "Class 'UITableViewCell' looks like designed for extension (can be subclassed), but the method 'setHighlighted' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UITableViewCell' final or making the method 'setHighlighted' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "181",
        "column": "5",
        "severity": "error",
        "message": "Class 'UITableViewCell' looks like designed for extension (can be subclassed), but the method 'setEditing' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UITableViewCell' final or making the method 'setEditing' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "187",
        "column": "71",
        "severity": "error",
        "message": "Expected @param tag for 'state'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "192",
        "column": "70",
        "severity": "error",
        "message": "Expected @param tag for 'state'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "193",
        "column": "5",
        "severity": "error",
        "message": "Class 'UITableViewCell' looks like designed for extension (can be subclassed), but the method 'shouldBegin' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UITableViewCell' final or making the method 'shouldBegin' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "195",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 95).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "195",
        "column": "5",
        "severity": "error",
        "message": "Class 'UITableViewCell' looks like designed for extension (can be subclassed), but the method 'shouldRecognizeSimultaneously' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UITableViewCell' final or making the method 'shouldRecognizeSimultaneously' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "196",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 139).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "200",
        "severity": "error",
        "message": "Expected @return tag.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "200",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 84).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "201",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 130).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "201",
        "column": "68",
        "severity": "error",
        "message": "Expected @param tag for 'gestureRecognizer'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "201",
        "column": "107",
        "severity": "error",
        "message": "Expected @param tag for 'otherGestureRecognizer'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "205",
        "severity": "error",
        "message": "Expected @return tag.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "205",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 86).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "206",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 132).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "206",
        "column": "70",
        "severity": "error",
        "message": "Expected @param tag for 'gestureRecognizer'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "206",
        "column": "109",
        "severity": "error",
        "message": "Expected @param tag for 'otherGestureRecognizer'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "207",
        "column": "5",
        "severity": "error",
        "message": "Class 'UITableViewCell' looks like designed for extension (can be subclassed), but the method 'shouldReceiveTouch' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'UITableViewCell' final or making the method 'shouldReceiveTouch' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "208",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 99).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    }
]