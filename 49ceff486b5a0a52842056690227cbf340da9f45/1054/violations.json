[
    {
        "line": "19",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - java.io.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "20",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - java.nio.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "21",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - java.util.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "22",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - com.bugvm.objc.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "23",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - com.bugvm.objc.annotation.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "24",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - com.bugvm.objc.block.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "25",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - com.bugvm.rt.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "26",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - com.bugvm.rt.annotation.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "27",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - com.bugvm.rt.bro.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "28",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - com.bugvm.rt.bro.annotation.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "29",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - com.bugvm.rt.bro.ptr.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "30",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - com.bugvm.apple.corefoundation.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "31",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - com.bugvm.apple.uikit.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "32",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - com.bugvm.apple.coretext.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "33",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - com.bugvm.apple.coreanimation.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "34",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - com.bugvm.apple.coredata.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "35",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - com.bugvm.apple.coregraphics.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "36",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - com.bugvm.apple.coremedia.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "37",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - com.bugvm.apple.security.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "38",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - com.bugvm.apple.dispatch.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "46",
        "severity": "error",
        "message": "Line has trailing spaces.",
        "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
    },
    {
        "line": "46",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 85).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "47",
        "severity": "error",
        "message": "Line has trailing spaces.",
        "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
    },
    {
        "line": "50",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 119).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "50",
        "column": "108",
        "severity": "error",
        "message": "'{' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "50",
        "column": "109",
        "severity": "error",
        "message": "'}' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "50",
        "column": "109",
        "severity": "error",
        "message": "'}' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "51",
        "column": "22",
        "severity": "error",
        "message": "'{' at column 22 should have line break after.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
    },
    {
        "line": "51",
        "column": "67",
        "severity": "error",
        "message": "'}' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "54",
        "column": "32",
        "severity": "error",
        "message": "'{' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "54",
        "column": "33",
        "severity": "error",
        "message": "'}' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "55",
        "column": "33",
        "severity": "error",
        "message": "Parameter skipInit should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "55",
        "column": "52",
        "severity": "error",
        "message": "'{' at column 52 should have line break after.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
    },
    {
        "line": "65",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'getTextMarkupAttributesForNegativeValues' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'getTextMarkupAttributesForNegativeValues' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "73",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'getCoreTextAttributesForNegativeValues' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'getCoreTextAttributesForNegativeValues' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "74",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 82).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "81",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'setTextAttributesForNegativeValues' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'setTextAttributesForNegativeValues' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "82",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 84).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "82",
        "column": "52",
        "severity": "error",
        "message": "Parameter v should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "89",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'setTextMarkupAttributesForNegativeValues' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'setTextMarkupAttributesForNegativeValues' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "90",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 84).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "90",
        "column": "58",
        "severity": "error",
        "message": "Parameter v should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "94",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 99).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "97",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'setCoreTextAttributesForNegativeValues' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'setCoreTextAttributesForNegativeValues' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "98",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 88).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "98",
        "column": "56",
        "severity": "error",
        "message": "Parameter v should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "102",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 99).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "105",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'getTextAttributesForPositiveValues' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'getTextAttributesForPositiveValues' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "108",
        "severity": "error",
        "message": "'if' construct must use '{}'s.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.NeedBracesCheck"
    },
    {
        "line": "111",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'getTextMarkupAttributesForPositiveValues' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'getTextMarkupAttributesForPositiveValues' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "114",
        "severity": "error",
        "message": "'if' construct must use '{}'s.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.NeedBracesCheck"
    },
    {
        "line": "117",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'getCoreTextAttributesForPositiveValues' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'getCoreTextAttributesForPositiveValues' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "118",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 82).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "120",
        "severity": "error",
        "message": "'if' construct must use '{}'s.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.NeedBracesCheck"
    },
    {
        "line": "123",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'setTextAttributesForPositiveValues' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'setTextAttributesForPositiveValues' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "124",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 84).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "124",
        "column": "52",
        "severity": "error",
        "message": "Parameter v should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "131",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'setTextMarkupAttributesForPositiveValues' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'setTextMarkupAttributesForPositiveValues' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "132",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 84).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "132",
        "column": "58",
        "severity": "error",
        "message": "Parameter v should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "136",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 99).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "139",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'setCoreTextAttributesForPositiveValues' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'setCoreTextAttributesForPositiveValues' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "140",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 88).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "140",
        "column": "56",
        "severity": "error",
        "message": "Parameter v should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "144",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 99).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "147",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'getTextAttributesForZero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'getTextAttributesForZero' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "150",
        "severity": "error",
        "message": "'if' construct must use '{}'s.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.NeedBracesCheck"
    },
    {
        "line": "153",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'getTextMarkupAttributesForZero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'getTextMarkupAttributesForZero' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "156",
        "severity": "error",
        "message": "'if' construct must use '{}'s.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.NeedBracesCheck"
    },
    {
        "line": "159",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'getCoreTextAttributesForZero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'getCoreTextAttributesForZero' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "162",
        "severity": "error",
        "message": "'if' construct must use '{}'s.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.NeedBracesCheck"
    },
    {
        "line": "165",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'setTextAttributesForZero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'setTextAttributesForZero' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "166",
        "column": "42",
        "severity": "error",
        "message": "Parameter v should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "173",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'setTextMarkupAttributesForZero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'setTextMarkupAttributesForZero' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "174",
        "column": "48",
        "severity": "error",
        "message": "Parameter v should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "178",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 89).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "181",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'setCoreTextAttributesForZero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'setCoreTextAttributesForZero' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "182",
        "column": "46",
        "severity": "error",
        "message": "Parameter v should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "186",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 89).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "189",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'getTextAttributesForNull' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'getTextAttributesForNull' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "192",
        "severity": "error",
        "message": "'if' construct must use '{}'s.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.NeedBracesCheck"
    },
    {
        "line": "195",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'getTextMarkupAttributesForNull' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'getTextMarkupAttributesForNull' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "198",
        "severity": "error",
        "message": "'if' construct must use '{}'s.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.NeedBracesCheck"
    },
    {
        "line": "201",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'getCoreTextAttributesForNull' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'getCoreTextAttributesForNull' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "204",
        "severity": "error",
        "message": "'if' construct must use '{}'s.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.NeedBracesCheck"
    },
    {
        "line": "207",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'setTextAttributesForNull' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'setTextAttributesForNull' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "208",
        "column": "42",
        "severity": "error",
        "message": "Parameter v should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "215",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'setTextMarkupAttributesForNull' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'setTextMarkupAttributesForNull' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "216",
        "column": "48",
        "severity": "error",
        "message": "Parameter v should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "220",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 89).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "223",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'setCoreTextAttributesForNull' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'setCoreTextAttributesForNull' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "224",
        "column": "46",
        "severity": "error",
        "message": "Parameter v should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "228",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 89).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "231",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'getTextAttributesForNaN' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'getTextAttributesForNaN' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "234",
        "severity": "error",
        "message": "'if' construct must use '{}'s.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.NeedBracesCheck"
    },
    {
        "line": "237",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'getTextMarkupAttributesForNaN' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'getTextMarkupAttributesForNaN' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "240",
        "severity": "error",
        "message": "'if' construct must use '{}'s.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.NeedBracesCheck"
    },
    {
        "line": "243",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'getCoreTextAttributesForNaN' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'getCoreTextAttributesForNaN' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "246",
        "severity": "error",
        "message": "'if' construct must use '{}'s.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.NeedBracesCheck"
    },
    {
        "line": "249",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'setTextAttributesForNaN' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'setTextAttributesForNaN' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "250",
        "column": "41",
        "severity": "error",
        "message": "Parameter v should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "257",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'setTextMarkupAttributesForNaN' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'setTextMarkupAttributesForNaN' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "258",
        "column": "47",
        "severity": "error",
        "message": "Parameter v should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "262",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 88).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "265",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'setCoreTextAttributesForNaN' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'setCoreTextAttributesForNaN' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "266",
        "column": "45",
        "severity": "error",
        "message": "Parameter v should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "270",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 88).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "273",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'getTextAttributesForPositiveInfinity' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'getTextAttributesForPositiveInfinity' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "276",
        "severity": "error",
        "message": "'if' construct must use '{}'s.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.NeedBracesCheck"
    },
    {
        "line": "279",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'getTextMarkupAttributesForPositiveInfinity' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'getTextMarkupAttributesForPositiveInfinity' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "282",
        "severity": "error",
        "message": "'if' construct must use '{}'s.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.NeedBracesCheck"
    },
    {
        "line": "285",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'getCoreTextAttributesForPositiveInfinity' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'getCoreTextAttributesForPositiveInfinity' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "286",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 84).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "288",
        "severity": "error",
        "message": "'if' construct must use '{}'s.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.NeedBracesCheck"
    },
    {
        "line": "291",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'setTextAttributesForPositiveInfinity' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'setTextAttributesForPositiveInfinity' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "292",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 86).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "292",
        "column": "54",
        "severity": "error",
        "message": "Parameter v should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "299",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'setTextMarkupAttributesForPositiveInfinity' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'setTextMarkupAttributesForPositiveInfinity' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "300",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 86).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "300",
        "column": "60",
        "severity": "error",
        "message": "Parameter v should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "304",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 101).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "307",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'setCoreTextAttributesForPositiveInfinity' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'setCoreTextAttributesForPositiveInfinity' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "308",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 90).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "308",
        "column": "58",
        "severity": "error",
        "message": "Parameter v should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "312",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 101).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "315",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'getTextAttributesForNegativeInfinity' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'getTextAttributesForNegativeInfinity' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "318",
        "severity": "error",
        "message": "'if' construct must use '{}'s.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.NeedBracesCheck"
    },
    {
        "line": "321",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'getTextMarkupAttributesForNegativeInfinity' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'getTextMarkupAttributesForNegativeInfinity' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "324",
        "severity": "error",
        "message": "'if' construct must use '{}'s.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.NeedBracesCheck"
    },
    {
        "line": "327",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'getCoreTextAttributesForNegativeInfinity' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'getCoreTextAttributesForNegativeInfinity' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "328",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 84).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "330",
        "severity": "error",
        "message": "'if' construct must use '{}'s.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.NeedBracesCheck"
    },
    {
        "line": "333",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'setTextAttributesForNegativeInfinity' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'setTextAttributesForNegativeInfinity' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "334",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 86).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "334",
        "column": "54",
        "severity": "error",
        "message": "Parameter v should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "341",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'setTextMarkupAttributesForNegativeInfinity' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'setTextMarkupAttributesForNegativeInfinity' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "342",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 86).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "342",
        "column": "60",
        "severity": "error",
        "message": "Parameter v should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "346",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 101).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "349",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'setCoreTextAttributesForNegativeInfinity' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'setCoreTextAttributesForNegativeInfinity' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "350",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 90).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "350",
        "column": "58",
        "severity": "error",
        "message": "Parameter v should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "354",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 101).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "361",
        "severity": "error",
        "message": "Expected @return tag.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "367",
        "column": "65",
        "severity": "error",
        "message": "Expected @param tag for 'v'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "368",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'getNumberStyle' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'getNumberStyle' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "370",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'setNumberStyle' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'setNumberStyle' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "372",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'getLocale' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'getLocale' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "374",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'setLocale' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'setLocale' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "376",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'generatesDecimalNumbers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'generatesDecimalNumbers' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "378",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'setGeneratesDecimalNumbers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'setGeneratesDecimalNumbers' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "380",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'getFormatterBehavior' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'getFormatterBehavior' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "382",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'setFormatterBehavior' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'setFormatterBehavior' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "384",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'getNegativeFormat' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'getNegativeFormat' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "386",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'setNegativeFormat' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'setNegativeFormat' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "388",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'getTextAttributesDictionaryForNegativeValues' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'getTextAttributesDictionaryForNegativeValues' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "389",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 84).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "390",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'setTextAttributesDictionaryForNegativeValues' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'setTextAttributesDictionaryForNegativeValues' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "391",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 90).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "392",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'getPositiveFormat' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'getPositiveFormat' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "394",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'setPositiveFormat' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'setPositiveFormat' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "396",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'getTextAttributesDictionaryForPositiveValues' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'getTextAttributesDictionaryForPositiveValues' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "397",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 84).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "398",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'setTextAttributesDictionaryForPositiveValues' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'setTextAttributesDictionaryForPositiveValues' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "399",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 90).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "400",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'allowsFloats' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'allowsFloats' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "402",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'setAllowsFloats' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'setAllowsFloats' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "404",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'getDecimalSeparator' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'getDecimalSeparator' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "406",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'setDecimalSeparator' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'setDecimalSeparator' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "408",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'alwaysShowsDecimalSeparator' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'alwaysShowsDecimalSeparator' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "410",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'setAlwaysShowsDecimalSeparator' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'setAlwaysShowsDecimalSeparator' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "412",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'getCurrencyDecimalSeparator' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'getCurrencyDecimalSeparator' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "414",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'setCurrencyDecimalSeparator' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'setCurrencyDecimalSeparator' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "416",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'usesGroupingSeparator' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'usesGroupingSeparator' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "418",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'setUsesGroupingSeparator' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'setUsesGroupingSeparator' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "420",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'getGroupingSeparator' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'getGroupingSeparator' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "422",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'setGroupingSeparator' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'setGroupingSeparator' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "424",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'getZeroSymbol' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'getZeroSymbol' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "426",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'setZeroSymbol' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'setZeroSymbol' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "428",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'getTextAttributesDictionaryForZero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'getTextAttributesDictionaryForZero' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "430",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'setTextAttributesDictionaryForZero' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'setTextAttributesDictionaryForZero' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "432",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'getNullSymbol' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'getNullSymbol' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "434",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'setNullSymbol' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'setNullSymbol' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "436",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'getTextAttributesDictionaryForNull' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'getTextAttributesDictionaryForNull' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "438",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'setTextAttributesDictionaryForNull' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'setTextAttributesDictionaryForNull' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "440",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'getNaNSymbol' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'getNaNSymbol' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "442",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'setNaNSymbol' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'setNaNSymbol' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "444",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'getTextAttributesDictionaryForNaN' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'getTextAttributesDictionaryForNaN' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "446",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'setTextAttributesDictionaryForNaN' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'setTextAttributesDictionaryForNaN' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "448",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'getPositiveInfinitySymbol' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'getPositiveInfinitySymbol' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "450",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'setPositiveInfinitySymbol' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'setPositiveInfinitySymbol' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "452",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'getTextAttributesDictionaryForPositiveInfinity' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'getTextAttributesDictionaryForPositiveInfinity' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "453",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 86).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "454",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'setTextAttributesDictionaryForPositiveInfinity' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'setTextAttributesDictionaryForPositiveInfinity' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "455",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 92).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "456",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'getNegativeInfinitySymbol' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'getNegativeInfinitySymbol' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "458",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'setNegativeInfinitySymbol' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'setNegativeInfinitySymbol' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "460",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'getTextAttributesDictionaryForNegativeInfinity' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'getTextAttributesDictionaryForNegativeInfinity' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "461",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 86).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "462",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'setTextAttributesDictionaryForNegativeInfinity' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'setTextAttributesDictionaryForNegativeInfinity' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "463",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 92).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "464",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'getPositivePrefix' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'getPositivePrefix' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "466",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'setPositivePrefix' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'setPositivePrefix' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "468",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'getPositiveSuffix' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'getPositiveSuffix' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "470",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'setPositiveSuffix' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'setPositiveSuffix' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "472",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'getNegativePrefix' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'getNegativePrefix' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "474",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'setNegativePrefix' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'setNegativePrefix' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "476",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'getNegativeSuffix' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'getNegativeSuffix' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "478",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'setNegativeSuffix' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'setNegativeSuffix' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "480",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'getCurrencyCode' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'getCurrencyCode' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "482",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'setCurrencyCode' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'setCurrencyCode' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "484",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'getCurrencySymbol' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'getCurrencySymbol' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "486",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'setCurrencySymbol' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'setCurrencySymbol' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "488",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'getInternationalCurrencySymbol' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'getInternationalCurrencySymbol' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "490",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'setInternationalCurrencySymbol' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'setInternationalCurrencySymbol' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "492",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'getPercentSymbol' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'getPercentSymbol' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "494",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'setPercentSymbol' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'setPercentSymbol' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "496",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'getPerMillSymbol' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'getPerMillSymbol' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "498",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'setPerMillSymbol' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'setPerMillSymbol' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "500",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'getMinusSign' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'getMinusSign' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "502",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'setMinusSign' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'setMinusSign' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "504",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'getPlusSign' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'getPlusSign' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "506",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'setPlusSign' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'setPlusSign' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "508",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'getExponentSymbol' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'getExponentSymbol' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "510",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'setExponentSymbol' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'setExponentSymbol' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "512",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'getGroupingSize' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'getGroupingSize' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "514",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'setGroupingSize' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'setGroupingSize' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "516",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'getSecondaryGroupingSize' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'getSecondaryGroupingSize' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "518",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'setSecondaryGroupingSize' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'setSecondaryGroupingSize' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "520",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'getMultiplier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'getMultiplier' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "522",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'setMultiplier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'setMultiplier' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "524",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'getFormatWidth' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'getFormatWidth' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "526",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'setFormatWidth' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'setFormatWidth' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "528",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'getPaddingCharacter' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'getPaddingCharacter' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "530",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'setPaddingCharacter' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'setPaddingCharacter' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "532",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'getPaddingPosition' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'getPaddingPosition' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "534",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'setPaddingPosition' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'setPaddingPosition' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "536",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'getRoundingMode' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'getRoundingMode' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "538",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'setRoundingMode' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'setRoundingMode' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "540",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'getRoundingIncrement' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'getRoundingIncrement' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "542",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'setRoundingIncrement' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'setRoundingIncrement' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "544",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'getMinimumIntegerDigits' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'getMinimumIntegerDigits' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "546",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'setMinimumIntegerDigits' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'setMinimumIntegerDigits' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "548",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'getMaximumIntegerDigits' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'getMaximumIntegerDigits' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "550",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'setMaximumIntegerDigits' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'setMaximumIntegerDigits' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "552",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'getMinimumFractionDigits' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'getMinimumFractionDigits' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "554",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'setMinimumFractionDigits' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'setMinimumFractionDigits' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "556",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'getMaximumFractionDigits' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'getMaximumFractionDigits' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "558",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'setMaximumFractionDigits' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'setMaximumFractionDigits' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "560",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'getMinimum' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'getMinimum' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "562",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'setMinimum' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'setMinimum' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "564",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'getMaximum' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'getMaximum' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "566",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'setMaximum' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'setMaximum' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "571",
        "severity": "error",
        "message": "Expected @return tag.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "577",
        "column": "60",
        "severity": "error",
        "message": "Expected @param tag for 'v'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "581",
        "severity": "error",
        "message": "Expected @return tag.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "587",
        "column": "43",
        "severity": "error",
        "message": "Expected @param tag for 'v'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "591",
        "severity": "error",
        "message": "Expected @return tag.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "597",
        "column": "57",
        "severity": "error",
        "message": "Expected @param tag for 'v'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "601",
        "severity": "error",
        "message": "Expected @return tag.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "607",
        "column": "75",
        "severity": "error",
        "message": "Expected @param tag for 'v'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "611",
        "severity": "error",
        "message": "Expected @return tag.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "617",
        "column": "75",
        "severity": "error",
        "message": "Expected @param tag for 'v'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "621",
        "severity": "error",
        "message": "Expected @return tag.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "627",
        "column": "66",
        "severity": "error",
        "message": "Expected @param tag for 'v'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "633",
        "column": "5",
        "severity": "error",
        "message": "Class 'NSNumberFormatter' looks like designed for extension (can be subclassed), but the method 'parse' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'NSNumberFormatter' final or making the method 'parse' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "638",
        "severity": "error",
        "message": "Expected @return tag.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "639",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 93).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "639",
        "column": "58",
        "severity": "error",
        "message": "Expected @param tag for 'num'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "639",
        "column": "86",
        "severity": "error",
        "message": "Expected @param tag for 'nstyle'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "641",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 81).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "643",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 94).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    }
]