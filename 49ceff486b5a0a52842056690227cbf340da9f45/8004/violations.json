[
    {
        "line": "3",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - beaver.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "3",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - java.io.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "3",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - java.util.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "3",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - java.util.zip.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "3",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - soot.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "3",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - soot.jimple.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "3",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - soot.util.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "3",
        "column": "8",
        "severity": "error",
        "message": "Unused import - java.util.HashSet.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck"
    },
    {
        "line": "3",
        "column": "25",
        "severity": "error",
        "message": "';' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "3",
        "column": "33",
        "severity": "error",
        "message": "Unused import - java.util.LinkedHashSet.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck"
    },
    {
        "line": "3",
        "column": "56",
        "severity": "error",
        "message": "';' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "3",
        "column": "64",
        "severity": "error",
        "message": "Unused import - java.io.File.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck"
    },
    {
        "line": "3",
        "column": "76",
        "severity": "error",
        "message": "';' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "3",
        "column": "95",
        "severity": "error",
        "message": "';' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "3",
        "column": "111",
        "severity": "error",
        "message": "';' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "3",
        "column": "119",
        "severity": "error",
        "message": "Unused import - java.util.ArrayList.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck"
    },
    {
        "line": "3",
        "column": "138",
        "severity": "error",
        "message": "';' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "3",
        "column": "161",
        "severity": "error",
        "message": "';' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "3",
        "column": "178",
        "severity": "error",
        "message": "';' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "3",
        "column": "186",
        "severity": "error",
        "message": "Unused import - java.io.FileNotFoundException.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck"
    },
    {
        "line": "3",
        "column": "215",
        "severity": "error",
        "message": "';' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "3",
        "column": "223",
        "severity": "error",
        "message": "Unused import - java.util.Collection.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck"
    },
    {
        "line": "3",
        "column": "243",
        "severity": "error",
        "message": "';' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "3",
        "column": "257",
        "severity": "error",
        "message": "';' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "3",
        "column": "276",
        "severity": "error",
        "message": "';' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "3",
        "column": "297",
        "severity": "error",
        "message": "';' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "3",
        "column": "305",
        "severity": "error",
        "message": "Unused import - soot.coffi.ClassFile.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck"
    },
    {
        "line": "3",
        "column": "325",
        "severity": "error",
        "message": "';' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "3",
        "column": "333",
        "severity": "error",
        "message": "Unused import - soot.coffi.method_info.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck"
    },
    {
        "line": "3",
        "column": "355",
        "severity": "error",
        "message": "';' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "3",
        "column": "363",
        "severity": "error",
        "message": "Unused import - soot.coffi.CONSTANT_Utf8_info.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck"
    },
    {
        "line": "3",
        "column": "392",
        "severity": "error",
        "message": "';' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "3",
        "column": "400",
        "severity": "error",
        "message": "Unused import - soot.tagkit.SourceFileTag.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck"
    },
    {
        "line": "3",
        "column": "425",
        "severity": "error",
        "message": "';' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "3",
        "column": "433",
        "severity": "error",
        "message": "Unused import - soot.coffi.CoffiMethodSource.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck"
    },
    {
        "line": "8",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 82).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "9",
        "column": "5",
        "severity": "error",
        "message": "Class 'ParConstructorAccess' looks like designed for extension (can be subclassed), but the method 'flushCache' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ParConstructorAccess' final or making the method 'flushCache' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "12",
        "column": "5",
        "severity": "error",
        "message": "Class 'ParConstructorAccess' looks like designed for extension (can be subclassed), but the method 'flushCollectionCache' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ParConstructorAccess' final or making the method 'flushCollectionCache' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "15",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 118).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "15",
        "column": "6",
        "severity": "error",
        "message": "Class 'ParConstructorAccess' looks like designed for extension (can be subclassed), but the method 'clone' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ParConstructorAccess' final or making the method 'clone' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "16",
        "column": "58",
        "severity": "error",
        "message": "'typecast' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "21",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 83).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "21",
        "column": "6",
        "severity": "error",
        "message": "Class 'ParConstructorAccess' looks like designed for extension (can be subclassed), but the method 'copy' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ParConstructorAccess' final or making the method 'copy' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "23",
        "column": "60",
        "severity": "error",
        "message": "'typecast' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "24",
        "severity": "error",
        "message": "'if' construct must use '{}'s.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.NeedBracesCheck"
    },
    {
        "line": "24",
        "column": "11",
        "severity": "error",
        "message": "'if' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "24",
        "column": "58",
        "severity": "error",
        "message": "'typecast' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "28",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 94).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "31",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 87).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "31",
        "column": "6",
        "severity": "error",
        "message": "Class 'ParConstructorAccess' looks like designed for extension (can be subclassed), but the method 'fullCopy' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ParConstructorAccess' final or making the method 'fullCopy' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "32",
        "column": "57",
        "severity": "error",
        "message": "'typecast' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "33",
        "column": "9",
        "severity": "error",
        "message": "'for' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "35",
        "severity": "error",
        "message": "'if' construct must use '{}'s.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.NeedBracesCheck"
    },
    {
        "line": "35",
        "column": "11",
        "severity": "error",
        "message": "'if' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "42",
        "column": "3",
        "severity": "error",
        "message": "Class 'ParConstructorAccess' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ParConstructorAccess' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "42",
        "column": "24",
        "severity": "error",
        "message": "Parameter s should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "44",
        "column": "5",
        "severity": "error",
        "message": "'for' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "45",
        "severity": "error",
        "message": "'if' construct must use '{}'s.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.NeedBracesCheck"
    },
    {
        "line": "45",
        "column": "7",
        "severity": "error",
        "message": "'if' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "67",
        "column": "33",
        "severity": "error",
        "message": "Parameter p0 should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "67",
        "column": "44",
        "severity": "error",
        "message": "Parameter p1 should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "67",
        "column": "59",
        "severity": "error",
        "message": "Parameter p2 should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "77",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 83).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "77",
        "column": "33",
        "severity": "error",
        "message": "Parameter p0 should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "77",
        "column": "51",
        "severity": "error",
        "message": "Parameter p1 should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "77",
        "column": "66",
        "severity": "error",
        "message": "Parameter p2 should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "86",
        "column": "3",
        "severity": "error",
        "message": "Class 'ParConstructorAccess' looks like designed for extension (can be subclassed), but the method 'numChildren' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ParConstructorAccess' final or making the method 'numChildren' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "92",
        "column": "5",
        "severity": "error",
        "message": "Class 'ParConstructorAccess' looks like designed for extension (can be subclassed), but the method 'mayHaveRewrite' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ParConstructorAccess' final or making the method 'mayHaveRewrite' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "98",
        "column": "5",
        "severity": "error",
        "message": "Class 'ParConstructorAccess' looks like designed for extension (can be subclassed), but the method 'setID' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ParConstructorAccess' final or making the method 'setID' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "98",
        "column": "23",
        "severity": "error",
        "message": "Parameter value should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "104",
        "column": "5",
        "severity": "error",
        "message": "Class 'ParConstructorAccess' looks like designed for extension (can be subclassed), but the method 'setID' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ParConstructorAccess' final or making the method 'setID' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "104",
        "column": "23",
        "severity": "error",
        "message": "Parameter symbol should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "105",
        "severity": "error",
        "message": "'if' construct must use '{}'s.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.NeedBracesCheck"
    },
    {
        "line": "105",
        "column": "9",
        "severity": "error",
        "message": "'if' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "106",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 92).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "107",
        "column": "33",
        "severity": "error",
        "message": "'typecast' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "114",
        "column": "5",
        "severity": "error",
        "message": "Class 'ParConstructorAccess' looks like designed for extension (can be subclassed), but the method 'getID' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ParConstructorAccess' final or making the method 'getID' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "115",
        "column": "39",
        "severity": "error",
        "message": "Avoid inline conditionals.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.AvoidInlineConditionalsCheck"
    },
    {
        "line": "120",
        "column": "5",
        "severity": "error",
        "message": "Class 'ParConstructorAccess' looks like designed for extension (can be subclassed), but the method 'setArgList' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ParConstructorAccess' final or making the method 'setArgList' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "120",
        "column": "28",
        "severity": "error",
        "message": "Parameter list should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "127",
        "column": "5",
        "severity": "error",
        "message": "Class 'ParConstructorAccess' looks like designed for extension (can be subclassed), but the method 'getNumArg' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ParConstructorAccess' final or making the method 'getNumArg' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "134",
        "column": "6",
        "severity": "error",
        "message": "Class 'ParConstructorAccess' looks like designed for extension (can be subclassed), but the method 'getArg' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ParConstructorAccess' final or making the method 'getArg' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "134",
        "column": "67",
        "severity": "error",
        "message": "Parameter i should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "135",
        "column": "21",
        "severity": "error",
        "message": "'typecast' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "141",
        "column": "5",
        "severity": "error",
        "message": "Class 'ParConstructorAccess' looks like designed for extension (can be subclassed), but the method 'addArg' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ParConstructorAccess' final or making the method 'addArg' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "141",
        "column": "24",
        "severity": "error",
        "message": "Parameter node should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "142",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 101).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "142",
        "column": "61",
        "severity": "error",
        "message": "Avoid inline conditionals.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.AvoidInlineConditionalsCheck"
    },
    {
        "line": "149",
        "column": "5",
        "severity": "error",
        "message": "Class 'ParConstructorAccess' looks like designed for extension (can be subclassed), but the method 'addArgNoTransform' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ParConstructorAccess' final or making the method 'addArgNoTransform' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "149",
        "column": "35",
        "severity": "error",
        "message": "Parameter node should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "157",
        "column": "5",
        "severity": "error",
        "message": "Class 'ParConstructorAccess' looks like designed for extension (can be subclassed), but the method 'setArg' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ParConstructorAccess' final or making the method 'setArg' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "157",
        "column": "24",
        "severity": "error",
        "message": "Parameter node should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "157",
        "column": "35",
        "severity": "error",
        "message": "Parameter i should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "164",
        "column": "5",
        "severity": "error",
        "message": "Class 'ParConstructorAccess' looks like designed for extension (can be subclassed), but the method 'getArgs' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ParConstructorAccess' final or making the method 'getArgs' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "170",
        "column": "5",
        "severity": "error",
        "message": "Class 'ParConstructorAccess' looks like designed for extension (can be subclassed), but the method 'getArgsNoTransform' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ParConstructorAccess' final or making the method 'getArgsNoTransform' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "177",
        "column": "6",
        "severity": "error",
        "message": "Class 'ParConstructorAccess' looks like designed for extension (can be subclassed), but the method 'getArgList' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ParConstructorAccess' final or making the method 'getArgList' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "178",
        "column": "38",
        "severity": "error",
        "message": "'typecast' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "186",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 90).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "186",
        "column": "6",
        "severity": "error",
        "message": "Class 'ParConstructorAccess' looks like designed for extension (can be subclassed), but the method 'getArgListNoTransform' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ParConstructorAccess' final or making the method 'getArgListNoTransform' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "187",
        "column": "27",
        "severity": "error",
        "message": "'typecast' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "192",
        "column": "5",
        "severity": "error",
        "message": "Class 'ParConstructorAccess' looks like designed for extension (can be subclassed), but the method 'setTypeArgumentList' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ParConstructorAccess' final or making the method 'setTypeArgumentList' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "192",
        "column": "37",
        "severity": "error",
        "message": "Parameter list should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "199",
        "column": "5",
        "severity": "error",
        "message": "Class 'ParConstructorAccess' looks like designed for extension (can be subclassed), but the method 'getNumTypeArgument' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ParConstructorAccess' final or making the method 'getNumTypeArgument' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "206",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 85).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "206",
        "column": "6",
        "severity": "error",
        "message": "Class 'ParConstructorAccess' looks like designed for extension (can be subclassed), but the method 'getTypeArgument' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ParConstructorAccess' final or making the method 'getTypeArgument' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "206",
        "column": "78",
        "severity": "error",
        "message": "Parameter i should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "207",
        "column": "23",
        "severity": "error",
        "message": "'typecast' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "213",
        "column": "5",
        "severity": "error",
        "message": "Class 'ParConstructorAccess' looks like designed for extension (can be subclassed), but the method 'addTypeArgument' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ParConstructorAccess' final or making the method 'addTypeArgument' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "213",
        "column": "33",
        "severity": "error",
        "message": "Parameter node should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "214",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 121).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "214",
        "column": "63",
        "severity": "error",
        "message": "Avoid inline conditionals.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.AvoidInlineConditionalsCheck"
    },
    {
        "line": "221",
        "column": "5",
        "severity": "error",
        "message": "Class 'ParConstructorAccess' looks like designed for extension (can be subclassed), but the method 'addTypeArgumentNoTransform' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ParConstructorAccess' final or making the method 'addTypeArgumentNoTransform' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "221",
        "column": "44",
        "severity": "error",
        "message": "Parameter node should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "229",
        "column": "5",
        "severity": "error",
        "message": "Class 'ParConstructorAccess' looks like designed for extension (can be subclassed), but the method 'setTypeArgument' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ParConstructorAccess' final or making the method 'setTypeArgument' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "229",
        "column": "33",
        "severity": "error",
        "message": "Parameter node should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "229",
        "column": "46",
        "severity": "error",
        "message": "Parameter i should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "236",
        "column": "5",
        "severity": "error",
        "message": "Class 'ParConstructorAccess' looks like designed for extension (can be subclassed), but the method 'getTypeArguments' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ParConstructorAccess' final or making the method 'getTypeArguments' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "242",
        "column": "5",
        "severity": "error",
        "message": "Class 'ParConstructorAccess' looks like designed for extension (can be subclassed), but the method 'getTypeArgumentsNoTransform' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ParConstructorAccess' final or making the method 'getTypeArgumentsNoTransform' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "249",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 90).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "249",
        "column": "6",
        "severity": "error",
        "message": "Class 'ParConstructorAccess' looks like designed for extension (can be subclassed), but the method 'getTypeArgumentList' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ParConstructorAccess' final or making the method 'getTypeArgumentList' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "250",
        "column": "42",
        "severity": "error",
        "message": "'typecast' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "258",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 101).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "258",
        "column": "6",
        "severity": "error",
        "message": "Class 'ParConstructorAccess' looks like designed for extension (can be subclassed), but the method 'getTypeArgumentListNoTransform' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ParConstructorAccess' final or making the method 'getTypeArgumentListNoTransform' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "259",
        "column": "29",
        "severity": "error",
        "message": "'typecast' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "263",
        "column": "5",
        "severity": "error",
        "message": "Class 'ParConstructorAccess' looks like designed for extension (can be subclassed), but the method 'Define_NameType_nameType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ParConstructorAccess' final or making the method 'Define_NameType_nameType' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "263",
        "column": "21",
        "severity": "error",
        "message": "Name 'Define_NameType_nameType' must match pattern '^[a-z][a-zA-Z0-9]*$'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.naming.MethodNameCheck"
    },
    {
        "line": "263",
        "column": "46",
        "severity": "error",
        "message": "Parameter caller should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "263",
        "column": "62",
        "severity": "error",
        "message": "Parameter child should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "264",
        "column": "9",
        "severity": "error",
        "message": "'if' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "272",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 94).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "272",
        "column": "5",
        "severity": "error",
        "message": "Class 'ParConstructorAccess' looks like designed for extension (can be subclassed), but the method 'Define_SimpleSet_lookupType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ParConstructorAccess' final or making the method 'Define_SimpleSet_lookupType' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "272",
        "column": "22",
        "severity": "error",
        "message": "Name 'Define_SimpleSet_lookupType' must match pattern '^[a-z][a-zA-Z0-9]*$'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.naming.MethodNameCheck"
    },
    {
        "line": "272",
        "column": "50",
        "severity": "error",
        "message": "Parameter caller should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "272",
        "column": "66",
        "severity": "error",
        "message": "Parameter child should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "272",
        "column": "81",
        "severity": "error",
        "message": "Parameter name should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "273",
        "column": "9",
        "severity": "error",
        "message": "'if' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "280",
        "column": "1",
        "severity": "error",
        "message": "Class 'ParConstructorAccess' looks like designed for extension (can be subclassed), but the method 'rewriteTo' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ParConstructorAccess' final or making the method 'rewriteTo' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    }
]