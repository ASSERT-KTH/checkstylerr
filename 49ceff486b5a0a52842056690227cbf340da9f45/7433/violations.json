[
    {
        "line": "15",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 84).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "23",
        "severity": "error",
        "message": "Line has trailing spaces.",
        "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
    },
    {
        "line": "26",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "26",
        "column": "30",
        "severity": "error",
        "message": "Variable 'ref' must be private and have accessor methods.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheck"
    },
    {
        "line": "41",
        "column": "5",
        "severity": "error",
        "message": "Class 'PassManager' looks like designed for extension (can be subclassed), but the method 'dispose' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PassManager' final or making the method 'dispose' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "47",
        "column": "5",
        "severity": "error",
        "message": "Class 'PassManager' looks like designed for extension (can be subclassed), but the method 'close' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PassManager' final or making the method 'close' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "52",
        "column": "5",
        "severity": "error",
        "message": "Class 'PassManager' looks like designed for extension (can be subclassed), but the method 'addAggressiveDCEPass' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PassManager' final or making the method 'addAggressiveDCEPass' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "56",
        "column": "5",
        "severity": "error",
        "message": "Class 'PassManager' looks like designed for extension (can be subclassed), but the method 'addAlwaysInlinerPass' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PassManager' final or making the method 'addAlwaysInlinerPass' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "60",
        "column": "5",
        "severity": "error",
        "message": "Class 'PassManager' looks like designed for extension (can be subclassed), but the method 'addArgumentPromotionPass' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PassManager' final or making the method 'addArgumentPromotionPass' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "64",
        "column": "5",
        "severity": "error",
        "message": "Class 'PassManager' looks like designed for extension (can be subclassed), but the method 'addBasicAliasAnalysisPass' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PassManager' final or making the method 'addBasicAliasAnalysisPass' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "68",
        "column": "5",
        "severity": "error",
        "message": "Class 'PassManager' looks like designed for extension (can be subclassed), but the method 'addBBVectorizePass' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PassManager' final or making the method 'addBBVectorizePass' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "72",
        "column": "5",
        "severity": "error",
        "message": "Class 'PassManager' looks like designed for extension (can be subclassed), but the method 'addCFGSimplificationPass' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PassManager' final or making the method 'addCFGSimplificationPass' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "76",
        "column": "5",
        "severity": "error",
        "message": "Class 'PassManager' looks like designed for extension (can be subclassed), but the method 'addConstantMergePass' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PassManager' final or making the method 'addConstantMergePass' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "80",
        "column": "5",
        "severity": "error",
        "message": "Class 'PassManager' looks like designed for extension (can be subclassed), but the method 'addConstantPropagationPass' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PassManager' final or making the method 'addConstantPropagationPass' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "84",
        "column": "5",
        "severity": "error",
        "message": "Class 'PassManager' looks like designed for extension (can be subclassed), but the method 'addCorrelatedValuePropagationPass' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PassManager' final or making the method 'addCorrelatedValuePropagationPass' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "88",
        "column": "5",
        "severity": "error",
        "message": "Class 'PassManager' looks like designed for extension (can be subclassed), but the method 'addDeadArgEliminationPass' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PassManager' final or making the method 'addDeadArgEliminationPass' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "92",
        "column": "5",
        "severity": "error",
        "message": "Class 'PassManager' looks like designed for extension (can be subclassed), but the method 'addDeadStoreEliminationPass' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PassManager' final or making the method 'addDeadStoreEliminationPass' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "96",
        "column": "5",
        "severity": "error",
        "message": "Class 'PassManager' looks like designed for extension (can be subclassed), but the method 'addDemoteMemoryToRegisterPass' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PassManager' final or making the method 'addDemoteMemoryToRegisterPass' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "100",
        "column": "5",
        "severity": "error",
        "message": "Class 'PassManager' looks like designed for extension (can be subclassed), but the method 'addEarlyCSEPass' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PassManager' final or making the method 'addEarlyCSEPass' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "104",
        "column": "5",
        "severity": "error",
        "message": "Class 'PassManager' looks like designed for extension (can be subclassed), but the method 'addFunctionAttrsPass' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PassManager' final or making the method 'addFunctionAttrsPass' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "108",
        "column": "5",
        "severity": "error",
        "message": "Class 'PassManager' looks like designed for extension (can be subclassed), but the method 'addFunctionInliningPass' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PassManager' final or making the method 'addFunctionInliningPass' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "112",
        "column": "5",
        "severity": "error",
        "message": "Class 'PassManager' looks like designed for extension (can be subclassed), but the method 'addGlobalDCEPass' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PassManager' final or making the method 'addGlobalDCEPass' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "116",
        "column": "5",
        "severity": "error",
        "message": "Class 'PassManager' looks like designed for extension (can be subclassed), but the method 'addGlobalOptimizerPass' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PassManager' final or making the method 'addGlobalOptimizerPass' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "120",
        "column": "5",
        "severity": "error",
        "message": "Class 'PassManager' looks like designed for extension (can be subclassed), but the method 'addGVNPass' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PassManager' final or making the method 'addGVNPass' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "124",
        "column": "5",
        "severity": "error",
        "message": "Class 'PassManager' looks like designed for extension (can be subclassed), but the method 'addIndVarSimplifyPass' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PassManager' final or making the method 'addIndVarSimplifyPass' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "128",
        "column": "5",
        "severity": "error",
        "message": "Class 'PassManager' looks like designed for extension (can be subclassed), but the method 'addInstructionCombiningPass' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PassManager' final or making the method 'addInstructionCombiningPass' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "132",
        "column": "5",
        "severity": "error",
        "message": "Class 'PassManager' looks like designed for extension (can be subclassed), but the method 'addInternalizePass' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PassManager' final or making the method 'addInternalizePass' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "132",
        "column": "36",
        "severity": "error",
        "message": "Parameter allButMain should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "134",
        "column": "49",
        "severity": "error",
        "message": "Avoid inline conditionals.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.AvoidInlineConditionalsCheck"
    },
    {
        "line": "136",
        "column": "5",
        "severity": "error",
        "message": "Class 'PassManager' looks like designed for extension (can be subclassed), but the method 'addIPConstantPropagationPass' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PassManager' final or making the method 'addIPConstantPropagationPass' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "140",
        "column": "5",
        "severity": "error",
        "message": "Class 'PassManager' looks like designed for extension (can be subclassed), but the method 'addIPSCCPPass' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PassManager' final or making the method 'addIPSCCPPass' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "144",
        "column": "5",
        "severity": "error",
        "message": "Class 'PassManager' looks like designed for extension (can be subclassed), but the method 'addJumpThreadingPass' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PassManager' final or making the method 'addJumpThreadingPass' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "148",
        "column": "5",
        "severity": "error",
        "message": "Class 'PassManager' looks like designed for extension (can be subclassed), but the method 'addLICMPass' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PassManager' final or making the method 'addLICMPass' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "152",
        "column": "5",
        "severity": "error",
        "message": "Class 'PassManager' looks like designed for extension (can be subclassed), but the method 'addLoopDeletionPass' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PassManager' final or making the method 'addLoopDeletionPass' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "156",
        "column": "5",
        "severity": "error",
        "message": "Class 'PassManager' looks like designed for extension (can be subclassed), but the method 'addLoopIdiomPass' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PassManager' final or making the method 'addLoopIdiomPass' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "160",
        "column": "5",
        "severity": "error",
        "message": "Class 'PassManager' looks like designed for extension (can be subclassed), but the method 'addLoopRotatePass' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PassManager' final or making the method 'addLoopRotatePass' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "164",
        "column": "5",
        "severity": "error",
        "message": "Class 'PassManager' looks like designed for extension (can be subclassed), but the method 'addLoopUnrollPass' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PassManager' final or making the method 'addLoopUnrollPass' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "168",
        "column": "5",
        "severity": "error",
        "message": "Class 'PassManager' looks like designed for extension (can be subclassed), but the method 'addLoopUnswitchPass' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PassManager' final or making the method 'addLoopUnswitchPass' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "172",
        "column": "5",
        "severity": "error",
        "message": "Class 'PassManager' looks like designed for extension (can be subclassed), but the method 'addLoopVectorizePass' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PassManager' final or making the method 'addLoopVectorizePass' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "176",
        "column": "5",
        "severity": "error",
        "message": "Class 'PassManager' looks like designed for extension (can be subclassed), but the method 'addLowerExpectIntrinsicPass' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PassManager' final or making the method 'addLowerExpectIntrinsicPass' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "180",
        "column": "5",
        "severity": "error",
        "message": "Class 'PassManager' looks like designed for extension (can be subclassed), but the method 'addMemCpyOptPass' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PassManager' final or making the method 'addMemCpyOptPass' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "184",
        "column": "5",
        "severity": "error",
        "message": "Class 'PassManager' looks like designed for extension (can be subclassed), but the method 'addPromoteMemoryToRegisterPass' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PassManager' final or making the method 'addPromoteMemoryToRegisterPass' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "188",
        "column": "5",
        "severity": "error",
        "message": "Class 'PassManager' looks like designed for extension (can be subclassed), but the method 'addPruneEHPass' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PassManager' final or making the method 'addPruneEHPass' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "192",
        "column": "5",
        "severity": "error",
        "message": "Class 'PassManager' looks like designed for extension (can be subclassed), but the method 'addReassociatePass' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PassManager' final or making the method 'addReassociatePass' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "196",
        "column": "5",
        "severity": "error",
        "message": "Class 'PassManager' looks like designed for extension (can be subclassed), but the method 'addScalarReplAggregatesPass' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PassManager' final or making the method 'addScalarReplAggregatesPass' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "200",
        "column": "5",
        "severity": "error",
        "message": "Class 'PassManager' looks like designed for extension (can be subclassed), but the method 'addScalarReplAggregatesPassSSA' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PassManager' final or making the method 'addScalarReplAggregatesPassSSA' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "204",
        "column": "5",
        "severity": "error",
        "message": "Class 'PassManager' looks like designed for extension (can be subclassed), but the method 'addScalarReplAggregatesPassWithThreshold' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PassManager' final or making the method 'addScalarReplAggregatesPassWithThreshold' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "204",
        "column": "58",
        "severity": "error",
        "message": "Parameter threshold should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "208",
        "column": "5",
        "severity": "error",
        "message": "Class 'PassManager' looks like designed for extension (can be subclassed), but the method 'addSCCPPass' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PassManager' final or making the method 'addSCCPPass' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "212",
        "column": "5",
        "severity": "error",
        "message": "Class 'PassManager' looks like designed for extension (can be subclassed), but the method 'addSimplifyLibCallsPass' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PassManager' final or making the method 'addSimplifyLibCallsPass' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "216",
        "column": "5",
        "severity": "error",
        "message": "Class 'PassManager' looks like designed for extension (can be subclassed), but the method 'addSLPVectorizePass' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PassManager' final or making the method 'addSLPVectorizePass' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "220",
        "column": "5",
        "severity": "error",
        "message": "Class 'PassManager' looks like designed for extension (can be subclassed), but the method 'addStripDeadPrototypesPass' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PassManager' final or making the method 'addStripDeadPrototypesPass' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "224",
        "column": "5",
        "severity": "error",
        "message": "Class 'PassManager' looks like designed for extension (can be subclassed), but the method 'addStripSymbolsPass' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PassManager' final or making the method 'addStripSymbolsPass' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "228",
        "column": "5",
        "severity": "error",
        "message": "Class 'PassManager' looks like designed for extension (can be subclassed), but the method 'addTailCallEliminationPass' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PassManager' final or making the method 'addTailCallEliminationPass' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "232",
        "column": "5",
        "severity": "error",
        "message": "Class 'PassManager' looks like designed for extension (can be subclassed), but the method 'addTypeBasedAliasAnalysisPass' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PassManager' final or making the method 'addTypeBasedAliasAnalysisPass' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "236",
        "column": "5",
        "severity": "error",
        "message": "Class 'PassManager' looks like designed for extension (can be subclassed), but the method 'addVerifierPass' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PassManager' final or making the method 'addVerifierPass' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "240",
        "severity": "error",
        "message": "Line has trailing spaces.",
        "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
    },
    {
        "line": "241",
        "column": "5",
        "severity": "error",
        "message": "Class 'PassManager' looks like designed for extension (can be subclassed), but the method 'run' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PassManager' final or making the method 'run' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "241",
        "column": "21",
        "severity": "error",
        "message": "Parameter module should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "246",
        "column": "5",
        "severity": "error",
        "message": "Class 'PassManager' looks like designed for extension (can be subclassed), but the method 'hashCode' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PassManager' final or making the method 'hashCode' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "250",
        "column": "50",
        "severity": "error",
        "message": "Avoid inline conditionals.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.AvoidInlineConditionalsCheck"
    },
    {
        "line": "254",
        "column": "5",
        "severity": "error",
        "message": "Class 'PassManager' looks like designed for extension (can be subclassed), but the method 'equals' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'PassManager' final or making the method 'equals' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "255",
        "column": "27",
        "severity": "error",
        "message": "Parameter obj should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    }
]