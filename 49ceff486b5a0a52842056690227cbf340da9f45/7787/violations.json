[
    {
        "line": "5",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - soot.jimple.parser.node.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "8",
        "column": "1",
        "severity": "error",
        "message": "'{' at column 1 should be on the previous line.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
    },
    {
        "line": "9",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "9",
        "column": "11",
        "severity": "error",
        "message": "Variable 'token' must be private and have accessor methods.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheck"
    },
    {
        "line": "11",
        "column": "28",
        "severity": "error",
        "message": "Parameter token should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "11",
        "column": "34",
        "severity": "error",
        "message": "'token' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "11",
        "column": "41",
        "severity": "error",
        "message": "Parameter message should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "12",
        "column": "5",
        "severity": "error",
        "message": "'{' at column 5 should be on the previous line.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
    },
    {
        "line": "17",
        "column": "5",
        "severity": "error",
        "message": "Class 'ParserException' looks like designed for extension (can be subclassed), but the method 'getToken' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ParserException' final or making the method 'getToken' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "18",
        "column": "5",
        "severity": "error",
        "message": "'{' at column 5 should be on the previous line.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
    }
]