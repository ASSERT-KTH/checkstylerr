[
    {
        "line": "1",
        "severity": "error",
        "message": "Missing package-info.java file.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocPackageCheck"
    },
    {
        "line": "15",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 84).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "33",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "35",
        "column": "26",
        "severity": "error",
        "message": "Parameter name should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "38",
        "severity": "error",
        "message": "Line has trailing spaces.",
        "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
    },
    {
        "line": "39",
        "column": "26",
        "severity": "error",
        "message": "Parameter sootClass should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "39",
        "column": "36",
        "severity": "error",
        "message": "'sootClass' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "43",
        "column": "5",
        "severity": "error",
        "message": "Class 'SootClassType' looks like designed for extension (can be subclassed), but the method 'getSootClass' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SootClassType' final or making the method 'getSootClass' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "46",
        "severity": "error",
        "message": "Line has trailing spaces.",
        "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
    },
    {
        "line": "47",
        "column": "38",
        "severity": "error",
        "message": "Parameter sub should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "59",
        "column": "39",
        "severity": "error",
        "message": "Avoid inline conditionals.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.AvoidInlineConditionalsCheck"
    },
    {
        "line": "67",
        "column": "5",
        "severity": "error",
        "message": "Class 'SootClassType' looks like designed for extension (can be subclassed), but the method 'isAssignableFrom' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SootClassType' final or making the method 'isAssignableFrom' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "67",
        "column": "37",
        "severity": "error",
        "message": "Parameter c should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "70",
        "severity": "error",
        "message": "Line has trailing spaces.",
        "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
    },
    {
        "line": "71",
        "column": "5",
        "severity": "error",
        "message": "Class 'SootClassType' looks like designed for extension (can be subclassed), but the method 'getTypeParameters' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SootClassType' final or making the method 'getTypeParameters' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "74",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 84).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "77",
        "severity": "error",
        "message": "Line has trailing spaces.",
        "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
    },
    {
        "line": "78",
        "column": "5",
        "severity": "error",
        "message": "Class 'SootClassType' looks like designed for extension (can be subclassed), but the method 'getGenericInterfaces' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SootClassType' final or making the method 'getGenericInterfaces' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "80",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 84).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "84",
        "column": "5",
        "severity": "error",
        "message": "Class 'SootClassType' looks like designed for extension (can be subclassed), but the method 'getGenericSuperclass' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SootClassType' final or making the method 'getGenericSuperclass' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "86",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 84).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "90",
        "column": "47",
        "severity": "error",
        "message": "Parameter constructor should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "91",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 95).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "97",
        "severity": "error",
        "message": "Line has trailing spaces.",
        "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
    },
    {
        "line": "98",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 98).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "102",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 85).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "103",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 81).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "114",
        "column": "5",
        "severity": "error",
        "message": "Class 'SootClassType' looks like designed for extension (can be subclassed), but the method 'getEnclosingMethod' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SootClassType' final or making the method 'getEnclosingMethod' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "118",
        "column": "5",
        "severity": "error",
        "message": "Class 'SootClassType' looks like designed for extension (can be subclassed), but the method 'getEnclosingConstructor' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SootClassType' final or making the method 'getEnclosingConstructor' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "122",
        "column": "5",
        "severity": "error",
        "message": "Class 'SootClassType' looks like designed for extension (can be subclassed), but the method 'getEnclosingClass' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SootClassType' final or making the method 'getEnclosingClass' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "123",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 95).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "130",
        "column": "5",
        "severity": "error",
        "message": "Class 'SootClassType' looks like designed for extension (can be subclassed), but the method 'getSuperclass' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SootClassType' final or making the method 'getSuperclass' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "134",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 95).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "134",
        "column": "42",
        "severity": "error",
        "message": "Avoid inline conditionals.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.AvoidInlineConditionalsCheck"
    },
    {
        "line": "137",
        "column": "5",
        "severity": "error",
        "message": "Class 'SootClassType' looks like designed for extension (can be subclassed), but the method 'getInterfaces' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SootClassType' final or making the method 'getInterfaces' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "144",
        "column": "5",
        "severity": "error",
        "message": "Class 'SootClassType' looks like designed for extension (can be subclassed), but the method 'getDeclaringClass' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SootClassType' final or making the method 'getDeclaringClass' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "148",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 85).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "151",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 90).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "158",
        "severity": "error",
        "message": "Line has trailing spaces.",
        "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
    },
    {
        "line": "159",
        "column": "5",
        "severity": "error",
        "message": "Class 'SootClassType' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SootClassType' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "163",
        "severity": "error",
        "message": "Line has trailing spaces.",
        "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
    },
    {
        "line": "164",
        "column": "5",
        "severity": "error",
        "message": "Class 'SootClassType' looks like designed for extension (can be subclassed), but the method 'hashCode' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SootClassType' final or making the method 'hashCode' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "168",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 83).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "168",
        "column": "56",
        "severity": "error",
        "message": "Avoid inline conditionals.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.AvoidInlineConditionalsCheck"
    },
    {
        "line": "172",
        "column": "5",
        "severity": "error",
        "message": "Class 'SootClassType' looks like designed for extension (can be subclassed), but the method 'equals' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SootClassType' final or making the method 'equals' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "173",
        "column": "27",
        "severity": "error",
        "message": "Parameter obj should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "197",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 88).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "200",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 110).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "215",
        "severity": "error",
        "message": "Line has trailing spaces.",
        "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
    },
    {
        "line": "216",
        "column": "5",
        "severity": "error",
        "message": "Class 'SootClassType' looks like designed for extension (can be subclassed), but the method 'toGenericSignature' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SootClassType' final or making the method 'toGenericSignature' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    }
]