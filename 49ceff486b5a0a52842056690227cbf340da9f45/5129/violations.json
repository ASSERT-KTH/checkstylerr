[
    {
        "line": "73",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 90).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "81",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "82",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "83",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "84",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "85",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "86",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "87",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "94",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 81).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "95",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 83).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "96",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 81).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "97",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 83).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "100",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 87).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "102",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 87).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "110",
        "column": "38",
        "severity": "error",
        "message": "'messageConstraints' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "111",
        "column": "41",
        "severity": "error",
        "message": "'incomingContentStrategy' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "112",
        "column": "41",
        "severity": "error",
        "message": "'outgoingContentStrategy' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "115",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 91).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "116",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 92).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "117",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 86).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "118",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 107).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "118",
        "column": "44",
        "severity": "error",
        "message": "Avoid inline conditionals.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.AvoidInlineConditionalsCheck"
    },
    {
        "line": "119",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 103).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "122",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 98).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "123",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 98).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "123",
        "column": "72",
        "severity": "error",
        "message": "Avoid inline conditionals.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.AvoidInlineConditionalsCheck"
    },
    {
        "line": "123",
        "column": "98",
        "severity": "error",
        "message": "':' should be on a new line.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
    },
    {
        "line": "125",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 98).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "125",
        "column": "72",
        "severity": "error",
        "message": "Avoid inline conditionals.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.AvoidInlineConditionalsCheck"
    },
    {
        "line": "125",
        "column": "98",
        "severity": "error",
        "message": "':' should be on a new line.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
    },
    {
        "line": "130",
        "column": "5",
        "severity": "error",
        "message": "Class 'BHttpConnectionBase' looks like designed for extension (can be subclassed), but the method 'ensureOpen' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BHttpConnectionBase' final or making the method 'ensureOpen' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "143",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 88).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "143",
        "column": "5",
        "severity": "error",
        "message": "Class 'BHttpConnectionBase' looks like designed for extension (can be subclassed), but the method 'getSocketInputStream' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BHttpConnectionBase' final or making the method 'getSocketInputStream' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "147",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 90).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "147",
        "column": "5",
        "severity": "error",
        "message": "Class 'BHttpConnectionBase' looks like designed for extension (can be subclassed), but the method 'getSocketOutputStream' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BHttpConnectionBase' final or making the method 'getSocketOutputStream' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "168",
        "column": "5",
        "severity": "error",
        "message": "Class 'BHttpConnectionBase' looks like designed for extension (can be subclassed), but the method 'getSessionInputBuffer' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BHttpConnectionBase' final or making the method 'getSessionInputBuffer' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "172",
        "column": "5",
        "severity": "error",
        "message": "Class 'BHttpConnectionBase' looks like designed for extension (can be subclassed), but the method 'getSessionOutputBuffer' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BHttpConnectionBase' final or making the method 'getSessionOutputBuffer' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "176",
        "column": "5",
        "severity": "error",
        "message": "Class 'BHttpConnectionBase' looks like designed for extension (can be subclassed), but the method 'doFlush' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BHttpConnectionBase' final or making the method 'doFlush' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "180",
        "column": "5",
        "severity": "error",
        "message": "Class 'BHttpConnectionBase' looks like designed for extension (can be subclassed), but the method 'isOpen' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BHttpConnectionBase' final or making the method 'isOpen' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "185",
        "column": "5",
        "severity": "error",
        "message": "Class 'BHttpConnectionBase' looks like designed for extension (can be subclassed), but the method 'getSocket' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BHttpConnectionBase' final or making the method 'getSocket' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "189",
        "column": "5",
        "severity": "error",
        "message": "Class 'BHttpConnectionBase' looks like designed for extension (can be subclassed), but the method 'createOutputStream' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BHttpConnectionBase' final or making the method 'createOutputStream' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "191",
        "column": "39",
        "severity": "error",
        "message": "'outbuffer' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "193",
        "column": "44",
        "severity": "error",
        "message": "'2048' is a magic number.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck"
    },
    {
        "line": "201",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 90).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "201",
        "column": "5",
        "severity": "error",
        "message": "Class 'BHttpConnectionBase' looks like designed for extension (can be subclassed), but the method 'prepareOutput' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BHttpConnectionBase' final or making the method 'prepareOutput' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "206",
        "column": "5",
        "severity": "error",
        "message": "Class 'BHttpConnectionBase' looks like designed for extension (can be subclassed), but the method 'createInputStream' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BHttpConnectionBase' final or making the method 'createInputStream' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "208",
        "column": "38",
        "severity": "error",
        "message": "'inbuffer' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "220",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 87).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "220",
        "column": "5",
        "severity": "error",
        "message": "Class 'BHttpConnectionBase' looks like designed for extension (can be subclassed), but the method 'prepareInput' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BHttpConnectionBase' final or making the method 'prepareInput' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "239",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 83).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "243",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 91).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "250",
        "column": "5",
        "severity": "error",
        "message": "Class 'BHttpConnectionBase' looks like designed for extension (can be subclassed), but the method 'getLocalAddress' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BHttpConnectionBase' final or making the method 'getLocalAddress' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "253",
        "column": "31",
        "severity": "error",
        "message": "Avoid inline conditionals.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.AvoidInlineConditionalsCheck"
    },
    {
        "line": "256",
        "column": "5",
        "severity": "error",
        "message": "Class 'BHttpConnectionBase' looks like designed for extension (can be subclassed), but the method 'getLocalPort' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BHttpConnectionBase' final or making the method 'getLocalPort' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "259",
        "column": "31",
        "severity": "error",
        "message": "Avoid inline conditionals.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.AvoidInlineConditionalsCheck"
    },
    {
        "line": "262",
        "column": "5",
        "severity": "error",
        "message": "Class 'BHttpConnectionBase' looks like designed for extension (can be subclassed), but the method 'getRemoteAddress' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BHttpConnectionBase' final or making the method 'getRemoteAddress' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "265",
        "column": "31",
        "severity": "error",
        "message": "Avoid inline conditionals.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.AvoidInlineConditionalsCheck"
    },
    {
        "line": "268",
        "column": "5",
        "severity": "error",
        "message": "Class 'BHttpConnectionBase' looks like designed for extension (can be subclassed), but the method 'getRemotePort' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BHttpConnectionBase' final or making the method 'getRemotePort' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "271",
        "column": "31",
        "severity": "error",
        "message": "Avoid inline conditionals.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.AvoidInlineConditionalsCheck"
    },
    {
        "line": "274",
        "column": "5",
        "severity": "error",
        "message": "Class 'BHttpConnectionBase' looks like designed for extension (can be subclassed), but the method 'setSocketTimeout' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BHttpConnectionBase' final or making the method 'setSocketTimeout' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "281",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 86).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "282",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 90).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "288",
        "column": "5",
        "severity": "error",
        "message": "Class 'BHttpConnectionBase' looks like designed for extension (can be subclassed), but the method 'getSocketTimeout' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BHttpConnectionBase' final or making the method 'getSocketTimeout' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "302",
        "column": "5",
        "severity": "error",
        "message": "Class 'BHttpConnectionBase' looks like designed for extension (can be subclassed), but the method 'shutdown' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BHttpConnectionBase' final or making the method 'shutdown' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "316",
        "column": "5",
        "severity": "error",
        "message": "Class 'BHttpConnectionBase' looks like designed for extension (can be subclassed), but the method 'close' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BHttpConnectionBase' final or making the method 'close' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "352",
        "column": "5",
        "severity": "error",
        "message": "Class 'BHttpConnectionBase' looks like designed for extension (can be subclassed), but the method 'awaitInput' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BHttpConnectionBase' final or making the method 'awaitInput' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "360",
        "column": "5",
        "severity": "error",
        "message": "Class 'BHttpConnectionBase' looks like designed for extension (can be subclassed), but the method 'isStale' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BHttpConnectionBase' final or making the method 'isStale' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "375",
        "column": "5",
        "severity": "error",
        "message": "Class 'BHttpConnectionBase' looks like designed for extension (can be subclassed), but the method 'incrementRequestCount' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BHttpConnectionBase' final or making the method 'incrementRequestCount' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "379",
        "column": "5",
        "severity": "error",
        "message": "Class 'BHttpConnectionBase' looks like designed for extension (can be subclassed), but the method 'incrementResponseCount' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BHttpConnectionBase' final or making the method 'incrementResponseCount' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "383",
        "column": "5",
        "severity": "error",
        "message": "Class 'BHttpConnectionBase' looks like designed for extension (can be subclassed), but the method 'getMetrics' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BHttpConnectionBase' final or making the method 'getMetrics' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "388",
        "column": "5",
        "severity": "error",
        "message": "Class 'BHttpConnectionBase' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BHttpConnectionBase' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    }
]