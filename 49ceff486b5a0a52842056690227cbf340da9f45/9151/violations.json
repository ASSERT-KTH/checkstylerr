[
    {
        "line": "15",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 84).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "49",
        "column": "8",
        "severity": "error",
        "message": "Unused import - com.bugvm.compiler.Version.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck"
    },
    {
        "line": "109",
        "column": "9",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "113",
        "column": "9",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "113",
        "column": "15",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "113",
        "column": "29",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "116",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "118",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "120",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "122",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "124",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "126",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "128",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "130",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "132",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "134",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "136",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "138",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "140",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "142",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "144",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "146",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "148",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "150",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "152",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "154",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "156",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "158",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "160",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "163",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "165",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "167",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "169",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "172",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "175",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "176",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "177",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "178",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "180",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "182",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "184",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "185",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "186",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "187",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "189",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "190",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "191",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "192",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "193",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "194",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "195",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "196",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "204",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "205",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "206",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "207",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "208",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "209",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "210",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "211",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "212",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "213",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "214",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "215",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "216",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "231",
        "column": "43",
        "severity": "error",
        "message": "'(' is preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.MethodParamPadCheck"
    },
    {
        "line": "239",
        "severity": "error",
        "message": "Expected @return tag.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "239",
        "column": "37",
        "severity": "error",
        "message": "Expected @throws tag for 'IOException'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "243",
        "column": "5",
        "severity": "error",
        "message": "Class 'Config' looks like designed for extension (can be subclassed), but the method 'getHome' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Config' final or making the method 'getHome' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "247",
        "column": "5",
        "severity": "error",
        "message": "Class 'Config' looks like designed for extension (can be subclassed), but the method 'getInstallDir' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Config' final or making the method 'getInstallDir' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "251",
        "column": "5",
        "severity": "error",
        "message": "Class 'Config' looks like designed for extension (can be subclassed), but the method 'getExecutableName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Config' final or making the method 'getExecutableName' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "255",
        "column": "5",
        "severity": "error",
        "message": "Class 'Config' looks like designed for extension (can be subclassed), but the method 'getImageName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Config' final or making the method 'getImageName' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "259",
        "column": "5",
        "severity": "error",
        "message": "Class 'Config' looks like designed for extension (can be subclassed), but the method 'getExecutablePath' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Config' final or making the method 'getExecutablePath' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "263",
        "column": "5",
        "severity": "error",
        "message": "Class 'Config' looks like designed for extension (can be subclassed), but the method 'getImagePath' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Config' final or making the method 'getImagePath' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "267",
        "column": "5",
        "severity": "error",
        "message": "Class 'Config' looks like designed for extension (can be subclassed), but the method 'getCacheDir' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Config' final or making the method 'getCacheDir' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "271",
        "column": "5",
        "severity": "error",
        "message": "Class 'Config' looks like designed for extension (can be subclassed), but the method 'getCcBinPath' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Config' final or making the method 'getCcBinPath' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "275",
        "column": "5",
        "severity": "error",
        "message": "Class 'Config' looks like designed for extension (can be subclassed), but the method 'getOs' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Config' final or making the method 'getOs' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "279",
        "column": "5",
        "severity": "error",
        "message": "Class 'Config' looks like designed for extension (can be subclassed), but the method 'getArch' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Config' final or making the method 'getArch' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "283",
        "column": "5",
        "severity": "error",
        "message": "Class 'Config' looks like designed for extension (can be subclassed), but the method 'getArchs' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Config' final or making the method 'getArchs' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "284",
        "column": "30",
        "severity": "error",
        "message": "Avoid inline conditionals.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.AvoidInlineConditionalsCheck"
    },
    {
        "line": "284",
        "column": "49",
        "severity": "error",
        "message": "'>' is followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
    },
    {
        "line": "287",
        "severity": "error",
        "message": "Line has trailing spaces.",
        "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
    },
    {
        "line": "288",
        "column": "5",
        "severity": "error",
        "message": "Class 'Config' looks like designed for extension (can be subclassed), but the method 'getTriple' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Config' final or making the method 'getTriple' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "292",
        "column": "5",
        "severity": "error",
        "message": "Class 'Config' looks like designed for extension (can be subclassed), but the method 'getClangTriple' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Config' final or making the method 'getClangTriple' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "296",
        "column": "5",
        "severity": "error",
        "message": "Class 'Config' looks like designed for extension (can be subclassed), but the method 'getDataLayout' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Config' final or making the method 'getDataLayout' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "300",
        "column": "5",
        "severity": "error",
        "message": "Class 'Config' looks like designed for extension (can be subclassed), but the method 'isClean' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Config' final or making the method 'isClean' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "304",
        "column": "5",
        "severity": "error",
        "message": "Class 'Config' looks like designed for extension (can be subclassed), but the method 'isDebug' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Config' final or making the method 'isDebug' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "308",
        "column": "5",
        "severity": "error",
        "message": "Class 'Config' looks like designed for extension (can be subclassed), but the method 'isUseDebugLibs' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Config' final or making the method 'isUseDebugLibs' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "312",
        "column": "5",
        "severity": "error",
        "message": "Class 'Config' looks like designed for extension (can be subclassed), but the method 'isDumpIntermediates' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Config' final or making the method 'isDumpIntermediates' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "316",
        "column": "5",
        "severity": "error",
        "message": "Class 'Config' looks like designed for extension (can be subclassed), but the method 'isSkipRuntimeLib' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Config' final or making the method 'isSkipRuntimeLib' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "320",
        "column": "5",
        "severity": "error",
        "message": "Class 'Config' looks like designed for extension (can be subclassed), but the method 'isSkipLinking' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Config' final or making the method 'isSkipLinking' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "324",
        "column": "5",
        "severity": "error",
        "message": "Class 'Config' looks like designed for extension (can be subclassed), but the method 'isSkipInstall' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Config' final or making the method 'isSkipInstall' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "328",
        "column": "5",
        "severity": "error",
        "message": "Class 'Config' looks like designed for extension (can be subclassed), but the method 'getThreads' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Config' final or making the method 'getThreads' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "332",
        "column": "5",
        "severity": "error",
        "message": "Class 'Config' looks like designed for extension (can be subclassed), but the method 'getMainJar' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Config' final or making the method 'getMainJar' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "336",
        "column": "5",
        "severity": "error",
        "message": "Class 'Config' looks like designed for extension (can be subclassed), but the method 'getMainClass' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Config' final or making the method 'getMainClass' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "340",
        "column": "5",
        "severity": "error",
        "message": "Class 'Config' looks like designed for extension (can be subclassed), but the method 'getCacerts' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Config' final or making the method 'getCacerts' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "341",
        "column": "32",
        "severity": "error",
        "message": "Avoid inline conditionals.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.AvoidInlineConditionalsCheck"
    },
    {
        "line": "344",
        "column": "5",
        "severity": "error",
        "message": "Class 'Config' looks like designed for extension (can be subclassed), but the method 'getResourcesPaths' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Config' final or making the method 'getResourcesPaths' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "348",
        "column": "5",
        "severity": "error",
        "message": "Class 'Config' looks like designed for extension (can be subclassed), but the method 'addResourcesPath' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Config' final or making the method 'addResourcesPath' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "348",
        "column": "34",
        "severity": "error",
        "message": "Parameter path should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "352",
        "column": "5",
        "severity": "error",
        "message": "Class 'Config' looks like designed for extension (can be subclassed), but the method 'getDependencyGraph' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Config' final or making the method 'getDependencyGraph' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "355",
        "severity": "error",
        "message": "Line has trailing spaces.",
        "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
    },
    {
        "line": "356",
        "column": "5",
        "severity": "error",
        "message": "Class 'Config' looks like designed for extension (can be subclassed), but the method 'getTmpDir' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Config' final or making the method 'getTmpDir' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "369",
        "column": "5",
        "severity": "error",
        "message": "Class 'Config' looks like designed for extension (can be subclassed), but the method 'getForceLinkClasses' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Config' final or making the method 'getForceLinkClasses' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "370",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 124).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "370",
        "column": "41",
        "severity": "error",
        "message": "Avoid inline conditionals.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.AvoidInlineConditionalsCheck"
    },
    {
        "line": "370",
        "column": "62",
        "severity": "error",
        "message": "'>' is followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
    },
    {
        "line": "373",
        "column": "5",
        "severity": "error",
        "message": "Class 'Config' looks like designed for extension (can be subclassed), but the method 'getExportedSymbols' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Config' final or making the method 'getExportedSymbols' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "374",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 122).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "374",
        "column": "40",
        "severity": "error",
        "message": "Avoid inline conditionals.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.AvoidInlineConditionalsCheck"
    },
    {
        "line": "374",
        "column": "61",
        "severity": "error",
        "message": "'>' is followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
    },
    {
        "line": "377",
        "column": "5",
        "severity": "error",
        "message": "Class 'Config' looks like designed for extension (can be subclassed), but the method 'getUnhideSymbols' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Config' final or making the method 'getUnhideSymbols' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "378",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 118).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "378",
        "column": "38",
        "severity": "error",
        "message": "Avoid inline conditionals.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.AvoidInlineConditionalsCheck"
    },
    {
        "line": "378",
        "column": "59",
        "severity": "error",
        "message": "'>' is followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
    },
    {
        "line": "380",
        "severity": "error",
        "message": "Line has trailing spaces.",
        "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
    },
    {
        "line": "381",
        "column": "5",
        "severity": "error",
        "message": "Class 'Config' looks like designed for extension (can be subclassed), but the method 'getLibs' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Config' final or making the method 'getLibs' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "382",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 97).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "382",
        "column": "29",
        "severity": "error",
        "message": "Avoid inline conditionals.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.AvoidInlineConditionalsCheck"
    },
    {
        "line": "382",
        "column": "47",
        "severity": "error",
        "message": "'>' is followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
    },
    {
        "line": "385",
        "column": "5",
        "severity": "error",
        "message": "Class 'Config' looks like designed for extension (can be subclassed), but the method 'getFrameworks' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Config' final or making the method 'getFrameworks' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "386",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 112).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "386",
        "column": "35",
        "severity": "error",
        "message": "Avoid inline conditionals.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.AvoidInlineConditionalsCheck"
    },
    {
        "line": "386",
        "column": "56",
        "severity": "error",
        "message": "'>' is followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
    },
    {
        "line": "389",
        "column": "5",
        "severity": "error",
        "message": "Class 'Config' looks like designed for extension (can be subclassed), but the method 'getWeakFrameworks' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Config' final or making the method 'getWeakFrameworks' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "390",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 120).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "390",
        "column": "39",
        "severity": "error",
        "message": "Avoid inline conditionals.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.AvoidInlineConditionalsCheck"
    },
    {
        "line": "390",
        "column": "60",
        "severity": "error",
        "message": "'>' is followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
    },
    {
        "line": "393",
        "column": "5",
        "severity": "error",
        "message": "Class 'Config' looks like designed for extension (can be subclassed), but the method 'getFrameworkPaths' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Config' final or making the method 'getFrameworkPaths' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "394",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 118).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "394",
        "column": "39",
        "severity": "error",
        "message": "Avoid inline conditionals.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.AvoidInlineConditionalsCheck"
    },
    {
        "line": "394",
        "column": "58",
        "severity": "error",
        "message": "'>' is followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
    },
    {
        "line": "397",
        "column": "5",
        "severity": "error",
        "message": "Class 'Config' looks like designed for extension (can be subclassed), but the method 'getResources' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Config' final or making the method 'getResources' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "398",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 112).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "398",
        "column": "34",
        "severity": "error",
        "message": "Avoid inline conditionals.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.AvoidInlineConditionalsCheck"
    },
    {
        "line": "398",
        "column": "57",
        "severity": "error",
        "message": "'>' is followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
    },
    {
        "line": "401",
        "column": "5",
        "severity": "error",
        "message": "Class 'Config' looks like designed for extension (can be subclassed), but the method 'getOsArchDepLibDir' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Config' final or making the method 'getOsArchDepLibDir' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "405",
        "column": "5",
        "severity": "error",
        "message": "Class 'Config' looks like designed for extension (can be subclassed), but the method 'getClazzes' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Config' final or making the method 'getClazzes' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "409",
        "column": "5",
        "severity": "error",
        "message": "Class 'Config' looks like designed for extension (can be subclassed), but the method 'getVTableCache' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Config' final or making the method 'getVTableCache' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "413",
        "column": "5",
        "severity": "error",
        "message": "Class 'Config' looks like designed for extension (can be subclassed), but the method 'getITableCache' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Config' final or making the method 'getITableCache' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "417",
        "column": "5",
        "severity": "error",
        "message": "Class 'Config' looks like designed for extension (can be subclassed), but the method 'getMarshalerLookup' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Config' final or making the method 'getMarshalerLookup' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "421",
        "column": "5",
        "severity": "error",
        "message": "Class 'Config' looks like designed for extension (can be subclassed), but the method 'getCompilerPlugins' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Config' final or making the method 'getCompilerPlugins' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "431",
        "column": "5",
        "severity": "error",
        "message": "Class 'Config' looks like designed for extension (can be subclassed), but the method 'getLaunchPlugins' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Config' final or making the method 'getLaunchPlugins' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "441",
        "column": "5",
        "severity": "error",
        "message": "Class 'Config' looks like designed for extension (can be subclassed), but the method 'getTargetPlugins' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Config' final or making the method 'getTargetPlugins' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "451",
        "column": "5",
        "severity": "error",
        "message": "Class 'Config' looks like designed for extension (can be subclassed), but the method 'getPlugins' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Config' final or making the method 'getPlugins' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "455",
        "column": "5",
        "severity": "error",
        "message": "Class 'Config' looks like designed for extension (can be subclassed), but the method 'getPluginArguments' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Config' final or making the method 'getPluginArguments' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "456",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 122).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "456",
        "column": "40",
        "severity": "error",
        "message": "Avoid inline conditionals.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.AvoidInlineConditionalsCheck"
    },
    {
        "line": "456",
        "column": "61",
        "severity": "error",
        "message": "'>' is followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
    },
    {
        "line": "459",
        "column": "5",
        "severity": "error",
        "message": "Class 'Config' looks like designed for extension (can be subclassed), but the method 'getBootclasspath' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Config' final or making the method 'getBootclasspath' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "460",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 116).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "460",
        "column": "38",
        "severity": "error",
        "message": "Avoid inline conditionals.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.AvoidInlineConditionalsCheck"
    },
    {
        "line": "460",
        "column": "57",
        "severity": "error",
        "message": "'>' is followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
    },
    {
        "line": "463",
        "column": "5",
        "severity": "error",
        "message": "Class 'Config' looks like designed for extension (can be subclassed), but the method 'getClasspath' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Config' final or making the method 'getClasspath' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "464",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 108).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "464",
        "column": "34",
        "severity": "error",
        "message": "Avoid inline conditionals.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.AvoidInlineConditionalsCheck"
    },
    {
        "line": "464",
        "column": "53",
        "severity": "error",
        "message": "'>' is followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
    },
    {
        "line": "467",
        "column": "5",
        "severity": "error",
        "message": "Class 'Config' looks like designed for extension (can be subclassed), but the method 'getProperties' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Config' final or making the method 'getProperties' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "471",
        "column": "5",
        "severity": "error",
        "message": "Class 'Config' looks like designed for extension (can be subclassed), but the method 'getLogger' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Config' final or making the method 'getLogger' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "475",
        "column": "5",
        "severity": "error",
        "message": "Class 'Config' looks like designed for extension (can be subclassed), but the method 'getTarget' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Config' final or making the method 'getTarget' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "479",
        "column": "5",
        "severity": "error",
        "message": "Class 'Config' looks like designed for extension (can be subclassed), but the method 'getTargetType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Config' final or making the method 'getTargetType' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "483",
        "column": "5",
        "severity": "error",
        "message": "Class 'Config' looks like designed for extension (can be subclassed), but the method 'getTreeShakerMode' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Config' final or making the method 'getTreeShakerMode' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "484",
        "column": "39",
        "severity": "error",
        "message": "Avoid inline conditionals.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.AvoidInlineConditionalsCheck"
    },
    {
        "line": "487",
        "column": "5",
        "severity": "error",
        "message": "Class 'Config' looks like designed for extension (can be subclassed), but the method 'getIosSdkVersion' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Config' final or making the method 'getIosSdkVersion' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "491",
        "column": "5",
        "severity": "error",
        "message": "Class 'Config' looks like designed for extension (can be subclassed), but the method 'getIosDeviceType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Config' final or making the method 'getIosDeviceType' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "495",
        "column": "5",
        "severity": "error",
        "message": "Class 'Config' looks like designed for extension (can be subclassed), but the method 'getIosInfoPList' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Config' final or making the method 'getIosInfoPList' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "499",
        "column": "5",
        "severity": "error",
        "message": "Class 'Config' looks like designed for extension (can be subclassed), but the method 'getInfoPList' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Config' final or making the method 'getInfoPList' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "508",
        "column": "5",
        "severity": "error",
        "message": "Class 'Config' looks like designed for extension (can be subclassed), but the method 'getIosEntitlementsPList' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Config' final or making the method 'getIosEntitlementsPList' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "512",
        "column": "5",
        "severity": "error",
        "message": "Class 'Config' looks like designed for extension (can be subclassed), but the method 'getIosSignIdentity' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Config' final or making the method 'getIosSignIdentity' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "516",
        "column": "5",
        "severity": "error",
        "message": "Class 'Config' looks like designed for extension (can be subclassed), but the method 'getIosProvisioningProfile' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Config' final or making the method 'getIosProvisioningProfile' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "520",
        "column": "5",
        "severity": "error",
        "message": "Class 'Config' looks like designed for extension (can be subclassed), but the method 'isIosSkipSigning' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Config' final or making the method 'isIosSkipSigning' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "524",
        "column": "5",
        "severity": "error",
        "message": "Class 'Config' looks like designed for extension (can be subclassed), but the method 'getTools' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Config' final or making the method 'getTools' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "528",
        "column": "44",
        "severity": "error",
        "message": "Parameter dir should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "528",
        "column": "54",
        "severity": "error",
        "message": "Parameter f should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "532",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 81).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "535",
        "column": "5",
        "severity": "error",
        "message": "Class 'Config' looks like designed for extension (can be subclassed), but the method 'getArchiveName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Config' final or making the method 'getArchiveName' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "535",
        "column": "34",
        "severity": "error",
        "message": "Parameter path should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "543",
        "column": "31",
        "severity": "error",
        "message": "Parameter clazz should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "543",
        "column": "44",
        "severity": "error",
        "message": "Parameter ext should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "547",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 87).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "547",
        "column": "31",
        "severity": "error",
        "message": "Parameter internalName should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "547",
        "column": "52",
        "severity": "error",
        "message": "Parameter ext should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "547",
        "column": "64",
        "severity": "error",
        "message": "Parameter maxFileNameLength should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "548",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 90).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "549",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 85).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "550",
        "column": "45",
        "severity": "error",
        "message": "Avoid inline conditionals.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.AvoidInlineConditionalsCheck"
    },
    {
        "line": "555",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 120).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "557",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 81).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "560",
        "column": "5",
        "severity": "error",
        "message": "Class 'Config' looks like designed for extension (can be subclassed), but the method 'getLlFile' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Config' final or making the method 'getLlFile' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "560",
        "column": "27",
        "severity": "error",
        "message": "Parameter clazz should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "561",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 86).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "564",
        "column": "5",
        "severity": "error",
        "message": "Class 'Config' looks like designed for extension (can be subclassed), but the method 'getCFile' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Config' final or making the method 'getCFile' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "564",
        "column": "26",
        "severity": "error",
        "message": "Parameter clazz should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "565",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 85).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "568",
        "column": "5",
        "severity": "error",
        "message": "Class 'Config' looks like designed for extension (can be subclassed), but the method 'getBcFile' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Config' final or making the method 'getBcFile' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "568",
        "column": "27",
        "severity": "error",
        "message": "Parameter clazz should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "569",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 86).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "572",
        "column": "5",
        "severity": "error",
        "message": "Class 'Config' looks like designed for extension (can be subclassed), but the method 'getSFile' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Config' final or making the method 'getSFile' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "572",
        "column": "26",
        "severity": "error",
        "message": "Parameter clazz should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "573",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 85).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "576",
        "column": "5",
        "severity": "error",
        "message": "Class 'Config' looks like designed for extension (can be subclassed), but the method 'getOFile' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Config' final or making the method 'getOFile' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "576",
        "column": "26",
        "severity": "error",
        "message": "Parameter clazz should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "577",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 85).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "580",
        "column": "5",
        "severity": "error",
        "message": "Class 'Config' looks like designed for extension (can be subclassed), but the method 'getLinesOFile' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Config' final or making the method 'getLinesOFile' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "580",
        "column": "31",
        "severity": "error",
        "message": "Parameter clazz should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "581",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 91).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "584",
        "column": "5",
        "severity": "error",
        "message": "Class 'Config' looks like designed for extension (can be subclassed), but the method 'getLinesLlFile' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Config' final or making the method 'getLinesLlFile' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "584",
        "column": "32",
        "severity": "error",
        "message": "Parameter clazz should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "585",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 92).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "588",
        "column": "5",
        "severity": "error",
        "message": "Class 'Config' looks like designed for extension (can be subclassed), but the method 'getInfoFile' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Config' final or making the method 'getInfoFile' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "588",
        "column": "29",
        "severity": "error",
        "message": "Parameter clazz should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "589",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 88).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "592",
        "column": "5",
        "severity": "error",
        "message": "Class 'Config' looks like designed for extension (can be subclassed), but the method 'getCacheDir' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Config' final or making the method 'getCacheDir' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "592",
        "column": "29",
        "severity": "error",
        "message": "Parameter path should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "596",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 98).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "608",
        "severity": "error",
        "message": "Expected @return tag.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "608",
        "column": "38",
        "severity": "error",
        "message": "Parameter path should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "608",
        "column": "43",
        "severity": "error",
        "message": "Expected @param tag for 'path'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "610",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 93).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "613",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 95).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "613",
        "column": "62",
        "severity": "error",
        "message": "Parameter jarFile should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "617",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 85).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "623",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 84).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "623",
        "column": "51",
        "severity": "error",
        "message": "Parameter jarFile should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "624",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 99).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "627",
        "column": "40",
        "severity": "error",
        "message": "Parameter jarFile should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "628",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 87).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "631",
        "column": "34",
        "severity": "error",
        "message": "Parameter path should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "634",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 104).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "634",
        "column": "18",
        "severity": "error",
        "message": "'target' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "636",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 92).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "643",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 100).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "666",
        "column": "41",
        "severity": "error",
        "message": "Parameter from should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "666",
        "column": "60",
        "severity": "error",
        "message": "Parameter to should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "670",
        "column": "25",
        "severity": "error",
        "message": "Avoid inline conditionals.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.AvoidInlineConditionalsCheck"
    },
    {
        "line": "679",
        "column": "30",
        "severity": "error",
        "message": "Parameter from should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "679",
        "column": "43",
        "severity": "error",
        "message": "Parameter to should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "680",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 82).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "682",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 85).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "703",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 97).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "726",
        "column": "39",
        "severity": "error",
        "message": "Parameter it should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "736",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 115).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "737",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 109).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "738",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 109).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "745",
        "column": "33",
        "severity": "error",
        "message": "Parameter config should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "748",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 98).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "793",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 88).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "812",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 101).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "812",
        "column": "62",
        "severity": "error",
        "message": "Avoid inline conditionals.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.AvoidInlineConditionalsCheck"
    },
    {
        "line": "842",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 98).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "864",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 97).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "866",
        "severity": "error",
        "message": "Line has trailing spaces.",
        "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
    },
    {
        "line": "870",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 88).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "871",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 81).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "879",
        "column": "50",
        "severity": "error",
        "message": "Avoid inline conditionals.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.AvoidInlineConditionalsCheck"
    },
    {
        "line": "890",
        "column": "9",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "891",
        "column": "9",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "892",
        "column": "9",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "893",
        "column": "9",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "894",
        "column": "9",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "895",
        "column": "9",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "897",
        "column": "21",
        "severity": "error",
        "message": "Parameter homeDir should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "901",
        "column": "24",
        "severity": "error",
        "message": "Parameter homeDir should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "901",
        "column": "38",
        "severity": "error",
        "message": "Parameter validate should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "910",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 81).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "913",
        "column": "9",
        "severity": "error",
        "message": "Class 'Home' looks like designed for extension (can be subclassed), but the method 'isDev' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Home' final or making the method 'isDev' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "917",
        "column": "9",
        "severity": "error",
        "message": "Class 'Home' looks like designed for extension (can be subclassed), but the method 'getBinDir' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Home' final or making the method 'getBinDir' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "921",
        "column": "9",
        "severity": "error",
        "message": "Class 'Home' looks like designed for extension (can be subclassed), but the method 'getLibVmDir' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Home' final or making the method 'getLibVmDir' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "925",
        "column": "9",
        "severity": "error",
        "message": "Class 'Home' looks like designed for extension (can be subclassed), but the method 'getRtPath' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Home' final or making the method 'getRtPath' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "929",
        "column": "9",
        "severity": "error",
        "message": "Class 'Home' looks like designed for extension (can be subclassed), but the method 'getCompilerPath' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Home' final or making the method 'getCompilerPath' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "933",
        "column": "9",
        "severity": "error",
        "message": "Class 'Home' looks like designed for extension (can be subclassed), but the method 'getCacertsPath' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Home' final or making the method 'getCacertsPath' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "933",
        "column": "36",
        "severity": "error",
        "message": "Parameter cacerts should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "956",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 81).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "960",
        "column": "37",
        "severity": "error",
        "message": "Parameter dir should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "961",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 87).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "974",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 86).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "978",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 86).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "982",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 89).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "1000",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 101).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "1001",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 93).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "1013",
        "column": "9",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "1013",
        "column": "22",
        "severity": "error",
        "message": "Variable 'config' must be private and have accessor methods.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheck"
    },
    {
        "line": "1015",
        "column": "17",
        "severity": "error",
        "message": "Parameter config should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "1015",
        "column": "24",
        "severity": "error",
        "message": "'config' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "1023",
        "column": "9",
        "severity": "error",
        "message": "Class 'Builder' looks like designed for extension (can be subclassed), but the method 'os' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Builder' final or making the method 'os' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "1023",
        "column": "27",
        "severity": "error",
        "message": "Parameter os should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "1028",
        "column": "9",
        "severity": "error",
        "message": "Class 'Builder' looks like designed for extension (can be subclassed), but the method 'arch' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Builder' final or making the method 'arch' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "1028",
        "column": "29",
        "severity": "error",
        "message": "Parameter arch should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "1032",
        "column": "9",
        "severity": "error",
        "message": "Class 'Builder' looks like designed for extension (can be subclassed), but the method 'archs' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Builder' final or making the method 'archs' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "1032",
        "column": "30",
        "severity": "error",
        "message": "Parameter archs should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "1032",
        "column": "35",
        "severity": "error",
        "message": "'...' is preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.NoWhitespaceBeforeCheck"
    },
    {
        "line": "1036",
        "column": "9",
        "severity": "error",
        "message": "Class 'Builder' looks like designed for extension (can be subclassed), but the method 'archs' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Builder' final or making the method 'archs' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "1036",
        "column": "30",
        "severity": "error",
        "message": "Parameter archs should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "1045",
        "column": "9",
        "severity": "error",
        "message": "Class 'Builder' looks like designed for extension (can be subclassed), but the method 'clearClasspathEntries' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Builder' final or making the method 'clearClasspathEntries' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "1052",
        "column": "9",
        "severity": "error",
        "message": "Class 'Builder' looks like designed for extension (can be subclassed), but the method 'addClasspathEntry' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Builder' final or making the method 'addClasspathEntry' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "1052",
        "column": "42",
        "severity": "error",
        "message": "Parameter f should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "1060",
        "column": "9",
        "severity": "error",
        "message": "Class 'Builder' looks like designed for extension (can be subclassed), but the method 'clearBootClasspathEntries' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Builder' final or making the method 'clearBootClasspathEntries' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "1067",
        "column": "9",
        "severity": "error",
        "message": "Class 'Builder' looks like designed for extension (can be subclassed), but the method 'addBootClasspathEntry' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Builder' final or making the method 'addBootClasspathEntry' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "1067",
        "column": "46",
        "severity": "error",
        "message": "Parameter f should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "1075",
        "column": "9",
        "severity": "error",
        "message": "Class 'Builder' looks like designed for extension (can be subclassed), but the method 'mainJar' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Builder' final or making the method 'mainJar' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "1075",
        "column": "32",
        "severity": "error",
        "message": "Parameter f should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "1080",
        "column": "9",
        "severity": "error",
        "message": "Class 'Builder' looks like designed for extension (can be subclassed), but the method 'installDir' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Builder' final or making the method 'installDir' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "1080",
        "column": "35",
        "severity": "error",
        "message": "Parameter installDir should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "1085",
        "column": "9",
        "severity": "error",
        "message": "Class 'Builder' looks like designed for extension (can be subclassed), but the method 'executableName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Builder' final or making the method 'executableName' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "1085",
        "column": "39",
        "severity": "error",
        "message": "Parameter executableName should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "1090",
        "column": "9",
        "severity": "error",
        "message": "Class 'Builder' looks like designed for extension (can be subclassed), but the method 'imageName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Builder' final or making the method 'imageName' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "1090",
        "column": "34",
        "severity": "error",
        "message": "Parameter imageName should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "1095",
        "column": "9",
        "severity": "error",
        "message": "Class 'Builder' looks like designed for extension (can be subclassed), but the method 'home' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Builder' final or making the method 'home' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "1095",
        "column": "29",
        "severity": "error",
        "message": "Parameter home should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "1100",
        "column": "9",
        "severity": "error",
        "message": "Class 'Builder' looks like designed for extension (can be subclassed), but the method 'cacheDir' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Builder' final or making the method 'cacheDir' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "1100",
        "column": "33",
        "severity": "error",
        "message": "Parameter cacheDir should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "1105",
        "column": "9",
        "severity": "error",
        "message": "Class 'Builder' looks like designed for extension (can be subclassed), but the method 'clean' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Builder' final or making the method 'clean' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "1105",
        "column": "30",
        "severity": "error",
        "message": "Parameter b should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "1110",
        "column": "9",
        "severity": "error",
        "message": "Class 'Builder' looks like designed for extension (can be subclassed), but the method 'ccBinPath' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Builder' final or making the method 'ccBinPath' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "1110",
        "column": "34",
        "severity": "error",
        "message": "Parameter ccBinPath should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "1115",
        "column": "9",
        "severity": "error",
        "message": "Class 'Builder' looks like designed for extension (can be subclassed), but the method 'debug' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Builder' final or making the method 'debug' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "1115",
        "column": "30",
        "severity": "error",
        "message": "Parameter b should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "1120",
        "column": "9",
        "severity": "error",
        "message": "Class 'Builder' looks like designed for extension (can be subclassed), but the method 'useDebugLibs' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Builder' final or making the method 'useDebugLibs' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "1120",
        "column": "37",
        "severity": "error",
        "message": "Parameter b should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "1125",
        "column": "9",
        "severity": "error",
        "message": "Class 'Builder' looks like designed for extension (can be subclassed), but the method 'dumpIntermediates' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Builder' final or making the method 'dumpIntermediates' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "1125",
        "column": "42",
        "severity": "error",
        "message": "Parameter b should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "1130",
        "column": "9",
        "severity": "error",
        "message": "Class 'Builder' looks like designed for extension (can be subclassed), but the method 'skipRuntimeLib' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Builder' final or making the method 'skipRuntimeLib' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "1130",
        "column": "39",
        "severity": "error",
        "message": "Parameter b should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "1135",
        "column": "9",
        "severity": "error",
        "message": "Class 'Builder' looks like designed for extension (can be subclassed), but the method 'skipLinking' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Builder' final or making the method 'skipLinking' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "1135",
        "column": "36",
        "severity": "error",
        "message": "Parameter b should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "1140",
        "column": "9",
        "severity": "error",
        "message": "Class 'Builder' looks like designed for extension (can be subclassed), but the method 'skipInstall' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Builder' final or making the method 'skipInstall' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "1140",
        "column": "36",
        "severity": "error",
        "message": "Parameter b should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "1145",
        "column": "9",
        "severity": "error",
        "message": "Class 'Builder' looks like designed for extension (can be subclassed), but the method 'threads' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Builder' final or making the method 'threads' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "1145",
        "column": "32",
        "severity": "error",
        "message": "Parameter threads should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "1150",
        "column": "9",
        "severity": "error",
        "message": "Class 'Builder' looks like designed for extension (can be subclassed), but the method 'mainClass' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Builder' final or making the method 'mainClass' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "1150",
        "column": "34",
        "severity": "error",
        "message": "Parameter mainClass should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "1155",
        "column": "9",
        "severity": "error",
        "message": "Class 'Builder' looks like designed for extension (can be subclassed), but the method 'tmpDir' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Builder' final or making the method 'tmpDir' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "1155",
        "column": "31",
        "severity": "error",
        "message": "Parameter tmpDir should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "1160",
        "column": "9",
        "severity": "error",
        "message": "Class 'Builder' looks like designed for extension (can be subclassed), but the method 'logger' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Builder' final or making the method 'logger' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "1160",
        "column": "31",
        "severity": "error",
        "message": "Parameter logger should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "1165",
        "column": "9",
        "severity": "error",
        "message": "Class 'Builder' looks like designed for extension (can be subclassed), but the method 'treeShakerMode' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Builder' final or making the method 'treeShakerMode' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "1165",
        "column": "39",
        "severity": "error",
        "message": "Parameter treeShakerMode should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "1170",
        "column": "9",
        "severity": "error",
        "message": "Class 'Builder' looks like designed for extension (can be subclassed), but the method 'clearForceLinkClasses' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Builder' final or making the method 'clearForceLinkClasses' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "1177",
        "column": "9",
        "severity": "error",
        "message": "Class 'Builder' looks like designed for extension (can be subclassed), but the method 'addForceLinkClass' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Builder' final or making the method 'addForceLinkClass' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "1177",
        "column": "42",
        "severity": "error",
        "message": "Parameter pattern should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "1185",
        "column": "9",
        "severity": "error",
        "message": "Class 'Builder' looks like designed for extension (can be subclassed), but the method 'clearExportedSymbols' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Builder' final or making the method 'clearExportedSymbols' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "1192",
        "column": "9",
        "severity": "error",
        "message": "Class 'Builder' looks like designed for extension (can be subclassed), but the method 'addExportedSymbol' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Builder' final or making the method 'addExportedSymbol' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "1192",
        "column": "42",
        "severity": "error",
        "message": "Parameter symbol should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "1200",
        "column": "9",
        "severity": "error",
        "message": "Class 'Builder' looks like designed for extension (can be subclassed), but the method 'clearUnhideSymbols' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Builder' final or making the method 'clearUnhideSymbols' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "1207",
        "column": "9",
        "severity": "error",
        "message": "Class 'Builder' looks like designed for extension (can be subclassed), but the method 'addUnhideSymbol' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Builder' final or making the method 'addUnhideSymbol' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "1207",
        "column": "40",
        "severity": "error",
        "message": "Parameter symbol should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "1215",
        "column": "9",
        "severity": "error",
        "message": "Class 'Builder' looks like designed for extension (can be subclassed), but the method 'clearLibs' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Builder' final or making the method 'clearLibs' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "1222",
        "column": "9",
        "severity": "error",
        "message": "Class 'Builder' looks like designed for extension (can be subclassed), but the method 'addLib' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Builder' final or making the method 'addLib' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "1222",
        "column": "31",
        "severity": "error",
        "message": "Parameter lib should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "1230",
        "column": "9",
        "severity": "error",
        "message": "Class 'Builder' looks like designed for extension (can be subclassed), but the method 'clearFrameworks' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Builder' final or making the method 'clearFrameworks' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "1237",
        "column": "9",
        "severity": "error",
        "message": "Class 'Builder' looks like designed for extension (can be subclassed), but the method 'addFramework' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Builder' final or making the method 'addFramework' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "1237",
        "column": "37",
        "severity": "error",
        "message": "Parameter framework should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "1245",
        "column": "9",
        "severity": "error",
        "message": "Class 'Builder' looks like designed for extension (can be subclassed), but the method 'clearWeakFrameworks' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Builder' final or making the method 'clearWeakFrameworks' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "1252",
        "column": "9",
        "severity": "error",
        "message": "Class 'Builder' looks like designed for extension (can be subclassed), but the method 'addWeakFramework' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Builder' final or making the method 'addWeakFramework' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "1252",
        "column": "41",
        "severity": "error",
        "message": "Parameter framework should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "1260",
        "column": "9",
        "severity": "error",
        "message": "Class 'Builder' looks like designed for extension (can be subclassed), but the method 'clearFrameworkPaths' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Builder' final or making the method 'clearFrameworkPaths' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "1267",
        "column": "9",
        "severity": "error",
        "message": "Class 'Builder' looks like designed for extension (can be subclassed), but the method 'addFrameworkPath' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Builder' final or making the method 'addFrameworkPath' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "1267",
        "column": "41",
        "severity": "error",
        "message": "Parameter frameworkPath should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "1275",
        "column": "9",
        "severity": "error",
        "message": "Class 'Builder' looks like designed for extension (can be subclassed), but the method 'clearResources' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Builder' final or making the method 'clearResources' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "1282",
        "column": "9",
        "severity": "error",
        "message": "Class 'Builder' looks like designed for extension (can be subclassed), but the method 'addResource' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Builder' final or making the method 'addResource' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "1282",
        "column": "36",
        "severity": "error",
        "message": "Parameter resource should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "1290",
        "column": "9",
        "severity": "error",
        "message": "Class 'Builder' looks like designed for extension (can be subclassed), but the method 'targetType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Builder' final or making the method 'targetType' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "1290",
        "column": "35",
        "severity": "error",
        "message": "Parameter targetType should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "1295",
        "column": "9",
        "severity": "error",
        "message": "Class 'Builder' looks like designed for extension (can be subclassed), but the method 'clearProperties' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Builder' final or making the method 'clearProperties' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "1300",
        "column": "9",
        "severity": "error",
        "message": "Class 'Builder' looks like designed for extension (can be subclassed), but the method 'addProperties' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Builder' final or making the method 'addProperties' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "1300",
        "column": "38",
        "severity": "error",
        "message": "Parameter properties should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "1305",
        "column": "9",
        "severity": "error",
        "message": "Class 'Builder' looks like designed for extension (can be subclassed), but the method 'addProperties' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Builder' final or making the method 'addProperties' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "1305",
        "column": "38",
        "severity": "error",
        "message": "Parameter file should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "1309",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 83).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "1318",
        "column": "9",
        "severity": "error",
        "message": "Class 'Builder' looks like designed for extension (can be subclassed), but the method 'addProperty' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Builder' final or making the method 'addProperty' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "1318",
        "column": "36",
        "severity": "error",
        "message": "Parameter name should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "1318",
        "column": "49",
        "severity": "error",
        "message": "Parameter value should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "1323",
        "column": "9",
        "severity": "error",
        "message": "Class 'Builder' looks like designed for extension (can be subclassed), but the method 'cacerts' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Builder' final or making the method 'cacerts' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "1323",
        "column": "32",
        "severity": "error",
        "message": "Parameter cacerts should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "1328",
        "column": "9",
        "severity": "error",
        "message": "Class 'Builder' looks like designed for extension (can be subclassed), but the method 'tools' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Builder' final or making the method 'tools' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "1328",
        "column": "30",
        "severity": "error",
        "message": "Parameter tools should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "1333",
        "column": "9",
        "severity": "error",
        "message": "Class 'Builder' looks like designed for extension (can be subclassed), but the method 'iosSdkVersion' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Builder' final or making the method 'iosSdkVersion' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "1333",
        "column": "38",
        "severity": "error",
        "message": "Parameter sdkVersion should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "1338",
        "column": "9",
        "severity": "error",
        "message": "Class 'Builder' looks like designed for extension (can be subclassed), but the method 'iosDeviceType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Builder' final or making the method 'iosDeviceType' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "1338",
        "column": "38",
        "severity": "error",
        "message": "Parameter deviceType should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "1343",
        "column": "9",
        "severity": "error",
        "message": "Class 'Builder' looks like designed for extension (can be subclassed), but the method 'iosInfoPList' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Builder' final or making the method 'iosInfoPList' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "1343",
        "column": "37",
        "severity": "error",
        "message": "Parameter infoPList should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "1348",
        "column": "9",
        "severity": "error",
        "message": "Class 'Builder' looks like designed for extension (can be subclassed), but the method 'infoPList' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Builder' final or making the method 'infoPList' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "1348",
        "column": "34",
        "severity": "error",
        "message": "Parameter infoPList should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "1353",
        "column": "9",
        "severity": "error",
        "message": "Class 'Builder' looks like designed for extension (can be subclassed), but the method 'iosEntitlementsPList' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Builder' final or making the method 'iosEntitlementsPList' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "1353",
        "column": "45",
        "severity": "error",
        "message": "Parameter entitlementsPList should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "1358",
        "column": "9",
        "severity": "error",
        "message": "Class 'Builder' looks like designed for extension (can be subclassed), but the method 'iosSignIdentity' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Builder' final or making the method 'iosSignIdentity' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "1358",
        "column": "40",
        "severity": "error",
        "message": "Parameter signIdentity should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "1363",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 91).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "1363",
        "column": "9",
        "severity": "error",
        "message": "Class 'Builder' looks like designed for extension (can be subclassed), but the method 'iosProvisioningProfile' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Builder' final or making the method 'iosProvisioningProfile' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "1363",
        "column": "47",
        "severity": "error",
        "message": "Parameter iosProvisioningProfile should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "1368",
        "column": "9",
        "severity": "error",
        "message": "Class 'Builder' looks like designed for extension (can be subclassed), but the method 'iosSkipSigning' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Builder' final or making the method 'iosSkipSigning' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "1368",
        "column": "39",
        "severity": "error",
        "message": "Parameter b should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "1373",
        "column": "9",
        "severity": "error",
        "message": "Class 'Builder' looks like designed for extension (can be subclassed), but the method 'addCompilerPlugin' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Builder' final or making the method 'addCompilerPlugin' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "1373",
        "column": "42",
        "severity": "error",
        "message": "Parameter compilerPlugin should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "1378",
        "column": "9",
        "severity": "error",
        "message": "Class 'Builder' looks like designed for extension (can be subclassed), but the method 'addLaunchPlugin' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Builder' final or making the method 'addLaunchPlugin' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "1378",
        "column": "40",
        "severity": "error",
        "message": "Parameter plugin should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "1383",
        "column": "9",
        "severity": "error",
        "message": "Class 'Builder' looks like designed for extension (can be subclassed), but the method 'addTargetPlugin' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Builder' final or making the method 'addTargetPlugin' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "1383",
        "column": "40",
        "severity": "error",
        "message": "Parameter plugin should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "1388",
        "column": "9",
        "severity": "error",
        "message": "Class 'Builder' looks like designed for extension (can be subclassed), but the method 'addPluginArgument' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Builder' final or making the method 'addPluginArgument' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "1388",
        "column": "39",
        "severity": "error",
        "message": "Parameter argName should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "1395",
        "column": "9",
        "severity": "error",
        "message": "Class 'Builder' looks like designed for extension (can be subclassed), but the method 'build' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Builder' final or making the method 'build' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "1420",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 92).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "1420",
        "column": "43",
        "severity": "error",
        "message": "Parameter basedir should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "1420",
        "column": "48",
        "severity": "error",
        "message": "Expected @param tag for 'basedir'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "1420",
        "column": "57",
        "severity": "error",
        "message": "Parameter isTest should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "1420",
        "column": "65",
        "severity": "error",
        "message": "Expected @param tag for 'isTest'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "1420",
        "column": "80",
        "severity": "error",
        "message": "Expected @throws tag for 'IOException'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "1431",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 87).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "1433",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 106).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "1438",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 85).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "1440",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 111).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "1453",
        "column": "44",
        "severity": "error",
        "message": "Parameter props should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "1453",
        "column": "62",
        "severity": "error",
        "message": "Parameter propName should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "1457",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 112).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "1473",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 88).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "1473",
        "column": "39",
        "severity": "error",
        "message": "Parameter basedir should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "1473",
        "column": "44",
        "severity": "error",
        "message": "Expected @param tag for 'basedir'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "1473",
        "column": "53",
        "severity": "error",
        "message": "Parameter isTest should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "1473",
        "column": "61",
        "severity": "error",
        "message": "Expected @param tag for 'isTest'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "1473",
        "column": "76",
        "severity": "error",
        "message": "Expected @throws tag for 'IOException'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "1487",
        "column": "9",
        "severity": "error",
        "message": "Class 'Builder' looks like designed for extension (can be subclassed), but the method 'read' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Builder' final or making the method 'read' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "1487",
        "column": "26",
        "severity": "error",
        "message": "Parameter file should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "1490",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 83).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "1497",
        "column": "9",
        "severity": "error",
        "message": "Class 'Builder' looks like designed for extension (can be subclassed), but the method 'read' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Builder' final or making the method 'read' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "1497",
        "column": "26",
        "severity": "error",
        "message": "Parameter reader should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "1497",
        "column": "41",
        "severity": "error",
        "message": "Parameter wd should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "1511",
        "column": "9",
        "severity": "error",
        "message": "Class 'Builder' looks like designed for extension (can be subclassed), but the method 'write' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Builder' final or making the method 'write' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "1511",
        "column": "27",
        "severity": "error",
        "message": "Parameter file should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "1514",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 85).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "1521",
        "column": "9",
        "severity": "error",
        "message": "Class 'Builder' looks like designed for extension (can be subclassed), but the method 'write' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Builder' final or making the method 'write' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "1521",
        "column": "27",
        "severity": "error",
        "message": "Parameter writer should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "1521",
        "column": "42",
        "severity": "error",
        "message": "Parameter wd should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "1538",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 89).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "1543",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 122).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "1547",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 100).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "1556",
        "severity": "error",
        "message": "Expected @return tag.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "1559",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 81).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "1560",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 91).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "1566",
        "column": "9",
        "severity": "error",
        "message": "Class 'Builder' looks like designed for extension (can be subclassed), but the method 'getPlugins' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Builder' final or making the method 'getPlugins' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "1572",
        "column": "9",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "1573",
        "column": "9",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "1575",
        "column": "20",
        "severity": "error",
        "message": "Parameter value should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "1575",
        "column": "27",
        "severity": "error",
        "message": "'value' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "1575",
        "column": "34",
        "severity": "error",
        "message": "Parameter force should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "1575",
        "column": "42",
        "severity": "error",
        "message": "'force' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "1597",
        "column": "46",
        "severity": "error",
        "message": "Avoid inline conditionals.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.AvoidInlineConditionalsCheck"
    },
    {
        "line": "1597",
        "column": "48",
        "severity": "error",
        "message": "'1231' is a magic number.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck"
    },
    {
        "line": "1597",
        "column": "55",
        "severity": "error",
        "message": "'1237' is a magic number.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck"
    },
    {
        "line": "1598",
        "column": "56",
        "severity": "error",
        "message": "Avoid inline conditionals.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.AvoidInlineConditionalsCheck"
    },
    {
        "line": "1603",
        "column": "31",
        "severity": "error",
        "message": "Parameter obj should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "1629",
        "column": "9",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "1631",
        "column": "9",
        "severity": "error",
        "message": "Redundant 'public' modifier.",
        "source": "com.puppycrawl.tools.checkstyle.checks.modifier.RedundantModifierCheck"
    },
    {
        "line": "1631",
        "column": "37",
        "severity": "error",
        "message": "Parameter fileConverter should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "1631",
        "column": "59",
        "severity": "error",
        "message": "'fileConverter' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "1636",
        "column": "25",
        "severity": "error",
        "message": "Parameter node should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "1642",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 87).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "1644",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 83).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "1651",
        "column": "27",
        "severity": "error",
        "message": "Parameter node should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "1651",
        "column": "44",
        "severity": "error",
        "message": "Parameter lib should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "1665",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 81).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "1666",
        "column": "9",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "1668",
        "column": "9",
        "severity": "error",
        "message": "Redundant 'public' modifier.",
        "source": "com.puppycrawl.tools.checkstyle.checks.modifier.RedundantModifierCheck"
    },
    {
        "line": "1668",
        "column": "38",
        "severity": "error",
        "message": "Parameter wd should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "1679",
        "column": "19",
        "severity": "error",
        "message": "Parameter value should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "1691",
        "column": "26",
        "severity": "error",
        "message": "Parameter node should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "1696",
        "column": "27",
        "severity": "error",
        "message": "Parameter node should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "1696",
        "column": "44",
        "severity": "error",
        "message": "Parameter value should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "1705",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 107).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "1713",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 81).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "1714",
        "column": "9",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "1715",
        "column": "9",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "1717",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 94).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "1717",
        "column": "9",
        "severity": "error",
        "message": "Redundant 'public' modifier.",
        "source": "com.puppycrawl.tools.checkstyle.checks.modifier.RedundantModifierCheck"
    },
    {
        "line": "1717",
        "column": "34",
        "severity": "error",
        "message": "Parameter fileConverter should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "1717",
        "column": "56",
        "severity": "error",
        "message": "'fileConverter' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "1717",
        "column": "71",
        "severity": "error",
        "message": "Parameter serializer should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "1717",
        "column": "82",
        "severity": "error",
        "message": "'serializer' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "1723",
        "column": "30",
        "severity": "error",
        "message": "Parameter node should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "1732",
        "column": "27",
        "severity": "error",
        "message": "Parameter node should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "1732",
        "column": "44",
        "severity": "error",
        "message": "Parameter resource should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    }
]