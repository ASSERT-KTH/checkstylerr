[
    {
        "line": "21",
        "severity": "error",
        "message": "Line has trailing spaces.",
        "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
    },
    {
        "line": "29",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - soot.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "30",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - soot.jimple.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "31",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - soot.util.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "32",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - java.util.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "35",
        "column": "1",
        "severity": "error",
        "message": "'{' at column 1 should be on the previous line.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
    },
    {
        "line": "36",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "36",
        "column": "14",
        "severity": "error",
        "message": "Variable 'opBox' must be private and have accessor methods.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheck"
    },
    {
        "line": "37",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "37",
        "column": "10",
        "severity": "error",
        "message": "Variable 'checkType' must be private and have accessor methods.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheck"
    },
    {
        "line": "39",
        "column": "38",
        "severity": "error",
        "message": "Parameter opBox should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "39",
        "column": "47",
        "severity": "error",
        "message": "'opBox' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "39",
        "column": "54",
        "severity": "error",
        "message": "Parameter checkType should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "39",
        "column": "59",
        "severity": "error",
        "message": "'checkType' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "40",
        "column": "5",
        "severity": "error",
        "message": "'{' at column 5 should be on the previous line.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
    },
    {
        "line": "43",
        "severity": "error",
        "message": "Line has trailing spaces.",
        "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
    },
    {
        "line": "44",
        "column": "5",
        "severity": "error",
        "message": "Class 'AbstractInstanceOfExpr' looks like designed for extension (can be subclassed), but the method 'equivTo' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AbstractInstanceOfExpr' final or making the method 'equivTo' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "44",
        "column": "28",
        "severity": "error",
        "message": "Parameter o should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "45",
        "column": "5",
        "severity": "error",
        "message": "'{' at column 5 should be on the previous line.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
    },
    {
        "line": "47",
        "column": "9",
        "severity": "error",
        "message": "'{' at column 9 should be on the previous line.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
    },
    {
        "line": "48",
        "column": "65",
        "severity": "error",
        "message": "'typecast' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "49",
        "column": "67",
        "severity": "error",
        "message": "'&&' should be on a new line.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
    },
    {
        "line": "55",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 84).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "56",
        "severity": "error",
        "message": "Expected @return tag.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "56",
        "severity": "error",
        "message": "Line has trailing spaces.",
        "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
    },
    {
        "line": "57",
        "column": "5",
        "severity": "error",
        "message": "'{' at column 5 should be on the previous line.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
    },
    {
        "line": "58",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 82).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "58",
        "column": "51",
        "severity": "error",
        "message": "'101' is a magic number.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck"
    },
    {
        "line": "58",
        "column": "80",
        "severity": "error",
        "message": "'17' is a magic number.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck"
    },
    {
        "line": "62",
        "severity": "error",
        "message": "Line has trailing spaces.",
        "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
    },
    {
        "line": "63",
        "column": "5",
        "severity": "error",
        "message": "Class 'AbstractInstanceOfExpr' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AbstractInstanceOfExpr' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "64",
        "column": "5",
        "severity": "error",
        "message": "'{' at column 5 should be on the previous line.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
    },
    {
        "line": "65",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 98).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "67",
        "severity": "error",
        "message": "Line has trailing spaces.",
        "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
    },
    {
        "line": "68",
        "column": "5",
        "severity": "error",
        "message": "Class 'AbstractInstanceOfExpr' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AbstractInstanceOfExpr' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "68",
        "column": "25",
        "severity": "error",
        "message": "'(' is followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
    },
    {
        "line": "68",
        "column": "27",
        "severity": "error",
        "message": "Parameter up should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "68",
        "column": "42",
        "severity": "error",
        "message": "')' is preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
    },
    {
        "line": "76",
        "column": "5",
        "severity": "error",
        "message": "Class 'AbstractInstanceOfExpr' looks like designed for extension (can be subclassed), but the method 'getOp' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AbstractInstanceOfExpr' final or making the method 'getOp' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "77",
        "column": "5",
        "severity": "error",
        "message": "'{' at column 5 should be on the previous line.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
    },
    {
        "line": "81",
        "column": "5",
        "severity": "error",
        "message": "Class 'AbstractInstanceOfExpr' looks like designed for extension (can be subclassed), but the method 'setOp' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AbstractInstanceOfExpr' final or making the method 'setOp' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "81",
        "column": "23",
        "severity": "error",
        "message": "Parameter op should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "82",
        "column": "5",
        "severity": "error",
        "message": "'{' at column 5 should be on the previous line.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
    },
    {
        "line": "86",
        "column": "5",
        "severity": "error",
        "message": "Class 'AbstractInstanceOfExpr' looks like designed for extension (can be subclassed), but the method 'getOpBox' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AbstractInstanceOfExpr' final or making the method 'getOpBox' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "87",
        "column": "5",
        "severity": "error",
        "message": "'{' at column 5 should be on the previous line.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
    },
    {
        "line": "91",
        "column": "5",
        "severity": "error",
        "message": "Class 'AbstractInstanceOfExpr' looks like designed for extension (can be subclassed), but the method 'getUseBoxes' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AbstractInstanceOfExpr' final or making the method 'getUseBoxes' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "92",
        "column": "5",
        "severity": "error",
        "message": "'{' at column 5 should be on the previous line.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
    },
    {
        "line": "101",
        "column": "5",
        "severity": "error",
        "message": "Class 'AbstractInstanceOfExpr' looks like designed for extension (can be subclassed), but the method 'getType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AbstractInstanceOfExpr' final or making the method 'getType' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "102",
        "column": "5",
        "severity": "error",
        "message": "'{' at column 5 should be on the previous line.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
    },
    {
        "line": "106",
        "column": "5",
        "severity": "error",
        "message": "Class 'AbstractInstanceOfExpr' looks like designed for extension (can be subclassed), but the method 'getCheckType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AbstractInstanceOfExpr' final or making the method 'getCheckType' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "107",
        "column": "5",
        "severity": "error",
        "message": "'{' at column 5 should be on the previous line.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
    },
    {
        "line": "111",
        "column": "5",
        "severity": "error",
        "message": "Class 'AbstractInstanceOfExpr' looks like designed for extension (can be subclassed), but the method 'setCheckType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AbstractInstanceOfExpr' final or making the method 'setCheckType' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "111",
        "column": "30",
        "severity": "error",
        "message": "Parameter checkType should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "111",
        "column": "35",
        "severity": "error",
        "message": "'checkType' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "112",
        "column": "5",
        "severity": "error",
        "message": "'{' at column 5 should be on the previous line.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
    },
    {
        "line": "116",
        "column": "5",
        "severity": "error",
        "message": "Class 'AbstractInstanceOfExpr' looks like designed for extension (can be subclassed), but the method 'apply' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AbstractInstanceOfExpr' final or making the method 'apply' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "116",
        "column": "23",
        "severity": "error",
        "message": "Parameter sw should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "117",
        "column": "5",
        "severity": "error",
        "message": "'{' at column 5 should be on the previous line.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
    }
]