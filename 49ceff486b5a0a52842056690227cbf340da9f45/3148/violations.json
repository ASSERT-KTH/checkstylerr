[
    {
        "line": "19",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - java.io.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "20",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - java.nio.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "21",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - java.util.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "22",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - com.bugvm.objc.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "23",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - com.bugvm.objc.annotation.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "24",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - com.bugvm.objc.block.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "25",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - com.bugvm.rt.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "26",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - com.bugvm.rt.annotation.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "27",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - com.bugvm.rt.bro.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "28",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - com.bugvm.rt.bro.annotation.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "29",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - com.bugvm.rt.bro.ptr.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "30",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - com.bugvm.apple.foundation.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "31",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - com.bugvm.apple.uikit.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "32",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - com.bugvm.apple.coregraphics.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "33",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - com.bugvm.apple.coreanimation.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "34",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - com.bugvm.apple.dispatch.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "35",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - com.bugvm.apple.glkit.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "36",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - com.bugvm.apple.spritekit.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "37",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - com.bugvm.apple.opengles.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "46",
        "severity": "error",
        "message": "Line has trailing spaces.",
        "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
    },
    {
        "line": "47",
        "severity": "error",
        "message": "Line has trailing spaces.",
        "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
    },
    {
        "line": "48",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 97).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "50",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 89).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "50",
        "column": "78",
        "severity": "error",
        "message": "'{' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "50",
        "column": "79",
        "severity": "error",
        "message": "'}' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "50",
        "column": "79",
        "severity": "error",
        "message": "'}' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "51",
        "column": "22",
        "severity": "error",
        "message": "'{' at column 22 should have line break after.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
    },
    {
        "line": "51",
        "column": "57",
        "severity": "error",
        "message": "'}' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "54",
        "column": "22",
        "severity": "error",
        "message": "'{' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "54",
        "column": "23",
        "severity": "error",
        "message": "'}' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "55",
        "column": "23",
        "severity": "error",
        "message": "Parameter skipInit should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "55",
        "column": "42",
        "severity": "error",
        "message": "'{' at column 42 should have line break after.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
    },
    {
        "line": "60",
        "column": "5",
        "severity": "error",
        "message": "Class 'SCNNode' looks like designed for extension (can be subclassed), but the method 'setName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SCNNode' final or making the method 'setName' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "62",
        "column": "5",
        "severity": "error",
        "message": "Class 'SCNNode' looks like designed for extension (can be subclassed), but the method 'getLight' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SCNNode' final or making the method 'getLight' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "64",
        "column": "5",
        "severity": "error",
        "message": "Class 'SCNNode' looks like designed for extension (can be subclassed), but the method 'setLight' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SCNNode' final or making the method 'setLight' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "66",
        "column": "5",
        "severity": "error",
        "message": "Class 'SCNNode' looks like designed for extension (can be subclassed), but the method 'getCamera' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SCNNode' final or making the method 'getCamera' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "68",
        "column": "5",
        "severity": "error",
        "message": "Class 'SCNNode' looks like designed for extension (can be subclassed), but the method 'setCamera' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SCNNode' final or making the method 'setCamera' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "70",
        "column": "5",
        "severity": "error",
        "message": "Class 'SCNNode' looks like designed for extension (can be subclassed), but the method 'getGeometry' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SCNNode' final or making the method 'getGeometry' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "72",
        "column": "5",
        "severity": "error",
        "message": "Class 'SCNNode' looks like designed for extension (can be subclassed), but the method 'setGeometry' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SCNNode' final or making the method 'setGeometry' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "77",
        "severity": "error",
        "message": "Expected @return tag.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "83",
        "column": "46",
        "severity": "error",
        "message": "Expected @param tag for 'v'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "87",
        "severity": "error",
        "message": "Expected @return tag.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "93",
        "column": "46",
        "severity": "error",
        "message": "Expected @param tag for 'v'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "94",
        "column": "5",
        "severity": "error",
        "message": "Class 'SCNNode' looks like designed for extension (can be subclassed), but the method 'getTransform' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SCNNode' final or making the method 'getTransform' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "96",
        "column": "5",
        "severity": "error",
        "message": "Class 'SCNNode' looks like designed for extension (can be subclassed), but the method 'setTransform' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SCNNode' final or making the method 'setTransform' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "98",
        "column": "5",
        "severity": "error",
        "message": "Class 'SCNNode' looks like designed for extension (can be subclassed), but the method 'getPosition' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SCNNode' final or making the method 'getPosition' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "100",
        "column": "5",
        "severity": "error",
        "message": "Class 'SCNNode' looks like designed for extension (can be subclassed), but the method 'setPosition' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SCNNode' final or making the method 'setPosition' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "102",
        "column": "5",
        "severity": "error",
        "message": "Class 'SCNNode' looks like designed for extension (can be subclassed), but the method 'getRotation' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SCNNode' final or making the method 'getRotation' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "104",
        "column": "5",
        "severity": "error",
        "message": "Class 'SCNNode' looks like designed for extension (can be subclassed), but the method 'setRotation' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SCNNode' final or making the method 'setRotation' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "109",
        "severity": "error",
        "message": "Expected @return tag.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "115",
        "column": "57",
        "severity": "error",
        "message": "Expected @param tag for 'v'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "119",
        "severity": "error",
        "message": "Expected @return tag.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "125",
        "column": "57",
        "severity": "error",
        "message": "Expected @param tag for 'v'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "126",
        "column": "5",
        "severity": "error",
        "message": "Class 'SCNNode' looks like designed for extension (can be subclassed), but the method 'getScale' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SCNNode' final or making the method 'getScale' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "128",
        "column": "5",
        "severity": "error",
        "message": "Class 'SCNNode' looks like designed for extension (can be subclassed), but the method 'setScale' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SCNNode' final or making the method 'setScale' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "130",
        "column": "5",
        "severity": "error",
        "message": "Class 'SCNNode' looks like designed for extension (can be subclassed), but the method 'getPivot' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SCNNode' final or making the method 'getPivot' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "132",
        "column": "5",
        "severity": "error",
        "message": "Class 'SCNNode' looks like designed for extension (can be subclassed), but the method 'setPivot' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SCNNode' final or making the method 'setPivot' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "134",
        "column": "5",
        "severity": "error",
        "message": "Class 'SCNNode' looks like designed for extension (can be subclassed), but the method 'getWorldTransform' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SCNNode' final or making the method 'getWorldTransform' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "136",
        "column": "5",
        "severity": "error",
        "message": "Class 'SCNNode' looks like designed for extension (can be subclassed), but the method 'isHidden' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SCNNode' final or making the method 'isHidden' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "138",
        "column": "5",
        "severity": "error",
        "message": "Class 'SCNNode' looks like designed for extension (can be subclassed), but the method 'setHidden' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SCNNode' final or making the method 'setHidden' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "140",
        "column": "5",
        "severity": "error",
        "message": "Class 'SCNNode' looks like designed for extension (can be subclassed), but the method 'getOpacity' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SCNNode' final or making the method 'getOpacity' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "142",
        "column": "5",
        "severity": "error",
        "message": "Class 'SCNNode' looks like designed for extension (can be subclassed), but the method 'setOpacity' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SCNNode' final or making the method 'setOpacity' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "144",
        "column": "5",
        "severity": "error",
        "message": "Class 'SCNNode' looks like designed for extension (can be subclassed), but the method 'getRenderingOrder' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SCNNode' final or making the method 'getRenderingOrder' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "146",
        "column": "5",
        "severity": "error",
        "message": "Class 'SCNNode' looks like designed for extension (can be subclassed), but the method 'setRenderingOrder' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SCNNode' final or making the method 'setRenderingOrder' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "151",
        "severity": "error",
        "message": "Expected @return tag.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "157",
        "column": "47",
        "severity": "error",
        "message": "Expected @param tag for 'v'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "158",
        "column": "5",
        "severity": "error",
        "message": "Class 'SCNNode' looks like designed for extension (can be subclassed), but the method 'getParentNode' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SCNNode' final or making the method 'getParentNode' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "160",
        "column": "5",
        "severity": "error",
        "message": "Class 'SCNNode' looks like designed for extension (can be subclassed), but the method 'getChildNodes' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SCNNode' final or making the method 'getChildNodes' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "165",
        "severity": "error",
        "message": "Expected @return tag.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "171",
        "column": "54",
        "severity": "error",
        "message": "Expected @param tag for 'v'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "175",
        "severity": "error",
        "message": "Expected @return tag.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "181",
        "column": "56",
        "severity": "error",
        "message": "Expected @param tag for 'v'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "185",
        "severity": "error",
        "message": "Expected @return tag.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "191",
        "column": "62",
        "severity": "error",
        "message": "Expected @param tag for 'v'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "195",
        "severity": "error",
        "message": "Expected @return tag.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "201",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 81).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "201",
        "column": "79",
        "severity": "error",
        "message": "Expected @param tag for 'v'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "205",
        "severity": "error",
        "message": "Expected @return tag.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "211",
        "column": "42",
        "severity": "error",
        "message": "Expected @param tag for 'v'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "212",
        "column": "5",
        "severity": "error",
        "message": "Class 'SCNNode' looks like designed for extension (can be subclassed), but the method 'getRendererDelegate' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SCNNode' final or making the method 'getRendererDelegate' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "214",
        "column": "5",
        "severity": "error",
        "message": "Class 'SCNNode' looks like designed for extension (can be subclassed), but the method 'setRendererDelegate' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SCNNode' final or making the method 'setRendererDelegate' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "219",
        "severity": "error",
        "message": "Expected @return tag.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "225",
        "column": "66",
        "severity": "error",
        "message": "Expected @param tag for 'v'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "226",
        "column": "5",
        "severity": "error",
        "message": "Class 'SCNNode' looks like designed for extension (can be subclassed), but the method 'getParticleSystems' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SCNNode' final or making the method 'getParticleSystems' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "238",
        "column": "5",
        "severity": "error",
        "message": "Class 'SCNNode' looks like designed for extension (can be subclassed), but the method 'getBoundingBoxMax' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SCNNode' final or making the method 'getBoundingBoxMax' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "246",
        "column": "5",
        "severity": "error",
        "message": "Class 'SCNNode' looks like designed for extension (can be subclassed), but the method 'getBoundingSphereCenter' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SCNNode' final or making the method 'getBoundingSphereCenter' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "254",
        "column": "5",
        "severity": "error",
        "message": "Class 'SCNNode' looks like designed for extension (can be subclassed), but the method 'getBoundingSphereRadius' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SCNNode' final or making the method 'getBoundingSphereRadius' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "262",
        "column": "5",
        "severity": "error",
        "message": "Class 'SCNNode' looks like designed for extension (can be subclassed), but the method 'setBoundingBox' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SCNNode' final or making the method 'setBoundingBox' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "262",
        "column": "32",
        "severity": "error",
        "message": "Parameter min should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "262",
        "column": "48",
        "severity": "error",
        "message": "Parameter max should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "272",
        "column": "5",
        "severity": "error",
        "message": "Class 'SCNNode' looks like designed for extension (can be subclassed), but the method 'insertChildNode' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SCNNode' final or making the method 'insertChildNode' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "273",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 84).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "274",
        "column": "5",
        "severity": "error",
        "message": "Class 'SCNNode' looks like designed for extension (can be subclassed), but the method 'removeFromParentNode' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SCNNode' final or making the method 'removeFromParentNode' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "276",
        "column": "5",
        "severity": "error",
        "message": "Class 'SCNNode' looks like designed for extension (can be subclassed), but the method 'replaceChildNode' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SCNNode' final or making the method 'replaceChildNode' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "278",
        "column": "5",
        "severity": "error",
        "message": "Class 'SCNNode' looks like designed for extension (can be subclassed), but the method 'findChildNodeWithName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SCNNode' final or making the method 'findChildNodeWithName' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "279",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 82).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "280",
        "column": "5",
        "severity": "error",
        "message": "Class 'SCNNode' looks like designed for extension (can be subclassed), but the method 'getChildNodesPassingTest' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SCNNode' final or making the method 'getChildNodesPassingTest' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "281",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 115).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "286",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 89).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "286",
        "column": "83",
        "severity": "error",
        "message": "Expected @param tag for 'block'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "290",
        "severity": "error",
        "message": "Expected @return tag.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "291",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 100).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "291",
        "column": "77",
        "severity": "error",
        "message": "Expected @param tag for 'position'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "291",
        "column": "95",
        "severity": "error",
        "message": "Expected @param tag for 'node'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "295",
        "severity": "error",
        "message": "Expected @return tag.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "296",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 102).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "296",
        "column": "79",
        "severity": "error",
        "message": "Expected @param tag for 'position'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "296",
        "column": "97",
        "severity": "error",
        "message": "Expected @param tag for 'node'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "300",
        "severity": "error",
        "message": "Expected @return tag.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "301",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 102).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "301",
        "column": "78",
        "severity": "error",
        "message": "Expected @param tag for 'transform'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "301",
        "column": "97",
        "severity": "error",
        "message": "Expected @param tag for 'node'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "305",
        "severity": "error",
        "message": "Expected @return tag.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "306",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 104).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "306",
        "column": "80",
        "severity": "error",
        "message": "Expected @param tag for 'transform'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "306",
        "column": "99",
        "severity": "error",
        "message": "Expected @param tag for 'node'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "307",
        "column": "5",
        "severity": "error",
        "message": "Class 'SCNNode' looks like designed for extension (can be subclassed), but the method 'getPresentationNode' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SCNNode' final or making the method 'getPresentationNode' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "312",
        "severity": "error",
        "message": "Expected @return tag.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "313",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 142).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "313",
        "column": "82",
        "severity": "error",
        "message": "Expected @param tag for 'pointA'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "313",
        "column": "108",
        "severity": "error",
        "message": "Expected @param tag for 'pointB'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "313",
        "column": "134",
        "severity": "error",
        "message": "Expected @param tag for 'options'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "318",
        "column": "5",
        "severity": "error",
        "message": "Class 'SCNNode' looks like designed for extension (can be subclassed), but the method 'addParticleSystem' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SCNNode' final or making the method 'addParticleSystem' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "320",
        "column": "5",
        "severity": "error",
        "message": "Class 'SCNNode' looks like designed for extension (can be subclassed), but the method 'removeAllParticleSystems' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SCNNode' final or making the method 'removeAllParticleSystems' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "322",
        "column": "5",
        "severity": "error",
        "message": "Class 'SCNNode' looks like designed for extension (can be subclassed), but the method 'removeParticleSystem' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SCNNode' final or making the method 'removeParticleSystem' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "324",
        "column": "5",
        "severity": "error",
        "message": "Class 'SCNNode' looks like designed for extension (can be subclassed), but the method 'addAnimation' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SCNNode' final or making the method 'addAnimation' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "326",
        "column": "5",
        "severity": "error",
        "message": "Class 'SCNNode' looks like designed for extension (can be subclassed), but the method 'removeAllAnimations' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SCNNode' final or making the method 'removeAllAnimations' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "328",
        "column": "5",
        "severity": "error",
        "message": "Class 'SCNNode' looks like designed for extension (can be subclassed), but the method 'removeAnimation' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SCNNode' final or making the method 'removeAnimation' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "330",
        "column": "5",
        "severity": "error",
        "message": "Class 'SCNNode' looks like designed for extension (can be subclassed), but the method 'getAnimationKeys' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SCNNode' final or making the method 'getAnimationKeys' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "331",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 126).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "332",
        "column": "5",
        "severity": "error",
        "message": "Class 'SCNNode' looks like designed for extension (can be subclassed), but the method 'getAnimation' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SCNNode' final or making the method 'getAnimation' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "338",
        "column": "46",
        "severity": "error",
        "message": "Expected @param tag for 'key'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "343",
        "column": "47",
        "severity": "error",
        "message": "Expected @param tag for 'key'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "347",
        "severity": "error",
        "message": "Expected @return tag.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "348",
        "column": "52",
        "severity": "error",
        "message": "Expected @param tag for 'key'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "353",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 87).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "353",
        "column": "47",
        "severity": "error",
        "message": "Expected @param tag for 'key'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "353",
        "column": "78",
        "severity": "error",
        "message": "Expected @param tag for 'duration'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "358",
        "column": "44",
        "severity": "error",
        "message": "Expected @param tag for 'action'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "363",
        "column": "44",
        "severity": "error",
        "message": "Expected @param tag for 'action'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "363",
        "column": "68",
        "severity": "error",
        "message": "Expected @param tag for 'block'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "368",
        "column": "44",
        "severity": "error",
        "message": "Expected @param tag for 'action'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "368",
        "column": "59",
        "severity": "error",
        "message": "Expected @param tag for 'key'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "373",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 86).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "373",
        "column": "44",
        "severity": "error",
        "message": "Expected @param tag for 'action'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "373",
        "column": "59",
        "severity": "error",
        "message": "Expected @param tag for 'key'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "373",
        "column": "80",
        "severity": "error",
        "message": "Expected @param tag for 'block'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "377",
        "severity": "error",
        "message": "Expected @return tag.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "382",
        "severity": "error",
        "message": "Expected @return tag.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "383",
        "column": "46",
        "severity": "error",
        "message": "Expected @param tag for 'key'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "388",
        "column": "44",
        "severity": "error",
        "message": "Expected @param tag for 'key'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "394",
        "column": "5",
        "severity": "error",
        "message": "Class 'SCNNode' looks like designed for extension (can be subclassed), but the method 'getBoundingBox' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SCNNode' final or making the method 'getBoundingBox' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "395",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 101).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "396",
        "column": "5",
        "severity": "error",
        "message": "Class 'SCNNode' looks like designed for extension (can be subclassed), but the method 'getBoundingSphere' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SCNNode' final or making the method 'getBoundingSphere' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "397",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 106).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "402",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 98).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "402",
        "column": "64",
        "severity": "error",
        "message": "Expected @param tag for 'min'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "402",
        "column": "94",
        "severity": "error",
        "message": "Expected @param tag for 'max'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    }
]