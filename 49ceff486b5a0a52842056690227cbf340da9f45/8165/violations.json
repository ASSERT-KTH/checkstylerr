[
    {
        "line": "22",
        "severity": "error",
        "message": "Line has trailing spaces.",
        "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
    },
    {
        "line": "34",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - soot.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "35",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - soot.jimple.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "36",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - java.util.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "38",
        "column": "10",
        "severity": "error",
        "message": "'public' modifier out of order with the JLS suggestions.",
        "source": "com.puppycrawl.tools.checkstyle.checks.modifier.ModifierOrderCheck"
    },
    {
        "line": "39",
        "column": "1",
        "severity": "error",
        "message": "'{' at column 1 should be on the previous line.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
    },
    {
        "line": "40",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "40",
        "column": "29",
        "severity": "error",
        "message": "Variable 'methodRef' must be private and have accessor methods.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheck"
    },
    {
        "line": "41",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "41",
        "column": "26",
        "severity": "error",
        "message": "Variable 'argBoxes' must be private and have accessor methods.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheck"
    },
    {
        "line": "43",
        "column": "1",
        "severity": "error",
        "message": "File contains tab characters (this is the first instance).",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
    },
    {
        "line": "43",
        "column": "9",
        "severity": "error",
        "message": "Class 'AbstractInvokeExpr' looks like designed for extension (can be subclassed), but the method 'setMethodRef' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AbstractInvokeExpr' final or making the method 'setMethodRef' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "43",
        "column": "34",
        "severity": "error",
        "message": "Parameter methodRef should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "43",
        "column": "48",
        "severity": "error",
        "message": "'methodRef' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "46",
        "severity": "error",
        "message": "Line has trailing spaces.",
        "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
    },
    {
        "line": "47",
        "column": "5",
        "severity": "error",
        "message": "Class 'AbstractInvokeExpr' looks like designed for extension (can be subclassed), but the method 'getMethodRef' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AbstractInvokeExpr' final or making the method 'getMethodRef' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "48",
        "column": "5",
        "severity": "error",
        "message": "'{' at column 5 should be on the previous line.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
    },
    {
        "line": "52",
        "column": "5",
        "severity": "error",
        "message": "Class 'AbstractInvokeExpr' looks like designed for extension (can be subclassed), but the method 'getMethod' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AbstractInvokeExpr' final or making the method 'getMethod' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "53",
        "column": "5",
        "severity": "error",
        "message": "'{' at column 5 should be on the previous line.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
    },
    {
        "line": "58",
        "severity": "error",
        "message": "Line has trailing spaces.",
        "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
    },
    {
        "line": "59",
        "column": "5",
        "severity": "error",
        "message": "Class 'AbstractInvokeExpr' looks like designed for extension (can be subclassed), but the method 'getArg' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AbstractInvokeExpr' final or making the method 'getArg' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "59",
        "column": "25",
        "severity": "error",
        "message": "Parameter index should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "60",
        "column": "5",
        "severity": "error",
        "message": "'{' at column 5 should be on the previous line.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
    },
    {
        "line": "64",
        "column": "5",
        "severity": "error",
        "message": "Class 'AbstractInvokeExpr' looks like designed for extension (can be subclassed), but the method 'getArgs' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AbstractInvokeExpr' final or making the method 'getArgs' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "65",
        "column": "5",
        "severity": "error",
        "message": "'{' at column 5 should be on the previous line.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
    },
    {
        "line": "67",
        "severity": "error",
        "message": "'for' construct must use '{}'s.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.NeedBracesCheck"
    },
    {
        "line": "73",
        "column": "5",
        "severity": "error",
        "message": "Class 'AbstractInvokeExpr' looks like designed for extension (can be subclassed), but the method 'getArgCount' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AbstractInvokeExpr' final or making the method 'getArgCount' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "74",
        "column": "5",
        "severity": "error",
        "message": "'{' at column 5 should be on the previous line.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
    },
    {
        "line": "78",
        "column": "5",
        "severity": "error",
        "message": "Class 'AbstractInvokeExpr' looks like designed for extension (can be subclassed), but the method 'setArg' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AbstractInvokeExpr' final or making the method 'setArg' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "78",
        "column": "24",
        "severity": "error",
        "message": "Parameter index should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "78",
        "column": "35",
        "severity": "error",
        "message": "Parameter arg should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "79",
        "column": "5",
        "severity": "error",
        "message": "'{' at column 5 should be on the previous line.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
    },
    {
        "line": "83",
        "column": "5",
        "severity": "error",
        "message": "Class 'AbstractInvokeExpr' looks like designed for extension (can be subclassed), but the method 'getArgBox' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AbstractInvokeExpr' final or making the method 'getArgBox' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "83",
        "column": "31",
        "severity": "error",
        "message": "Parameter index should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "84",
        "column": "5",
        "severity": "error",
        "message": "'{' at column 5 should be on the previous line.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
    },
    {
        "line": "88",
        "column": "5",
        "severity": "error",
        "message": "Class 'AbstractInvokeExpr' looks like designed for extension (can be subclassed), but the method 'getType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AbstractInvokeExpr' final or making the method 'getType' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "89",
        "column": "5",
        "severity": "error",
        "message": "'{' at column 5 should be on the previous line.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
    }
]