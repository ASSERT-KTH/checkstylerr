[
    {
        "line": "19",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - java.io.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "20",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - java.nio.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "21",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - java.util.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "22",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - com.bugvm.objc.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "23",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - com.bugvm.objc.annotation.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "24",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - com.bugvm.objc.block.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "25",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - com.bugvm.rt.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "26",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - com.bugvm.rt.annotation.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "27",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - com.bugvm.rt.bro.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "28",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - com.bugvm.rt.bro.annotation.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "29",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - com.bugvm.rt.bro.ptr.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "30",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - com.bugvm.apple.foundation.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "31",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - com.bugvm.apple.corefoundation.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "32",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - com.bugvm.apple.audiounit.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "33",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - com.bugvm.apple.coreaudio.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "34",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - com.bugvm.apple.coremidi.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "41",
        "severity": "error",
        "message": "Line has trailing spaces.",
        "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
    },
    {
        "line": "41",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 81).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "42",
        "severity": "error",
        "message": "Line has trailing spaces.",
        "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
    },
    {
        "line": "42",
        "column": "46",
        "severity": "error",
        "message": "'>' is followed by an illegal character.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
    },
    {
        "line": "45",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 107).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "45",
        "column": "96",
        "severity": "error",
        "message": "'{' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "45",
        "column": "97",
        "severity": "error",
        "message": "'}' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "45",
        "column": "97",
        "severity": "error",
        "message": "'}' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "50",
        "column": "28",
        "severity": "error",
        "message": "'{' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "50",
        "column": "29",
        "severity": "error",
        "message": "'}' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "51",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 84).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "51",
        "column": "26",
        "severity": "error",
        "message": "Parameter bar should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "51",
        "column": "35",
        "severity": "error",
        "message": "Parameter beat should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "51",
        "column": "47",
        "severity": "error",
        "message": "Parameter subbeat should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "51",
        "column": "62",
        "severity": "error",
        "message": "Parameter subbeatDivisor should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "61",
        "column": "5",
        "severity": "error",
        "message": "Class 'CABarBeatTime' looks like designed for extension (can be subclassed), but the method 'setBar' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CABarBeatTime' final or making the method 'setBar' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "62",
        "column": "5",
        "severity": "error",
        "message": "Class 'CABarBeatTime' looks like designed for extension (can be subclassed), but the method 'getBeat' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CABarBeatTime' final or making the method 'getBeat' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "63",
        "column": "5",
        "severity": "error",
        "message": "Class 'CABarBeatTime' looks like designed for extension (can be subclassed), but the method 'setBeat' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CABarBeatTime' final or making the method 'setBeat' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "64",
        "column": "5",
        "severity": "error",
        "message": "Class 'CABarBeatTime' looks like designed for extension (can be subclassed), but the method 'getSubbeat' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CABarBeatTime' final or making the method 'getSubbeat' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "65",
        "column": "5",
        "severity": "error",
        "message": "Class 'CABarBeatTime' looks like designed for extension (can be subclassed), but the method 'setSubbeat' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CABarBeatTime' final or making the method 'setSubbeat' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "66",
        "column": "5",
        "severity": "error",
        "message": "Class 'CABarBeatTime' looks like designed for extension (can be subclassed), but the method 'getSubbeatDivisor' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CABarBeatTime' final or making the method 'getSubbeatDivisor' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "66",
        "column": "19",
        "severity": "error",
        "message": "'3' is a magic number.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck"
    },
    {
        "line": "67",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 89).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "67",
        "column": "5",
        "severity": "error",
        "message": "Class 'CABarBeatTime' looks like designed for extension (can be subclassed), but the method 'setSubbeatDivisor' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CABarBeatTime' final or making the method 'setSubbeatDivisor' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "67",
        "column": "19",
        "severity": "error",
        "message": "'3' is a magic number.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck"
    },
    {
        "line": "68",
        "column": "19",
        "severity": "error",
        "message": "'4' is a magic number.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck"
    },
    {
        "line": "69",
        "column": "19",
        "severity": "error",
        "message": "'4' is a magic number.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck"
    }
]