[
    {
        "line": "3",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - beaver.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "3",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - java.io.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "3",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - java.util.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "3",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - java.util.zip.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "3",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - soot.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "3",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - soot.jimple.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "3",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - soot.util.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "3",
        "column": "8",
        "severity": "error",
        "message": "Unused import - java.util.HashSet.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck"
    },
    {
        "line": "3",
        "column": "25",
        "severity": "error",
        "message": "';' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "3",
        "column": "33",
        "severity": "error",
        "message": "Unused import - java.util.LinkedHashSet.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck"
    },
    {
        "line": "3",
        "column": "56",
        "severity": "error",
        "message": "';' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "3",
        "column": "64",
        "severity": "error",
        "message": "Unused import - java.io.File.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck"
    },
    {
        "line": "3",
        "column": "76",
        "severity": "error",
        "message": "';' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "3",
        "column": "95",
        "severity": "error",
        "message": "';' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "3",
        "column": "111",
        "severity": "error",
        "message": "';' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "3",
        "column": "119",
        "severity": "error",
        "message": "Unused import - java.util.ArrayList.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck"
    },
    {
        "line": "3",
        "column": "138",
        "severity": "error",
        "message": "';' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "3",
        "column": "161",
        "severity": "error",
        "message": "';' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "3",
        "column": "178",
        "severity": "error",
        "message": "';' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "3",
        "column": "186",
        "severity": "error",
        "message": "Unused import - java.io.FileNotFoundException.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck"
    },
    {
        "line": "3",
        "column": "215",
        "severity": "error",
        "message": "';' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "3",
        "column": "223",
        "severity": "error",
        "message": "Unused import - java.util.Collection.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck"
    },
    {
        "line": "3",
        "column": "243",
        "severity": "error",
        "message": "';' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "3",
        "column": "257",
        "severity": "error",
        "message": "';' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "3",
        "column": "276",
        "severity": "error",
        "message": "';' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "3",
        "column": "297",
        "severity": "error",
        "message": "';' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "3",
        "column": "305",
        "severity": "error",
        "message": "Unused import - soot.coffi.ClassFile.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck"
    },
    {
        "line": "3",
        "column": "325",
        "severity": "error",
        "message": "';' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "3",
        "column": "333",
        "severity": "error",
        "message": "Unused import - soot.coffi.method_info.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck"
    },
    {
        "line": "3",
        "column": "355",
        "severity": "error",
        "message": "';' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "3",
        "column": "363",
        "severity": "error",
        "message": "Unused import - soot.coffi.CONSTANT_Utf8_info.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck"
    },
    {
        "line": "3",
        "column": "392",
        "severity": "error",
        "message": "';' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "3",
        "column": "400",
        "severity": "error",
        "message": "Unused import - soot.tagkit.SourceFileTag.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck"
    },
    {
        "line": "3",
        "column": "425",
        "severity": "error",
        "message": "';' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "3",
        "column": "433",
        "severity": "error",
        "message": "Unused import - soot.coffi.CoffiMethodSource.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck"
    },
    {
        "line": "8",
        "column": "5",
        "severity": "error",
        "message": "Class 'BoundMethodAccess' looks like designed for extension (can be subclassed), but the method 'flushCache' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BoundMethodAccess' final or making the method 'flushCache' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "13",
        "column": "5",
        "severity": "error",
        "message": "Class 'BoundMethodAccess' looks like designed for extension (can be subclassed), but the method 'flushCollectionCache' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BoundMethodAccess' final or making the method 'flushCollectionCache' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "16",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 115).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "16",
        "column": "6",
        "severity": "error",
        "message": "Class 'BoundMethodAccess' looks like designed for extension (can be subclassed), but the method 'clone' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BoundMethodAccess' final or making the method 'clone' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "17",
        "column": "52",
        "severity": "error",
        "message": "'typecast' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "24",
        "column": "6",
        "severity": "error",
        "message": "Class 'BoundMethodAccess' looks like designed for extension (can be subclassed), but the method 'copy' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BoundMethodAccess' final or making the method 'copy' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "26",
        "column": "54",
        "severity": "error",
        "message": "'typecast' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "27",
        "severity": "error",
        "message": "'if' construct must use '{}'s.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.NeedBracesCheck"
    },
    {
        "line": "27",
        "column": "11",
        "severity": "error",
        "message": "'if' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "27",
        "column": "58",
        "severity": "error",
        "message": "'typecast' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "31",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 94).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "34",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 84).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "34",
        "column": "6",
        "severity": "error",
        "message": "Class 'BoundMethodAccess' looks like designed for extension (can be subclassed), but the method 'fullCopy' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BoundMethodAccess' final or making the method 'fullCopy' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "35",
        "column": "51",
        "severity": "error",
        "message": "'typecast' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "36",
        "column": "9",
        "severity": "error",
        "message": "'for' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "38",
        "severity": "error",
        "message": "'if' construct must use '{}'s.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.NeedBracesCheck"
    },
    {
        "line": "38",
        "column": "11",
        "severity": "error",
        "message": "'if' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "46",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 120).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "48",
        "column": "28",
        "severity": "error",
        "message": "Parameter name should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "48",
        "column": "41",
        "severity": "error",
        "message": "Parameter args should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "48",
        "column": "52",
        "severity": "error",
        "message": "Parameter methodDecl should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "48",
        "column": "63",
        "severity": "error",
        "message": "'methodDecl' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "55",
        "column": "3",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "71",
        "column": "30",
        "severity": "error",
        "message": "Parameter p0 should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "71",
        "column": "41",
        "severity": "error",
        "message": "Parameter p1 should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "80",
        "column": "30",
        "severity": "error",
        "message": "Parameter p0 should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "80",
        "column": "48",
        "severity": "error",
        "message": "Parameter p1 should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "88",
        "column": "3",
        "severity": "error",
        "message": "Class 'BoundMethodAccess' looks like designed for extension (can be subclassed), but the method 'numChildren' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BoundMethodAccess' final or making the method 'numChildren' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "94",
        "column": "5",
        "severity": "error",
        "message": "Class 'BoundMethodAccess' looks like designed for extension (can be subclassed), but the method 'mayHaveRewrite' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BoundMethodAccess' final or making the method 'mayHaveRewrite' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "100",
        "column": "5",
        "severity": "error",
        "message": "Class 'BoundMethodAccess' looks like designed for extension (can be subclassed), but the method 'setID' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BoundMethodAccess' final or making the method 'setID' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "100",
        "column": "23",
        "severity": "error",
        "message": "Parameter value should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "106",
        "column": "5",
        "severity": "error",
        "message": "Class 'BoundMethodAccess' looks like designed for extension (can be subclassed), but the method 'setID' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BoundMethodAccess' final or making the method 'setID' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "106",
        "column": "23",
        "severity": "error",
        "message": "Parameter symbol should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "107",
        "severity": "error",
        "message": "'if' construct must use '{}'s.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.NeedBracesCheck"
    },
    {
        "line": "107",
        "column": "9",
        "severity": "error",
        "message": "'if' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "108",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 92).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "109",
        "column": "33",
        "severity": "error",
        "message": "'typecast' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "116",
        "column": "5",
        "severity": "error",
        "message": "Class 'BoundMethodAccess' looks like designed for extension (can be subclassed), but the method 'getID' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BoundMethodAccess' final or making the method 'getID' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "117",
        "column": "39",
        "severity": "error",
        "message": "Avoid inline conditionals.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.AvoidInlineConditionalsCheck"
    },
    {
        "line": "122",
        "column": "5",
        "severity": "error",
        "message": "Class 'BoundMethodAccess' looks like designed for extension (can be subclassed), but the method 'setArgList' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BoundMethodAccess' final or making the method 'setArgList' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "122",
        "column": "28",
        "severity": "error",
        "message": "Parameter list should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "129",
        "column": "5",
        "severity": "error",
        "message": "Class 'BoundMethodAccess' looks like designed for extension (can be subclassed), but the method 'getNumArg' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BoundMethodAccess' final or making the method 'getNumArg' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "136",
        "column": "6",
        "severity": "error",
        "message": "Class 'BoundMethodAccess' looks like designed for extension (can be subclassed), but the method 'getArg' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BoundMethodAccess' final or making the method 'getArg' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "136",
        "column": "67",
        "severity": "error",
        "message": "Parameter i should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "137",
        "column": "21",
        "severity": "error",
        "message": "'typecast' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "143",
        "column": "5",
        "severity": "error",
        "message": "Class 'BoundMethodAccess' looks like designed for extension (can be subclassed), but the method 'addArg' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BoundMethodAccess' final or making the method 'addArg' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "143",
        "column": "24",
        "severity": "error",
        "message": "Parameter node should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "144",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 101).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "144",
        "column": "61",
        "severity": "error",
        "message": "Avoid inline conditionals.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.AvoidInlineConditionalsCheck"
    },
    {
        "line": "151",
        "column": "5",
        "severity": "error",
        "message": "Class 'BoundMethodAccess' looks like designed for extension (can be subclassed), but the method 'addArgNoTransform' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BoundMethodAccess' final or making the method 'addArgNoTransform' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "151",
        "column": "35",
        "severity": "error",
        "message": "Parameter node should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "159",
        "column": "5",
        "severity": "error",
        "message": "Class 'BoundMethodAccess' looks like designed for extension (can be subclassed), but the method 'setArg' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BoundMethodAccess' final or making the method 'setArg' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "159",
        "column": "24",
        "severity": "error",
        "message": "Parameter node should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "159",
        "column": "35",
        "severity": "error",
        "message": "Parameter i should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "166",
        "column": "5",
        "severity": "error",
        "message": "Class 'BoundMethodAccess' looks like designed for extension (can be subclassed), but the method 'getArgs' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BoundMethodAccess' final or making the method 'getArgs' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "172",
        "column": "5",
        "severity": "error",
        "message": "Class 'BoundMethodAccess' looks like designed for extension (can be subclassed), but the method 'getArgsNoTransform' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BoundMethodAccess' final or making the method 'getArgsNoTransform' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "179",
        "column": "6",
        "severity": "error",
        "message": "Class 'BoundMethodAccess' looks like designed for extension (can be subclassed), but the method 'getArgList' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BoundMethodAccess' final or making the method 'getArgList' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "180",
        "column": "38",
        "severity": "error",
        "message": "'typecast' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "188",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 90).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "188",
        "column": "6",
        "severity": "error",
        "message": "Class 'BoundMethodAccess' looks like designed for extension (can be subclassed), but the method 'getArgListNoTransform' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BoundMethodAccess' final or making the method 'getArgListNoTransform' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "189",
        "column": "27",
        "severity": "error",
        "message": "'typecast' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "193",
        "column": "2",
        "severity": "error",
        "message": "Class 'BoundMethodAccess' looks like designed for extension (can be subclassed), but the method 'decl' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BoundMethodAccess' final or making the method 'decl' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "194",
        "column": "9",
        "severity": "error",
        "message": "'if' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "201",
        "severity": "error",
        "message": "'if' construct must use '{}'s.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.NeedBracesCheck"
    },
    {
        "line": "201",
        "column": "9",
        "severity": "error",
        "message": "'if' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "206",
        "column": "24",
        "severity": "error",
        "message": "Name 'decl_compute' must match pattern '^[a-z][a-zA-Z0-9]*$'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.naming.MethodNameCheck"
    },
    {
        "line": "206",
        "column": "39",
        "severity": "error",
        "message": "'{' at column 39 should have line break after.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
    },
    {
        "line": "208",
        "column": "1",
        "severity": "error",
        "message": "Class 'BoundMethodAccess' looks like designed for extension (can be subclassed), but the method 'rewriteTo' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BoundMethodAccess' final or making the method 'rewriteTo' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    }
]