[
    {
        "line": "34",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 81).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "72",
        "severity": "error",
        "message": "Line has trailing spaces.",
        "source": "com.puppycrawl.tools.checkstyle.checks.regexp.RegexpSinglelineCheck"
    },
    {
        "line": "80",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "80",
        "column": "24",
        "severity": "error",
        "message": "Variable 'exceptionTypes' must be private and have accessor methods.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheck"
    },
    {
        "line": "81",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "81",
        "column": "24",
        "severity": "error",
        "message": "Variable 'parameterTypes' must be private and have accessor methods.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheck"
    },
    {
        "line": "82",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "82",
        "column": "27",
        "severity": "error",
        "message": "Variable 'formalTypeParameters' must be private and have accessor methods.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheck"
    },
    {
        "line": "83",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "83",
        "column": "17",
        "severity": "error",
        "message": "Variable 'returnType' must be private and have accessor methods.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheck"
    },
    {
        "line": "84",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "84",
        "column": "17",
        "severity": "error",
        "message": "Variable 'fieldType' must be private and have accessor methods.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheck"
    },
    {
        "line": "85",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "85",
        "column": "24",
        "severity": "error",
        "message": "Variable 'interfaceTypes' must be private and have accessor methods.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheck"
    },
    {
        "line": "86",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "86",
        "column": "17",
        "severity": "error",
        "message": "Variable 'superclassType' must be private and have accessor methods.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheck"
    },
    {
        "line": "88",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "88",
        "column": "24",
        "severity": "error",
        "message": "Variable 'genericDecl' must be private and have accessor methods.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheck"
    },
    {
        "line": "93",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "93",
        "column": "10",
        "severity": "error",
        "message": "Variable 'symbol' must be private and have accessor methods.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheck"
    },
    {
        "line": "94",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "94",
        "column": "12",
        "severity": "error",
        "message": "Variable 'identifier' must be private and have accessor methods.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheck"
    },
    {
        "line": "102",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "104",
        "column": "9",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "104",
        "column": "12",
        "severity": "error",
        "message": "Variable 'buffer' must be private and have accessor methods.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheck"
    },
    {
        "line": "105",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "105",
        "column": "9",
        "severity": "error",
        "message": "Variable 'pos' must be private and have accessor methods.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheck"
    },
    {
        "line": "110",
        "column": "5",
        "severity": "error",
        "message": "Class 'GenericSignatureParser' looks like designed for extension (can be subclassed), but the method 'setInput' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GenericSignatureParser' final or making the method 'setInput' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "110",
        "column": "19",
        "severity": "error",
        "message": "Parameter genericDecl should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "110",
        "column": "38",
        "severity": "error",
        "message": "'genericDecl' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "110",
        "column": "51",
        "severity": "error",
        "message": "Parameter input should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "116",
        "column": "9",
        "severity": "error",
        "message": "'}' at column 9 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally).",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
    },
    {
        "line": "129",
        "column": "31",
        "severity": "error",
        "message": "Parameter genericDecl should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "129",
        "column": "50",
        "severity": "error",
        "message": "'genericDecl' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "130",
        "column": "13",
        "severity": "error",
        "message": "Parameter signature should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "135",
        "column": "13",
        "severity": "error",
        "message": "'if' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "155",
        "column": "32",
        "severity": "error",
        "message": "Parameter genericDecl should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "155",
        "column": "51",
        "severity": "error",
        "message": "'genericDecl' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "156",
        "column": "13",
        "severity": "error",
        "message": "Parameter signature should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "156",
        "column": "37",
        "severity": "error",
        "message": "Parameter rawExceptionTypes should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "156",
        "column": "53",
        "severity": "error",
        "message": "Expected @param tag for 'rawExceptionTypes'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "161",
        "column": "13",
        "severity": "error",
        "message": "'if' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "183",
        "column": "37",
        "severity": "error",
        "message": "Parameter genericDecl should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "183",
        "column": "56",
        "severity": "error",
        "message": "'genericDecl' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "184",
        "column": "13",
        "severity": "error",
        "message": "Parameter signature should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "184",
        "column": "37",
        "severity": "error",
        "message": "Parameter rawExceptionTypes should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "184",
        "column": "53",
        "severity": "error",
        "message": "Expected @param tag for 'rawExceptionTypes'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "189",
        "column": "13",
        "severity": "error",
        "message": "'if' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "209",
        "column": "31",
        "severity": "error",
        "message": "Parameter genericDecl should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "209",
        "column": "50",
        "severity": "error",
        "message": "'genericDecl' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "210",
        "column": "13",
        "severity": "error",
        "message": "Parameter signature should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "222",
        "column": "5",
        "severity": "error",
        "message": "Class 'GenericSignatureParser' looks like designed for extension (can be subclassed), but the method 'parseClassSignature' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GenericSignatureParser' final or making the method 'parseClassSignature' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "224",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 81).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "231",
        "column": "42",
        "severity": "error",
        "message": "'16' is a magic number.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck"
    },
    {
        "line": "238",
        "column": "5",
        "severity": "error",
        "message": "Class 'GenericSignatureParser' looks like designed for extension (can be subclassed), but the method 'parseOptFormalTypeParameters' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GenericSignatureParser' final or making the method 'parseOptFormalTypeParameters' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "255",
        "column": "5",
        "severity": "error",
        "message": "Class 'GenericSignatureParser' looks like designed for extension (can be subclassed), but the method 'parseFormalTypeParameter' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GenericSignatureParser' final or making the method 'parseFormalTypeParameter' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "261",
        "column": "46",
        "severity": "error",
        "message": "'8' is a magic number.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck"
    },
    {
        "line": "275",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 82).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "278",
        "column": "5",
        "severity": "error",
        "message": "Class 'GenericSignatureParser' looks like designed for extension (can be subclassed), but the method 'parseFieldTypeSignature' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GenericSignatureParser' final or making the method 'parseFieldTypeSignature' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "296",
        "column": "5",
        "severity": "error",
        "message": "Class 'GenericSignatureParser' looks like designed for extension (can be subclassed), but the method 'parseClassTypeSignature' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GenericSignatureParser' final or making the method 'parseClassTypeSignature' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "331",
        "column": "5",
        "severity": "error",
        "message": "Class 'GenericSignatureParser' looks like designed for extension (can be subclassed), but the method 'parseOptTypeArguments' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GenericSignatureParser' final or making the method 'parseOptTypeArguments' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "334",
        "column": "48",
        "severity": "error",
        "message": "'8' is a magic number.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck"
    },
    {
        "line": "347",
        "column": "5",
        "severity": "error",
        "message": "Class 'GenericSignatureParser' looks like designed for extension (can be subclassed), but the method 'parseTypeArgument' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GenericSignatureParser' final or making the method 'parseTypeArgument' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "355",
        "column": "9",
        "severity": "error",
        "message": "'}' at column 9 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally).",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
    },
    {
        "line": "360",
        "column": "9",
        "severity": "error",
        "message": "'}' at column 9 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally).",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
    },
    {
        "line": "366",
        "column": "9",
        "severity": "error",
        "message": "'}' at column 9 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally).",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
    },
    {
        "line": "372",
        "column": "5",
        "severity": "error",
        "message": "Class 'GenericSignatureParser' looks like designed for extension (can be subclassed), but the method 'parseTypeVariableSignature' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GenericSignatureParser' final or making the method 'parseTypeVariableSignature' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "382",
        "column": "5",
        "severity": "error",
        "message": "Class 'GenericSignatureParser' looks like designed for extension (can be subclassed), but the method 'parseTypeSignature' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GenericSignatureParser' final or making the method 'parseTypeSignature' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "403",
        "column": "35",
        "severity": "error",
        "message": "Parameter rawExceptionTypes should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "409",
        "column": "42",
        "severity": "error",
        "message": "'16' is a magic number.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck"
    },
    {
        "line": "419",
        "column": "46",
        "severity": "error",
        "message": "'8' is a magic number.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck"
    },
    {
        "line": "438",
        "column": "5",
        "severity": "error",
        "message": "Class 'GenericSignatureParser' looks like designed for extension (can be subclassed), but the method 'parseReturnType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GenericSignatureParser' final or making the method 'parseReturnType' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "440",
        "column": "28",
        "severity": "error",
        "message": "'{' at column 28 should have line break after.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
    },
    {
        "line": "440",
        "column": "59",
        "severity": "error",
        "message": "'}' at column 59 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally).",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
    },
    {
        "line": "441",
        "column": "14",
        "severity": "error",
        "message": "'{' at column 14 should have line break after.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
    },
    {
        "line": "449",
        "column": "5",
        "severity": "error",
        "message": "Class 'GenericSignatureParser' looks like designed for extension (can be subclassed), but the method 'scanSymbol' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GenericSignatureParser' final or making the method 'scanSymbol' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "463",
        "column": "5",
        "severity": "error",
        "message": "Class 'GenericSignatureParser' looks like designed for extension (can be subclassed), but the method 'expect' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GenericSignatureParser' final or making the method 'expect' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "463",
        "column": "17",
        "severity": "error",
        "message": "Parameter c should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "471",
        "column": "5",
        "severity": "error",
        "message": "Class 'GenericSignatureParser' looks like designed for extension (can be subclassed), but the method 'isStopSymbol' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GenericSignatureParser' final or making the method 'isStopSymbol' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "471",
        "column": "26",
        "severity": "error",
        "message": "Parameter ch should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "472",
        "severity": "error",
        "message": "switch without \"default\" clause.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.MissingSwitchDefaultCheck"
    },
    {
        "line": "485",
        "column": "5",
        "severity": "error",
        "message": "Class 'GenericSignatureParser' looks like designed for extension (can be subclassed), but the method 'scanIdentifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GenericSignatureParser' final or making the method 'scanIdentifier' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "487",
        "column": "56",
        "severity": "error",
        "message": "'32' is a magic number.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck"
    }
]