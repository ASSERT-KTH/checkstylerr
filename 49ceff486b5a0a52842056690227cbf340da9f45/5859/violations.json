[
    {
        "line": "42",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "42",
        "column": "13",
        "severity": "error",
        "message": "Variable 'namespaceAware' must be private and have accessor methods.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheck"
    },
    {
        "line": "43",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "43",
        "column": "12",
        "severity": "error",
        "message": "Variable 'namespaceURI' must be private and have accessor methods.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheck"
    },
    {
        "line": "44",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "44",
        "column": "12",
        "severity": "error",
        "message": "Variable 'prefix' must be private and have accessor methods.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheck"
    },
    {
        "line": "45",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "45",
        "column": "12",
        "severity": "error",
        "message": "Variable 'localName' must be private and have accessor methods.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheck"
    },
    {
        "line": "47",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "49",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 83).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "49",
        "column": "17",
        "severity": "error",
        "message": "Parameter document should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "49",
        "column": "40",
        "severity": "error",
        "message": "Parameter namespaceURI should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "49",
        "column": "47",
        "severity": "error",
        "message": "'namespaceURI' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "49",
        "column": "61",
        "severity": "error",
        "message": "Parameter qualifiedName should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "54",
        "column": "17",
        "severity": "error",
        "message": "Parameter document should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "54",
        "column": "40",
        "severity": "error",
        "message": "Parameter name should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "59",
        "column": "34",
        "severity": "error",
        "message": "Parameter name should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "70",
        "column": "36",
        "severity": "error",
        "message": "Parameter namespaceURI should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "70",
        "column": "43",
        "severity": "error",
        "message": "'namespaceURI' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "70",
        "column": "57",
        "severity": "error",
        "message": "Parameter localName should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "70",
        "column": "64",
        "severity": "error",
        "message": "'localName' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "82",
        "column": "5",
        "severity": "error",
        "message": "Class 'ElementImpl' looks like designed for extension (can be subclassed), but the method 'getAttribute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ElementImpl' final or making the method 'getAttribute' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "82",
        "column": "32",
        "severity": "error",
        "message": "Parameter name should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "92",
        "column": "5",
        "severity": "error",
        "message": "Class 'ElementImpl' looks like designed for extension (can be subclassed), but the method 'getAttributeNS' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ElementImpl' final or making the method 'getAttributeNS' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "92",
        "column": "34",
        "severity": "error",
        "message": "Parameter namespaceURI should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "92",
        "column": "41",
        "severity": "error",
        "message": "'namespaceURI' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "92",
        "column": "55",
        "severity": "error",
        "message": "Parameter localName should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "92",
        "column": "62",
        "severity": "error",
        "message": "'localName' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "102",
        "column": "5",
        "severity": "error",
        "message": "Class 'ElementImpl' looks like designed for extension (can be subclassed), but the method 'getAttributeNode' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ElementImpl' final or making the method 'getAttributeNode' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "102",
        "column": "38",
        "severity": "error",
        "message": "Parameter name should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "112",
        "column": "5",
        "severity": "error",
        "message": "Class 'ElementImpl' looks like designed for extension (can be subclassed), but the method 'getAttributeNodeNS' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ElementImpl' final or making the method 'getAttributeNodeNS' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "112",
        "column": "40",
        "severity": "error",
        "message": "Parameter namespaceURI should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "112",
        "column": "47",
        "severity": "error",
        "message": "'namespaceURI' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "112",
        "column": "61",
        "severity": "error",
        "message": "Parameter localName should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "112",
        "column": "68",
        "severity": "error",
        "message": "'localName' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "122",
        "column": "5",
        "severity": "error",
        "message": "Class 'ElementImpl' looks like designed for extension (can be subclassed), but the method 'getAttributes' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ElementImpl' final or making the method 'getAttributes' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "132",
        "severity": "error",
        "message": "Expected @return tag.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "132",
        "column": "28",
        "severity": "error",
        "message": "Parameter name should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "132",
        "column": "35",
        "severity": "error",
        "message": "Expected @param tag for 'name'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "140",
        "severity": "error",
        "message": "Comment matches to-do format 'TODO:'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.TodoCommentCheck"
    },
    {
        "line": "161",
        "column": "5",
        "severity": "error",
        "message": "Class 'ElementImpl' looks like designed for extension (can be subclassed), but the method 'getElementsByTagName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ElementImpl' final or making the method 'getElementsByTagName' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "161",
        "column": "42",
        "severity": "error",
        "message": "Parameter name should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "167",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 83).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "167",
        "column": "5",
        "severity": "error",
        "message": "Class 'ElementImpl' looks like designed for extension (can be subclassed), but the method 'getElementsByTagNameNS' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ElementImpl' final or making the method 'getElementsByTagNameNS' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "167",
        "column": "44",
        "severity": "error",
        "message": "Parameter namespaceURI should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "167",
        "column": "51",
        "severity": "error",
        "message": "'namespaceURI' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "167",
        "column": "65",
        "severity": "error",
        "message": "Parameter localName should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "167",
        "column": "72",
        "severity": "error",
        "message": "'localName' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "173",
        "column": "5",
        "severity": "error",
        "message": "Class 'ElementImpl' looks like designed for extension (can be subclassed), but the method 'getLocalName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ElementImpl' final or making the method 'getLocalName' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "175",
        "column": "31",
        "severity": "error",
        "message": "Avoid inline conditionals.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.AvoidInlineConditionalsCheck"
    },
    {
        "line": "178",
        "column": "5",
        "severity": "error",
        "message": "Class 'ElementImpl' looks like designed for extension (can be subclassed), but the method 'getNamespaceURI' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ElementImpl' final or making the method 'getNamespaceURI' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "183",
        "column": "5",
        "severity": "error",
        "message": "Class 'ElementImpl' looks like designed for extension (can be subclassed), but the method 'getNodeName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ElementImpl' final or making the method 'getNodeName' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "188",
        "column": "5",
        "severity": "error",
        "message": "Class 'ElementImpl' looks like designed for extension (can be subclassed), but the method 'getNodeType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ElementImpl' final or making the method 'getNodeType' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "192",
        "column": "5",
        "severity": "error",
        "message": "Class 'ElementImpl' looks like designed for extension (can be subclassed), but the method 'getPrefix' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ElementImpl' final or making the method 'getPrefix' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "197",
        "column": "5",
        "severity": "error",
        "message": "Class 'ElementImpl' looks like designed for extension (can be subclassed), but the method 'getTagName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ElementImpl' final or making the method 'getTagName' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "199",
        "column": "17",
        "severity": "error",
        "message": "Avoid inline conditionals.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.AvoidInlineConditionalsCheck"
    },
    {
        "line": "203",
        "column": "5",
        "severity": "error",
        "message": "Class 'ElementImpl' looks like designed for extension (can be subclassed), but the method 'hasAttribute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ElementImpl' final or making the method 'hasAttribute' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "203",
        "column": "33",
        "severity": "error",
        "message": "Parameter name should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "207",
        "column": "5",
        "severity": "error",
        "message": "Class 'ElementImpl' looks like designed for extension (can be subclassed), but the method 'hasAttributeNS' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ElementImpl' final or making the method 'hasAttributeNS' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "207",
        "column": "35",
        "severity": "error",
        "message": "Parameter namespaceURI should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "207",
        "column": "42",
        "severity": "error",
        "message": "'namespaceURI' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "207",
        "column": "56",
        "severity": "error",
        "message": "Parameter localName should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "207",
        "column": "63",
        "severity": "error",
        "message": "'localName' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "211",
        "column": "5",
        "severity": "error",
        "message": "Class 'ElementImpl' looks like designed for extension (can be subclassed), but the method 'hasAttributes' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ElementImpl' final or making the method 'hasAttributes' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "216",
        "column": "5",
        "severity": "error",
        "message": "Class 'ElementImpl' looks like designed for extension (can be subclassed), but the method 'removeAttribute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ElementImpl' final or making the method 'removeAttribute' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "216",
        "column": "33",
        "severity": "error",
        "message": "Parameter name should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "224",
        "column": "5",
        "severity": "error",
        "message": "Class 'ElementImpl' looks like designed for extension (can be subclassed), but the method 'removeAttributeNS' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ElementImpl' final or making the method 'removeAttributeNS' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "224",
        "column": "35",
        "severity": "error",
        "message": "Parameter namespaceURI should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "224",
        "column": "42",
        "severity": "error",
        "message": "'namespaceURI' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "224",
        "column": "56",
        "severity": "error",
        "message": "Parameter localName should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "224",
        "column": "63",
        "severity": "error",
        "message": "'localName' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "233",
        "column": "5",
        "severity": "error",
        "message": "Class 'ElementImpl' looks like designed for extension (can be subclassed), but the method 'removeAttributeNode' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ElementImpl' final or making the method 'removeAttributeNode' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "233",
        "column": "37",
        "severity": "error",
        "message": "Parameter oldAttr should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "246",
        "column": "5",
        "severity": "error",
        "message": "Class 'ElementImpl' looks like designed for extension (can be subclassed), but the method 'setAttribute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ElementImpl' final or making the method 'setAttribute' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "246",
        "column": "30",
        "severity": "error",
        "message": "Parameter name should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "246",
        "column": "43",
        "severity": "error",
        "message": "Parameter value should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "257",
        "column": "5",
        "severity": "error",
        "message": "Class 'ElementImpl' looks like designed for extension (can be subclassed), but the method 'setAttributeNS' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ElementImpl' final or making the method 'setAttributeNS' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "257",
        "column": "32",
        "severity": "error",
        "message": "Parameter namespaceURI should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "257",
        "column": "39",
        "severity": "error",
        "message": "'namespaceURI' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "257",
        "column": "53",
        "severity": "error",
        "message": "Parameter qualifiedName should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "258",
        "column": "13",
        "severity": "error",
        "message": "Parameter value should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "269",
        "column": "5",
        "severity": "error",
        "message": "Class 'ElementImpl' looks like designed for extension (can be subclassed), but the method 'setAttributeNode' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ElementImpl' final or making the method 'setAttributeNode' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "269",
        "column": "34",
        "severity": "error",
        "message": "Parameter newAttr should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "294",
        "column": "5",
        "severity": "error",
        "message": "Class 'ElementImpl' looks like designed for extension (can be subclassed), but the method 'setAttributeNodeNS' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ElementImpl' final or making the method 'setAttributeNodeNS' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "294",
        "column": "36",
        "severity": "error",
        "message": "Parameter newAttr should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "307",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 86).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "319",
        "column": "5",
        "severity": "error",
        "message": "Class 'ElementImpl' looks like designed for extension (can be subclassed), but the method 'setPrefix' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ElementImpl' final or making the method 'setPrefix' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "320",
        "column": "27",
        "severity": "error",
        "message": "Parameter prefix should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "320",
        "column": "34",
        "severity": "error",
        "message": "'prefix' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "326",
        "column": "9",
        "severity": "error",
        "message": "Class 'ElementAttrNamedNodeMapImpl' looks like designed for extension (can be subclassed), but the method 'getLength' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ElementAttrNamedNodeMapImpl' final or making the method 'getLength' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "330",
        "column": "33",
        "severity": "error",
        "message": "Parameter name should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "334",
        "column": "35",
        "severity": "error",
        "message": "Parameter namespaceURI should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "334",
        "column": "42",
        "severity": "error",
        "message": "'namespaceURI' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "334",
        "column": "56",
        "severity": "error",
        "message": "Parameter localName should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "334",
        "column": "63",
        "severity": "error",
        "message": "'localName' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "338",
        "column": "9",
        "severity": "error",
        "message": "Class 'ElementAttrNamedNodeMapImpl' looks like designed for extension (can be subclassed), but the method 'getNamedItem' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ElementAttrNamedNodeMapImpl' final or making the method 'getNamedItem' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "338",
        "column": "34",
        "severity": "error",
        "message": "Parameter name should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "342",
        "column": "9",
        "severity": "error",
        "message": "Class 'ElementAttrNamedNodeMapImpl' looks like designed for extension (can be subclassed), but the method 'getNamedItemNS' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ElementAttrNamedNodeMapImpl' final or making the method 'getNamedItemNS' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "342",
        "column": "36",
        "severity": "error",
        "message": "Parameter namespaceURI should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "342",
        "column": "43",
        "severity": "error",
        "message": "'namespaceURI' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "342",
        "column": "57",
        "severity": "error",
        "message": "Parameter localName should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "342",
        "column": "64",
        "severity": "error",
        "message": "'localName' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "346",
        "column": "9",
        "severity": "error",
        "message": "Class 'ElementAttrNamedNodeMapImpl' looks like designed for extension (can be subclassed), but the method 'item' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ElementAttrNamedNodeMapImpl' final or making the method 'item' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "346",
        "column": "26",
        "severity": "error",
        "message": "Parameter index should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "350",
        "column": "9",
        "severity": "error",
        "message": "Class 'ElementAttrNamedNodeMapImpl' looks like designed for extension (can be subclassed), but the method 'removeNamedItem' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ElementAttrNamedNodeMapImpl' final or making the method 'removeNamedItem' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "350",
        "column": "37",
        "severity": "error",
        "message": "Parameter name should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "360",
        "column": "9",
        "severity": "error",
        "message": "Class 'ElementAttrNamedNodeMapImpl' looks like designed for extension (can be subclassed), but the method 'removeNamedItemNS' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ElementAttrNamedNodeMapImpl' final or making the method 'removeNamedItemNS' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "360",
        "column": "39",
        "severity": "error",
        "message": "Parameter namespaceURI should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "360",
        "column": "46",
        "severity": "error",
        "message": "'namespaceURI' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "360",
        "column": "60",
        "severity": "error",
        "message": "Parameter localName should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "360",
        "column": "67",
        "severity": "error",
        "message": "'localName' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "371",
        "column": "9",
        "severity": "error",
        "message": "Class 'ElementAttrNamedNodeMapImpl' looks like designed for extension (can be subclassed), but the method 'setNamedItem' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ElementAttrNamedNodeMapImpl' final or making the method 'setNamedItem' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "371",
        "column": "34",
        "severity": "error",
        "message": "Parameter arg should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "373",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 81).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "376",
        "column": "59",
        "severity": "error",
        "message": "'typecast' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "379",
        "column": "9",
        "severity": "error",
        "message": "Class 'ElementAttrNamedNodeMapImpl' looks like designed for extension (can be subclassed), but the method 'setNamedItemNS' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ElementAttrNamedNodeMapImpl' final or making the method 'setNamedItemNS' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "379",
        "column": "36",
        "severity": "error",
        "message": "Parameter arg should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "381",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 81).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "384",
        "column": "61",
        "severity": "error",
        "message": "'typecast' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "388",
        "column": "5",
        "severity": "error",
        "message": "Class 'ElementImpl' looks like designed for extension (can be subclassed), but the method 'getSchemaTypeInfo' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ElementImpl' final or making the method 'getSchemaTypeInfo' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "389",
        "severity": "error",
        "message": "Comment matches to-do format 'TODO:'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.TodoCommentCheck"
    },
    {
        "line": "393",
        "column": "5",
        "severity": "error",
        "message": "Class 'ElementImpl' looks like designed for extension (can be subclassed), but the method 'setIdAttribute' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ElementImpl' final or making the method 'setIdAttribute' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "393",
        "column": "32",
        "severity": "error",
        "message": "Parameter name should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "393",
        "column": "45",
        "severity": "error",
        "message": "Parameter isId should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "402",
        "column": "5",
        "severity": "error",
        "message": "Class 'ElementImpl' looks like designed for extension (can be subclassed), but the method 'setIdAttributeNS' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ElementImpl' final or making the method 'setIdAttributeNS' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "402",
        "column": "34",
        "severity": "error",
        "message": "Parameter namespaceURI should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "402",
        "column": "41",
        "severity": "error",
        "message": "'namespaceURI' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "402",
        "column": "55",
        "severity": "error",
        "message": "Parameter localName should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "402",
        "column": "62",
        "severity": "error",
        "message": "'localName' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "403",
        "column": "13",
        "severity": "error",
        "message": "Parameter isId should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "412",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 83).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "412",
        "column": "5",
        "severity": "error",
        "message": "Class 'ElementImpl' looks like designed for extension (can be subclassed), but the method 'setIdAttributeNode' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ElementImpl' final or making the method 'setIdAttributeNode' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "412",
        "column": "36",
        "severity": "error",
        "message": "Parameter idAttr should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "412",
        "column": "49",
        "severity": "error",
        "message": "Parameter isId should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    }
]