[
    {
        "line": "61",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 85).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "63",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 89).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "64",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 93).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "65",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 92).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "73",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "74",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "75",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "76",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "77",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "78",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "79",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "80",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "82",
        "column": "33",
        "severity": "error",
        "message": "'method' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "88",
        "column": "33",
        "severity": "error",
        "message": "'method' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "88",
        "column": "51",
        "severity": "error",
        "message": "'uri' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "94",
        "column": "33",
        "severity": "error",
        "message": "'method' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "94",
        "column": "54",
        "severity": "error",
        "message": "'uri' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "97",
        "column": "32",
        "severity": "error",
        "message": "Avoid inline conditionals.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.AvoidInlineConditionalsCheck"
    },
    {
        "line": "116",
        "severity": "error",
        "message": "Expected @return tag.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "116",
        "column": "48",
        "severity": "error",
        "message": "Expected @param tag for 'uri'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "123",
        "severity": "error",
        "message": "Expected @return tag.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "123",
        "column": "51",
        "severity": "error",
        "message": "Expected @param tag for 'uri'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "134",
        "severity": "error",
        "message": "Expected @return tag.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "134",
        "column": "49",
        "severity": "error",
        "message": "Expected @param tag for 'uri'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "141",
        "severity": "error",
        "message": "Expected @return tag.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "141",
        "column": "52",
        "severity": "error",
        "message": "Expected @param tag for 'uri'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "148",
        "severity": "error",
        "message": "Expected @return tag.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "155",
        "severity": "error",
        "message": "Expected @return tag.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "155",
        "column": "50",
        "severity": "error",
        "message": "Expected @param tag for 'uri'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "162",
        "severity": "error",
        "message": "Expected @return tag.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "162",
        "column": "53",
        "severity": "error",
        "message": "Expected @param tag for 'uri'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "173",
        "severity": "error",
        "message": "Expected @return tag.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "173",
        "column": "49",
        "severity": "error",
        "message": "Expected @param tag for 'uri'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "180",
        "severity": "error",
        "message": "Expected @return tag.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "180",
        "column": "52",
        "severity": "error",
        "message": "Expected @param tag for 'uri'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "191",
        "severity": "error",
        "message": "Expected @return tag.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "191",
        "column": "48",
        "severity": "error",
        "message": "Expected @param tag for 'uri'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "198",
        "severity": "error",
        "message": "Expected @return tag.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "198",
        "column": "51",
        "severity": "error",
        "message": "Expected @param tag for 'uri'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "209",
        "severity": "error",
        "message": "Expected @return tag.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "209",
        "column": "51",
        "severity": "error",
        "message": "Expected @param tag for 'uri'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "216",
        "severity": "error",
        "message": "Expected @return tag.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "216",
        "column": "54",
        "severity": "error",
        "message": "Expected @param tag for 'uri'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "227",
        "severity": "error",
        "message": "Expected @return tag.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "227",
        "column": "50",
        "severity": "error",
        "message": "Expected @param tag for 'uri'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "234",
        "severity": "error",
        "message": "Expected @return tag.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "234",
        "column": "53",
        "severity": "error",
        "message": "Expected @param tag for 'uri'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "245",
        "severity": "error",
        "message": "Expected @return tag.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "245",
        "column": "52",
        "severity": "error",
        "message": "Expected @param tag for 'uri'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "252",
        "severity": "error",
        "message": "Expected @return tag.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "252",
        "column": "55",
        "severity": "error",
        "message": "Expected @param tag for 'uri'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "278",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 97).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "280",
        "column": "37",
        "severity": "error",
        "message": "'&&' should be on a new line.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
    },
    {
        "line": "281",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 110).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "283",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 97).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "312",
        "severity": "error",
        "message": "Expected @return tag.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "312",
        "column": "52",
        "severity": "error",
        "message": "'charset' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "312",
        "column": "52",
        "severity": "error",
        "message": "Expected @param tag for 'charset'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "320",
        "severity": "error",
        "message": "Expected @return tag.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "324",
        "column": "5",
        "severity": "error",
        "message": "Class 'RequestBuilder' looks like designed for extension (can be subclassed), but the method 'getMethod' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'RequestBuilder' final or making the method 'getMethod' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "328",
        "column": "5",
        "severity": "error",
        "message": "Class 'RequestBuilder' looks like designed for extension (can be subclassed), but the method 'getVersion' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'RequestBuilder' final or making the method 'getVersion' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "332",
        "column": "5",
        "severity": "error",
        "message": "Class 'RequestBuilder' looks like designed for extension (can be subclassed), but the method 'setVersion' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'RequestBuilder' final or making the method 'setVersion' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "332",
        "column": "60",
        "severity": "error",
        "message": "'version' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "337",
        "column": "5",
        "severity": "error",
        "message": "Class 'RequestBuilder' looks like designed for extension (can be subclassed), but the method 'getUri' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'RequestBuilder' final or making the method 'getUri' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "341",
        "column": "5",
        "severity": "error",
        "message": "Class 'RequestBuilder' looks like designed for extension (can be subclassed), but the method 'setUri' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'RequestBuilder' final or making the method 'setUri' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "341",
        "column": "44",
        "severity": "error",
        "message": "'uri' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "346",
        "column": "5",
        "severity": "error",
        "message": "Class 'RequestBuilder' looks like designed for extension (can be subclassed), but the method 'setUri' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'RequestBuilder' final or making the method 'setUri' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "346",
        "column": "47",
        "severity": "error",
        "message": "'uri' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "347",
        "column": "32",
        "severity": "error",
        "message": "Avoid inline conditionals.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.AvoidInlineConditionalsCheck"
    },
    {
        "line": "351",
        "column": "5",
        "severity": "error",
        "message": "Class 'RequestBuilder' looks like designed for extension (can be subclassed), but the method 'getFirstHeader' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'RequestBuilder' final or making the method 'getFirstHeader' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "352",
        "column": "36",
        "severity": "error",
        "message": "Avoid inline conditionals.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.AvoidInlineConditionalsCheck"
    },
    {
        "line": "355",
        "column": "5",
        "severity": "error",
        "message": "Class 'RequestBuilder' looks like designed for extension (can be subclassed), but the method 'getLastHeader' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'RequestBuilder' final or making the method 'getLastHeader' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "356",
        "column": "36",
        "severity": "error",
        "message": "Avoid inline conditionals.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.AvoidInlineConditionalsCheck"
    },
    {
        "line": "359",
        "column": "5",
        "severity": "error",
        "message": "Class 'RequestBuilder' looks like designed for extension (can be subclassed), but the method 'getHeaders' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'RequestBuilder' final or making the method 'getHeaders' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "360",
        "column": "36",
        "severity": "error",
        "message": "Avoid inline conditionals.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.AvoidInlineConditionalsCheck"
    },
    {
        "line": "363",
        "column": "5",
        "severity": "error",
        "message": "Class 'RequestBuilder' looks like designed for extension (can be subclassed), but the method 'addHeader' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'RequestBuilder' final or making the method 'addHeader' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "371",
        "column": "5",
        "severity": "error",
        "message": "Class 'RequestBuilder' looks like designed for extension (can be subclassed), but the method 'addHeader' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'RequestBuilder' final or making the method 'addHeader' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "379",
        "column": "5",
        "severity": "error",
        "message": "Class 'RequestBuilder' looks like designed for extension (can be subclassed), but the method 'removeHeader' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'RequestBuilder' final or making the method 'removeHeader' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "387",
        "column": "5",
        "severity": "error",
        "message": "Class 'RequestBuilder' looks like designed for extension (can be subclassed), but the method 'removeHeaders' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'RequestBuilder' final or making the method 'removeHeaders' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "391",
        "column": "76",
        "severity": "error",
        "message": "';' is followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyForIteratorPadCheck"
    },
    {
        "line": "400",
        "column": "5",
        "severity": "error",
        "message": "Class 'RequestBuilder' looks like designed for extension (can be subclassed), but the method 'setHeader' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'RequestBuilder' final or making the method 'setHeader' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "408",
        "column": "5",
        "severity": "error",
        "message": "Class 'RequestBuilder' looks like designed for extension (can be subclassed), but the method 'setHeader' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'RequestBuilder' final or making the method 'setHeader' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "416",
        "column": "5",
        "severity": "error",
        "message": "Class 'RequestBuilder' looks like designed for extension (can be subclassed), but the method 'getEntity' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'RequestBuilder' final or making the method 'getEntity' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "420",
        "column": "5",
        "severity": "error",
        "message": "Class 'RequestBuilder' looks like designed for extension (can be subclassed), but the method 'setEntity' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'RequestBuilder' final or making the method 'setEntity' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "420",
        "column": "54",
        "severity": "error",
        "message": "'entity' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "425",
        "column": "5",
        "severity": "error",
        "message": "Class 'RequestBuilder' looks like designed for extension (can be subclassed), but the method 'getParameters' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'RequestBuilder' final or making the method 'getParameters' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "426",
        "column": "35",
        "severity": "error",
        "message": "Avoid inline conditionals.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.AvoidInlineConditionalsCheck"
    },
    {
        "line": "426",
        "column": "78",
        "severity": "error",
        "message": "':' should be on a new line.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
    },
    {
        "line": "430",
        "column": "5",
        "severity": "error",
        "message": "Class 'RequestBuilder' looks like designed for extension (can be subclassed), but the method 'addParameter' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'RequestBuilder' final or making the method 'addParameter' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "439",
        "column": "5",
        "severity": "error",
        "message": "Class 'RequestBuilder' looks like designed for extension (can be subclassed), but the method 'addParameter' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'RequestBuilder' final or making the method 'addParameter' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "443",
        "column": "5",
        "severity": "error",
        "message": "Class 'RequestBuilder' looks like designed for extension (can be subclassed), but the method 'addParameters' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'RequestBuilder' final or making the method 'addParameters' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "450",
        "column": "5",
        "severity": "error",
        "message": "Class 'RequestBuilder' looks like designed for extension (can be subclassed), but the method 'getConfig' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'RequestBuilder' final or making the method 'getConfig' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "454",
        "column": "5",
        "severity": "error",
        "message": "Class 'RequestBuilder' looks like designed for extension (can be subclassed), but the method 'setConfig' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'RequestBuilder' final or making the method 'setConfig' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "454",
        "column": "57",
        "severity": "error",
        "message": "'config' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "459",
        "column": "5",
        "severity": "error",
        "message": "Class 'RequestBuilder' looks like designed for extension (can be subclassed), but the method 'build' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'RequestBuilder' final or making the method 'build' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "461",
        "column": "43",
        "severity": "error",
        "message": "Avoid inline conditionals.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.AvoidInlineConditionalsCheck"
    },
    {
        "line": "464",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 84).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "466",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 120).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "466",
        "column": "83",
        "severity": "error",
        "message": "Avoid inline conditionals.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.AvoidInlineConditionalsCheck"
    },
    {
        "line": "481",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 100).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "496",
        "column": "9",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "498",
        "column": "38",
        "severity": "error",
        "message": "'method' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "510",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 87).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "512",
        "column": "9",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "514",
        "column": "52",
        "severity": "error",
        "message": "'method' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    }
]