[
    {
        "line": "1",
        "severity": "error",
        "message": "Missing package-info.java file.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocPackageCheck"
    },
    {
        "line": "15",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 84).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "41",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "42",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "43",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "44",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "45",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "46",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "48",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "50",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 102).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "50",
        "column": "20",
        "severity": "error",
        "message": "Parameter config should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "50",
        "column": "27",
        "severity": "error",
        "message": "'config' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "50",
        "column": "35",
        "severity": "error",
        "message": "Parameter bootclasspath should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "50",
        "column": "61",
        "severity": "error",
        "message": "Parameter classpath should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "60",
        "column": "5",
        "severity": "error",
        "message": "Class 'Clazzes' looks like designed for extension (can be subclassed), but the method 'getConfig' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Clazzes' final or making the method 'getConfig' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "64",
        "column": "38",
        "severity": "error",
        "message": "Parameter f should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "69",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 120).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "69",
        "column": "27",
        "severity": "error",
        "message": "Parameter files should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "69",
        "column": "45",
        "severity": "error",
        "message": "Parameter cp should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "69",
        "column": "60",
        "severity": "error",
        "message": "Parameter seen should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "69",
        "column": "76",
        "severity": "error",
        "message": "Parameter inBootclasspath should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "72",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 83).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "76",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 96).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "90",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 99).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "90",
        "column": "29",
        "severity": "error",
        "message": "Parameter file should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "90",
        "column": "40",
        "severity": "error",
        "message": "Parameter cp should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "90",
        "column": "55",
        "severity": "error",
        "message": "Parameter inBootclasspath should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "92",
        "column": "17",
        "severity": "error",
        "message": "Avoid inline conditionals.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.AvoidInlineConditionalsCheck"
    },
    {
        "line": "96",
        "column": "5",
        "severity": "error",
        "message": "Class 'Clazzes' looks like designed for extension (can be subclassed), but the method 'createResourcesBootclasspathPath' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Clazzes' final or making the method 'createResourcesBootclasspathPath' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "96",
        "column": "50",
        "severity": "error",
        "message": "Parameter file should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "100",
        "column": "5",
        "severity": "error",
        "message": "Class 'Clazzes' looks like designed for extension (can be subclassed), but the method 'createResourcesClasspathPath' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Clazzes' final or making the method 'createResourcesClasspathPath' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "100",
        "column": "46",
        "severity": "error",
        "message": "Parameter file should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "104",
        "column": "29",
        "severity": "error",
        "message": "Parameter dir should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "127",
        "column": "5",
        "severity": "error",
        "message": "Class 'Clazzes' looks like designed for extension (can be subclassed), but the method 'load' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Clazzes' final or making the method 'load' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "127",
        "column": "23",
        "severity": "error",
        "message": "Parameter internalName should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "141",
        "column": "5",
        "severity": "error",
        "message": "Class 'Clazzes' looks like designed for extension (can be subclassed), but the method 'loadResources' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Clazzes' final or making the method 'loadResources' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "141",
        "column": "44",
        "severity": "error",
        "message": "Parameter resource should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "151",
        "column": "5",
        "severity": "error",
        "message": "Class 'Clazzes' looks like designed for extension (can be subclassed), but the method 'getBootclasspathPaths' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Clazzes' final or making the method 'getBootclasspathPaths' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "155",
        "column": "5",
        "severity": "error",
        "message": "Class 'Clazzes' looks like designed for extension (can be subclassed), but the method 'getClasspathPaths' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Clazzes' final or making the method 'getClasspathPaths' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "159",
        "column": "5",
        "severity": "error",
        "message": "Class 'Clazzes' looks like designed for extension (can be subclassed), but the method 'getPaths' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Clazzes' final or making the method 'getPaths' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "163",
        "column": "5",
        "severity": "error",
        "message": "Class 'Clazzes' looks like designed for extension (can be subclassed), but the method 'listClasses' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Clazzes' final or making the method 'listClasses' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "167",
        "column": "5",
        "severity": "error",
        "message": "Class 'Clazzes' looks like designed for extension (can be subclassed), but the method 'getSootClass' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Clazzes' final or making the method 'getSootClass' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "167",
        "column": "28",
        "severity": "error",
        "message": "Parameter clazz should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "175",
        "column": "44",
        "severity": "error",
        "message": "Parameter clazzes should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "184",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 88).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "192",
        "column": "40",
        "severity": "error",
        "message": "Parameter clazzes should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "210",
        "severity": "error",
        "message": "Comment matches to-do format 'TODO:'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.TodoCommentCheck"
    }
]