[
    {
        "line": "44",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "46",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "47",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "48",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "49",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "50",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "51",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "52",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "53",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "54",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "55",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "56",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "57",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "58",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "59",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "60",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "61",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "63",
        "severity": "error",
        "message": "First sentence should end with a period.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck"
    },
    {
        "line": "67",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 103).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "70",
        "column": "5",
        "severity": "error",
        "message": "More than 7 parameters (found 16).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.ParameterNumberCheck"
    },
    {
        "line": "71",
        "column": "27",
        "severity": "error",
        "message": "'expectContinueEnabled' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "72",
        "column": "28",
        "severity": "error",
        "message": "'proxy' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "73",
        "column": "31",
        "severity": "error",
        "message": "'localAddress' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "74",
        "column": "27",
        "severity": "error",
        "message": "'staleConnectionCheckEnabled' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "75",
        "column": "26",
        "severity": "error",
        "message": "'cookieSpec' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "76",
        "column": "27",
        "severity": "error",
        "message": "'redirectsEnabled' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "77",
        "column": "27",
        "severity": "error",
        "message": "'relativeRedirectsAllowed' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "78",
        "column": "27",
        "severity": "error",
        "message": "'circularRedirectsAllowed' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "79",
        "column": "23",
        "severity": "error",
        "message": "'maxRedirects' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "80",
        "column": "27",
        "severity": "error",
        "message": "'authenticationEnabled' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "81",
        "column": "38",
        "severity": "error",
        "message": "'targetPreferredAuthSchemes' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "82",
        "column": "38",
        "severity": "error",
        "message": "'proxyPreferredAuthSchemes' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "83",
        "column": "23",
        "severity": "error",
        "message": "'connectionRequestTimeout' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "84",
        "column": "23",
        "severity": "error",
        "message": "'connectTimeout' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "85",
        "column": "23",
        "severity": "error",
        "message": "'socketTimeout' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "86",
        "column": "27",
        "severity": "error",
        "message": "'contentCompressionEnabled' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "128",
        "severity": "error",
        "message": "Expected @return tag.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "138",
        "severity": "error",
        "message": "Expected @return tag.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "153",
        "severity": "error",
        "message": "Expected @return tag.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "167",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 99).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "169",
        "severity": "error",
        "message": "Expected @return tag.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "181",
        "severity": "error",
        "message": "Expected @return tag.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "191",
        "severity": "error",
        "message": "Expected @return tag.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "196",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 83).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "202",
        "severity": "error",
        "message": "Expected @return tag.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "207",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 84).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "208",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 85).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "214",
        "severity": "error",
        "message": "Expected @return tag.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "219",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 82).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "225",
        "severity": "error",
        "message": "Expected @return tag.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "235",
        "severity": "error",
        "message": "Expected @return tag.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "246",
        "severity": "error",
        "message": "Expected @return tag.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "257",
        "severity": "error",
        "message": "Expected @return tag.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "273",
        "severity": "error",
        "message": "Expected @return tag.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "288",
        "severity": "error",
        "message": "Expected @return tag.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "304",
        "severity": "error",
        "message": "Expected @return tag.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "309",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 83).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "317",
        "severity": "error",
        "message": "Expected @return tag.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "330",
        "severity": "error",
        "message": "Expected @return tag.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "334",
        "column": "5",
        "severity": "error",
        "message": "Class 'RequestConfig' looks like designed for extension (can be subclassed), but the method 'clone' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'RequestConfig' final or making the method 'clone' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "339",
        "column": "5",
        "severity": "error",
        "message": "Class 'RequestConfig' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'RequestConfig' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "348",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 87).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "350",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 87).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "351",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 81).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "352",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 91).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "353",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 89).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "354",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 87).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "357",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 89).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "372",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 83).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "379",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 82).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "390",
        "column": "9",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "391",
        "column": "9",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "392",
        "column": "9",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "393",
        "column": "9",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "394",
        "column": "9",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "395",
        "column": "9",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "396",
        "column": "9",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "397",
        "column": "9",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "398",
        "column": "9",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "399",
        "column": "9",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "400",
        "column": "9",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "401",
        "column": "9",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "402",
        "column": "9",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "403",
        "column": "9",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "404",
        "column": "9",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "405",
        "column": "9",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "411",
        "column": "33",
        "severity": "error",
        "message": "'50' is a magic number.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck"
    },
    {
        "line": "420",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 86).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "420",
        "column": "9",
        "severity": "error",
        "message": "Class 'Builder' looks like designed for extension (can be subclassed), but the method 'setExpectContinueEnabled' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Builder' final or making the method 'setExpectContinueEnabled' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "420",
        "column": "63",
        "severity": "error",
        "message": "'expectContinueEnabled' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "425",
        "column": "9",
        "severity": "error",
        "message": "Class 'Builder' looks like designed for extension (can be subclassed), but the method 'setProxy' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Builder' final or making the method 'setProxy' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "425",
        "column": "48",
        "severity": "error",
        "message": "'proxy' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "430",
        "column": "9",
        "severity": "error",
        "message": "Class 'Builder' looks like designed for extension (can be subclassed), but the method 'setLocalAddress' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Builder' final or making the method 'setLocalAddress' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "430",
        "column": "58",
        "severity": "error",
        "message": "'localAddress' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "437",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 106).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "439",
        "severity": "error",
        "message": "Expected @return tag.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "440",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 98).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "440",
        "column": "69",
        "severity": "error",
        "message": "'staleConnectionCheckEnabled' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "440",
        "column": "69",
        "severity": "error",
        "message": "Expected @param tag for 'staleConnectionCheckEnabled'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "445",
        "column": "9",
        "severity": "error",
        "message": "Class 'Builder' looks like designed for extension (can be subclassed), but the method 'setCookieSpec' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Builder' final or making the method 'setCookieSpec' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "445",
        "column": "51",
        "severity": "error",
        "message": "'cookieSpec' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "450",
        "column": "9",
        "severity": "error",
        "message": "Class 'Builder' looks like designed for extension (can be subclassed), but the method 'setRedirectsEnabled' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Builder' final or making the method 'setRedirectsEnabled' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "450",
        "column": "58",
        "severity": "error",
        "message": "'redirectsEnabled' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "455",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 92).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "455",
        "column": "9",
        "severity": "error",
        "message": "Class 'Builder' looks like designed for extension (can be subclassed), but the method 'setRelativeRedirectsAllowed' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Builder' final or making the method 'setRelativeRedirectsAllowed' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "455",
        "column": "66",
        "severity": "error",
        "message": "'relativeRedirectsAllowed' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "460",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 92).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "460",
        "column": "9",
        "severity": "error",
        "message": "Class 'Builder' looks like designed for extension (can be subclassed), but the method 'setCircularRedirectsAllowed' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Builder' final or making the method 'setCircularRedirectsAllowed' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "460",
        "column": "66",
        "severity": "error",
        "message": "'circularRedirectsAllowed' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "465",
        "column": "9",
        "severity": "error",
        "message": "Class 'Builder' looks like designed for extension (can be subclassed), but the method 'setMaxRedirects' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Builder' final or making the method 'setMaxRedirects' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "465",
        "column": "50",
        "severity": "error",
        "message": "'maxRedirects' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "470",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 86).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "470",
        "column": "9",
        "severity": "error",
        "message": "Class 'Builder' looks like designed for extension (can be subclassed), but the method 'setAuthenticationEnabled' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Builder' final or making the method 'setAuthenticationEnabled' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "470",
        "column": "63",
        "severity": "error",
        "message": "'authenticationEnabled' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "475",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 107).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "475",
        "column": "9",
        "severity": "error",
        "message": "Class 'Builder' looks like designed for extension (can be subclassed), but the method 'setTargetPreferredAuthSchemes' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Builder' final or making the method 'setTargetPreferredAuthSchemes' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "475",
        "column": "79",
        "severity": "error",
        "message": "'targetPreferredAuthSchemes' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "480",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 105).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "480",
        "column": "9",
        "severity": "error",
        "message": "Class 'Builder' looks like designed for extension (can be subclassed), but the method 'setProxyPreferredAuthSchemes' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Builder' final or making the method 'setProxyPreferredAuthSchemes' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "480",
        "column": "78",
        "severity": "error",
        "message": "'proxyPreferredAuthSchemes' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "485",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 88).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "485",
        "column": "9",
        "severity": "error",
        "message": "Class 'Builder' looks like designed for extension (can be subclassed), but the method 'setConnectionRequestTimeout' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Builder' final or making the method 'setConnectionRequestTimeout' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "485",
        "column": "62",
        "severity": "error",
        "message": "'connectionRequestTimeout' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "490",
        "column": "9",
        "severity": "error",
        "message": "Class 'Builder' looks like designed for extension (can be subclassed), but the method 'setConnectTimeout' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Builder' final or making the method 'setConnectTimeout' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "490",
        "column": "52",
        "severity": "error",
        "message": "'connectTimeout' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "495",
        "column": "9",
        "severity": "error",
        "message": "Class 'Builder' looks like designed for extension (can be subclassed), but the method 'setSocketTimeout' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Builder' final or making the method 'setSocketTimeout' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "495",
        "column": "51",
        "severity": "error",
        "message": "'socketTimeout' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "501",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 100).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "504",
        "severity": "error",
        "message": "Expected @return tag.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "505",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 84).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "505",
        "column": "62",
        "severity": "error",
        "message": "Expected @param tag for 'decompressionEnabled'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "510",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 94).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "510",
        "column": "9",
        "severity": "error",
        "message": "Class 'Builder' looks like designed for extension (can be subclassed), but the method 'setContentCompressionEnabled' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Builder' final or making the method 'setContentCompressionEnabled' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "510",
        "column": "67",
        "severity": "error",
        "message": "'contentCompressionEnabled' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "515",
        "column": "9",
        "severity": "error",
        "message": "Class 'Builder' looks like designed for extension (can be subclassed), but the method 'build' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Builder' final or making the method 'build' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    }
]