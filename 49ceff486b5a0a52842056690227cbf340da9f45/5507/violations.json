[
    {
        "line": "58",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 91).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "60",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "61",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "62",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "63",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "64",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "65",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "66",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "67",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "68",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "69",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "76",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 83).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "83",
        "column": "44",
        "severity": "error",
        "message": "'requestProducer' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "84",
        "column": "48",
        "severity": "error",
        "message": "'responseConsumer' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "86",
        "column": "31",
        "severity": "error",
        "message": "'localContext' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "87",
        "column": "41",
        "severity": "error",
        "message": "'conn' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "88",
        "column": "33",
        "severity": "error",
        "message": "'httppocessor' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "89",
        "column": "43",
        "severity": "error",
        "message": "'connReuseStrategy' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "91",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 81).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "92",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 84).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "97",
        "column": "60",
        "severity": "error",
        "message": "Avoid inline conditionals.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.AvoidInlineConditionalsCheck"
    },
    {
        "line": "97",
        "column": "80",
        "severity": "error",
        "message": "':' should be on a new line.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
    },
    {
        "line": "114",
        "column": "44",
        "severity": "error",
        "message": "'requestProducer' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "115",
        "column": "48",
        "severity": "error",
        "message": "'responseConsumer' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "116",
        "column": "31",
        "severity": "error",
        "message": "'localContext' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "117",
        "column": "41",
        "severity": "error",
        "message": "'conn' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "118",
        "column": "33",
        "severity": "error",
        "message": "'httppocessor' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "119",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 94).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "122",
        "column": "5",
        "severity": "error",
        "message": "Class 'BasicAsyncClientExchangeHandler' looks like designed for extension (can be subclassed), but the method 'getFuture' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BasicAsyncClientExchangeHandler' final or making the method 'getFuture' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "137",
        "column": "5",
        "severity": "error",
        "message": "Class 'BasicAsyncClientExchangeHandler' looks like designed for extension (can be subclassed), but the method 'close' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BasicAsyncClientExchangeHandler' final or making the method 'close' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "147",
        "column": "5",
        "severity": "error",
        "message": "Class 'BasicAsyncClientExchangeHandler' looks like designed for extension (can be subclassed), but the method 'generateRequest' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BasicAsyncClientExchangeHandler' final or making the method 'generateRequest' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "154",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 83).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "159",
        "column": "5",
        "severity": "error",
        "message": "Class 'BasicAsyncClientExchangeHandler' looks like designed for extension (can be subclassed), but the method 'produceContent' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BasicAsyncClientExchangeHandler' final or making the method 'produceContent' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "161",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 86).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "165",
        "column": "5",
        "severity": "error",
        "message": "Class 'BasicAsyncClientExchangeHandler' looks like designed for extension (can be subclassed), but the method 'requestCompleted' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BasicAsyncClientExchangeHandler' final or making the method 'requestCompleted' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "171",
        "column": "5",
        "severity": "error",
        "message": "Class 'BasicAsyncClientExchangeHandler' looks like designed for extension (can be subclassed), but the method 'responseReceived' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BasicAsyncClientExchangeHandler' final or making the method 'responseReceived' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "172",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 97).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "176",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 90).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "179",
        "column": "5",
        "severity": "error",
        "message": "Class 'BasicAsyncClientExchangeHandler' looks like designed for extension (can be subclassed), but the method 'consumeContent' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BasicAsyncClientExchangeHandler' final or making the method 'consumeContent' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "181",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 86).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "185",
        "column": "5",
        "severity": "error",
        "message": "Class 'BasicAsyncClientExchangeHandler' looks like designed for extension (can be subclassed), but the method 'responseCompleted' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BasicAsyncClientExchangeHandler' final or making the method 'responseCompleted' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "208",
        "column": "5",
        "severity": "error",
        "message": "Class 'BasicAsyncClientExchangeHandler' looks like designed for extension (can be subclassed), but the method 'inputTerminated' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BasicAsyncClientExchangeHandler' final or making the method 'inputTerminated' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "213",
        "column": "5",
        "severity": "error",
        "message": "Class 'BasicAsyncClientExchangeHandler' looks like designed for extension (can be subclassed), but the method 'failed' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BasicAsyncClientExchangeHandler' final or making the method 'failed' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "231",
        "column": "5",
        "severity": "error",
        "message": "Class 'BasicAsyncClientExchangeHandler' looks like designed for extension (can be subclassed), but the method 'cancel' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BasicAsyncClientExchangeHandler' final or making the method 'cancel' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "247",
        "column": "5",
        "severity": "error",
        "message": "Class 'BasicAsyncClientExchangeHandler' looks like designed for extension (can be subclassed), but the method 'isDone' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BasicAsyncClientExchangeHandler' final or making the method 'isDone' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    }
]