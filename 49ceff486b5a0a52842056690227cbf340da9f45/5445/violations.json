[
    {
        "line": "60",
        "column": "18",
        "severity": "error",
        "message": "'static' modifier out of order with the JLS suggestions.",
        "source": "com.puppycrawl.tools.checkstyle.checks.modifier.ModifierOrderCheck"
    },
    {
        "line": "63",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 87).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "63",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "63",
        "column": "18",
        "severity": "error",
        "message": "'static' modifier out of order with the JLS suggestions.",
        "source": "com.puppycrawl.tools.checkstyle.checks.modifier.ModifierOrderCheck"
    },
    {
        "line": "65",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "65",
        "column": "19",
        "severity": "error",
        "message": "'static' modifier out of order with the JLS suggestions.",
        "source": "com.puppycrawl.tools.checkstyle.checks.modifier.ModifierOrderCheck"
    },
    {
        "line": "66",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "66",
        "column": "19",
        "severity": "error",
        "message": "'static' modifier out of order with the JLS suggestions.",
        "source": "com.puppycrawl.tools.checkstyle.checks.modifier.ModifierOrderCheck"
    },
    {
        "line": "69",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 103).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "70",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 109).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "70",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "71",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 104).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "71",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "73",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "90",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 93).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "96",
        "column": "32",
        "severity": "error",
        "message": "Avoid inline conditionals.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.AvoidInlineConditionalsCheck"
    },
    {
        "line": "102",
        "column": "5",
        "severity": "error",
        "message": "Class 'BasicHeaderValueParser' looks like designed for extension (can be subclassed), but the method 'parseElements' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BasicHeaderValueParser' final or making the method 'parseElements' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "110",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 83).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "128",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 96).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "128",
        "column": "81",
        "severity": "error",
        "message": "Expected @throws tag for 'ParseException'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "134",
        "column": "32",
        "severity": "error",
        "message": "Avoid inline conditionals.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.AvoidInlineConditionalsCheck"
    },
    {
        "line": "140",
        "column": "5",
        "severity": "error",
        "message": "Class 'BasicHeaderValueParser' looks like designed for extension (can be subclassed), but the method 'parseHeaderElement' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BasicHeaderValueParser' final or making the method 'parseHeaderElement' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "164",
        "column": "26",
        "severity": "error",
        "message": "Expected @param tag for 'name'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "165",
        "column": "26",
        "severity": "error",
        "message": "Expected @param tag for 'value'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "166",
        "column": "35",
        "severity": "error",
        "message": "Expected @param tag for 'params'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "181",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 95).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "181",
        "column": "80",
        "severity": "error",
        "message": "Expected @throws tag for 'ParseException'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "187",
        "column": "32",
        "severity": "error",
        "message": "Avoid inline conditionals.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.AvoidInlineConditionalsCheck"
    },
    {
        "line": "194",
        "column": "5",
        "severity": "error",
        "message": "Class 'BasicHeaderValueParser' looks like designed for extension (can be subclassed), but the method 'parseParameters' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BasicHeaderValueParser' final or making the method 'parseParameters' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "222",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 95).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "222",
        "column": "80",
        "severity": "error",
        "message": "Expected @throws tag for 'ParseException'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "228",
        "column": "32",
        "severity": "error",
        "message": "Avoid inline conditionals.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.AvoidInlineConditionalsCheck"
    },
    {
        "line": "234",
        "column": "5",
        "severity": "error",
        "message": "Class 'BasicHeaderValueParser' looks like designed for extension (can be subclassed), but the method 'parseNameValuePair' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BasicHeaderValueParser' final or making the method 'parseNameValuePair' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "240",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 81).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "249",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 82).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "259",
        "severity": "error",
        "message": "Expected @return tag.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "260",
        "column": "67",
        "severity": "error",
        "message": "Expected @param tag for 'buffer'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "261",
        "column": "64",
        "severity": "error",
        "message": "Expected @param tag for 'cursor'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "262",
        "column": "58",
        "severity": "error",
        "message": "Expected @param tag for 'delimiters'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "299",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 88).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    }
]