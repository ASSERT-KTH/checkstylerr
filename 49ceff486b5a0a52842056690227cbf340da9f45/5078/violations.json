[
    {
        "line": "65",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 87).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "66",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 81).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "75",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 84).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "77",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "78",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "80",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "81",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "82",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "83",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "84",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "85",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "171",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 84).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "181",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 86).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "197",
        "severity": "error",
        "message": "Expected @return tag.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "198",
        "column": "40",
        "severity": "error",
        "message": "Expected @param tag for 'inTransportMetric'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "199",
        "column": "40",
        "severity": "error",
        "message": "Expected @param tag for 'outTransportMetric'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "200",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 84).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "211",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 93).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "220",
        "column": "38",
        "severity": "error",
        "message": "'inbuffer' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "221",
        "column": "39",
        "severity": "error",
        "message": "'outbuffer' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "239",
        "column": "5",
        "severity": "error",
        "message": "Class 'AbstractHttpClientConnection' looks like designed for extension (can be subclassed), but the method 'isResponseAvailable' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AbstractHttpClientConnection' final or making the method 'isResponseAvailable' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "248",
        "column": "5",
        "severity": "error",
        "message": "Class 'AbstractHttpClientConnection' looks like designed for extension (can be subclassed), but the method 'sendRequestHeader' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AbstractHttpClientConnection' final or making the method 'sendRequestHeader' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "256",
        "column": "5",
        "severity": "error",
        "message": "Class 'AbstractHttpClientConnection' looks like designed for extension (can be subclassed), but the method 'sendRequestEntity' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AbstractHttpClientConnection' final or making the method 'sendRequestEntity' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "269",
        "column": "5",
        "severity": "error",
        "message": "Class 'AbstractHttpClientConnection' looks like designed for extension (can be subclassed), but the method 'doFlush' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AbstractHttpClientConnection' final or making the method 'doFlush' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "273",
        "column": "5",
        "severity": "error",
        "message": "Class 'AbstractHttpClientConnection' looks like designed for extension (can be subclassed), but the method 'flush' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AbstractHttpClientConnection' final or making the method 'flush' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "278",
        "column": "5",
        "severity": "error",
        "message": "Class 'AbstractHttpClientConnection' looks like designed for extension (can be subclassed), but the method 'receiveResponseHeader' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AbstractHttpClientConnection' final or making the method 'receiveResponseHeader' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "288",
        "column": "5",
        "severity": "error",
        "message": "Class 'AbstractHttpClientConnection' looks like designed for extension (can be subclassed), but the method 'receiveResponseEntity' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AbstractHttpClientConnection' final or making the method 'receiveResponseEntity' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "292",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 95).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "296",
        "column": "5",
        "severity": "error",
        "message": "Class 'AbstractHttpClientConnection' looks like designed for extension (can be subclassed), but the method 'isEof' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AbstractHttpClientConnection' final or making the method 'isEof' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "300",
        "column": "5",
        "severity": "error",
        "message": "Class 'AbstractHttpClientConnection' looks like designed for extension (can be subclassed), but the method 'isStale' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AbstractHttpClientConnection' final or making the method 'isStale' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "317",
        "column": "5",
        "severity": "error",
        "message": "Class 'AbstractHttpClientConnection' looks like designed for extension (can be subclassed), but the method 'getMetrics' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AbstractHttpClientConnection' final or making the method 'getMetrics' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    }
]