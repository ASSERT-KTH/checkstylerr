// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/api/documentation.proto

package com.google.api;

public interface PageOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.api.Page)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>optional string name = 1;</code>
   *
   * <pre>
   * The name of the page. It will be used as an identity of the page to
   * generate URI of the page, text of the link to this page in navigation,
   * etc. The full page name (start from the root page name to this page
   * concatenated with `.`) can be used as reference to the page in your
   * documentation. For example:
   *     pages:
   *     - name: Tutorial
   *       content: (== include tutorial.md ==)
   *       subpages:
   *       - name: Java
   *         content: (== include tutorial_java.md ==)
   * You can reference `Java` page using Markdown reference link syntax:
   * `[Java][Tutorial.Java]`.
   * </pre>
   */
  java.lang.String getName();
  /**
   * <code>optional string name = 1;</code>
   *
   * <pre>
   * The name of the page. It will be used as an identity of the page to
   * generate URI of the page, text of the link to this page in navigation,
   * etc. The full page name (start from the root page name to this page
   * concatenated with `.`) can be used as reference to the page in your
   * documentation. For example:
   *     pages:
   *     - name: Tutorial
   *       content: (== include tutorial.md ==)
   *       subpages:
   *       - name: Java
   *         content: (== include tutorial_java.md ==)
   * You can reference `Java` page using Markdown reference link syntax:
   * `[Java][Tutorial.Java]`.
   * </pre>
   */
  com.google.protobuf.ByteString
      getNameBytes();

  /**
   * <code>optional string content = 2;</code>
   *
   * <pre>
   * The Markdown content of the page. You can use `&amp;#40;== include {path} ==&amp;#41;`
   * to include content from a Markdown file.
   * </pre>
   */
  java.lang.String getContent();
  /**
   * <code>optional string content = 2;</code>
   *
   * <pre>
   * The Markdown content of the page. You can use `&amp;#40;== include {path} ==&amp;#41;`
   * to include content from a Markdown file.
   * </pre>
   */
  com.google.protobuf.ByteString
      getContentBytes();

  /**
   * <code>repeated .google.api.Page subpages = 3;</code>
   *
   * <pre>
   * Subpages of this page. The order of subpages specified here will be
   * honored in the generated docset.
   * </pre>
   */
  java.util.List<com.google.api.Page> 
      getSubpagesList();
  /**
   * <code>repeated .google.api.Page subpages = 3;</code>
   *
   * <pre>
   * Subpages of this page. The order of subpages specified here will be
   * honored in the generated docset.
   * </pre>
   */
  com.google.api.Page getSubpages(int index);
  /**
   * <code>repeated .google.api.Page subpages = 3;</code>
   *
   * <pre>
   * Subpages of this page. The order of subpages specified here will be
   * honored in the generated docset.
   * </pre>
   */
  int getSubpagesCount();
  /**
   * <code>repeated .google.api.Page subpages = 3;</code>
   *
   * <pre>
   * Subpages of this page. The order of subpages specified here will be
   * honored in the generated docset.
   * </pre>
   */
  java.util.List<? extends com.google.api.PageOrBuilder> 
      getSubpagesOrBuilderList();
  /**
   * <code>repeated .google.api.Page subpages = 3;</code>
   *
   * <pre>
   * Subpages of this page. The order of subpages specified here will be
   * honored in the generated docset.
   * </pre>
   */
  com.google.api.PageOrBuilder getSubpagesOrBuilder(
      int index);
}
