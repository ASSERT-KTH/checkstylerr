[
    {
        "line": "1",
        "severity": "error",
        "message": "Missing package-info.java file.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocPackageCheck"
    },
    {
        "line": "3",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - au.com.mineauz.minigames.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "13",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - au.com.mineauz.minigames.minigame.modules.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "24",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - java.util.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "54",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigameManager' looks like designed for extension (can be subclassed), but the method 'getModules' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigameManager' final or making the method 'getModules' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "58",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigameManager' looks like designed for extension (can be subclassed), but the method 'addModule' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigameManager' final or making the method 'addModule' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "62",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 101).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "62",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigameManager' looks like designed for extension (can be subclassed), but the method 'removeModule' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigameManager' final or making the method 'removeModule' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "70",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigameManager' looks like designed for extension (can be subclassed), but the method 'startGlobalMinigame' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigameManager' final or making the method 'startGlobalMinigame' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "72",
        "column": "55",
        "severity": "error",
        "message": "'&&' should be on a new line.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
    },
    {
        "line": "73",
        "column": "83",
        "severity": "error",
        "message": "'&&' should be on a new line.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
    },
    {
        "line": "79",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 102).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "97",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 119).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "103",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 121).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "108",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigameManager' looks like designed for extension (can be subclassed), but the method 'stopGlobalMinigame' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigameManager' final or making the method 'stopGlobalMinigame' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "116",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 102).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "131",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigameManager' looks like designed for extension (can be subclassed), but the method 'addMinigame' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigameManager' final or making the method 'addMinigame' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "135",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigameManager' looks like designed for extension (can be subclassed), but the method 'getMinigame' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigameManager' final or making the method 'getMinigame' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "141",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 127).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "149",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigameManager' looks like designed for extension (can be subclassed), but the method 'getAllMinigames' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigameManager' final or making the method 'getAllMinigames' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "153",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigameManager' looks like designed for extension (can be subclassed), but the method 'hasMinigame' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigameManager' final or making the method 'hasMinigame' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "157",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 107).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "166",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigameManager' looks like designed for extension (can be subclassed), but the method 'removeMinigame' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigameManager' final or making the method 'removeMinigame' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "170",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigameManager' looks like designed for extension (can be subclassed), but the method 'addConfigurationFile' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigameManager' final or making the method 'addConfigurationFile' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "174",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigameManager' looks like designed for extension (can be subclassed), but the method 'getConfigurationFile' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigameManager' final or making the method 'getConfigurationFile' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "181",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigameManager' looks like designed for extension (can be subclassed), but the method 'hasConfigurationFile' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigameManager' final or making the method 'hasConfigurationFile' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "185",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigameManager' looks like designed for extension (can be subclassed), but the method 'removeConfigurationFile' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigameManager' final or making the method 'removeConfigurationFile' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "189",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 107).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "189",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigameManager' looks like designed for extension (can be subclassed), but the method 'minigameLocations' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigameManager' final or making the method 'minigameLocations' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "193",
        "column": "76",
        "severity": "error",
        "message": "',' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "194",
        "column": "80",
        "severity": "error",
        "message": "',' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "199",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigameManager' looks like designed for extension (can be subclassed), but the method 'addBlockRecorderData' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigameManager' final or making the method 'addBlockRecorderData' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "200",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 113).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "214",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 101).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "214",
        "column": "76",
        "severity": "error",
        "message": "'+' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "214",
        "column": "76",
        "severity": "error",
        "message": "'+' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "219",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigameManager' looks like designed for extension (can be subclassed), but the method 'addMinigameType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigameManager' final or making the method 'addMinigameType' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "221",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 105).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "224",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigameManager' looks like designed for extension (can be subclassed), but the method 'minigameType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigameManager' final or making the method 'minigameType' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "231",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigameManager' looks like designed for extension (can be subclassed), but the method 'getMinigameTypes' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigameManager' final or making the method 'getMinigameTypes' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "236",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigameManager' looks like designed for extension (can be subclassed), but the method 'addLoadout' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigameManager' final or making the method 'addLoadout' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "240",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigameManager' looks like designed for extension (can be subclassed), but the method 'deleteLoadout' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigameManager' final or making the method 'deleteLoadout' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "244",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigameManager' looks like designed for extension (can be subclassed), but the method 'getLoadouts' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigameManager' final or making the method 'getLoadouts' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "248",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigameManager' looks like designed for extension (can be subclassed), but the method 'getLoadoutMap' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigameManager' final or making the method 'getLoadoutMap' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "252",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigameManager' looks like designed for extension (can be subclassed), but the method 'getLoadout' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigameManager' final or making the method 'getLoadout' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "260",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigameManager' looks like designed for extension (can be subclassed), but the method 'hasLoadouts' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigameManager' final or making the method 'hasLoadouts' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "264",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigameManager' looks like designed for extension (can be subclassed), but the method 'hasLoadout' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigameManager' final or making the method 'hasLoadout' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "268",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigameManager' looks like designed for extension (can be subclassed), but the method 'sendMinigameMessage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigameManager' final or making the method 'sendMinigameMessage' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "272",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 116).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "272",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigameManager' looks like designed for extension (can be subclassed), but the method 'sendMinigameMessage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigameManager' final or making the method 'sendMinigameMessage' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "276",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 114).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "276",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigameManager' looks like designed for extension (can be subclassed), but the method 'sendMinigameMessage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigameManager' final or making the method 'sendMinigameMessage' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "281",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 108).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "281",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigameManager' looks like designed for extension (can be subclassed), but the method 'sendMinigameMessage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigameManager' final or making the method 'sendMinigameMessage' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "281",
        "column": "84",
        "severity": "error",
        "message": "Parameter type should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "311",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigameManager' looks like designed for extension (can be subclassed), but the method 'addRewardSign' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigameManager' final or making the method 'addRewardSign' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "312",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 101).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "316",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigameManager' looks like designed for extension (can be subclassed), but the method 'getRewardSign' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigameManager' final or making the method 'getRewardSign' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "320",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigameManager' looks like designed for extension (can be subclassed), but the method 'hasRewardSign' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigameManager' final or making the method 'hasRewardSign' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "324",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigameManager' looks like designed for extension (can be subclassed), but the method 'removeRewardSign' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigameManager' final or making the method 'removeRewardSign' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "337",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigameManager' looks like designed for extension (can be subclassed), but the method 'saveRewardSigns' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigameManager' final or making the method 'saveRewardSigns' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "347",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigameManager' looks like designed for extension (can be subclassed), but the method 'saveRewardSign' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigameManager' final or making the method 'saveRewardSign' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "361",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigameManager' looks like designed for extension (can be subclassed), but the method 'loadRewardSignsFile' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigameManager' final or making the method 'loadRewardSignsFile' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "365",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigameManager' looks like designed for extension (can be subclassed), but the method 'loadRewardSigns' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigameManager' final or making the method 'loadRewardSigns' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "379",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigameManager' looks like designed for extension (can be subclassed), but the method 'hasClaimedScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigameManager' final or making the method 'hasClaimedScore' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "382",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 111).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "384",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 113).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "388",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigameManager' looks like designed for extension (can be subclassed), but the method 'addClaimedScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigameManager' final or making the method 'addClaimedScore' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "403",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigameManager' looks like designed for extension (can be subclassed), but the method 'clearClaimedScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigameManager' final or making the method 'clearClaimedScore' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "408",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigameManager' looks like designed for extension (can be subclassed), but the method 'minigameMechanicCheck' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigameManager' final or making the method 'minigameMechanicCheck' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "409",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 104).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "412",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigameManager' looks like designed for extension (can be subclassed), but the method 'minigameStartStateCheck' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigameManager' final or making the method 'minigameStartStateCheck' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "414",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 110).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "417",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 117).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "420",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 112).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "423",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 101).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "429",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigameManager' looks like designed for extension (can be subclassed), but the method 'minigameStartSetupCheck' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigameManager' final or making the method 'minigameStartSetupCheck' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "431",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 105).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "434",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 106).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "436",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 160).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "437",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 111).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "440",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 111).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "442",
        "column": "61",
        "severity": "error",
        "message": "'||' should be on a new line.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
    },
    {
        "line": "443",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 108).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "444",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 107).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "450",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigameManager' looks like designed for extension (can be subclassed), but the method 'teleportPlayerOnJoin' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigameManager' final or making the method 'teleportPlayerOnJoin' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    }
]