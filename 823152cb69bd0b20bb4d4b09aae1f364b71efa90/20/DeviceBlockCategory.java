/*
 * Pelion Device Management API
 * Pelion Device Management API build from the publicly defined API definitions.
 *
 * OpenAPI spec version: 3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.arm.mbed.cloud.sdk.lowlevel.pelionclouddevicemanagement.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;
import io.swagger.annotations.ApiModelProperty;
import org.joda.time.DateTime;
import java.io.Serializable;

/**
 * DeviceBlockCategory
 */

public class DeviceBlockCategory implements Serializable {
    private static final long serialVersionUID = 1L;

    @SerializedName("description")
    private String description = null;

    @SerializedName("object")
    private String object = null;

    @SerializedName("reference")
    private String reference = null;

    @SerializedName("updated_at")
    private DateTime updatedAt = null;

    public DeviceBlockCategory description(String description) {
        this.description = description;
        return this;
    }

    /**
     * Get description
     * 
     * @return description
     **/
    @ApiModelProperty(example = "Suspended for maintenance.", value = "")
    public String getDescription() {
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public DeviceBlockCategory object(String object) {
        this.object = object;
        return this;
    }

    /**
     * Entity name: always &#39;device-block-category&#39;.
     * 
     * @return object
     **/
    @ApiModelProperty(example = "device-block-category", value = "Entity name: always 'device-block-category'.")
    public String getObject() {
        return object;
    }

    public void setObject(String object) {
        this.object = object;
    }

    public DeviceBlockCategory reference(String reference) {
        this.reference = reference;
        return this;
    }

    /**
     * Get reference
     * 
     * @return reference
     **/
    @ApiModelProperty(example = "maintenance", value = "")
    public String getReference() {
        return reference;
    }

    public void setReference(String reference) {
        this.reference = reference;
    }

    public DeviceBlockCategory updatedAt(DateTime updatedAt) {
        this.updatedAt = updatedAt;
        return this;
    }

    /**
     * Get updatedAt
     * 
     * @return updatedAt
     **/
    @ApiModelProperty(value = "")
    public DateTime getUpdatedAt() {
        return updatedAt;
    }

    public void setUpdatedAt(DateTime updatedAt) {
        this.updatedAt = updatedAt;
    }

    @Override
    public boolean equals(java.lang.Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
        DeviceBlockCategory deviceBlockCategory = (DeviceBlockCategory) o;
        return Objects.equals(this.description, deviceBlockCategory.description)
               && Objects.equals(this.object, deviceBlockCategory.object)
               && Objects.equals(this.reference, deviceBlockCategory.reference)
               && Objects.equals(this.updatedAt, deviceBlockCategory.updatedAt);
    }

    @Override
    public int hashCode() {
        return Objects.hash(description, object, reference, updatedAt);
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class DeviceBlockCategory {\n");

        sb.append("    description: ").append(toIndentedString(description)).append("\n");
        sb.append("    object: ").append(toIndentedString(object)).append("\n");
        sb.append("    reference: ").append(toIndentedString(reference)).append("\n");
        sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces (except the first line).
     */
    private String toIndentedString(java.lang.Object o) {
        if (o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}
