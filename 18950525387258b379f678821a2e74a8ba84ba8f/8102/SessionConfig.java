/*
 * Copyright (c) 1997, 2018 Oracle and/or its affiliates. All rights reserved.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0, which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the
 * Eclipse Public License v. 2.0 are satisfied: GNU General Public License,
 * version 2 with the GNU Classpath Exception, which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 */

package org.glassfish.web.deployment.runtime;

import com.sun.enterprise.deployment.runtime.RuntimeDescriptor;

/**
* this class contains runtime information for the web bundle
* it was kept to be backward compatible with the schema2beans descriptors
* generated by iAS 7.0 engineering team.
*
* @author Jerome Dochez
*/
public class SessionConfig extends RuntimeDescriptor {

    static public final String SESSION_MANAGER = "SessionManager"; // NOI18N
    static public final String SESSION_PROPERTIES = "SessionProperties"; // NOI18N
    static public final String COOKIE_PROPERTIES = "CookieProperties"; // NOI18N

    // This attribute is optional
    public void setSessionManager(SessionManager value) {
        this.setValue(SESSION_MANAGER, value);
    }


    //
    public SessionManager getSessionManager() {
        return (SessionManager) this.getValue(SESSION_MANAGER);
    }


    // This attribute is optional
    public void setSessionProperties(SessionProperties value) {
        this.setValue(SESSION_PROPERTIES, value);
    }


    //
    public SessionProperties getSessionProperties() {
        return (SessionProperties) this.getValue(SESSION_PROPERTIES);
    }


    // This attribute is optional
    public void setCookieProperties(CookieProperties value) {
        this.setValue(COOKIE_PROPERTIES, value);
    }


    //
    public CookieProperties getCookieProperties() {
        return (CookieProperties) this.getValue(COOKIE_PROPERTIES);
    }


    // This method verifies that the mandatory properties are set
    public boolean verify() {
        return true;
    }

}
