/*
 * Copyright (c) 2018 Oracle and/or its affiliates. All rights reserved.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0, which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the
 * Eclipse Public License v. 2.0 are satisfied: GNU General Public License,
 * version 2 with the GNU Classpath Exception, which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 */

package Data;

import jakarta.ejb.*;

/**
 * Created Dec 16, 2002 1:22:07 PM
 * Code generated by the Forte For Java EJB Builder
 * @author mvatkina
 */


public abstract class SuppliersBean implements jakarta.ejb.EntityBean {

    private jakarta.ejb.EntityContext context;
    private LocalParts part0;


    /**
     * @see jakarta.ejb.EntityBean#setEntityContext(jakarta.ejb.EntityContext)
     */
    public void setEntityContext(jakarta.ejb.EntityContext aContext) {
        context=aContext;
    }


    /**
     * @see jakarta.ejb.EntityBean#ejbActivate()
     */
    public void ejbActivate() {

    }


    /**
     * @see jakarta.ejb.EntityBean#ejbPassivate()
     */
    public void ejbPassivate() {

    }


    /**
     * @see jakarta.ejb.EntityBean#ejbRemove()
     */
    public void ejbRemove() {
        Data.LocalParts part = getParts();
        System.out.print("Removing Supplier: " + getName());
        if (part == null) {
            System.out.println(" ...for cascade-delete");
        } else {
            System.out.println(" for Part: " + part.getName());
        }
        //part0.testInCascadeDelete();
    }


    /**
     * @see jakarta.ejb.EntityBean#unsetEntityContext()
     */
    public void unsetEntityContext() {
        context=null;
    }


    /**
     * @see jakarta.ejb.EntityBean#ejbLoad()
     */
    public void ejbLoad() {

    }


    /**
     * @see jakarta.ejb.EntityBean#ejbStore()
     */
    public void ejbStore() {

    }

    public abstract java.lang.Integer getPartid();
    public abstract void setPartid(java.lang.Integer partid);

    public abstract java.lang.Integer getSupplierid();
    public abstract void setSupplierid(java.lang.Integer supplierid);

    public abstract java.lang.String getName();
    public abstract void setName(java.lang.String name);

    public abstract int getStatus();
    public abstract void setStatus(int status);

    public abstract java.lang.String getCity();
    public abstract void setCity(java.lang.String city);

    public abstract Data.LocalParts getParts();

    public abstract void setParts(Data.LocalParts parts);

    public Data.SuppliersKey ejbCreate(java.lang.Integer partid, java.lang.Integer supplierid, java.lang.String name, int status, java.lang.String city) throws jakarta.ejb.CreateException {
        if ((supplierid == null) ||(partid == null)){
            throw new jakarta.ejb.CreateException("The partid and supplierid are required.");
        }
        setPartid(partid);
        setSupplierid(supplierid);
        setName(name);
        setStatus(status);
        setCity(city);
        return null;
    }

    public void ejbPostCreate(java.lang.Integer partid, java.lang.Integer supplierid, java.lang.String name, int status, java.lang.String city) throws jakarta.ejb.CreateException {
        part0 = getParts();
    }

}
