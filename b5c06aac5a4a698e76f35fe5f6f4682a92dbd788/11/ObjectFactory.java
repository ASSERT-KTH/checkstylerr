//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2018.07.13 at 11:44:21 AM IST 
//


package com.nordstrom.mlsort.jaxb;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the com.nordstrom.mlsort.jaxb package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _FlowController_QNAME = new QName("", "flowController");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: com.nordstrom.mlsort.jaxb
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link FlowControllerType }
     * 
     */
    public FlowControllerType createFlowControllerType() {
        return new FlowControllerType();
    }

    /**
     * Create an instance of {@link ProcessorType }
     * 
     */
    public ProcessorType createProcessorType() {
        return new ProcessorType();
    }

    /**
     * Create an instance of {@link PropertyType }
     * 
     */
    public PropertyType createPropertyType() {
        return new PropertyType();
    }

    /**
     * Create an instance of {@link FunnelType }
     * 
     */
    public FunnelType createFunnelType() {
        return new FunnelType();
    }

    /**
     * Create an instance of {@link ReportingTaskType }
     * 
     */
    public ReportingTaskType createReportingTaskType() {
        return new ReportingTaskType();
    }

    /**
     * Create an instance of {@link BundleType }
     * 
     */
    public BundleType createBundleType() {
        return new BundleType();
    }

    /**
     * Create an instance of {@link LabelType }
     * 
     */
    public LabelType createLabelType() {
        return new LabelType();
    }

    /**
     * Create an instance of {@link BendPointsType }
     * 
     */
    public BendPointsType createBendPointsType() {
        return new BendPointsType();
    }

    /**
     * Create an instance of {@link RegistriesType }
     * 
     */
    public RegistriesType createRegistriesType() {
        return new RegistriesType();
    }

    /**
     * Create an instance of {@link Style }
     * 
     */
    public Style createStyle() {
        return new Style();
    }

    /**
     * Create an instance of {@link FlowRegistryType }
     * 
     */
    public FlowRegistryType createFlowRegistryType() {
        return new FlowRegistryType();
    }

    /**
     * Create an instance of {@link RootProcessGroupType }
     * 
     */
    public RootProcessGroupType createRootProcessGroupType() {
        return new RootProcessGroupType();
    }

    /**
     * Create an instance of {@link ControllerServiceType }
     * 
     */
    public ControllerServiceType createControllerServiceType() {
        return new ControllerServiceType();
    }

    /**
     * Create an instance of {@link VariableType }
     * 
     */
    public VariableType createVariableType() {
        return new VariableType();
    }

    /**
     * Create an instance of {@link ConnectionType }
     * 
     */
    public ConnectionType createConnectionType() {
        return new ConnectionType();
    }

    /**
     * Create an instance of {@link RemoteProcessGroupType }
     * 
     */
    public RemoteProcessGroupType createRemoteProcessGroupType() {
        return new RemoteProcessGroupType();
    }

    /**
     * Create an instance of {@link TemplateType }
     * 
     */
    public TemplateType createTemplateType() {
        return new TemplateType();
    }

    /**
     * Create an instance of {@link SizeType }
     * 
     */
    public SizeType createSizeType() {
        return new SizeType();
    }

    /**
     * Create an instance of {@link PositionType }
     * 
     */
    public PositionType createPositionType() {
        return new PositionType();
    }

    /**
     * Create an instance of {@link ReportingTasksType }
     * 
     */
    public ReportingTasksType createReportingTasksType() {
        return new ReportingTasksType();
    }

    /**
     * Create an instance of {@link SnippetType }
     * 
     */
    public SnippetType createSnippetType() {
        return new SnippetType();
    }

    /**
     * Create an instance of {@link ProcessGroupType }
     * 
     */
    public ProcessGroupType createProcessGroupType() {
        return new ProcessGroupType();
    }

    /**
     * Create an instance of {@link VersionControlInformation }
     * 
     */
    public VersionControlInformation createVersionControlInformation() {
        return new VersionControlInformation();
    }

    /**
     * Create an instance of {@link RootGroupPortType }
     * 
     */
    public RootGroupPortType createRootGroupPortType() {
        return new RootGroupPortType();
    }

    /**
     * Create an instance of {@link RemoteGroupPortType }
     * 
     */
    public RemoteGroupPortType createRemoteGroupPortType() {
        return new RemoteGroupPortType();
    }

    /**
     * Create an instance of {@link ControllerServicesType }
     * 
     */
    public ControllerServicesType createControllerServicesType() {
        return new ControllerServicesType();
    }

    /**
     * Create an instance of {@link PortType }
     * 
     */
    public PortType createPortType() {
        return new PortType();
    }

    /**
     * Create an instance of {@link Styles }
     * 
     */
    public Styles createStyles() {
        return new Styles();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link FlowControllerType }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "flowController")
    public JAXBElement<FlowControllerType> createFlowController(FlowControllerType value) {
        return new JAXBElement<FlowControllerType>(_FlowController_QNAME, FlowControllerType.class, null, value);
    }

}
