/*
 * REST API
 * Rockset's REST API allows for creating and managing all resources in Rockset. Each supported endpoint is documented below.  All requests must be authorized with a Rockset API key, which can be created in the [Rockset console](https://console.rockset.com). The API key must be provided as `ApiKey <api_key>` in the `Authorization` request header. For example: ``` Authorization: ApiKey aB35kDjg93J5nsf4GjwMeErAVd832F7ad4vhsW1S02kfZiab42sTsfW5Sxt25asT ```  All endpoints are only accessible via https.  Build something awesome!
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.rockset.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.rockset.client.model.DynamodbIntegration;
import com.rockset.client.model.GcsIntegration;
import com.rockset.client.model.KafkaIntegration;
import com.rockset.client.model.KinesisIntegration;
import com.rockset.client.model.RedshiftIntegration;
import com.rockset.client.model.S3Integration;
import com.rockset.client.model.SegmentIntegration;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * CreateIntegrationRequest
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-01-24T17:41:10.748Z")
public class CreateIntegrationRequest {
  @SerializedName("name")
  private String name = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("s3")
  private S3Integration s3 = null;

  @SerializedName("kinesis")
  private KinesisIntegration kinesis = null;

  @SerializedName("dynamodb")
  private DynamodbIntegration dynamodb = null;

  @SerializedName("redshift")
  private RedshiftIntegration redshift = null;

  @SerializedName("gcs")
  private GcsIntegration gcs = null;

  @SerializedName("segment")
  private SegmentIntegration segment = null;

  @SerializedName("kafka")
  private KafkaIntegration kafka = null;

  public CreateIntegrationRequest name(String name) {
    this.name = name;
    return this;
  }

   /**
   * descriptive label
   * @return name
  **/

@JsonProperty("name")
@ApiModelProperty(example = "event-logs", required = true, value = "descriptive label")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public CreateIntegrationRequest description(String description) {
    this.description = description;
    return this;
  }

   /**
   * longer explanation for the integration
   * @return description
  **/

@JsonProperty("description")
@ApiModelProperty(example = "AWS account with event data for the data science team.", value = "longer explanation for the integration")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public CreateIntegrationRequest s3(S3Integration s3) {
    this.s3 = s3;
    return this;
  }

   /**
   * Amazon S3 details, must have one of aws_access_key or aws_role
   * @return s3
  **/

@JsonProperty("s3")
@ApiModelProperty(value = "Amazon S3 details, must have one of aws_access_key or aws_role")
  public S3Integration getS3() {
    return s3;
  }

  public void setS3(S3Integration s3) {
    this.s3 = s3;
  }

  public CreateIntegrationRequest kinesis(KinesisIntegration kinesis) {
    this.kinesis = kinesis;
    return this;
  }

   /**
   * Amazon Kinesis details, must have one of aws_access_key or aws_role
   * @return kinesis
  **/

@JsonProperty("kinesis")
@ApiModelProperty(value = "Amazon Kinesis details, must have one of aws_access_key or aws_role")
  public KinesisIntegration getKinesis() {
    return kinesis;
  }

  public void setKinesis(KinesisIntegration kinesis) {
    this.kinesis = kinesis;
  }

  public CreateIntegrationRequest dynamodb(DynamodbIntegration dynamodb) {
    this.dynamodb = dynamodb;
    return this;
  }

   /**
   * Amazon DynamoDB details, must have one of aws_access_key or aws_role
   * @return dynamodb
  **/

@JsonProperty("dynamodb")
@ApiModelProperty(value = "Amazon DynamoDB details, must have one of aws_access_key or aws_role")
  public DynamodbIntegration getDynamodb() {
    return dynamodb;
  }

  public void setDynamodb(DynamodbIntegration dynamodb) {
    this.dynamodb = dynamodb;
  }

  public CreateIntegrationRequest redshift(RedshiftIntegration redshift) {
    this.redshift = redshift;
    return this;
  }

   /**
   * Amazon Redshift details
   * @return redshift
  **/

@JsonProperty("redshift")
@ApiModelProperty(value = "Amazon Redshift details")
  public RedshiftIntegration getRedshift() {
    return redshift;
  }

  public void setRedshift(RedshiftIntegration redshift) {
    this.redshift = redshift;
  }

  public CreateIntegrationRequest gcs(GcsIntegration gcs) {
    this.gcs = gcs;
    return this;
  }

   /**
   * GCS details
   * @return gcs
  **/

@JsonProperty("gcs")
@ApiModelProperty(value = "GCS details")
  public GcsIntegration getGcs() {
    return gcs;
  }

  public void setGcs(GcsIntegration gcs) {
    this.gcs = gcs;
  }

  public CreateIntegrationRequest segment(SegmentIntegration segment) {
    this.segment = segment;
    return this;
  }

   /**
   * Get segment
   * @return segment
  **/

@JsonProperty("segment")
@ApiModelProperty(value = "")
  public SegmentIntegration getSegment() {
    return segment;
  }

  public void setSegment(SegmentIntegration segment) {
    this.segment = segment;
  }

  public CreateIntegrationRequest kafka(KafkaIntegration kafka) {
    this.kafka = kafka;
    return this;
  }

   /**
   * Get kafka
   * @return kafka
  **/

@JsonProperty("kafka")
@ApiModelProperty(value = "")
  public KafkaIntegration getKafka() {
    return kafka;
  }

  public void setKafka(KafkaIntegration kafka) {
    this.kafka = kafka;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CreateIntegrationRequest createIntegrationRequest = (CreateIntegrationRequest) o;
    return Objects.equals(this.name, createIntegrationRequest.name) &&
        Objects.equals(this.description, createIntegrationRequest.description) &&
        Objects.equals(this.s3, createIntegrationRequest.s3) &&
        Objects.equals(this.kinesis, createIntegrationRequest.kinesis) &&
        Objects.equals(this.dynamodb, createIntegrationRequest.dynamodb) &&
        Objects.equals(this.redshift, createIntegrationRequest.redshift) &&
        Objects.equals(this.gcs, createIntegrationRequest.gcs) &&
        Objects.equals(this.segment, createIntegrationRequest.segment) &&
        Objects.equals(this.kafka, createIntegrationRequest.kafka);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, description, s3, kinesis, dynamodb, redshift, gcs, segment, kafka);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CreateIntegrationRequest {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    s3: ").append(toIndentedString(s3)).append("\n");
    sb.append("    kinesis: ").append(toIndentedString(kinesis)).append("\n");
    sb.append("    dynamodb: ").append(toIndentedString(dynamodb)).append("\n");
    sb.append("    redshift: ").append(toIndentedString(redshift)).append("\n");
    sb.append("    gcs: ").append(toIndentedString(gcs)).append("\n");
    sb.append("    segment: ").append(toIndentedString(segment)).append("\n");
    sb.append("    kafka: ").append(toIndentedString(kafka)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

