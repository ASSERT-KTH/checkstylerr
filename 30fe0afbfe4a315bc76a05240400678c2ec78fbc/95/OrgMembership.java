/*
 * REST API
 * Rockset's REST API allows for creating and managing all resources in Rockset. Each supported endpoint is documented below.  All requests must be authorized with a Rockset API key, which can be created in the [Rockset console](https://console.rockset.com). The API key must be provided as `ApiKey <api_key>` in the `Authorization` request header. For example: ``` Authorization: ApiKey aB35kDjg93J5nsf4GjwMeErAVd832F7ad4vhsW1S02kfZiab42sTsfW5Sxt25asT ```  All endpoints are only accessible via https.  Build something awesome!
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.rockset.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.rockset.client.model.Organization;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * OrgMembership
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-02-25T08:10:23.542Z")
public class OrgMembership {
  @SerializedName("organization")
  private Organization organization = null;

  @SerializedName("roles")
  private List<String> roles = new ArrayList<String>();

  /**
   * Gets or Sets inviteState
   */
  @JsonAdapter(InviteStateEnum.Adapter.class)
  public enum InviteStateEnum {
    PENDING("PENDING"),
    
    ACCEPTED("ACCEPTED"),
    
    EXPIRED("EXPIRED"),
    
    CANCELLED("CANCELLED");

    private String value;

    InviteStateEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static InviteStateEnum fromValue(String text) {
      for (InviteStateEnum b : InviteStateEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<InviteStateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final InviteStateEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public InviteStateEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return InviteStateEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("invite_state")
  private InviteStateEnum inviteState = null;

  @SerializedName("invited_by")
  private String invitedBy = null;

  @SerializedName("email")
  private String email = null;

  @SerializedName("expires_at")
  private String expiresAt = null;

  @SerializedName("created_at")
  private String createdAt = null;

  public OrgMembership organization(Organization organization) {
    this.organization = organization;
    return this;
  }

   /**
   * Get organization
   * @return organization
  **/

@JsonProperty("organization")
@ApiModelProperty(required = true, value = "")
  public Organization getOrganization() {
    return organization;
  }

  public void setOrganization(Organization organization) {
    this.organization = organization;
  }

  public OrgMembership roles(List<String> roles) {
    this.roles = roles;
    return this;
  }

  public OrgMembership addRolesItem(String rolesItem) {
    this.roles.add(rolesItem);
    return this;
  }

   /**
   * Get roles
   * @return roles
  **/

@JsonProperty("roles")
@ApiModelProperty(required = true, value = "")
  public List<String> getRoles() {
    return roles;
  }

  public void setRoles(List<String> roles) {
    this.roles = roles;
  }

  public OrgMembership inviteState(InviteStateEnum inviteState) {
    this.inviteState = inviteState;
    return this;
  }

   /**
   * Get inviteState
   * @return inviteState
  **/

@JsonProperty("invite_state")
@ApiModelProperty(required = true, value = "")
  public InviteStateEnum getInviteState() {
    return inviteState;
  }

  public void setInviteState(InviteStateEnum inviteState) {
    this.inviteState = inviteState;
  }

  public OrgMembership invitedBy(String invitedBy) {
    this.invitedBy = invitedBy;
    return this;
  }

   /**
   * Get invitedBy
   * @return invitedBy
  **/

@JsonProperty("invited_by")
@ApiModelProperty(required = true, value = "")
  public String getInvitedBy() {
    return invitedBy;
  }

  public void setInvitedBy(String invitedBy) {
    this.invitedBy = invitedBy;
  }

  public OrgMembership email(String email) {
    this.email = email;
    return this;
  }

   /**
   * email of the user
   * @return email
  **/

@JsonProperty("email")
@ApiModelProperty(value = "email of the user")
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }

   /**
   * ISO-8601 date
   * @return expiresAt
  **/

@JsonProperty("expires_at")
@ApiModelProperty(example = "2001-08-29T00:23:41Z", required = true, value = "ISO-8601 date")
  public String getExpiresAt() {
    return expiresAt;
  }

  public OrgMembership createdAt(String createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * ISO-8601 date
   * @return createdAt
  **/

@JsonProperty("created_at")
@ApiModelProperty(example = "2001-08-28T00:23:41Z", required = true, value = "ISO-8601 date")
  public String getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(String createdAt) {
    this.createdAt = createdAt;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrgMembership orgMembership = (OrgMembership) o;
    return Objects.equals(this.organization, orgMembership.organization) &&
        Objects.equals(this.roles, orgMembership.roles) &&
        Objects.equals(this.inviteState, orgMembership.inviteState) &&
        Objects.equals(this.invitedBy, orgMembership.invitedBy) &&
        Objects.equals(this.email, orgMembership.email) &&
        Objects.equals(this.expiresAt, orgMembership.expiresAt) &&
        Objects.equals(this.createdAt, orgMembership.createdAt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(organization, roles, inviteState, invitedBy, email, expiresAt, createdAt);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrgMembership {\n");
    
    sb.append("    organization: ").append(toIndentedString(organization)).append("\n");
    sb.append("    roles: ").append(toIndentedString(roles)).append("\n");
    sb.append("    inviteState: ").append(toIndentedString(inviteState)).append("\n");
    sb.append("    invitedBy: ").append(toIndentedString(invitedBy)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    expiresAt: ").append(toIndentedString(expiresAt)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

