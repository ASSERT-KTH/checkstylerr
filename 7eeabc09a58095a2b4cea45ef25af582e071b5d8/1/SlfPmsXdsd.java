/*
 * This file is generated by jOOQ.
 */
package com.selfxdsd.storage.generated.jooq.tables;


import com.selfxdsd.storage.generated.jooq.Keys;
import com.selfxdsd.storage.generated.jooq.SelfXdsd;
import com.selfxdsd.storage.generated.jooq.tables.records.SlfPmsXdsdRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SlfPmsXdsd extends TableImpl<SlfPmsXdsdRecord> {

    private static final long serialVersionUID = 1355365871;

    /**
     * The reference instance of <code>self_xdsd.slf_pms_xdsd</code>
     */
    public static final SlfPmsXdsd SLF_PMS_XDSD = new SlfPmsXdsd();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<SlfPmsXdsdRecord> getRecordType() {
        return SlfPmsXdsdRecord.class;
    }

    /**
     * The column <code>self_xdsd.slf_pms_xdsd.id</code>.
     */
    public final TableField<SlfPmsXdsdRecord, Integer> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>self_xdsd.slf_pms_xdsd.provider</code>.
     */
    public final TableField<SlfPmsXdsdRecord, String> PROVIDER = createField(DSL.name("provider"), org.jooq.impl.SQLDataType.VARCHAR(50).nullable(false), this, "");

    /**
     * The column <code>self_xdsd.slf_pms_xdsd.access_token</code>.
     */
    public final TableField<SlfPmsXdsdRecord, String> ACCESS_TOKEN = createField(DSL.name("access_token"), org.jooq.impl.SQLDataType.VARCHAR(256).nullable(false), this, "");

    /**
     * Create a <code>self_xdsd.slf_pms_xdsd</code> table reference
     */
    public SlfPmsXdsd() {
        this(DSL.name("slf_pms_xdsd"), null);
    }

    /**
     * Create an aliased <code>self_xdsd.slf_pms_xdsd</code> table reference
     */
    public SlfPmsXdsd(String alias) {
        this(DSL.name(alias), SLF_PMS_XDSD);
    }

    /**
     * Create an aliased <code>self_xdsd.slf_pms_xdsd</code> table reference
     */
    public SlfPmsXdsd(Name alias) {
        this(alias, SLF_PMS_XDSD);
    }

    private SlfPmsXdsd(Name alias, Table<SlfPmsXdsdRecord> aliased) {
        this(alias, aliased, null);
    }

    private SlfPmsXdsd(Name alias, Table<SlfPmsXdsdRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> SlfPmsXdsd(Table<O> child, ForeignKey<O, SlfPmsXdsdRecord> key) {
        super(child, key, SLF_PMS_XDSD);
    }

    @Override
    public Schema getSchema() {
        return SelfXdsd.SELF_XDSD;
    }

    @Override
    public Identity<SlfPmsXdsdRecord, Integer> getIdentity() {
        return Keys.IDENTITY_SLF_PMS_XDSD;
    }

    @Override
    public UniqueKey<SlfPmsXdsdRecord> getPrimaryKey() {
        return Keys.KEY_SLF_PMS_XDSD_PRIMARY;
    }

    @Override
    public List<UniqueKey<SlfPmsXdsdRecord>> getKeys() {
        return Arrays.<UniqueKey<SlfPmsXdsdRecord>>asList(Keys.KEY_SLF_PMS_XDSD_PRIMARY);
    }

    @Override
    public SlfPmsXdsd as(String alias) {
        return new SlfPmsXdsd(DSL.name(alias), this);
    }

    @Override
    public SlfPmsXdsd as(Name alias) {
        return new SlfPmsXdsd(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public SlfPmsXdsd rename(String name) {
        return new SlfPmsXdsd(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public SlfPmsXdsd rename(Name name) {
        return new SlfPmsXdsd(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, String, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}
