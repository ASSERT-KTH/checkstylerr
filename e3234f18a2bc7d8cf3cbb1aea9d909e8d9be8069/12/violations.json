[
    {
        "line": "4",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "5",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "7",
        "column": "20",
        "severity": "error",
        "message": "Parameter re should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "7",
        "column": "27",
        "severity": "error",
        "message": "'re' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "7",
        "column": "31",
        "severity": "error",
        "message": "Parameter im should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "7",
        "column": "38",
        "severity": "error",
        "message": "'im' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "12",
        "column": "5",
        "severity": "error",
        "message": "Class 'Complex' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Complex' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "25",
        "column": "5",
        "severity": "error",
        "message": "Class 'Complex' looks like designed for extension (can be subclassed), but the method 'abs' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Complex' final or making the method 'abs' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "29",
        "column": "5",
        "severity": "error",
        "message": "Class 'Complex' looks like designed for extension (can be subclassed), but the method 'phase' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Complex' final or making the method 'phase' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "33",
        "column": "5",
        "severity": "error",
        "message": "Class 'Complex' looks like designed for extension (can be subclassed), but the method 'plus' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Complex' final or making the method 'plus' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "33",
        "column": "25",
        "severity": "error",
        "message": "Parameter b should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "41",
        "column": "5",
        "severity": "error",
        "message": "Class 'Complex' looks like designed for extension (can be subclassed), but the method 'minus' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Complex' final or making the method 'minus' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "41",
        "column": "26",
        "severity": "error",
        "message": "Parameter b should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "49",
        "column": "5",
        "severity": "error",
        "message": "Class 'Complex' looks like designed for extension (can be subclassed), but the method 'times' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Complex' final or making the method 'times' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "49",
        "column": "26",
        "severity": "error",
        "message": "Parameter b should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "57",
        "column": "5",
        "severity": "error",
        "message": "Class 'Complex' looks like designed for extension (can be subclassed), but the method 'times' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Complex' final or making the method 'times' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "57",
        "column": "26",
        "severity": "error",
        "message": "Parameter alpha should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "61",
        "column": "5",
        "severity": "error",
        "message": "Class 'Complex' looks like designed for extension (can be subclassed), but the method 'conjugate' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Complex' final or making the method 'conjugate' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "65",
        "column": "5",
        "severity": "error",
        "message": "Class 'Complex' looks like designed for extension (can be subclassed), but the method 'reciprocal' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Complex' final or making the method 'reciprocal' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "70",
        "column": "5",
        "severity": "error",
        "message": "Class 'Complex' looks like designed for extension (can be subclassed), but the method 're' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Complex' final or making the method 're' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "74",
        "column": "5",
        "severity": "error",
        "message": "Class 'Complex' looks like designed for extension (can be subclassed), but the method 'im' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Complex' final or making the method 'im' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "78",
        "column": "5",
        "severity": "error",
        "message": "Class 'Complex' looks like designed for extension (can be subclassed), but the method 'divides' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Complex' final or making the method 'divides' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "78",
        "column": "28",
        "severity": "error",
        "message": "Parameter b should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "83",
        "column": "5",
        "severity": "error",
        "message": "Class 'Complex' looks like designed for extension (can be subclassed), but the method 'divides' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Complex' final or making the method 'divides' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "83",
        "column": "28",
        "severity": "error",
        "message": "Parameter param should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "87",
        "column": "5",
        "severity": "error",
        "message": "Class 'Complex' looks like designed for extension (can be subclassed), but the method 'exp' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Complex' final or making the method 'exp' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "88",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 85).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "91",
        "column": "5",
        "severity": "error",
        "message": "Class 'Complex' looks like designed for extension (can be subclassed), but the method 'sin' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Complex' final or making the method 'sin' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "92",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 87).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "95",
        "column": "5",
        "severity": "error",
        "message": "Class 'Complex' looks like designed for extension (can be subclassed), but the method 'cos' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Complex' final or making the method 'cos' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "96",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 88).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "99",
        "column": "5",
        "severity": "error",
        "message": "Class 'Complex' looks like designed for extension (can be subclassed), but the method 'tan' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Complex' final or making the method 'tan' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "103",
        "column": "32",
        "severity": "error",
        "message": "Parameter a should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "103",
        "column": "43",
        "severity": "error",
        "message": "Parameter b should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    }
]