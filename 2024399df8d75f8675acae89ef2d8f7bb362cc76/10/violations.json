[
    {
        "line": "27",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "28",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "30",
        "column": "5",
        "severity": "error",
        "message": "Class 'BaseUnmarshallerTest' looks like designed for extension (can be subclassed), but the method 'setUp' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BaseUnmarshallerTest' final or making the method 'setUp' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "37",
        "column": "17",
        "severity": "error",
        "message": "Name 'unmarshaller_exception_wrapped_in_sdk_exception' must match pattern '^[a-z][a-zA-Z0-9]*$'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.naming.MethodNameCheck"
    },
    {
        "line": "43",
        "column": "9",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "45",
        "column": "9",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "47",
        "column": "9",
        "severity": "error",
        "message": "Class 'BaseFoo' looks like designed for extension (can be subclassed), but the method 'getHeader' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BaseFoo' final or making the method 'getHeader' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "51",
        "column": "9",
        "severity": "error",
        "message": "Class 'BaseFoo' looks like designed for extension (can be subclassed), but the method 'setHeader' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BaseFoo' final or making the method 'setHeader' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "51",
        "column": "31",
        "severity": "error",
        "message": "Parameter header should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "55",
        "column": "9",
        "severity": "error",
        "message": "Class 'BaseFoo' looks like designed for extension (can be subclassed), but the method 'getFoo' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BaseFoo' final or making the method 'getFoo' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "55",
        "column": "35",
        "severity": "error",
        "message": "'{' at column 35 should have line break after.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
    },
    {
        "line": "57",
        "column": "9",
        "severity": "error",
        "message": "Class 'BaseFoo' looks like designed for extension (can be subclassed), but the method 'setFoo' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'BaseFoo' final or making the method 'setFoo' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "57",
        "column": "28",
        "severity": "error",
        "message": "Parameter foo should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "57",
        "column": "43",
        "severity": "error",
        "message": "'{' at column 43 should have line break after.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
    },
    {
        "line": "61",
        "column": "9",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "63",
        "column": "9",
        "severity": "error",
        "message": "Class 'FooMember' looks like designed for extension (can be subclassed), but the method 'getValidField' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'FooMember' final or making the method 'getValidField' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "67",
        "column": "9",
        "severity": "error",
        "message": "Class 'FooMember' looks like designed for extension (can be subclassed), but the method 'setValidField' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'FooMember' final or making the method 'setValidField' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "67",
        "column": "35",
        "severity": "error",
        "message": "Parameter validField should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "73",
        "column": "9",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "75",
        "column": "9",
        "severity": "error",
        "message": "Class 'SubFoo' looks like designed for extension (can be subclassed), but the method 'getValidField' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SubFoo' final or making the method 'getValidField' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "75",
        "column": "39",
        "severity": "error",
        "message": "'{' at column 39 should have line break after.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
    },
    {
        "line": "77",
        "column": "9",
        "severity": "error",
        "message": "Class 'SubFoo' looks like designed for extension (can be subclassed), but the method 'setValidField' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'SubFoo' final or making the method 'setValidField' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "77",
        "column": "35",
        "severity": "error",
        "message": "Parameter validField should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "77",
        "column": "54",
        "severity": "error",
        "message": "'{' at column 54 should have line break after.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
    }
]