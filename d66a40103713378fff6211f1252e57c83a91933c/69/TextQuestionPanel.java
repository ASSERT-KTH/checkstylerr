package fi.helsinki.cs.tmc.intellij.ui.submissionresult.feedback;

import fi.helsinki.cs.tmc.core.domain.submission.FeedbackAnswer;
import fi.helsinki.cs.tmc.core.domain.submission.FeedbackQuestion;

import com.intellij.ui.components.JBScrollPane;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

public class TextQuestionPanel extends FeedbackQuestionPanel {

    private static final Logger logger = LoggerFactory.getLogger(TextQuestionPanel.class);
    private final FeedbackQuestion question;

    public TextQuestionPanel(FeedbackQuestion question) {
        logger.info(
                "Creating text question panel for submission feedback window "
                        + "@TextQuestionPanel");
        this.question = question;

        initComponents();
        this.questionLabel.setText(question.getQuestion());
    }

    @Override
    public FeedbackAnswer getAnswer() {
        logger.info("Getting feedback answer. @TextQuestionPanel");
        String text = answerTextArea.getText().trim();

        if (text.isEmpty()) {
            return null;
        }
        return new FeedbackAnswer(question, text);
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT
     * modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    private void initComponents() {
        logger.info("Initializing components for TextQuestionPanel " + "@TextQuestionPanel");

        questionLabel = new javax.swing.JLabel();
        //textAreaScrollPane = new javax.swing.JScrollPane();
        textAreaScrollPane = new JBScrollPane();
        answerTextArea = new javax.swing.JTextArea();

        //questionLabel.setText(org.openide.util.NbBundle.getMessage(TextQuestionPanel.class, "TextQuestionPanel.questionLabel.text")); // NOI18N
        questionLabel.setText("Teting testing TextQuestionPanle"); // NOI18N

        answerTextArea.setColumns(20);
        answerTextArea.setLineWrap(true);
        answerTextArea.setRows(5);
        answerTextArea.setWrapStyleWord(true);
        textAreaScrollPane.setViewportView(answerTextArea);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(
                                layout.createSequentialGroup()
                                        .addContainerGap()
                                        .addGroup(
                                                layout.createParallelGroup(
                                                                javax.swing.GroupLayout.Alignment
                                                                        .LEADING)
                                                        .addComponent(
                                                                textAreaScrollPane,
                                                                javax.swing.GroupLayout
                                                                        .DEFAULT_SIZE,
                                                                362,
                                                                Short.MAX_VALUE)
                                                        .addComponent(questionLabel))
                                        .addContainerGap()));
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(
                                layout.createSequentialGroup()
                                        .addContainerGap()
                                        .addComponent(questionLabel)
                                        .addPreferredGap(
                                                javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(
                                                textAreaScrollPane,
                                                javax.swing.GroupLayout.DEFAULT_SIZE,
                                                82,
                                                Short.MAX_VALUE)
                                        .addContainerGap()));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables

    private javax.swing.JTextArea answerTextArea;
    private javax.swing.JLabel questionLabel;
    private javax.swing.JScrollPane textAreaScrollPane;

    // End of variables declaration//GEN-END:variables
}
