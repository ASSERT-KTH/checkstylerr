/**
 * This code was generated by
 * \ / _    _  _|   _  _
 *  | (_)\/(_)(_|\/| |(/_  v1.0.0
 *       /       /
 */

package com.twilio.twiml.voice;

import com.twilio.twiml.TwiML;

import java.util.HashMap;
import java.util.Map;

/**
 * TwiML wrapper for {@code <Say>}
 */
public class Say extends TwiML {
    public enum Voice {
        MAN("man"),
        WOMAN("woman"),
        ALICE("alice"),
        POLLY_GERAINT("Polly.Geraint"),
        POLLY_GWYNETH("Polly.Gwyneth"),
        POLLY_MADS("Polly.Mads"),
        POLLY_NAJA("Polly.Naja"),
        POLLY_HANS("Polly.Hans"),
        POLLY_MARLENE("Polly.Marlene"),
        POLLY_NICOLE("Polly.Nicole"),
        POLLY_RUSSELL("Polly.Russell"),
        POLLY_AMY("Polly.Amy"),
        POLLY_BRIAN("Polly.Brian"),
        POLLY_EMMA("Polly.Emma"),
        POLLY_RAVEENA("Polly.Raveena"),
        POLLY_IVY("Polly.Ivy"),
        POLLY_JOANNA("Polly.Joanna"),
        POLLY_JOEY("Polly.Joey"),
        POLLY_JUSTIN("Polly.Justin"),
        POLLY_KENDRA("Polly.Kendra"),
        POLLY_KIMBERLY("Polly.Kimberly"),
        POLLY_MATTHEW("Polly.Matthew"),
        POLLY_SALLI("Polly.Salli"),
        POLLY_CONCHITA("Polly.Conchita"),
        POLLY_ENRIQUE("Polly.Enrique"),
        POLLY_MIGUEL("Polly.Miguel"),
        POLLY_PENELOPE("Polly.Penelope"),
        POLLY_CHANTAL("Polly.Chantal"),
        POLLY_CELINE("Polly.Celine"),
        POLLY_MATHIEU("Polly.Mathieu"),
        POLLY_DORA("Polly.Dora"),
        POLLY_KARL("Polly.Karl"),
        POLLY_CARLA("Polly.Carla"),
        POLLY_GIORGIO("Polly.Giorgio"),
        POLLY_MIZUKI("Polly.Mizuki"),
        POLLY_LIV("Polly.Liv"),
        POLLY_LOTTE("Polly.Lotte"),
        POLLY_RUBEN("Polly.Ruben"),
        POLLY_EWA("Polly.Ewa"),
        POLLY_JACEK("Polly.Jacek"),
        POLLY_JAN("Polly.Jan"),
        POLLY_MAJA("Polly.Maja"),
        POLLY_RICARDO("Polly.Ricardo"),
        POLLY_VITORIA("Polly.Vitoria"),
        POLLY_CRISTIANO("Polly.Cristiano"),
        POLLY_INES("Polly.Ines"),
        POLLY_CARMEN("Polly.Carmen"),
        POLLY_MAXIM("Polly.Maxim"),
        POLLY_TATYANA("Polly.Tatyana"),
        POLLY_ASTRID("Polly.Astrid"),
        POLLY_FILIZ("Polly.Filiz"),
        POLLY_VICKI("Polly.Vicki"),
        POLLY_TAKUMI("Polly.Takumi"),
        POLLY_SEOYEON("Polly.Seoyeon"),
        POLLY_ADITI("Polly.Aditi");

        private final String value;

        private Voice(final String value) {
            this.value = value;
        }

        public String toString() {
            return value;
        }
    }

    public enum Language {
        DA_DK("da-DK"),
        DE_DE("de-DE"),
        EN_AU("en-AU"),
        EN_CA("en-CA"),
        EN_GB("en-GB"),
        EN_IN("en-IN"),
        EN_US("en-US"),
        CA_ES("ca-ES"),
        ES_ES("es-ES"),
        ES_MX("es-MX"),
        FI_FI("fi-FI"),
        FR_CA("fr-CA"),
        FR_FR("fr-FR"),
        IT_IT("it-IT"),
        JA_JP("ja-JP"),
        KO_KR("ko-KR"),
        NB_NO("nb-NO"),
        NL_NL("nl-NL"),
        PL_PL("pl-PL"),
        PT_BR("pt-BR"),
        PT_PT("pt-PT"),
        RU_RU("ru-RU"),
        SV_SE("sv-SE"),
        ZH_CN("zh-CN"),
        ZH_HK("zh-HK"),
        ZH_TW("zh-TW");

        private final String value;

        private Language(final String value) {
            this.value = value;
        }

        public String toString() {
            return value;
        }
    }

    private final Say.Voice voice;
    private final Integer loop;
    private final Say.Language language;
    private final String message;

    /**
     * For XML Serialization/Deserialization
     */
    private Say() {
        this(new Builder());
    }

    /**
     * Create a new {@code <Say>} element
     */
    private Say(Builder b) {
        super("Say", b);
        this.voice = b.voice;
        this.loop = b.loop;
        this.language = b.language;
        this.message = b.message;
    }

    /**
     * The body of the TwiML element
     *
     * @return Element body as a string if present else null
     */
    protected String getElementBody() {
        return this.getMessage() == null ? null : this.getMessage();
    }

    /**
     * Attributes to set on the generated XML element
     *
     * @return A Map of attribute keys to values
     */
    protected Map<String, String> getElementAttributes() {
        // Preserve order of attributes
        Map<String, String> attrs = new HashMap<>();

        if (this.getVoice() != null) {
            attrs.put("voice", this.getVoice().toString());
        }
        if (this.getLoop() != null) {
            attrs.put("loop", this.getLoop().toString());
        }
        if (this.getLanguage() != null) {
            attrs.put("language", this.getLanguage().toString());
        }

        return attrs;
    }

    /**
     * Voice to use
     *
     * @return Voice to use
     */
    public Say.Voice getVoice() {
        return voice;
    }

    /**
     * Times to loop message
     *
     * @return Times to loop message
     */
    public Integer getLoop() {
        return loop;
    }

    /**
     * Message langauge
     *
     * @return Message langauge
     */
    public Say.Language getLanguage() {
        return language;
    }

    /**
     * Message to say
     *
     * @return Message to say
     */
    public String getMessage() {
        return message;
    }

    /**
     * Create a new {@code <Say>} element
     */
    public static class Builder extends TwiML.Builder<Builder> {
        private Say.Voice voice;
        private Integer loop;
        private Say.Language language;
        private String message;

        /**
         * Create a {@code <Say>} with message
         */
        public Builder(String message) {
            this.message = message;
        }

        /**
         * Create a {@code <Say>} with child elements
         */
        public Builder() {
        }

        /**
         * Voice to use
         */
        public Builder voice(Say.Voice voice) {
            this.voice = voice;
            return this;
        }

        /**
         * Times to loop message
         */
        public Builder loop(Integer loop) {
            this.loop = loop;
            return this;
        }

        /**
         * Message langauge
         */
        public Builder language(Say.Language language) {
            this.language = language;
            return this;
        }

        /**
         * Add a child {@code <Break>} element
         */
        public Builder ssmlBreak(SsmlBreak ssmlBreak) {
            this.children.add(ssmlBreak);
            return this;
        }

        /**
         * Add a child {@code <Emphasis>} element
         */
        public Builder ssmlEmphasis(SsmlEmphasis ssmlEmphasis) {
            this.children.add(ssmlEmphasis);
            return this;
        }

        /**
         * Add a child {@code <Lang>} element
         */
        public Builder ssmlLang(SsmlLang ssmlLang) {
            this.children.add(ssmlLang);
            return this;
        }

        /**
         * Add a child {@code <P>} element
         */
        public Builder ssmlP(SsmlP ssmlP) {
            this.children.add(ssmlP);
            return this;
        }

        /**
         * Add a child {@code <Phoneme>} element
         */
        public Builder ssmlPhoneme(SsmlPhoneme ssmlPhoneme) {
            this.children.add(ssmlPhoneme);
            return this;
        }

        /**
         * Add a child {@code <Prosody>} element
         */
        public Builder ssmlProsody(SsmlProsody ssmlProsody) {
            this.children.add(ssmlProsody);
            return this;
        }

        /**
         * Add a child {@code <S>} element
         */
        public Builder ssmlS(SsmlS ssmlS) {
            this.children.add(ssmlS);
            return this;
        }

        /**
         * Add a child {@code <Say-As>} element
         */
        public Builder ssmlSayAs(SsmlSayAs ssmlSayAs) {
            this.children.add(ssmlSayAs);
            return this;
        }

        /**
         * Add a child {@code <Sub>} element
         */
        public Builder ssmlSub(SsmlSub ssmlSub) {
            this.children.add(ssmlSub);
            return this;
        }

        /**
         * Add a child {@code <W>} element
         */
        public Builder ssmlW(SsmlW ssmlW) {
            this.children.add(ssmlW);
            return this;
        }

        /**
         * Create and return resulting {@code <Say>} element
         */
        public Say build() {
            return new Say(this);
        }
    }
}