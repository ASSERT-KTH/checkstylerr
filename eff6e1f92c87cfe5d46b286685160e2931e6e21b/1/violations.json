[
    {
        "line": "12",
        "severity": "warning",
        "message": "Wrong order for 'java.io.IOException' import.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheck"
    },
    {
        "line": "47",
        "column": "3",
        "severity": "warning",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "48",
        "column": "3",
        "severity": "warning",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "50",
        "column": "3",
        "severity": "warning",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "51",
        "column": "3",
        "severity": "warning",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "52",
        "column": "3",
        "severity": "warning",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "54",
        "column": "3",
        "severity": "warning",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "54",
        "column": "31",
        "severity": "warning",
        "message": "Name 'logger' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.naming.ConstantNameCheck"
    },
    {
        "line": "60",
        "column": "13",
        "severity": "warning",
        "message": "Variable 'deploySolr' should be declared final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.FinalLocalVariableCheck"
    },
    {
        "line": "61",
        "column": "13",
        "severity": "warning",
        "message": "Variable 'deployLdap' should be declared final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.FinalLocalVariableCheck"
    },
    {
        "line": "62",
        "column": "13",
        "severity": "warning",
        "message": "Variable 'deployFolderMonitor' should be declared final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.FinalLocalVariableCheck"
    },
    {
        "line": "63",
        "column": "13",
        "severity": "warning",
        "message": "Variable 'deployOrchestrator' should be declared final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.FinalLocalVariableCheck"
    },
    {
        "line": "64",
        "column": "13",
        "severity": "warning",
        "message": "Variable 'deployPluginManager' should be declared final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.FinalLocalVariableCheck"
    },
    {
        "line": "65",
        "column": "13",
        "severity": "warning",
        "message": "Variable 'deployDefaultResources' should be declared final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.FinalLocalVariableCheck"
    },
    {
        "line": "69",
        "column": "20",
        "severity": "warning",
        "message": "Variable 'storage' should be declared final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.FinalLocalVariableCheck"
    },
    {
        "line": "97",
        "column": "9",
        "severity": "warning",
        "message": "Variable 'corporaURL' should be declared final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.FinalLocalVariableCheck"
    },
    {
        "line": "131",
        "column": "32",
        "severity": "warning",
        "message": "Variable 'e' should be declared final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.FinalLocalVariableCheck"
    }
]