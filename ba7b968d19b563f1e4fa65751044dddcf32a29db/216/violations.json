[
    {
        "line": "64",
        "column": "1",
        "severity": "error",
        "message": "File contains tab characters (this is the first instance).",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.FileTabCharacterCheck"
    },
    {
        "line": "74",
        "column": "3",
        "severity": "error",
        "message": "Static variable definition in wrong order.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.DeclarationOrderCheck"
    },
    {
        "line": "76",
        "severity": "error",
        "message": "First sentence should end with a period.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck"
    },
    {
        "line": "77",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 113).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "79",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 118).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "84",
        "severity": "error",
        "message": "First sentence should end with a period.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocStyleCheck"
    },
    {
        "line": "87",
        "column": "18",
        "severity": "error",
        "message": "Variable 'recordTagUri' explicitly initialized to 'null' (default value for its type).",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.ExplicitInitializationCheck"
    },
    {
        "line": "109",
        "severity": "error",
        "message": "Comment matches to-do format 'TODO:'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.TodoCommentCheck"
    },
    {
        "line": "110",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 112).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "123",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 128).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "128",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 145).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "140",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 128).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "145",
        "column": "3",
        "severity": "error",
        "message": "Class 'JSONGDMEncoder' looks like designed for extension (can be subclassed), but the method 'startObject' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'JSONGDMEncoder' final or making the method 'startObject' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "151",
        "column": "3",
        "severity": "error",
        "message": "Class 'JSONGDMEncoder' looks like designed for extension (can be subclassed), but the method 'endObject' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'JSONGDMEncoder' final or making the method 'endObject' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "160",
        "severity": "error",
        "message": "Comment matches to-do format 'TODO:'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.TodoCommentCheck"
    },
    {
        "line": "168",
        "severity": "error",
        "message": "Comment matches to-do format 'TODO:'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.TodoCommentCheck"
    },
    {
        "line": "181",
        "severity": "error",
        "message": "Comment matches to-do format 'TODO:'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.TodoCommentCheck"
    },
    {
        "line": "192",
        "severity": "error",
        "message": "Comment matches to-do format 'TODO:'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.TodoCommentCheck"
    },
    {
        "line": "192",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 175).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "199",
        "severity": "error",
        "message": "Comment matches to-do format 'TODO:'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.TodoCommentCheck"
    },
    {
        "line": "217",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 122).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "230",
        "column": "3",
        "severity": "error",
        "message": "Class 'JSONGDMEncoder' looks like designed for extension (can be subclassed), but the method 'literal' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'JSONGDMEncoder' final or making the method 'literal' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "238",
        "severity": "error",
        "message": "Comment matches to-do format 'TODO:'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.TodoCommentCheck"
    },
    {
        "line": "257",
        "column": "3",
        "severity": "error",
        "message": "Class 'JSONGDMEncoder' looks like designed for extension (can be subclassed), but the method 'startRecord' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'JSONGDMEncoder' final or making the method 'startRecord' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "261",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 126).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "280",
        "column": "3",
        "severity": "error",
        "message": "Class 'JSONGDMEncoder' looks like designed for extension (can be subclassed), but the method 'endRecord' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'JSONGDMEncoder' final or making the method 'endRecord' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "297",
        "column": "3",
        "severity": "error",
        "message": "Class 'JSONGDMEncoder' looks like designed for extension (can be subclassed), but the method 'startEntity' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'JSONGDMEncoder' final or making the method 'startEntity' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "325",
        "column": "3",
        "severity": "error",
        "message": "Class 'JSONGDMEncoder' looks like designed for extension (can be subclassed), but the method 'endEntity' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'JSONGDMEncoder' final or making the method 'endEntity' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "332",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 106).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "344",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 123).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "347",
        "column": "58",
        "severity": "error",
        "message": "'uri' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "423",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 107).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "423",
        "column": "20",
        "severity": "error",
        "message": "'uri' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "441",
        "column": "47",
        "severity": "error",
        "message": "'uri' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "457",
        "column": "70",
        "severity": "error",
        "message": "'4' is a magic number.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck"
    },
    {
        "line": "460",
        "column": "42",
        "severity": "error",
        "message": "'uri' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "462",
        "severity": "error",
        "message": "'if' construct must use '{}'s.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.NeedBracesCheck"
    },
    {
        "line": "492",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 135).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "505",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 129).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "505",
        "column": "55",
        "severity": "error",
        "message": "'optionalTermMap' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "515",
        "column": "44",
        "severity": "error",
        "message": "'uri' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "517",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 105).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    }
]