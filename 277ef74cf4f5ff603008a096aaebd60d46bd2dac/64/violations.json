[
    {
        "line": "35",
        "severity": "warning",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocTypeCheck"
    },
    {
        "line": "35",
        "column": "1",
        "severity": "warning",
        "message": "Class Data Abstraction Coupling is 16 (max allowed is 7) classes [DivideOperator, FloatNode, FractionNode, FunctionNode, InfixOperator, IntegerNode, Pattern2Node, Pattern3Node, PatternNode, PostfixOperator, PreMinusOperator, PrePlusOperator, PrefixOperator, StringNode, SubtractOperator, SymbolNode].",
        "source": "com.puppycrawl.tools.checkstyle.checks.metrics.ClassDataAbstractionCouplingCheck"
    },
    {
        "line": "36",
        "column": "9",
        "severity": "warning",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "36",
        "column": "22",
        "severity": "warning",
        "message": "'static' modifier out of order with the JLS suggestions.",
        "source": "com.puppycrawl.tools.checkstyle.checks.modifier.ModifierOrderCheck"
    },
    {
        "line": "38",
        "column": "9",
        "severity": "warning",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "38",
        "column": "22",
        "severity": "warning",
        "message": "'static' modifier out of order with the JLS suggestions.",
        "source": "com.puppycrawl.tools.checkstyle.checks.modifier.ModifierOrderCheck"
    },
    {
        "line": "40",
        "column": "9",
        "severity": "warning",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "40",
        "column": "22",
        "severity": "warning",
        "message": "'static' modifier out of order with the JLS suggestions.",
        "source": "com.puppycrawl.tools.checkstyle.checks.modifier.ModifierOrderCheck"
    },
    {
        "line": "42",
        "column": "9",
        "severity": "warning",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "42",
        "column": "22",
        "severity": "warning",
        "message": "'static' modifier out of order with the JLS suggestions.",
        "source": "com.puppycrawl.tools.checkstyle.checks.modifier.ModifierOrderCheck"
    },
    {
        "line": "46",
        "severity": "warning",
        "message": "Line is longer than 140 characters (found 142).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "47",
        "severity": "warning",
        "message": "Line is longer than 140 characters (found 147).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "56",
        "severity": "warning",
        "message": "Line is longer than 140 characters (found 147).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "114",
        "column": "9",
        "severity": "warning",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "114",
        "column": "22",
        "severity": "warning",
        "message": "'static' modifier out of order with the JLS suggestions.",
        "source": "com.puppycrawl.tools.checkstyle.checks.modifier.ModifierOrderCheck"
    },
    {
        "line": "116",
        "column": "9",
        "severity": "warning",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "116",
        "column": "22",
        "severity": "warning",
        "message": "'static' modifier out of order with the JLS suggestions.",
        "source": "com.puppycrawl.tools.checkstyle.checks.modifier.ModifierOrderCheck"
    },
    {
        "line": "140",
        "column": "31",
        "severity": "warning",
        "message": "Parameter ignoreCase should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "140",
        "column": "39",
        "severity": "warning",
        "message": "Expected @param tag for 'ignoreCase'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "140",
        "column": "39",
        "severity": "warning",
        "message": "Variable 'ignoreCase' should be declared final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.FinalLocalVariableCheck"
    },
    {
        "line": "144",
        "column": "9",
        "severity": "warning",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "144",
        "column": "16",
        "severity": "warning",
        "message": "'public' modifier out of order with the JLS suggestions.",
        "source": "com.puppycrawl.tools.checkstyle.checks.modifier.ModifierOrderCheck"
    },
    {
        "line": "159",
        "column": "9",
        "severity": "warning",
        "message": "Class 'ASTNodeFactory' looks like designed for extension (can be subclassed), but the method 'getOperatorCharacters' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ASTNodeFactory' final or making the method 'getOperatorCharacters' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "159",
        "column": "9",
        "severity": "warning",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "166",
        "severity": "warning",
        "message": "Expected an @return tag.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "170",
        "column": "9",
        "severity": "warning",
        "message": "Class 'ASTNodeFactory' looks like designed for extension (can be subclassed), but the method 'get' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ASTNodeFactory' final or making the method 'get' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "170",
        "column": "9",
        "severity": "warning",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "177",
        "severity": "warning",
        "message": "Expected an @return tag.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "184",
        "severity": "warning",
        "message": "Expected an @return tag.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "184",
        "column": "60",
        "severity": "warning",
        "message": "Expected @param tag for 'key'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "188",
        "column": "9",
        "severity": "warning",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "188",
        "column": "16",
        "severity": "warning",
        "message": "'public' modifier out of order with the JLS suggestions.",
        "source": "com.puppycrawl.tools.checkstyle.checks.modifier.ModifierOrderCheck"
    },
    {
        "line": "201",
        "column": "9",
        "severity": "warning",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "201",
        "column": "16",
        "severity": "warning",
        "message": "'public' modifier out of order with the JLS suggestions.",
        "source": "com.puppycrawl.tools.checkstyle.checks.modifier.ModifierOrderCheck"
    },
    {
        "line": "213",
        "column": "9",
        "severity": "warning",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "213",
        "column": "16",
        "severity": "warning",
        "message": "'public' modifier out of order with the JLS suggestions.",
        "source": "com.puppycrawl.tools.checkstyle.checks.modifier.ModifierOrderCheck"
    },
    {
        "line": "217",
        "column": "9",
        "severity": "warning",
        "message": "Class 'ASTNodeFactory' looks like designed for extension (can be subclassed), but the method 'createDouble' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ASTNodeFactory' final or making the method 'createDouble' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "217",
        "column": "9",
        "severity": "warning",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "221",
        "column": "9",
        "severity": "warning",
        "message": "Class 'ASTNodeFactory' looks like designed for extension (can be subclassed), but the method 'createFunction' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ASTNodeFactory' final or making the method 'createFunction' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "221",
        "column": "9",
        "severity": "warning",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "225",
        "column": "9",
        "severity": "warning",
        "message": "Class 'ASTNodeFactory' looks like designed for extension (can be subclassed), but the method 'createFunction' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ASTNodeFactory' final or making the method 'createFunction' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "225",
        "column": "9",
        "severity": "warning",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "229",
        "column": "9",
        "severity": "warning",
        "message": "Class 'ASTNodeFactory' looks like designed for extension (can be subclassed), but the method 'createFunction' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ASTNodeFactory' final or making the method 'createFunction' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "229",
        "column": "9",
        "severity": "warning",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "236",
        "severity": "warning",
        "message": "Expected an @return tag.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "236",
        "column": "53",
        "severity": "warning",
        "message": "Expected @param tag for 'headExpr'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "240",
        "column": "9",
        "severity": "warning",
        "message": "Class 'ASTNodeFactory' looks like designed for extension (can be subclassed), but the method 'createInteger' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ASTNodeFactory' final or making the method 'createInteger' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "240",
        "column": "9",
        "severity": "warning",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "244",
        "column": "9",
        "severity": "warning",
        "message": "Class 'ASTNodeFactory' looks like designed for extension (can be subclassed), but the method 'createInteger' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ASTNodeFactory' final or making the method 'createInteger' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "244",
        "column": "9",
        "severity": "warning",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "248",
        "column": "9",
        "severity": "warning",
        "message": "Class 'ASTNodeFactory' looks like designed for extension (can be subclassed), but the method 'createFraction' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ASTNodeFactory' final or making the method 'createFraction' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "248",
        "column": "9",
        "severity": "warning",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "252",
        "column": "9",
        "severity": "warning",
        "message": "Class 'ASTNodeFactory' looks like designed for extension (can be subclassed), but the method 'createPattern' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ASTNodeFactory' final or making the method 'createPattern' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "252",
        "column": "9",
        "severity": "warning",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "256",
        "column": "9",
        "severity": "warning",
        "message": "Class 'ASTNodeFactory' looks like designed for extension (can be subclassed), but the method 'createPattern' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ASTNodeFactory' final or making the method 'createPattern' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "256",
        "column": "9",
        "severity": "warning",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "256",
        "column": "93",
        "severity": "warning",
        "message": "Parameter optional should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "256",
        "column": "101",
        "severity": "warning",
        "message": "Variable 'optional' should be declared final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.FinalLocalVariableCheck"
    },
    {
        "line": "260",
        "column": "9",
        "severity": "warning",
        "message": "Class 'ASTNodeFactory' looks like designed for extension (can be subclassed), but the method 'createPattern2' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ASTNodeFactory' final or making the method 'createPattern2' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "260",
        "column": "9",
        "severity": "warning",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "264",
        "column": "9",
        "severity": "warning",
        "message": "Class 'ASTNodeFactory' looks like designed for extension (can be subclassed), but the method 'createPattern3' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ASTNodeFactory' final or making the method 'createPattern3' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "264",
        "column": "9",
        "severity": "warning",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "268",
        "column": "9",
        "severity": "warning",
        "message": "Class 'ASTNodeFactory' looks like designed for extension (can be subclassed), but the method 'createString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ASTNodeFactory' final or making the method 'createString' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "268",
        "column": "9",
        "severity": "warning",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "272",
        "column": "9",
        "severity": "warning",
        "message": "Class 'ASTNodeFactory' looks like designed for extension (can be subclassed), but the method 'createSymbol' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ASTNodeFactory' final or making the method 'createSymbol' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "272",
        "column": "9",
        "severity": "warning",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "286",
        "column": "9",
        "severity": "warning",
        "message": "Class 'ASTNodeFactory' looks like designed for extension (can be subclassed), but the method 'isValidIdentifier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ASTNodeFactory' final or making the method 'isValidIdentifier' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "286",
        "column": "9",
        "severity": "warning",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "286",
        "column": "42",
        "severity": "warning",
        "message": "Parameter identifier should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "286",
        "column": "49",
        "severity": "warning",
        "message": "Variable 'identifier' should be declared final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.FinalLocalVariableCheck"
    },
    {
        "line": "302",
        "severity": "warning",
        "message": "Line is longer than 140 characters (found 152).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "303",
        "severity": "warning",
        "message": "Line is longer than 140 characters (found 170).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    }
]