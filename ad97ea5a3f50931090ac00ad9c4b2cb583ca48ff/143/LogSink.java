// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/logging/v1/logging_config.proto

package com.google.logging.v1;

/**
 * Protobuf type {@code google.logging.v1.LogSink}
 *
 * <pre>
 * Describes where log entries are written outside of Cloud Logging.
 * </pre>
 */
public  final class LogSink extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:google.logging.v1.LogSink)
    LogSinkOrBuilder {
  // Use LogSink.newBuilder() to construct.
  private LogSink(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private LogSink() {
    name_ = "";
    destination_ = "";
    filter_ = "";
    errors_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private LogSink(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry) {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            String s = input.readStringRequireUtf8();

            name_ = s;
            break;
          }
          case 26: {
            String s = input.readStringRequireUtf8();

            destination_ = s;
            break;
          }
          case 34: {
            if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
              errors_ = new java.util.ArrayList<com.google.logging.v1.LogError>();
              mutable_bitField0_ |= 0x00000008;
            }
            errors_.add(input.readMessage(com.google.logging.v1.LogError.parser(), extensionRegistry));
            break;
          }
          case 42: {
            String s = input.readStringRequireUtf8();

            filter_ = s;
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw new RuntimeException(e.setUnfinishedMessage(this));
    } catch (java.io.IOException e) {
      throw new RuntimeException(
          new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this));
    } finally {
      if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
        errors_ = java.util.Collections.unmodifiableList(errors_);
      }
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.logging.v1.LoggingConfig.internal_static_google_logging_v1_LogSink_descriptor;
  }

  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.logging.v1.LoggingConfig.internal_static_google_logging_v1_LogSink_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.logging.v1.LogSink.class, com.google.logging.v1.LogSink.Builder.class);
  }

  private int bitField0_;
  public static final int NAME_FIELD_NUMBER = 1;
  private volatile java.lang.Object name_;
  /**
   * <code>optional string name = 1;</code>
   *
   * <pre>
   * The client-assigned name of this sink. For example,
   * `"my-syslog-sink"`.  The name must be unique among the sinks of a
   * similar kind in the project.
   * </pre>
   */
  public java.lang.String getName() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      name_ = s;
      return s;
    }
  }
  /**
   * <code>optional string name = 1;</code>
   *
   * <pre>
   * The client-assigned name of this sink. For example,
   * `"my-syslog-sink"`.  The name must be unique among the sinks of a
   * similar kind in the project.
   * </pre>
   */
  public com.google.protobuf.ByteString
      getNameBytes() {
    java.lang.Object ref = name_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      name_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int DESTINATION_FIELD_NUMBER = 3;
  private volatile java.lang.Object destination_;
  /**
   * <code>optional string destination = 3;</code>
   *
   * <pre>
   * The resource name of the destination.
   * Cloud Logging writes designated log entries to this destination.
   * For example, `"storage.googleapis.com/my-output-bucket"`.
   * </pre>
   */
  public java.lang.String getDestination() {
    java.lang.Object ref = destination_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      destination_ = s;
      return s;
    }
  }
  /**
   * <code>optional string destination = 3;</code>
   *
   * <pre>
   * The resource name of the destination.
   * Cloud Logging writes designated log entries to this destination.
   * For example, `"storage.googleapis.com/my-output-bucket"`.
   * </pre>
   */
  public com.google.protobuf.ByteString
      getDestinationBytes() {
    java.lang.Object ref = destination_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      destination_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int FILTER_FIELD_NUMBER = 5;
  private volatile java.lang.Object filter_;
  /**
   * <code>optional string filter = 5;</code>
   *
   * <pre>
   * An advanced logs filter. If present, only log entries matching the filter
   * are written.  Only project sinks use this field; log sinks and log service
   * sinks must not include a filter.
   * </pre>
   */
  public java.lang.String getFilter() {
    java.lang.Object ref = filter_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      filter_ = s;
      return s;
    }
  }
  /**
   * <code>optional string filter = 5;</code>
   *
   * <pre>
   * An advanced logs filter. If present, only log entries matching the filter
   * are written.  Only project sinks use this field; log sinks and log service
   * sinks must not include a filter.
   * </pre>
   */
  public com.google.protobuf.ByteString
      getFilterBytes() {
    java.lang.Object ref = filter_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      filter_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int ERRORS_FIELD_NUMBER = 4;
  private java.util.List<com.google.logging.v1.LogError> errors_;
  /**
   * <code>repeated .google.logging.v1.LogError errors = 4;</code>
   *
   * <pre>
   * _Output only._ If any errors occur when invoking a sink method,
   * then this field contains descriptions of the errors.
   * </pre>
   */
  public java.util.List<com.google.logging.v1.LogError> getErrorsList() {
    return errors_;
  }
  /**
   * <code>repeated .google.logging.v1.LogError errors = 4;</code>
   *
   * <pre>
   * _Output only._ If any errors occur when invoking a sink method,
   * then this field contains descriptions of the errors.
   * </pre>
   */
  public java.util.List<? extends com.google.logging.v1.LogErrorOrBuilder> 
      getErrorsOrBuilderList() {
    return errors_;
  }
  /**
   * <code>repeated .google.logging.v1.LogError errors = 4;</code>
   *
   * <pre>
   * _Output only._ If any errors occur when invoking a sink method,
   * then this field contains descriptions of the errors.
   * </pre>
   */
  public int getErrorsCount() {
    return errors_.size();
  }
  /**
   * <code>repeated .google.logging.v1.LogError errors = 4;</code>
   *
   * <pre>
   * _Output only._ If any errors occur when invoking a sink method,
   * then this field contains descriptions of the errors.
   * </pre>
   */
  public com.google.logging.v1.LogError getErrors(int index) {
    return errors_.get(index);
  }
  /**
   * <code>repeated .google.logging.v1.LogError errors = 4;</code>
   *
   * <pre>
   * _Output only._ If any errors occur when invoking a sink method,
   * then this field contains descriptions of the errors.
   * </pre>
   */
  public com.google.logging.v1.LogErrorOrBuilder getErrorsOrBuilder(
      int index) {
    return errors_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!getNameBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessage.writeString(output, 1, name_);
    }
    if (!getDestinationBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessage.writeString(output, 3, destination_);
    }
    for (int i = 0; i < errors_.size(); i++) {
      output.writeMessage(4, errors_.get(i));
    }
    if (!getFilterBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessage.writeString(output, 5, filter_);
    }
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!getNameBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(1, name_);
    }
    if (!getDestinationBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(3, destination_);
    }
    for (int i = 0; i < errors_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(4, errors_.get(i));
    }
    if (!getFilterBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessage.computeStringSize(5, filter_);
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  public static com.google.logging.v1.LogSink parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.logging.v1.LogSink parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.logging.v1.LogSink parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.logging.v1.LogSink parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.logging.v1.LogSink parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static com.google.logging.v1.LogSink parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }
  public static com.google.logging.v1.LogSink parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input);
  }
  public static com.google.logging.v1.LogSink parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseDelimitedFrom(input, extensionRegistry);
  }
  public static com.google.logging.v1.LogSink parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return PARSER.parseFrom(input);
  }
  public static com.google.logging.v1.LogSink parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return PARSER.parseFrom(input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.logging.v1.LogSink prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code google.logging.v1.LogSink}
   *
   * <pre>
   * Describes where log entries are written outside of Cloud Logging.
   * </pre>
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:google.logging.v1.LogSink)
      com.google.logging.v1.LogSinkOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.logging.v1.LoggingConfig.internal_static_google_logging_v1_LogSink_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.logging.v1.LoggingConfig.internal_static_google_logging_v1_LogSink_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.logging.v1.LogSink.class, com.google.logging.v1.LogSink.Builder.class);
    }

    // Construct using com.google.logging.v1.LogSink.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        getErrorsFieldBuilder();
      }
    }
    public Builder clear() {
      super.clear();
      name_ = "";

      destination_ = "";

      filter_ = "";

      if (errorsBuilder_ == null) {
        errors_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
      } else {
        errorsBuilder_.clear();
      }
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.logging.v1.LoggingConfig.internal_static_google_logging_v1_LogSink_descriptor;
    }

    public com.google.logging.v1.LogSink getDefaultInstanceForType() {
      return com.google.logging.v1.LogSink.getDefaultInstance();
    }

    public com.google.logging.v1.LogSink build() {
      com.google.logging.v1.LogSink result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public com.google.logging.v1.LogSink buildPartial() {
      com.google.logging.v1.LogSink result = new com.google.logging.v1.LogSink(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      result.name_ = name_;
      result.destination_ = destination_;
      result.filter_ = filter_;
      if (errorsBuilder_ == null) {
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          errors_ = java.util.Collections.unmodifiableList(errors_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.errors_ = errors_;
      } else {
        result.errors_ = errorsBuilder_.build();
      }
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.logging.v1.LogSink) {
        return mergeFrom((com.google.logging.v1.LogSink)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.logging.v1.LogSink other) {
      if (other == com.google.logging.v1.LogSink.getDefaultInstance()) return this;
      if (!other.getName().isEmpty()) {
        name_ = other.name_;
        onChanged();
      }
      if (!other.getDestination().isEmpty()) {
        destination_ = other.destination_;
        onChanged();
      }
      if (!other.getFilter().isEmpty()) {
        filter_ = other.filter_;
        onChanged();
      }
      if (errorsBuilder_ == null) {
        if (!other.errors_.isEmpty()) {
          if (errors_.isEmpty()) {
            errors_ = other.errors_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureErrorsIsMutable();
            errors_.addAll(other.errors_);
          }
          onChanged();
        }
      } else {
        if (!other.errors_.isEmpty()) {
          if (errorsBuilder_.isEmpty()) {
            errorsBuilder_.dispose();
            errorsBuilder_ = null;
            errors_ = other.errors_;
            bitField0_ = (bitField0_ & ~0x00000008);
            errorsBuilder_ = 
              com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                 getErrorsFieldBuilder() : null;
          } else {
            errorsBuilder_.addAllMessages(other.errors_);
          }
        }
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.logging.v1.LogSink parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.logging.v1.LogSink) e.getUnfinishedMessage();
        throw e;
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private java.lang.Object name_ = "";
    /**
     * <code>optional string name = 1;</code>
     *
     * <pre>
     * The client-assigned name of this sink. For example,
     * `"my-syslog-sink"`.  The name must be unique among the sinks of a
     * similar kind in the project.
     * </pre>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        name_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>optional string name = 1;</code>
     *
     * <pre>
     * The client-assigned name of this sink. For example,
     * `"my-syslog-sink"`.  The name must be unique among the sinks of a
     * similar kind in the project.
     * </pre>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>optional string name = 1;</code>
     *
     * <pre>
     * The client-assigned name of this sink. For example,
     * `"my-syslog-sink"`.  The name must be unique among the sinks of a
     * similar kind in the project.
     * </pre>
     */
    public Builder setName(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      name_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional string name = 1;</code>
     *
     * <pre>
     * The client-assigned name of this sink. For example,
     * `"my-syslog-sink"`.  The name must be unique among the sinks of a
     * similar kind in the project.
     * </pre>
     */
    public Builder clearName() {
      
      name_ = getDefaultInstance().getName();
      onChanged();
      return this;
    }
    /**
     * <code>optional string name = 1;</code>
     *
     * <pre>
     * The client-assigned name of this sink. For example,
     * `"my-syslog-sink"`.  The name must be unique among the sinks of a
     * similar kind in the project.
     * </pre>
     */
    public Builder setNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      name_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object destination_ = "";
    /**
     * <code>optional string destination = 3;</code>
     *
     * <pre>
     * The resource name of the destination.
     * Cloud Logging writes designated log entries to this destination.
     * For example, `"storage.googleapis.com/my-output-bucket"`.
     * </pre>
     */
    public java.lang.String getDestination() {
      java.lang.Object ref = destination_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        destination_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>optional string destination = 3;</code>
     *
     * <pre>
     * The resource name of the destination.
     * Cloud Logging writes designated log entries to this destination.
     * For example, `"storage.googleapis.com/my-output-bucket"`.
     * </pre>
     */
    public com.google.protobuf.ByteString
        getDestinationBytes() {
      java.lang.Object ref = destination_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        destination_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>optional string destination = 3;</code>
     *
     * <pre>
     * The resource name of the destination.
     * Cloud Logging writes designated log entries to this destination.
     * For example, `"storage.googleapis.com/my-output-bucket"`.
     * </pre>
     */
    public Builder setDestination(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      destination_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional string destination = 3;</code>
     *
     * <pre>
     * The resource name of the destination.
     * Cloud Logging writes designated log entries to this destination.
     * For example, `"storage.googleapis.com/my-output-bucket"`.
     * </pre>
     */
    public Builder clearDestination() {
      
      destination_ = getDefaultInstance().getDestination();
      onChanged();
      return this;
    }
    /**
     * <code>optional string destination = 3;</code>
     *
     * <pre>
     * The resource name of the destination.
     * Cloud Logging writes designated log entries to this destination.
     * For example, `"storage.googleapis.com/my-output-bucket"`.
     * </pre>
     */
    public Builder setDestinationBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      destination_ = value;
      onChanged();
      return this;
    }

    private java.lang.Object filter_ = "";
    /**
     * <code>optional string filter = 5;</code>
     *
     * <pre>
     * An advanced logs filter. If present, only log entries matching the filter
     * are written.  Only project sinks use this field; log sinks and log service
     * sinks must not include a filter.
     * </pre>
     */
    public java.lang.String getFilter() {
      java.lang.Object ref = filter_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        filter_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>optional string filter = 5;</code>
     *
     * <pre>
     * An advanced logs filter. If present, only log entries matching the filter
     * are written.  Only project sinks use this field; log sinks and log service
     * sinks must not include a filter.
     * </pre>
     */
    public com.google.protobuf.ByteString
        getFilterBytes() {
      java.lang.Object ref = filter_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        filter_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>optional string filter = 5;</code>
     *
     * <pre>
     * An advanced logs filter. If present, only log entries matching the filter
     * are written.  Only project sinks use this field; log sinks and log service
     * sinks must not include a filter.
     * </pre>
     */
    public Builder setFilter(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      filter_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional string filter = 5;</code>
     *
     * <pre>
     * An advanced logs filter. If present, only log entries matching the filter
     * are written.  Only project sinks use this field; log sinks and log service
     * sinks must not include a filter.
     * </pre>
     */
    public Builder clearFilter() {
      
      filter_ = getDefaultInstance().getFilter();
      onChanged();
      return this;
    }
    /**
     * <code>optional string filter = 5;</code>
     *
     * <pre>
     * An advanced logs filter. If present, only log entries matching the filter
     * are written.  Only project sinks use this field; log sinks and log service
     * sinks must not include a filter.
     * </pre>
     */
    public Builder setFilterBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      filter_ = value;
      onChanged();
      return this;
    }

    private java.util.List<com.google.logging.v1.LogError> errors_ =
      java.util.Collections.emptyList();
    private void ensureErrorsIsMutable() {
      if (!((bitField0_ & 0x00000008) == 0x00000008)) {
        errors_ = new java.util.ArrayList<com.google.logging.v1.LogError>(errors_);
        bitField0_ |= 0x00000008;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilder<
        com.google.logging.v1.LogError, com.google.logging.v1.LogError.Builder, com.google.logging.v1.LogErrorOrBuilder> errorsBuilder_;

    /**
     * <code>repeated .google.logging.v1.LogError errors = 4;</code>
     *
     * <pre>
     * _Output only._ If any errors occur when invoking a sink method,
     * then this field contains descriptions of the errors.
     * </pre>
     */
    public java.util.List<com.google.logging.v1.LogError> getErrorsList() {
      if (errorsBuilder_ == null) {
        return java.util.Collections.unmodifiableList(errors_);
      } else {
        return errorsBuilder_.getMessageList();
      }
    }
    /**
     * <code>repeated .google.logging.v1.LogError errors = 4;</code>
     *
     * <pre>
     * _Output only._ If any errors occur when invoking a sink method,
     * then this field contains descriptions of the errors.
     * </pre>
     */
    public int getErrorsCount() {
      if (errorsBuilder_ == null) {
        return errors_.size();
      } else {
        return errorsBuilder_.getCount();
      }
    }
    /**
     * <code>repeated .google.logging.v1.LogError errors = 4;</code>
     *
     * <pre>
     * _Output only._ If any errors occur when invoking a sink method,
     * then this field contains descriptions of the errors.
     * </pre>
     */
    public com.google.logging.v1.LogError getErrors(int index) {
      if (errorsBuilder_ == null) {
        return errors_.get(index);
      } else {
        return errorsBuilder_.getMessage(index);
      }
    }
    /**
     * <code>repeated .google.logging.v1.LogError errors = 4;</code>
     *
     * <pre>
     * _Output only._ If any errors occur when invoking a sink method,
     * then this field contains descriptions of the errors.
     * </pre>
     */
    public Builder setErrors(
        int index, com.google.logging.v1.LogError value) {
      if (errorsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureErrorsIsMutable();
        errors_.set(index, value);
        onChanged();
      } else {
        errorsBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .google.logging.v1.LogError errors = 4;</code>
     *
     * <pre>
     * _Output only._ If any errors occur when invoking a sink method,
     * then this field contains descriptions of the errors.
     * </pre>
     */
    public Builder setErrors(
        int index, com.google.logging.v1.LogError.Builder builderForValue) {
      if (errorsBuilder_ == null) {
        ensureErrorsIsMutable();
        errors_.set(index, builderForValue.build());
        onChanged();
      } else {
        errorsBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .google.logging.v1.LogError errors = 4;</code>
     *
     * <pre>
     * _Output only._ If any errors occur when invoking a sink method,
     * then this field contains descriptions of the errors.
     * </pre>
     */
    public Builder addErrors(com.google.logging.v1.LogError value) {
      if (errorsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureErrorsIsMutable();
        errors_.add(value);
        onChanged();
      } else {
        errorsBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <code>repeated .google.logging.v1.LogError errors = 4;</code>
     *
     * <pre>
     * _Output only._ If any errors occur when invoking a sink method,
     * then this field contains descriptions of the errors.
     * </pre>
     */
    public Builder addErrors(
        int index, com.google.logging.v1.LogError value) {
      if (errorsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureErrorsIsMutable();
        errors_.add(index, value);
        onChanged();
      } else {
        errorsBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <code>repeated .google.logging.v1.LogError errors = 4;</code>
     *
     * <pre>
     * _Output only._ If any errors occur when invoking a sink method,
     * then this field contains descriptions of the errors.
     * </pre>
     */
    public Builder addErrors(
        com.google.logging.v1.LogError.Builder builderForValue) {
      if (errorsBuilder_ == null) {
        ensureErrorsIsMutable();
        errors_.add(builderForValue.build());
        onChanged();
      } else {
        errorsBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .google.logging.v1.LogError errors = 4;</code>
     *
     * <pre>
     * _Output only._ If any errors occur when invoking a sink method,
     * then this field contains descriptions of the errors.
     * </pre>
     */
    public Builder addErrors(
        int index, com.google.logging.v1.LogError.Builder builderForValue) {
      if (errorsBuilder_ == null) {
        ensureErrorsIsMutable();
        errors_.add(index, builderForValue.build());
        onChanged();
      } else {
        errorsBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <code>repeated .google.logging.v1.LogError errors = 4;</code>
     *
     * <pre>
     * _Output only._ If any errors occur when invoking a sink method,
     * then this field contains descriptions of the errors.
     * </pre>
     */
    public Builder addAllErrors(
        java.lang.Iterable<? extends com.google.logging.v1.LogError> values) {
      if (errorsBuilder_ == null) {
        ensureErrorsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, errors_);
        onChanged();
      } else {
        errorsBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <code>repeated .google.logging.v1.LogError errors = 4;</code>
     *
     * <pre>
     * _Output only._ If any errors occur when invoking a sink method,
     * then this field contains descriptions of the errors.
     * </pre>
     */
    public Builder clearErrors() {
      if (errorsBuilder_ == null) {
        errors_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
      } else {
        errorsBuilder_.clear();
      }
      return this;
    }
    /**
     * <code>repeated .google.logging.v1.LogError errors = 4;</code>
     *
     * <pre>
     * _Output only._ If any errors occur when invoking a sink method,
     * then this field contains descriptions of the errors.
     * </pre>
     */
    public Builder removeErrors(int index) {
      if (errorsBuilder_ == null) {
        ensureErrorsIsMutable();
        errors_.remove(index);
        onChanged();
      } else {
        errorsBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <code>repeated .google.logging.v1.LogError errors = 4;</code>
     *
     * <pre>
     * _Output only._ If any errors occur when invoking a sink method,
     * then this field contains descriptions of the errors.
     * </pre>
     */
    public com.google.logging.v1.LogError.Builder getErrorsBuilder(
        int index) {
      return getErrorsFieldBuilder().getBuilder(index);
    }
    /**
     * <code>repeated .google.logging.v1.LogError errors = 4;</code>
     *
     * <pre>
     * _Output only._ If any errors occur when invoking a sink method,
     * then this field contains descriptions of the errors.
     * </pre>
     */
    public com.google.logging.v1.LogErrorOrBuilder getErrorsOrBuilder(
        int index) {
      if (errorsBuilder_ == null) {
        return errors_.get(index);  } else {
        return errorsBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <code>repeated .google.logging.v1.LogError errors = 4;</code>
     *
     * <pre>
     * _Output only._ If any errors occur when invoking a sink method,
     * then this field contains descriptions of the errors.
     * </pre>
     */
    public java.util.List<? extends com.google.logging.v1.LogErrorOrBuilder> 
         getErrorsOrBuilderList() {
      if (errorsBuilder_ != null) {
        return errorsBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(errors_);
      }
    }
    /**
     * <code>repeated .google.logging.v1.LogError errors = 4;</code>
     *
     * <pre>
     * _Output only._ If any errors occur when invoking a sink method,
     * then this field contains descriptions of the errors.
     * </pre>
     */
    public com.google.logging.v1.LogError.Builder addErrorsBuilder() {
      return getErrorsFieldBuilder().addBuilder(
          com.google.logging.v1.LogError.getDefaultInstance());
    }
    /**
     * <code>repeated .google.logging.v1.LogError errors = 4;</code>
     *
     * <pre>
     * _Output only._ If any errors occur when invoking a sink method,
     * then this field contains descriptions of the errors.
     * </pre>
     */
    public com.google.logging.v1.LogError.Builder addErrorsBuilder(
        int index) {
      return getErrorsFieldBuilder().addBuilder(
          index, com.google.logging.v1.LogError.getDefaultInstance());
    }
    /**
     * <code>repeated .google.logging.v1.LogError errors = 4;</code>
     *
     * <pre>
     * _Output only._ If any errors occur when invoking a sink method,
     * then this field contains descriptions of the errors.
     * </pre>
     */
    public java.util.List<com.google.logging.v1.LogError.Builder> 
         getErrorsBuilderList() {
      return getErrorsFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilder<
        com.google.logging.v1.LogError, com.google.logging.v1.LogError.Builder, com.google.logging.v1.LogErrorOrBuilder> 
        getErrorsFieldBuilder() {
      if (errorsBuilder_ == null) {
        errorsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
            com.google.logging.v1.LogError, com.google.logging.v1.LogError.Builder, com.google.logging.v1.LogErrorOrBuilder>(
                errors_,
                ((bitField0_ & 0x00000008) == 0x00000008),
                getParentForChildren(),
                isClean());
        errors_ = null;
      }
      return errorsBuilder_;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:google.logging.v1.LogSink)
  }

  // @@protoc_insertion_point(class_scope:google.logging.v1.LogSink)
  private static final com.google.logging.v1.LogSink DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.logging.v1.LogSink();
  }

  public static com.google.logging.v1.LogSink getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<LogSink>
      PARSER = new com.google.protobuf.AbstractParser<LogSink>() {
    public LogSink parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      try {
        return new LogSink(input, extensionRegistry);
      } catch (RuntimeException e) {
        if (e.getCause() instanceof
            com.google.protobuf.InvalidProtocolBufferException) {
          throw (com.google.protobuf.InvalidProtocolBufferException)
              e.getCause();
        }
        throw e;
      }
    }
  };

  public static com.google.protobuf.Parser<LogSink> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<LogSink> getParserForType() {
    return PARSER;
  }

  public com.google.logging.v1.LogSink getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

