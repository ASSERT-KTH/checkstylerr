// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/logging/v1/logging_config.proto

package com.google.logging.v1;

public interface LogSinkOrBuilder extends
    // @@protoc_insertion_point(interface_extends:google.logging.v1.LogSink)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>optional string name = 1;</code>
   *
   * <pre>
   * The client-assigned name of this sink. For example,
   * `"my-syslog-sink"`.  The name must be unique among the sinks of a
   * similar kind in the project.
   * </pre>
   */
  java.lang.String getName();
  /**
   * <code>optional string name = 1;</code>
   *
   * <pre>
   * The client-assigned name of this sink. For example,
   * `"my-syslog-sink"`.  The name must be unique among the sinks of a
   * similar kind in the project.
   * </pre>
   */
  com.google.protobuf.ByteString
      getNameBytes();

  /**
   * <code>optional string destination = 3;</code>
   *
   * <pre>
   * The resource name of the destination.
   * Cloud Logging writes designated log entries to this destination.
   * For example, `"storage.googleapis.com/my-output-bucket"`.
   * </pre>
   */
  java.lang.String getDestination();
  /**
   * <code>optional string destination = 3;</code>
   *
   * <pre>
   * The resource name of the destination.
   * Cloud Logging writes designated log entries to this destination.
   * For example, `"storage.googleapis.com/my-output-bucket"`.
   * </pre>
   */
  com.google.protobuf.ByteString
      getDestinationBytes();

  /**
   * <code>optional string filter = 5;</code>
   *
   * <pre>
   * An advanced logs filter. If present, only log entries matching the filter
   * are written.  Only project sinks use this field; log sinks and log service
   * sinks must not include a filter.
   * </pre>
   */
  java.lang.String getFilter();
  /**
   * <code>optional string filter = 5;</code>
   *
   * <pre>
   * An advanced logs filter. If present, only log entries matching the filter
   * are written.  Only project sinks use this field; log sinks and log service
   * sinks must not include a filter.
   * </pre>
   */
  com.google.protobuf.ByteString
      getFilterBytes();

  /**
   * <code>repeated .google.logging.v1.LogError errors = 4;</code>
   *
   * <pre>
   * _Output only._ If any errors occur when invoking a sink method,
   * then this field contains descriptions of the errors.
   * </pre>
   */
  java.util.List<com.google.logging.v1.LogError> 
      getErrorsList();
  /**
   * <code>repeated .google.logging.v1.LogError errors = 4;</code>
   *
   * <pre>
   * _Output only._ If any errors occur when invoking a sink method,
   * then this field contains descriptions of the errors.
   * </pre>
   */
  com.google.logging.v1.LogError getErrors(int index);
  /**
   * <code>repeated .google.logging.v1.LogError errors = 4;</code>
   *
   * <pre>
   * _Output only._ If any errors occur when invoking a sink method,
   * then this field contains descriptions of the errors.
   * </pre>
   */
  int getErrorsCount();
  /**
   * <code>repeated .google.logging.v1.LogError errors = 4;</code>
   *
   * <pre>
   * _Output only._ If any errors occur when invoking a sink method,
   * then this field contains descriptions of the errors.
   * </pre>
   */
  java.util.List<? extends com.google.logging.v1.LogErrorOrBuilder> 
      getErrorsOrBuilderList();
  /**
   * <code>repeated .google.logging.v1.LogError errors = 4;</code>
   *
   * <pre>
   * _Output only._ If any errors occur when invoking a sink method,
   * then this field contains descriptions of the errors.
   * </pre>
   */
  com.google.logging.v1.LogErrorOrBuilder getErrorsOrBuilder(
      int index);
}
