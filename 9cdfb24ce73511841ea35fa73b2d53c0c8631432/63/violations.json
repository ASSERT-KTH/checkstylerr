[
    {
        "line": "4",
        "column": "8",
        "severity": "error",
        "message": "Unused import - org.apache.lucene.index.LeafReaderContext.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck"
    },
    {
        "line": "6",
        "column": "8",
        "severity": "error",
        "message": "Unused import - org.apache.lucene.search.LeafCollector.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck"
    },
    {
        "line": "11",
        "column": "8",
        "severity": "error",
        "message": "Unused import - java.io.IOException.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck"
    },
    {
        "line": "18",
        "column": "35",
        "severity": "error",
        "message": "'<' is preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.GenericWhitespaceCheck"
    },
    {
        "line": "20",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "22",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "22",
        "column": "11",
        "severity": "error",
        "message": "'protected' modifier out of order with the JLS suggestions.",
        "source": "com.puppycrawl.tools.checkstyle.checks.modifier.ModifierOrderCheck"
    },
    {
        "line": "22",
        "column": "25",
        "severity": "error",
        "message": "Variable 'topK' must be private and have accessor methods.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheck"
    },
    {
        "line": "23",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "23",
        "column": "28",
        "severity": "error",
        "message": "Variable 'arr' must be private and have accessor methods.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheck"
    },
    {
        "line": "24",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "24",
        "column": "19",
        "severity": "error",
        "message": "Variable 'totalHits' must be private and have accessor methods.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheck"
    },
    {
        "line": "26",
        "column": "27",
        "severity": "error",
        "message": "Parameter container should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "26",
        "column": "51",
        "severity": "error",
        "message": "Parameter k should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "31",
        "column": "5",
        "severity": "error",
        "message": "Class 'CeCollector' looks like designed for extension (can be subclassed), but the method 'populateResults' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CeCollector' final or making the method 'populateResults' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "31",
        "column": "36",
        "severity": "error",
        "message": "Parameter results should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "31",
        "column": "56",
        "severity": "error",
        "message": "Parameter howMany should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "37",
        "column": "14",
        "severity": "error",
        "message": "'protected' modifier out of order with the JLS suggestions.",
        "source": "com.puppycrawl.tools.checkstyle.checks.modifier.ModifierOrderCheck"
    },
    {
        "line": "39",
        "column": "5",
        "severity": "error",
        "message": "Class 'CeCollector' looks like designed for extension (can be subclassed), but the method 'getTotalHits' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CeCollector' final or making the method 'getTotalHits' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "43",
        "column": "5",
        "severity": "error",
        "message": "Class 'CeCollector' looks like designed for extension (can be subclassed), but the method 'topDocsSize' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CeCollector' final or making the method 'topDocsSize' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "50",
        "column": "5",
        "severity": "error",
        "message": "Class 'CeCollector' looks like designed for extension (can be subclassed), but the method 'topDocs' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CeCollector' final or making the method 'topDocs' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "58",
        "column": "5",
        "severity": "error",
        "message": "Class 'CeCollector' looks like designed for extension (can be subclassed), but the method 'topDocs' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CeCollector' final or making the method 'topDocs' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "58",
        "column": "28",
        "severity": "error",
        "message": "Parameter start should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "65",
        "column": "5",
        "severity": "error",
        "message": "Class 'CeCollector' looks like designed for extension (can be subclassed), but the method 'topDocs' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'CeCollector' final or making the method 'topDocs' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "65",
        "column": "28",
        "severity": "error",
        "message": "Parameter start should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "65",
        "column": "39",
        "severity": "error",
        "message": "Parameter howMany should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "74",
        "severity": "error",
        "message": "Comment matches to-do format 'TODO:'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.TodoCommentCheck"
    },
    {
        "line": "89",
        "column": "64",
        "severity": "error",
        "message": "'{' at column 64 should have line break after.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
    }
]