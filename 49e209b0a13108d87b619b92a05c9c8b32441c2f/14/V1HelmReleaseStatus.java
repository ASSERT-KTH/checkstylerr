/*
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1.18.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package it.reply.orchestrator.dto.kubernetes.fluxcd;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * HelmReleaseStatus contains status information about an HelmRelease.
 */
@ApiModel(description = "HelmReleaseStatus contains status information about an HelmRelease.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-10-16T10:28:05.581Z[Etc/UTC]")
public class V1HelmReleaseStatus {
  public static final String SERIALIZED_NAME_CONDITIONS = "conditions";
  @SerializedName(SERIALIZED_NAME_CONDITIONS)
  private List<V1HelmReleaseStatusConditions> conditions = null;

  public static final String SERIALIZED_NAME_LAST_ATTEMPTED_REVISION = "lastAttemptedRevision";
  @SerializedName(SERIALIZED_NAME_LAST_ATTEMPTED_REVISION)
  private String lastAttemptedRevision;

  public static final String SERIALIZED_NAME_OBSERVED_GENERATION = "observedGeneration";
  @SerializedName(SERIALIZED_NAME_OBSERVED_GENERATION)
  private Long observedGeneration;

  /**
   * Phase the release is in, one of (&#39;ChartFetched&#39;, &#39;ChartFetchFailed&#39;, &#39;Installing&#39;, &#39;Upgrading&#39;, &#39;Deployed&#39;, &#39;DeployFailed&#39;, &#39;Testing&#39;, &#39;TestFailed&#39;, &#39;Tested&#39;, &#39;Succeeded&#39;, &#39;RollingBack&#39;, &#39;RolledBack&#39;, &#39;RollbackFailed&#39;)
   */
  @JsonAdapter(PhaseEnum.Adapter.class)
  public enum PhaseEnum {
    CHARTFETCHED("ChartFetched"),
    
    CHARTFETCHFAILED("ChartFetchFailed"),
    
    INSTALLING("Installing"),
    
    UPGRADING("Upgrading"),
    
    DEPLOYED("Deployed"),
    
    DEPLOYFAILED("DeployFailed"),
    
    TESTING("Testing"),
    
    TESTFAILED("TestFailed"),
    
    TESTED("Tested"),
    
    SUCCEEDED("Succeeded"),
    
    FAILED("Failed"),
    
    ROLLINGBACK("RollingBack"),
    
    ROLLEDBACK("RolledBack"),
    
    ROLLBACKFAILED("RollbackFailed");

    private String value;

    PhaseEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static PhaseEnum fromValue(String value) {
      for (PhaseEnum b : PhaseEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<PhaseEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final PhaseEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public PhaseEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return PhaseEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_PHASE = "phase";
  @SerializedName(SERIALIZED_NAME_PHASE)
  private PhaseEnum phase;

  public static final String SERIALIZED_NAME_RELEASE_NAME = "releaseName";
  @SerializedName(SERIALIZED_NAME_RELEASE_NAME)
  private String releaseName;

  public static final String SERIALIZED_NAME_RELEASE_STATUS = "releaseStatus";
  @SerializedName(SERIALIZED_NAME_RELEASE_STATUS)
  private String releaseStatus;

  public static final String SERIALIZED_NAME_REVISION = "revision";
  @SerializedName(SERIALIZED_NAME_REVISION)
  private String revision;

  public static final String SERIALIZED_NAME_ROLLBACK_COUNT = "rollbackCount";
  @SerializedName(SERIALIZED_NAME_ROLLBACK_COUNT)
  private Long rollbackCount;


  public V1HelmReleaseStatus conditions(List<V1HelmReleaseStatusConditions> conditions) {
    
    this.conditions = conditions;
    return this;
  }

  public V1HelmReleaseStatus addConditionsItem(V1HelmReleaseStatusConditions conditionsItem) {
    if (this.conditions == null) {
      this.conditions = new ArrayList<V1HelmReleaseStatusConditions>();
    }
    this.conditions.add(conditionsItem);
    return this;
  }

   /**
   * Conditions contains observations of the resource&#39;s state, e.g., has the chart which it refers to been fetched.
   * @return conditions
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Conditions contains observations of the resource's state, e.g., has the chart which it refers to been fetched.")

  public List<V1HelmReleaseStatusConditions> getConditions() {
    return conditions;
  }


  public void setConditions(List<V1HelmReleaseStatusConditions> conditions) {
    this.conditions = conditions;
  }


  public V1HelmReleaseStatus lastAttemptedRevision(String lastAttemptedRevision) {
    
    this.lastAttemptedRevision = lastAttemptedRevision;
    return this;
  }

   /**
   * LastAttemptedRevision is the revision of the latest chart sync, and may be of a failed release.
   * @return lastAttemptedRevision
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "LastAttemptedRevision is the revision of the latest chart sync, and may be of a failed release.")

  public String getLastAttemptedRevision() {
    return lastAttemptedRevision;
  }


  public void setLastAttemptedRevision(String lastAttemptedRevision) {
    this.lastAttemptedRevision = lastAttemptedRevision;
  }


  public V1HelmReleaseStatus observedGeneration(Long observedGeneration) {
    
    this.observedGeneration = observedGeneration;
    return this;
  }

   /**
   * ObservedGeneration is the most recent generation observed by the operator.
   * @return observedGeneration
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "ObservedGeneration is the most recent generation observed by the operator.")

  public Long getObservedGeneration() {
    return observedGeneration;
  }


  public void setObservedGeneration(Long observedGeneration) {
    this.observedGeneration = observedGeneration;
  }


  public V1HelmReleaseStatus phase(PhaseEnum phase) {
    
    this.phase = phase;
    return this;
  }

   /**
   * Phase the release is in, one of (&#39;ChartFetched&#39;, &#39;ChartFetchFailed&#39;, &#39;Installing&#39;, &#39;Upgrading&#39;, &#39;Deployed&#39;, &#39;DeployFailed&#39;, &#39;Testing&#39;, &#39;TestFailed&#39;, &#39;Tested&#39;, &#39;Succeeded&#39;, &#39;RollingBack&#39;, &#39;RolledBack&#39;, &#39;RollbackFailed&#39;)
   * @return phase
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Phase the release is in, one of ('ChartFetched', 'ChartFetchFailed', 'Installing', 'Upgrading', 'Deployed', 'DeployFailed', 'Testing', 'TestFailed', 'Tested', 'Succeeded', 'RollingBack', 'RolledBack', 'RollbackFailed')")

  public PhaseEnum getPhase() {
    return phase;
  }


  public void setPhase(PhaseEnum phase) {
    this.phase = phase;
  }


  public V1HelmReleaseStatus releaseName(String releaseName) {
    
    this.releaseName = releaseName;
    return this;
  }

   /**
   * ReleaseName is the name as either supplied or generated.
   * @return releaseName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "ReleaseName is the name as either supplied or generated.")

  public String getReleaseName() {
    return releaseName;
  }


  public void setReleaseName(String releaseName) {
    this.releaseName = releaseName;
  }


  public V1HelmReleaseStatus releaseStatus(String releaseStatus) {
    
    this.releaseStatus = releaseStatus;
    return this;
  }

   /**
   * ReleaseStatus is the status as given by Helm for the release managed by this resource.
   * @return releaseStatus
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "ReleaseStatus is the status as given by Helm for the release managed by this resource.")

  public String getReleaseStatus() {
    return releaseStatus;
  }


  public void setReleaseStatus(String releaseStatus) {
    this.releaseStatus = releaseStatus;
  }


  public V1HelmReleaseStatus revision(String revision) {
    
    this.revision = revision;
    return this;
  }

   /**
   * Revision holds the Git hash or version of the chart currently deployed.
   * @return revision
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Revision holds the Git hash or version of the chart currently deployed.")

  public String getRevision() {
    return revision;
  }


  public void setRevision(String revision) {
    this.revision = revision;
  }


  public V1HelmReleaseStatus rollbackCount(Long rollbackCount) {
    
    this.rollbackCount = rollbackCount;
    return this;
  }

   /**
   * RollbackCount records the amount of rollback attempts made, it is incremented after a rollback failure and reset after a successful upgrade or revision change.
   * @return rollbackCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "RollbackCount records the amount of rollback attempts made, it is incremented after a rollback failure and reset after a successful upgrade or revision change.")

  public Long getRollbackCount() {
    return rollbackCount;
  }


  public void setRollbackCount(Long rollbackCount) {
    this.rollbackCount = rollbackCount;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1HelmReleaseStatus v1HelmReleaseStatus = (V1HelmReleaseStatus) o;
    return Objects.equals(this.conditions, v1HelmReleaseStatus.conditions) &&
        Objects.equals(this.lastAttemptedRevision, v1HelmReleaseStatus.lastAttemptedRevision) &&
        Objects.equals(this.observedGeneration, v1HelmReleaseStatus.observedGeneration) &&
        Objects.equals(this.phase, v1HelmReleaseStatus.phase) &&
        Objects.equals(this.releaseName, v1HelmReleaseStatus.releaseName) &&
        Objects.equals(this.releaseStatus, v1HelmReleaseStatus.releaseStatus) &&
        Objects.equals(this.revision, v1HelmReleaseStatus.revision) &&
        Objects.equals(this.rollbackCount, v1HelmReleaseStatus.rollbackCount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(conditions, lastAttemptedRevision, observedGeneration, phase, releaseName, releaseStatus, revision, rollbackCount);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1HelmReleaseStatus {\n");
    sb.append("    conditions: ").append(toIndentedString(conditions)).append("\n");
    sb.append("    lastAttemptedRevision: ").append(toIndentedString(lastAttemptedRevision)).append("\n");
    sb.append("    observedGeneration: ").append(toIndentedString(observedGeneration)).append("\n");
    sb.append("    phase: ").append(toIndentedString(phase)).append("\n");
    sb.append("    releaseName: ").append(toIndentedString(releaseName)).append("\n");
    sb.append("    releaseStatus: ").append(toIndentedString(releaseStatus)).append("\n");
    sb.append("    revision: ").append(toIndentedString(revision)).append("\n");
    sb.append("    rollbackCount: ").append(toIndentedString(rollbackCount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

