[
    {
        "line": "12",
        "severity": "warning",
        "message": "Empty line should be followed by <p> tag on the next line.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocParagraphCheck"
    },
    {
        "line": "17",
        "severity": "warning",
        "message": "Line is longer than 100 characters (found 122).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "21",
        "severity": "warning",
        "message": "'CTOR_DEF' should be separated from previous statement.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
    },
    {
        "line": "40",
        "column": "9",
        "severity": "warning",
        "message": "Local variable name 'mutable_bitField0_' must match pattern '^[a-z][a-z0-9][a-zA-Z0-9]*$'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.naming.LocalVariableNameCheck"
    },
    {
        "line": "52",
        "severity": "warning",
        "message": "'block lcurly' has incorrect indentation level 12, expected level should be 10.",
        "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
    },
    {
        "line": "53",
        "severity": "warning",
        "message": "'block' child has incorrect indentation level 14, expected level should be 12.",
        "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
    },
    {
        "line": "54",
        "severity": "warning",
        "message": "'block' child has incorrect indentation level 14, expected level should be 12.",
        "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
    },
    {
        "line": "55",
        "severity": "warning",
        "message": "'block rcurly' has incorrect indentation level 12, expected level should be 10.",
        "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
    },
    {
        "line": "57",
        "severity": "warning",
        "message": "'block lcurly' has incorrect indentation level 12, expected level should be 10.",
        "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
    },
    {
        "line": "58",
        "severity": "warning",
        "message": "'if' has incorrect indentation level 14, expected level should be 12.",
        "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
    },
    {
        "line": "59",
        "severity": "warning",
        "message": "'if' child has incorrect indentation level 16, expected level should be 14.",
        "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
    },
    {
        "line": "60",
        "severity": "warning",
        "message": "'if rcurly' has incorrect indentation level 14, expected level should be 12.",
        "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
    },
    {
        "line": "61",
        "severity": "warning",
        "message": "'block' child has incorrect indentation level 14, expected level should be 12.",
        "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
    },
    {
        "line": "62",
        "severity": "warning",
        "message": "'block rcurly' has incorrect indentation level 12, expected level should be 10.",
        "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
    },
    {
        "line": "77",
        "severity": "warning",
        "message": "Line is longer than 100 characters (found 107).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "84",
        "severity": "warning",
        "message": "Line is longer than 100 characters (found 114).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "92",
        "column": "19",
        "severity": "warning",
        "message": "Member name 'stationaryCamera_' must match pattern '^[a-z][a-z0-9][a-zA-Z0-9]*$'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.naming.MemberNameCheck"
    },
    {
        "line": "104",
        "severity": "warning",
        "message": "'METHOD_DEF' should be separated from previous statement.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
    },
    {
        "line": "113",
        "severity": "warning",
        "message": "'if' construct must use '{}'s.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.NeedBracesCheck"
    },
    {
        "line": "114",
        "severity": "warning",
        "message": "'if' construct must use '{}'s.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.NeedBracesCheck"
    },
    {
        "line": "131",
        "severity": "warning",
        "message": "'if' construct must use '{}'s.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.NeedBracesCheck"
    },
    {
        "line": "154",
        "severity": "warning",
        "message": "'if' construct must use '{}'s.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.NeedBracesCheck"
    },
    {
        "line": "155",
        "severity": "warning",
        "message": "'if' construct must use '{}'s.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.NeedBracesCheck"
    },
    {
        "line": "237",
        "severity": "warning",
        "message": "Overload methods should not be split. Previous overloaded method located at line '216'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.OverloadMethodsDeclarationOrderCheck"
    },
    {
        "line": "270",
        "severity": "warning",
        "message": "Overload methods should not be split. Previous overloaded method located at line '251'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.OverloadMethodsDeclarationOrderCheck"
    },
    {
        "line": "281",
        "severity": "warning",
        "message": "Empty line should be followed by <p> tag on the next line.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocParagraphCheck"
    },
    {
        "line": "284",
        "severity": "warning",
        "message": "'CLASS_DEF' should be separated from previous statement.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
    },
    {
        "line": "286",
        "severity": "warning",
        "message": "Line is longer than 100 characters (found 124).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "290",
        "severity": "warning",
        "message": "Line is longer than 100 characters (found 109).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "297",
        "severity": "warning",
        "message": "Line is longer than 100 characters (found 116).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "316",
        "column": "74",
        "severity": "warning",
        "message": "Empty if block.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.EmptyBlockCheck"
    },
    {
        "line": "316",
        "column": "75",
        "severity": "warning",
        "message": "WhitespaceAround: '{' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "316",
        "column": "75",
        "severity": "warning",
        "message": "WhitespaceAround: '}' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "330",
        "severity": "warning",
        "message": "Line is longer than 100 characters (found 109).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "405",
        "column": "5",
        "severity": "warning",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "407",
        "severity": "warning",
        "message": "'if' construct must use '{}'s.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.NeedBracesCheck"
    },
    {
        "line": "423",
        "severity": "warning",
        "message": "Overload methods should not be split. Previous overloaded method located at line '405'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.OverloadMethodsDeclarationOrderCheck"
    },
    {
        "line": "445",
        "column": "21",
        "severity": "warning",
        "message": "Member name 'stationaryCamera_' must match pattern '^[a-z][a-z0-9][a-zA-Z0-9]*$'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.naming.MemberNameCheck"
    },
    {
        "line": "457",
        "severity": "warning",
        "message": "'METHOD_DEF' should be separated from previous statement.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
    },
    {
        "line": "471",
        "severity": "warning",
        "message": "'METHOD_DEF' should be separated from previous statement.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
    },
    {
        "line": "488",
        "severity": "warning",
        "message": "'METHOD_DEF' should be separated from previous statement.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.EmptyLineSeparatorCheck"
    },
    {
        "line": "506",
        "severity": "warning",
        "message": "Line is longer than 100 characters (found 117).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "509",
        "severity": "warning",
        "message": "Line is longer than 100 characters (found 113).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    }
]