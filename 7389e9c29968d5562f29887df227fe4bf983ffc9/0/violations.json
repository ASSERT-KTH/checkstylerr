[
    {
        "line": "1",
        "severity": "error",
        "message": "Got an exception - com.puppycrawl.tools.checkstyle.api.CheckstyleException: IllegalStateException occurred while parsing file /home/fernanda/mnt/fernanda/git-styler/workspace4checkstylerr/workspace4analyses/ifnul-ums-backend/is-lnu-persistence/src/main/java/org/lnu/is/dao/dao/entrant/EntrantPlaceDao.java.\n#x9;at com.puppycrawl.tools.checkstyle.JavaParser.parse(JavaParser.java:105)\n#x9;at com.puppycrawl.tools.checkstyle.TreeWalker.processFiltered(TreeWalker.java:160)\n#x9;at com.puppycrawl.tools.checkstyle.api.AbstractFileSetCheck.process(AbstractFileSetCheck.java:85)\n#x9;at com.puppycrawl.tools.checkstyle.Checker.processFile(Checker.java:332)\n#x9;at com.puppycrawl.tools.checkstyle.Checker.processFiles(Checker.java:294)\n#x9;at com.puppycrawl.tools.checkstyle.Checker.process(Checker.java:220)\n#x9;at com.puppycrawl.tools.checkstyle.Main.runCheckstyle(Main.java:392)\n#x9;at com.puppycrawl.tools.checkstyle.Main.runCli(Main.java:315)\n#x9;at com.puppycrawl.tools.checkstyle.Main.execute(Main.java:180)\n#x9;at com.puppycrawl.tools.checkstyle.Main.main(Main.java:119)\nCaused by: java.lang.IllegalStateException: /home/fernanda/mnt/fernanda/git-styler/workspace4checkstylerr/workspace4analyses/ifnul-ums-backend/is-lnu-persistence/src/main/java/org/lnu/is/dao/dao/entrant/EntrantPlaceDao.java:31:22: unexpected token: arr\n#x9;at com.puppycrawl.tools.checkstyle.JavaParser$1.reportError(JavaParser.java:93)\n#x9;at com.puppycrawl.tools.checkstyle.grammar.GeneratedJavaRecognizer.typeDefinition(GeneratedJavaRecognizer.java:411)\n#x9;at com.puppycrawl.tools.checkstyle.grammar.GeneratedJavaRecognizer.compilationUnit(GeneratedJavaRecognizer.java:202)\n#x9;at com.puppycrawl.tools.checkstyle.JavaParser.parse(JavaParser.java:99)\n#x9;... 9 more\nCaused by: /home/fernanda/mnt/fernanda/git-styler/workspace4checkstylerr/workspace4analyses/ifnul-ums-backend/is-lnu-persistence/src/main/java/org/lnu/is/dao/dao/entrant/EntrantPlaceDao.java:31:22: unexpected token: arr\n#x9;at com.puppycrawl.tools.checkstyle.grammar.GeneratedJavaRecognizer.expression(GeneratedJavaRecognizer.java:4802)\n#x9;at com.puppycrawl.tools.checkstyle.grammar.GeneratedJavaRecognizer.expressionList(GeneratedJavaRecognizer.java:6148)\n#x9;at com.puppycrawl.tools.checkstyle.grammar.GeneratedJavaRecognizer.argList(GeneratedJavaRecognizer.java:3448)\n#x9;at com.puppycrawl.tools.checkstyle.grammar.GeneratedJavaRecognizer.postfixExpression(GeneratedJavaRecognizer.java:7629)\n#x9;at com.puppycrawl.tools.checkstyle.grammar.GeneratedJavaRecognizer.unaryExpressionNotPlusMinus(GeneratedJavaRecognizer.java:7339)\n#x9;at com.puppycrawl.tools.checkstyle.grammar.GeneratedJavaRecognizer.unaryExpression(GeneratedJavaRecognizer.java:7154)\n#x9;at com.puppycrawl.tools.checkstyle.grammar.GeneratedJavaRecognizer.multiplicativeExpression(GeneratedJavaRecognizer.java:7019)\n#x9;at com.puppycrawl.tools.checkstyle.grammar.GeneratedJavaRecognizer.additiveExpression(GeneratedJavaRecognizer.java:6970)\n#x9;at com.puppycrawl.tools.checkstyle.grammar.GeneratedJavaRecognizer.shiftExpression(GeneratedJavaRecognizer.java:6913)\n#x9;at com.puppycrawl.tools.checkstyle.grammar.GeneratedJavaRecognizer.relationalExpression(GeneratedJavaRecognizer.java:6830)\n#x9;at com.puppycrawl.tools.checkstyle.grammar.GeneratedJavaRecognizer.equalityExpression(GeneratedJavaRecognizer.java:6781)\n#x9;at com.puppycrawl.tools.checkstyle.grammar.GeneratedJavaRecognizer.andExpression(GeneratedJavaRecognizer.java:6752)\n#x9;at com.puppycrawl.tools.checkstyle.grammar.GeneratedJavaRecognizer.exclusiveOrExpression(GeneratedJavaRecognizer.java:6723)\n#x9;at com.puppycrawl.tools.checkstyle.grammar.GeneratedJavaRecognizer.inclusiveOrExpression(GeneratedJavaRecognizer.java:6694)\n#x9;at com.puppycrawl.tools.checkstyle.grammar.GeneratedJavaRecognizer.logicalAndExpression(GeneratedJavaRecognizer.java:6665)\n#x9;at com.puppycrawl.tools.checkstyle.grammar.GeneratedJavaRecognizer.logicalOrExpression(GeneratedJavaRecognizer.java:6636)\n#x9;at com.puppycrawl.tools.checkstyle.grammar.GeneratedJavaRecognizer.conditionalExpression(GeneratedJavaRecognizer.java:2136)\n#x9;at com.puppycrawl.tools.checkstyle.grammar.GeneratedJavaRecognizer.assignmentExpression(GeneratedJavaRecognizer.java:6388)\n#x9;at com.puppycrawl.tools.checkstyle.grammar.GeneratedJavaRecognizer.expression(GeneratedJavaRecognizer.java:4789)\n#x9;at com.puppycrawl.tools.checkstyle.grammar.GeneratedJavaRecognizer.traditionalStatement(GeneratedJavaRecognizer.java:5296)\n#x9;at com.puppycrawl.tools.checkstyle.grammar.GeneratedJavaRecognizer.statement(GeneratedJavaRecognizer.java:4276)\n#x9;at com.puppycrawl.tools.checkstyle.grammar.GeneratedJavaRecognizer.compoundStatement(GeneratedJavaRecognizer.java:3942)\n#x9;at com.puppycrawl.tools.checkstyle.grammar.GeneratedJavaRecognizer.field(GeneratedJavaRecognizer.java:3332)\n#x9;at com.puppycrawl.tools.checkstyle.grammar.GeneratedJavaRecognizer.classBlock(GeneratedJavaRecognizer.java:2542)\n#x9;at com.puppycrawl.tools.checkstyle.grammar.GeneratedJavaRecognizer.classDefinition(GeneratedJavaRecognizer.java:634)\n#x9;at com.puppycrawl.tools.checkstyle.grammar.GeneratedJavaRecognizer.typeDefinitionInternal(GeneratedJavaRecognizer.java:556)\n#x9;at com.puppycrawl.tools.checkstyle.grammar.GeneratedJavaRecognizer.typeDefinition(GeneratedJavaRecognizer.java:389)\n#x9;... 11 more\n",
        "source": "com.puppycrawl.tools.checkstyle.Checker"
    }
]