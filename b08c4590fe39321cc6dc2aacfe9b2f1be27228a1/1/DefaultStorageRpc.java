package com.google.gcloud.com.google.gcloud.spi;import com.google.api.client.http.HttpRequestInitializer;import com.google.api.client.http.HttpTransport;import com.google.api.client.json.jackson.JacksonFactory;import com.google.api.services.storage.Storage;import com.google.api.services.storage.model.Bucket;import com.google.api.services.storage.model.Buckets;import com.google.gcloud.storage.StorageServiceOptions;import java.io.IOException;import java.util.List;public class DefaultStorageRpc implements StorageRpc {  private final StorageServiceOptions options;  private final Storage storage;  public DefaultStorageRpc(StorageServiceOptions options) {    HttpTransport transport = options.httpTransport();    HttpRequestInitializer initializer = transport.createRequestFactory()        .getInitializer();    this.options = options;    storage = new Storage.Builder(transport, new JacksonFactory(), initializer).build();  }  @Override  public List<Bucket> buckets() throws IOException {    Buckets buckets = storage.buckets().list(options.project()).execute();    return buckets.getItems();  }  @Override  public Bucket bucket(String bucket) throws IOException {    return storage.buckets().get(bucket).execute();  }}