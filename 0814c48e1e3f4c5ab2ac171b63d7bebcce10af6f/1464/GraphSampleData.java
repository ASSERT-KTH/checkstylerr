/**
 * @author mchyzer
 * $Id$
 */
package edu.internet2.middleware.grouper.app.graph;

/**
 * Original version of sample data loader as a java class, before conversion to groovy script. To use this class,
 * add to the grouper source directory in GIT:/grouper/src/grouper/edu/internet2/middleware/grouper/app/graph/ .
 * Note, this class does not correctly link the loader attribute for loaded groups to its proper loader job,
 * since the guids in the attribute will not match the loader group ids that are randomly generated in a new
 * database.
 */

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import org.apache.commons.lang.StringUtils;

import edu.internet2.middleware.grouper.Composite;
import edu.internet2.middleware.grouper.Group;
import edu.internet2.middleware.grouper.GroupFinder;
import edu.internet2.middleware.grouper.GroupSave;
import edu.internet2.middleware.grouper.GrouperSession;
import edu.internet2.middleware.grouper.Member;
import edu.internet2.middleware.grouper.MemberFinder;
import edu.internet2.middleware.grouper.RegistrySubject;
import edu.internet2.middleware.grouper.Stem;
import edu.internet2.middleware.grouper.StemSave;
import edu.internet2.middleware.grouper.SubjectFinder;
import edu.internet2.middleware.grouper.attr.AttributeDef;
import edu.internet2.middleware.grouper.attr.AttributeDefName;
import edu.internet2.middleware.grouper.attr.AttributeDefNameSave;
import edu.internet2.middleware.grouper.attr.AttributeDefSave;
import edu.internet2.middleware.grouper.attr.AttributeDefScopeType;
import edu.internet2.middleware.grouper.attr.AttributeDefType;
import edu.internet2.middleware.grouper.attr.AttributeDefValueType;
import edu.internet2.middleware.grouper.attr.assign.AttributeAssign;
import edu.internet2.middleware.grouper.attr.assign.AttributeAssignSave;
import edu.internet2.middleware.grouper.attr.assign.AttributeAssignType;
import edu.internet2.middleware.grouper.attr.finder.AttributeDefFinder;
import edu.internet2.middleware.grouper.attr.finder.AttributeDefNameFinder;
import edu.internet2.middleware.grouper.exception.GrouperException;
import edu.internet2.middleware.grouper.group.CompositeSave;
import edu.internet2.middleware.grouper.group.TypeOfGroup;
import edu.internet2.middleware.grouper.misc.CompositeType;
import edu.internet2.middleware.grouper.misc.GrouperDAOFactory;
import edu.internet2.middleware.grouper.misc.GrouperStartup;
import edu.internet2.middleware.grouper.misc.SaveResultType;
import edu.internet2.middleware.grouper.privs.Privilege;
import edu.internet2.middleware.grouper.subj.cache.SubjectSourceCache;
import edu.internet2.middleware.grouper.util.GrouperUtil;
import edu.internet2.middleware.subject.Subject;


/**
 *
 */
public class GraphSampleData {

  /**
   * 
   */
  public GraphSampleData() {
  }

  private static GrouperSession grouperSession = GrouperSession.startRootSession();
  private static long gshTotalObjectCount = 0L;
  private static long gshTotalChangeCount = 0L;
  private static long gshTotalErrorCount = 0L;
  private static StemSave stemSave = null;
  private static Group group = null;
  
  private static Privilege privilege = null;
  private static Subject subject = null;
  private static AttributeDef attributeDef = null;
  private static AttributeDefName attributeDefName = null;

  private static Group ownerGroup = null;

  private static Subject ownerSubject = null;
  
  private static AttributeAssignSave attributeAssignSave = null;
  private static boolean problemWithAttributeAssign = false;

  private static AttributeAssignSave attributeAssignOnAssignSave = null;
  
  private static Set attributeAssignIdsAlreadyUsed = new HashSet();
  
  public static void main(String[] args) {
    loadSampleData();
  }
  
  public static void loadSampleData() {
    GrouperStartup.startup();
    loadSampleSubjects();
    loadSampleData1();
    loadSampleData2();
    loadSampleData3();
    loadSampleData4();
    loadSampleData5();
    loadSampleData6();
    loadSampleData7();
    loadSampleData8();
    loadSampleData9();
  }
  
  public static void loadSampleSubjects() {

    String[] names = new String[] {"Hallie Stewart", "Jameson Barker", "Issac Sutton", "Morgan Johnston", "Ciara Kelly", "Braylon Wheeler", "Kaiden Beltran", "Erika Gallegos", "Tristan Yates", "Ayanna Ware", "Shayla Ho", "Alfredo Stafford", "Miracle Haynes", "Jason Lutz", "Leyla Webb", "Julissa Villarreal", "Tyrese Grimes", "Layton Nguyen", "Moriah Oneal", "Ariel Bailey", "Jaelynn Wood", "Rigoberto Waters", "Rayne Ewing", "Samara Branch", "Gaven Walter", "Kaylah Dixon", "Charlize Lucero", "Kyan Hale", "Kade Duke", "Odin Boyer", "Brenden Kaufman", "Easton Mays", "Santino Graham", "Lilian Conley", "Quinn Owen", "Kailyn Benitez", "Milagros Solis", "Brooklyn Vincent", "Essence Blake", "Skylar Hurley", "Keira Tapia", "Zaid Greer", "Katherine Campos", "Kaiden Liu", "Karen Gillespie", "Mckinley Small", "William Leon", "Robert Jordan", "Izaiah Haney", "Nikolai Arroyo", "Ashtyn Singh", "Addyson Grant", "Gary Boyle", "Braylon Foley", "Dillan Heath", "Joyce Woodard", "Jasmin Marquez", "Jordan Campos", "Kelvin Montes", "Hailee Lynch", "Damion Floyd", "Alexzander Mendoza", "Reagan Lucero", "Cynthia Kline", "Harper Ho", "Darion Ware", "Clarence Mccarthy", "Nathen Harding", "Johnathan Jennings", "Keon Kramer", "Arely Mitchell", "Nora Copeland", "London Nunez", "Marcos Paul", "Maxim Doyle", "Hana Haynes", "Van Stevens", "Beckham Santana", "Kael Dennis", "Irene Clark", "Kiana Mcconnell", "Kaylah Molina", "Carolyn Boyle", "Dario Saunders", "Heaven Norris", "Cheyenne Weiss", "Nathen Mueller", "Conrad Barton", "Salvador Christian", "Cecelia Hicks", "Devin Mccormick", "Jaida Ho", "Ramon Moss", "Kenyon Torres", "Isabelle Gomez", "Kadyn Moyer", "Savion Berger", "Annie Sullivan", "Warren Mullen", "Kianna Mcmillan", "Shaun Frye", "Aydin Hale", "Marisol Freeman", "Hillary Williams", "Julia Lin", "Emerson Walker", "Brogan Mckay", "Kailey Norton", "Hope Villegas", "Bennett Coleman", "Hanna Bright", "Lyric Marks", "Blaine Castro", "Logan Mckee", "Louis Lynn", "Scott Banks", "Priscilla Trujillo", "Jane Chavez", "June Carrillo", "Jaydin Alvarado", "Wendy Sloan", "Soren Barrera", "Adrienne Hester", "Joselyn Riggs", "Dax Leblanc", "Beckett Carter", "Brianna Orozco", "Fernando Davies", "Magdalena Manning", "Liam Fritz", "Leon Cruz", "Damari Griffin", "Thalia Carpenter", "Vincent Carter", "Trent Rhodes", "Anton York", "Harmony Austin", "Desirae Norman", "Jude Moyer", "Kyra Cooke", "Guadalupe Ballard", "Blake Chung", "Mitchell Oliver", "Harper Khan", "Destiny Neal", "Isaiah Velazquez", "Sterling Braun", "Johnathan Crawford", "Lexie Gibson", "Stanley Velazquez", "Cory Mays", "Sawyer Wilkinson", "Jabari Mays", "Violet Melton", "Erik Simmons", "Gisselle Mccullough", "Lincoln Walters", "Lacey Hartman", "Stanley Mcconnell", "Dalia Riddle", "Mariyah Wang", "Ximena Sweeney", "Deja Curtis", "Helen Horn", "Dakota Mack", "Yuliana Franklin", "Roberto Graham", "Uriah Holder", "Marlee Nielsen", "Lilah Sanders", "Savanna Pierce", "Mylee Bright", "Cadence Boone", "Konnor Cline", "Jax Trevino", "Audrey Sparks", "Armando Drake", "Tommy Stafford", "Noelle Brady", "Theodore Cochran", "Nathaniel Beard", "Angela Rodriguez", "Dixie Fry", "Kiera Jensen", "Tara Swanson", "Uriah Webster", "Cruz Delgado", "Giuliana Townsend", "Teagan Hernandez", "Yasmine Burton", "Paige Stuart", "Keira Mayer", "Aiden Yang", "Soren Schmitt", "Lennon Galloway", "Boston Montgomery", "George Hartman", "Ramon Simon", "Zaria Love", "Rory Vance"};

    for (int i=0;i<names.length;i++) {
      //800000079
      String id = "8" + StringUtils.leftPad(Integer.toString(i), 8, '0');
      
      Subject subject = null;
      boolean createdSession = false;
      GrouperSession grouperSession = null;
      try {
        grouperSession = GrouperSession.staticGrouperSession(false);
        if (grouperSession == null) {
          grouperSession = GrouperSession.startRootSession();
          createdSession = true;
        }
        subject = SubjectFinder.findById(id, false);
      } finally {
        if (createdSession) {
          GrouperSession.stopQuietly(grouperSession);
        }
      }
      if (subject != null) {
        continue;
      }
              
      String name = names[i];
      RegistrySubject registrySubject = new RegistrySubject();
      registrySubject.setId(id);
      registrySubject.setName(name);
      registrySubject.setTypeString("person");
              
      registrySubject.getAttributes(false).put("name", GrouperUtil.toSet(name));
      registrySubject.getAttributes(false).put("loginid", GrouperUtil.toSet("id." + id));
      registrySubject.getAttributes(false).put("description", GrouperUtil.toSet(name + ", " + id));
      registrySubject.getAttributes(false).put("email", GrouperUtil.toSet(id + "@somewhere.someSchool.edu"));
      try {
        GrouperDAOFactory.getFactory().getRegistrySubject().create(registrySubject);
      } catch (RuntimeException re) {
        GrouperUtil.injectInException(re, "registrySubject: " + registrySubject.getId());
        throw re;
      }
    }
    SubjectSourceCache.clearCache();
    
  }
  
  
  public static void loadSampleData1() {
  /**
  
  Sample data suitable for use in visualization testing. Data includes:
  
    * a few different loader jobs
    * a few groups provisioned to PSPNG target "testDB2"
    * a complement group
    * an intersection group
    * a group with limited permissions in certain areas. Assign users to basis:dept:110100:staff, and
         log on as them to see what they should see. 
  
  The basis:dept:110100:staff has read permission on a few groups and view on a few others. You should not when
  testing as a user in this group that nodes will be linked as long as there is a chain of read permissions. The
  chain is broken when there is no privilege, or the privilege is only view. For example, visualization should show
  for a user in this group when logged into the UI:
  
    * self as subject-> can see direct group since has read, only subobjects that have read (this is the same as the subject view in the UI)
    * app:its:pcavoid:sources: can see parents if READ but not VIEW
    * app:its:lbsimply:sources: all are view, can only see object itself with no members
  
   */
  
  
  stemSave = new StemSave(grouperSession).assignName(":").assignCreateParentStemsIfNotExist(true).assignDisplayName(":");
  Stem stem = null;
  stem = stemSave.save();
  gshTotalObjectCount++;
  if (stemSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for stem: " + stem.getName()); gshTotalChangeCount++;}
  stemSave = new StemSave(grouperSession).assignName("app").assignCreateParentStemsIfNotExist(true).assignDisplayName("Applications");
  stem = stemSave.save();
  gshTotalObjectCount++;
  if (stemSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for stem: " + stem.getName()); gshTotalChangeCount++;}
  stemSave = new StemSave(grouperSession).assignName("app:its").assignCreateParentStemsIfNotExist(true).assignDisplayName("Applications:ITS");
  stem = stemSave.save();
  gshTotalObjectCount++;
  if (stemSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for stem: " + stem.getName()); gshTotalChangeCount++;}
  stemSave = new StemSave(grouperSession).assignName("app:its:cttoday").assignCreateParentStemsIfNotExist(true).assignDisplayName("Applications:ITS:Citizen Throw Today");
  stem = stemSave.save();
  gshTotalObjectCount++;
  if (stemSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for stem: " + stem.getName()); gshTotalChangeCount++;}
  stemSave = new StemSave(grouperSession).assignName("app:its:cttoday:etc").assignCreateParentStemsIfNotExist(true).assignDisplayName("Applications:ITS:Citizen Throw Today:etc");
  stem = stemSave.save();
  gshTotalObjectCount++;
  if (stemSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for stem: " + stem.getName()); gshTotalChangeCount++;}
  stemSave = new StemSave(grouperSession).assignName("app:its:lbsimply").assignCreateParentStemsIfNotExist(true).assignDisplayName("Applications:ITS:Lot Buy Simply");
  stem = stemSave.save();
  gshTotalObjectCount++;
  if (stemSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for stem: " + stem.getName()); gshTotalChangeCount++;}
  stemSave = new StemSave(grouperSession).assignName("app:its:lbsimply:etc").assignCreateParentStemsIfNotExist(true).assignDisplayName("Applications:ITS:Lot Buy Simply:etc");
  stem = stemSave.save();
  gshTotalObjectCount++;
  if (stemSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for stem: " + stem.getName()); gshTotalChangeCount++;}
  stemSave = new StemSave(grouperSession).assignName("app:its:nistaff").assignCreateParentStemsIfNotExist(true).assignDisplayName("Applications:ITS:National Including Staff");
  stem = stemSave.save();
  gshTotalObjectCount++;
  if (stemSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for stem: " + stem.getName()); gshTotalChangeCount++;}
  stemSave = new StemSave(grouperSession).assignName("app:its:nistaff:etc").assignCreateParentStemsIfNotExist(true).assignDisplayName("Applications:ITS:National Including Staff:etc");
  stem = stemSave.save();
  gshTotalObjectCount++;
  if (stemSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for stem: " + stem.getName()); gshTotalChangeCount++;}
  stemSave = new StemSave(grouperSession).assignName("app:its:nsreturn").assignCreateParentStemsIfNotExist(true).assignDisplayName("Applications:ITS:Next Student Return");
  stem = stemSave.save();
  gshTotalObjectCount++;
  if (stemSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for stem: " + stem.getName()); gshTotalChangeCount++;}
  stemSave = new StemSave(grouperSession).assignName("app:its:nsreturn:etc").assignCreateParentStemsIfNotExist(true).assignDisplayName("Applications:ITS:Next Student Return:etc");
  stem = stemSave.save();
  gshTotalObjectCount++;
  if (stemSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for stem: " + stem.getName()); gshTotalChangeCount++;}
  stemSave = new StemSave(grouperSession).assignName("app:its:pcavoid").assignCreateParentStemsIfNotExist(true).assignDisplayName("Applications:ITS:Performance Clearly Avoid");
  stem = stemSave.save();
  gshTotalObjectCount++;
  if (stemSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for stem: " + stem.getName()); gshTotalChangeCount++;}
  stemSave = new StemSave(grouperSession).assignName("app:its:pcavoid:etc").assignCreateParentStemsIfNotExist(true).assignDisplayName("Applications:ITS:Performance Clearly Avoid:etc");
  stem = stemSave.save();
  gshTotalObjectCount++;
  if (stemSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for stem: " + stem.getName()); gshTotalChangeCount++;}
  stemSave = new StemSave(grouperSession).assignName("basis").assignCreateParentStemsIfNotExist(true).assignDisplayName("basis");
  stem = stemSave.save();
  gshTotalObjectCount++;
  if (stemSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for stem: " + stem.getName()); gshTotalChangeCount++;}
  stemSave = new StemSave(grouperSession).assignName("basis:dept").assignCreateParentStemsIfNotExist(true).assignDisplayName("basis:dept");
  stem = stemSave.save();
  gshTotalObjectCount++;
  if (stemSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for stem: " + stem.getName()); gshTotalChangeCount++;}
  stemSave = new StemSave(grouperSession).assignName("basis:dept:100000").assignCreateParentStemsIfNotExist(true).assignDisplayName("basis:dept:100000 - Decentralized Holistic Ability");
  stem = stemSave.save();
  gshTotalObjectCount++;
  if (stemSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for stem: " + stem.getName()); gshTotalChangeCount++;}
  stemSave = new StemSave(grouperSession).assignName("basis:dept:110000").assignCreateParentStemsIfNotExist(true).assignDisplayName("basis:dept:110000");
  stem = stemSave.save();
  gshTotalObjectCount++;
  if (stemSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for stem: " + stem.getName()); gshTotalChangeCount++;}
  stemSave = new StemSave(grouperSession).assignName("basis:dept:110100").assignCreateParentStemsIfNotExist(true).assignDisplayName("basis:dept:110100");
  stem = stemSave.save();
  gshTotalObjectCount++;
  if (stemSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for stem: " + stem.getName()); gshTotalChangeCount++;}
  stemSave = new StemSave(grouperSession).assignName("basis:dept:110101").assignCreateParentStemsIfNotExist(true).assignDisplayName("basis:dept:110101");
  stem = stemSave.save();
  gshTotalObjectCount++;
  if (stemSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for stem: " + stem.getName()); gshTotalChangeCount++;}
  stemSave = new StemSave(grouperSession).assignName("basis:dept:110102").assignCreateParentStemsIfNotExist(true).assignDisplayName("basis:dept:110102");
  stem = stemSave.save();
  gshTotalObjectCount++;
  if (stemSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for stem: " + stem.getName()); gshTotalChangeCount++;}
  stemSave = new StemSave(grouperSession).assignName("basis:dept:110103").assignCreateParentStemsIfNotExist(true).assignDisplayName("basis:dept:110103");
  stem = stemSave.save();
  gshTotalObjectCount++;
  if (stemSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for stem: " + stem.getName()); gshTotalChangeCount++;}
  stemSave = new StemSave(grouperSession).assignName("basis:dept:110200").assignCreateParentStemsIfNotExist(true).assignDisplayName("basis:dept:110200");
  stem = stemSave.save();
  gshTotalObjectCount++;
  if (stemSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for stem: " + stem.getName()); gshTotalChangeCount++;}
  stemSave = new StemSave(grouperSession).assignName("basis:dept:110201").assignCreateParentStemsIfNotExist(true).assignDisplayName("basis:dept:110201");
  stem = stemSave.save();
  gshTotalObjectCount++;
  if (stemSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for stem: " + stem.getName()); gshTotalChangeCount++;}
  stemSave = new StemSave(grouperSession).assignName("basis:dept:110202").assignCreateParentStemsIfNotExist(true).assignDisplayName("basis:dept:110202");
  stem = stemSave.save();
  gshTotalObjectCount++;
  if (stemSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for stem: " + stem.getName()); gshTotalChangeCount++;}
  stemSave = new StemSave(grouperSession).assignName("basis:dept:110203").assignCreateParentStemsIfNotExist(true).assignDisplayName("basis:dept:110203");
  stem = stemSave.save();
  gshTotalObjectCount++;
  if (stemSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for stem: " + stem.getName()); gshTotalChangeCount++;}
  stemSave = new StemSave(grouperSession).assignName("basis:dept:120000").assignCreateParentStemsIfNotExist(true).assignDisplayName("basis:dept:120000");
  stem = stemSave.save();
  gshTotalObjectCount++;
  if (stemSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for stem: " + stem.getName()); gshTotalChangeCount++;}
  stemSave = new StemSave(grouperSession).assignName("basis:dept:120100").assignCreateParentStemsIfNotExist(true).assignDisplayName("basis:dept:120100");
  stem = stemSave.save();
  gshTotalObjectCount++;
  if (stemSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for stem: " + stem.getName()); gshTotalChangeCount++;}
  stemSave = new StemSave(grouperSession).assignName("basis:dept:120101").assignCreateParentStemsIfNotExist(true).assignDisplayName("basis:dept:120101");
  stem = stemSave.save();
  gshTotalObjectCount++;
  if (stemSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for stem: " + stem.getName()); gshTotalChangeCount++;}
  stemSave = new StemSave(grouperSession).assignName("basis:dept:120102").assignCreateParentStemsIfNotExist(true).assignDisplayName("basis:dept:120102");
  stem = stemSave.save();
  gshTotalObjectCount++;
  if (stemSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for stem: " + stem.getName()); gshTotalChangeCount++;}
  stemSave = new StemSave(grouperSession).assignName("basis:dept:120103").assignCreateParentStemsIfNotExist(true).assignDisplayName("basis:dept:120103");
  stem = stemSave.save();
  gshTotalObjectCount++;
  if (stemSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for stem: " + stem.getName()); gshTotalChangeCount++;}
  stemSave = new StemSave(grouperSession).assignName("basis:dept:120200").assignCreateParentStemsIfNotExist(true).assignDisplayName("basis:dept:120200");
  stem = stemSave.save();
  gshTotalObjectCount++;
  if (stemSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for stem: " + stem.getName()); gshTotalChangeCount++;}
  stemSave = new StemSave(grouperSession).assignName("basis:dept:120201").assignCreateParentStemsIfNotExist(true).assignDisplayName("basis:dept:120201");
  stem = stemSave.save();
  gshTotalObjectCount++;
  if (stemSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for stem: " + stem.getName()); gshTotalChangeCount++;}
  stemSave = new StemSave(grouperSession).assignName("basis:dept:120202").assignCreateParentStemsIfNotExist(true).assignDisplayName("basis:dept:120202");
  stem = stemSave.save();
  gshTotalObjectCount++;
  if (stemSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for stem: " + stem.getName()); gshTotalChangeCount++;}
  stemSave = new StemSave(grouperSession).assignName("basis:dept:120203").assignCreateParentStemsIfNotExist(true).assignDisplayName("basis:dept:120203");
  stem = stemSave.save();
  gshTotalObjectCount++;
  if (stemSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for stem: " + stem.getName()); gshTotalChangeCount++;}
  stemSave = new StemSave(grouperSession).assignName("basis:dept:130000").assignCreateParentStemsIfNotExist(true).assignDisplayName("basis:dept:130000");
  stem = stemSave.save();
  gshTotalObjectCount++;
  if (stemSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for stem: " + stem.getName()); gshTotalChangeCount++;}
  stemSave = new StemSave(grouperSession).assignName("basis:dept:130100").assignCreateParentStemsIfNotExist(true).assignDisplayName("basis:dept:130100");
  stem = stemSave.save();
  gshTotalObjectCount++;
  if (stemSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for stem: " + stem.getName()); gshTotalChangeCount++;}
  stemSave = new StemSave(grouperSession).assignName("basis:dept:130101").assignCreateParentStemsIfNotExist(true).assignDisplayName("basis:dept:130101");
  stem = stemSave.save();
  gshTotalObjectCount++;
  if (stemSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for stem: " + stem.getName()); gshTotalChangeCount++;}
  stemSave = new StemSave(grouperSession).assignName("basis:dept:130102").assignCreateParentStemsIfNotExist(true).assignDisplayName("basis:dept:130102");
  stem = stemSave.save();
  gshTotalObjectCount++;
  if (stemSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for stem: " + stem.getName()); gshTotalChangeCount++;}
  stemSave = new StemSave(grouperSession).assignName("basis:dept:130103").assignCreateParentStemsIfNotExist(true).assignDisplayName("basis:dept:130103");
  stem = stemSave.save();
  gshTotalObjectCount++;
  if (stemSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for stem: " + stem.getName()); gshTotalChangeCount++;}
  stemSave = new StemSave(grouperSession).assignName("basis:dept:130200").assignCreateParentStemsIfNotExist(true).assignDisplayName("basis:dept:130200");
  stem = stemSave.save();
  gshTotalObjectCount++;
  if (stemSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for stem: " + stem.getName()); gshTotalChangeCount++;}
  stemSave = new StemSave(grouperSession).assignName("basis:dept:130201").assignCreateParentStemsIfNotExist(true).assignDisplayName("basis:dept:130201");
  stem = stemSave.save();
  gshTotalObjectCount++;
  if (stemSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for stem: " + stem.getName()); gshTotalChangeCount++;}
  stemSave = new StemSave(grouperSession).assignName("basis:dept:130202").assignCreateParentStemsIfNotExist(true).assignDisplayName("basis:dept:130202");
  stem = stemSave.save();
  gshTotalObjectCount++;
  if (stemSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for stem: " + stem.getName()); gshTotalChangeCount++;}
  stemSave = new StemSave(grouperSession).assignName("basis:dept:130203").assignCreateParentStemsIfNotExist(true).assignDisplayName("basis:dept:130203");
  stem = stemSave.save();
  gshTotalObjectCount++;
  if (stemSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for stem: " + stem.getName()); gshTotalChangeCount++;}
  stemSave = new StemSave(grouperSession).assignName("basis:org").assignCreateParentStemsIfNotExist(true).assignDisplayName("basis:Organizations");
  stem = stemSave.save();
  gshTotalObjectCount++;
  if (stemSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for stem: " + stem.getName()); gshTotalChangeCount++;}
  stemSave = new StemSave(grouperSession).assignName("basis:org:100000").assignCreateParentStemsIfNotExist(true).assignDisplayName("basis:Organizations:100000 - Decentralized Holistic Ability");
  stem = stemSave.save();
  gshTotalObjectCount++;
  if (stemSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for stem: " + stem.getName()); gshTotalChangeCount++;}
  stemSave = new StemSave(grouperSession).assignName("basis:org:110000").assignCreateParentStemsIfNotExist(true).assignDisplayName("basis:Organizations:110000 - Streamlined Composite Neural-Net");
  stem = stemSave.save();
  gshTotalObjectCount++;
  if (stemSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for stem: " + stem.getName()); gshTotalChangeCount++;}
  stemSave = new StemSave(grouperSession).assignName("basis:org:110100").assignCreateParentStemsIfNotExist(true).assignDisplayName("basis:Organizations:110100 - Adaptive Asymmetric Solution");
  stem = stemSave.save();
  gshTotalObjectCount++;
  if (stemSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for stem: " + stem.getName()); gshTotalChangeCount++;}
  stemSave = new StemSave(grouperSession).assignName("basis:org:110200").assignCreateParentStemsIfNotExist(true).assignDisplayName("basis:Organizations:110200 - Profit-Focused Reciprocal Firmware");
  stem = stemSave.save();
  gshTotalObjectCount++;
  if (stemSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for stem: " + stem.getName()); gshTotalChangeCount++;}
  stemSave = new StemSave(grouperSession).assignName("basis:org:120000").assignCreateParentStemsIfNotExist(true).assignDisplayName("basis:Organizations:120000 - Sharable Asynchronous Local Area Network");
  stem = stemSave.save();
  gshTotalObjectCount++;
  if (stemSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for stem: " + stem.getName()); gshTotalChangeCount++;}
  stemSave = new StemSave(grouperSession).assignName("basis:org:120100").assignCreateParentStemsIfNotExist(true).assignDisplayName("basis:Organizations:120100 - Integrated Empowering Interface");
  stem = stemSave.save();
  gshTotalObjectCount++;
  if (stemSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for stem: " + stem.getName()); gshTotalChangeCount++;}
  stemSave = new StemSave(grouperSession).assignName("basis:org:120200").assignCreateParentStemsIfNotExist(true).assignDisplayName("basis:Organizations:120200 - Grass-Roots Client-Server Support");
  stem = stemSave.save();
  gshTotalObjectCount++;
  if (stemSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for stem: " + stem.getName()); gshTotalChangeCount++;}
  stemSave = new StemSave(grouperSession).assignName("basis:org:130000").assignCreateParentStemsIfNotExist(true).assignDisplayName("basis:Organizations:130000 - Reduced Incremental Firmware");
  stem = stemSave.save();
  gshTotalObjectCount++;
  if (stemSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for stem: " + stem.getName()); gshTotalChangeCount++;}
  stemSave = new StemSave(grouperSession).assignName("basis:org:130100").assignCreateParentStemsIfNotExist(true).assignDisplayName("basis:Organizations:130100 - Visionary Maximized Access");
  stem = stemSave.save();
  gshTotalObjectCount++;
  if (stemSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for stem: " + stem.getName()); gshTotalChangeCount++;}
  stemSave = new StemSave(grouperSession).assignName("basis:org:130200").assignCreateParentStemsIfNotExist(true).assignDisplayName("basis:Organizations:130200 - Open-Architected Clear-Thinking Infrastructure");
  stem = stemSave.save();
  gshTotalObjectCount++;
  if (stemSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for stem: " + stem.getName()); gshTotalChangeCount++;}
  stemSave = new StemSave(grouperSession).assignName("etc").assignCreateParentStemsIfNotExist(true).assignDisplayName("etc");
  stem = stemSave.save();
  gshTotalObjectCount++;
  if (stemSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for stem: " + stem.getName()); gshTotalChangeCount++;}
  stemSave = new StemSave(grouperSession).assignName("etc:attribute").assignCreateParentStemsIfNotExist(true).assignDisplayName("etc:attribute");
  stem = stemSave.save();
  gshTotalObjectCount++;
  if (stemSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for stem: " + stem.getName()); gshTotalChangeCount++;}
  stemSave = new StemSave(grouperSession).assignName("etc:attribute:attestation").assignCreateParentStemsIfNotExist(true).assignDescription("folder for built in Grouper attestation attributes").assignDisplayName("etc:attribute:attestation");
  stem = stemSave.save();
  gshTotalObjectCount++;
  if (stemSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for stem: " + stem.getName()); gshTotalChangeCount++;}
  stemSave = new StemSave(grouperSession).assignName("etc:attribute:attrExternalSubjectInvite").assignCreateParentStemsIfNotExist(true).assignDescription("folder for built in external subject invite attributes, and holds the data via attributes for invites.  Dont delete this folder").assignDisplayName("etc:attribute:attrExternalSubjectInvite");
  stem = stemSave.save();
  gshTotalObjectCount++;
  if (stemSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for stem: " + stem.getName()); gshTotalChangeCount++;}
  stemSave = new StemSave(grouperSession).assignName("etc:attribute:attrLoader").assignCreateParentStemsIfNotExist(true).assignDescription("folder for built in Grouper loader attributes").assignDisplayName("etc:attribute:attrLoader");
  stem = stemSave.save();
  gshTotalObjectCount++;
  if (stemSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for stem: " + stem.getName()); gshTotalChangeCount++;}
  stemSave = new StemSave(grouperSession).assignName("etc:attribute:entities").assignCreateParentStemsIfNotExist(true).assignDescription("folder for built in Grouper entities attributes").assignDisplayName("etc:attribute:entities");
  stem = stemSave.save();
  gshTotalObjectCount++;
  if (stemSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for stem: " + stem.getName()); gshTotalChangeCount++;}
  stemSave = new StemSave(grouperSession).assignName("etc:attribute:hooks").assignCreateParentStemsIfNotExist(true).assignDescription("folder for hooks settings").assignDisplayName("etc:attribute:hooks");
  stem = stemSave.save();
  gshTotalObjectCount++;
  if (stemSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for stem: " + stem.getName()); gshTotalChangeCount++;}
  stemSave = new StemSave(grouperSession).assignName("etc:attribute:instrumentationData").assignCreateParentStemsIfNotExist(true).assignDescription("folder for built in Grouper instrumentation data attributes").assignDisplayName("etc:attribute:instrumentationData");
  stem = stemSave.save();
  gshTotalObjectCount++;
  if (stemSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for stem: " + stem.getName()); gshTotalChangeCount++;}
  stemSave = new StemSave(grouperSession).assignName("etc:attribute:instrumentationData:instrumentationDataCollectors").assignCreateParentStemsIfNotExist(true).assignDescription("folder for Grouper collectors").assignDisplayName("etc:attribute:instrumentationData:instrumentationDataCollectors");
  stem = stemSave.save();
  gshTotalObjectCount++;
  if (stemSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for stem: " + stem.getName()); gshTotalChangeCount++;}
  stemSave = new StemSave(grouperSession).assignName("etc:attribute:instrumentationData:instrumentationDataInstances").assignCreateParentStemsIfNotExist(true).assignDescription("folder for Grouper instances").assignDisplayName("etc:attribute:instrumentationData:instrumentationDataInstances");
  stem = stemSave.save();
  gshTotalObjectCount++;
  if (stemSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for stem: " + stem.getName()); gshTotalChangeCount++;}
  stemSave = new StemSave(grouperSession).assignName("etc:attribute:loaderLdap").assignCreateParentStemsIfNotExist(true).assignDescription("folder for built in Grouper loader ldap attributes").assignDisplayName("etc:attribute:loaderLdap");
  stem = stemSave.save();
  gshTotalObjectCount++;
  if (stemSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for stem: " + stem.getName()); gshTotalChangeCount++;}
  stemSave = new StemSave(grouperSession).assignName("etc:attribute:loaderMetadata").assignCreateParentStemsIfNotExist(true).assignDescription("folder for built in Grouper Loader Metadata attributes").assignDisplayName("etc:attribute:loaderMetadata");
  stem = stemSave.save();
  gshTotalObjectCount++;
  if (stemSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for stem: " + stem.getName()); gshTotalChangeCount++;}
  stemSave = new StemSave(grouperSession).assignName("etc:attribute:messages").assignCreateParentStemsIfNotExist(true).assignDescription("folder for message queues and topics, topic to queue relationships and permissions").assignDisplayName("etc:attribute:messages");
  stem = stemSave.save();
  gshTotalObjectCount++;
  if (stemSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for stem: " + stem.getName()); gshTotalChangeCount++;}
  stemSave = new StemSave(grouperSession).assignName("etc:attribute:messages:grouperMessageQueues").assignCreateParentStemsIfNotExist(true).assignDescription("folder for message queues, add a permission here for a queue, implied queues by the topic").assignDisplayName("etc:attribute:messages:grouperMessageQueues");
  stem = stemSave.save();
  gshTotalObjectCount++;
  if (stemSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for stem: " + stem.getName()); gshTotalChangeCount++;}
  stemSave = new StemSave(grouperSession).assignName("etc:attribute:messages:grouperMessageTopics").assignCreateParentStemsIfNotExist(true).assignDescription("folder for message topics, add a permission here for a topic, imply queues by the topic").assignDisplayName("etc:attribute:messages:grouperMessageTopics");
  stem = stemSave.save();
  gshTotalObjectCount++;
  if (stemSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for stem: " + stem.getName()); gshTotalChangeCount++;}
  stemSave = new StemSave(grouperSession).assignName("etc:attribute:permissionLimits").assignCreateParentStemsIfNotExist(true).assignDescription("folder for built in Grouper permission limits").assignDisplayName("etc:attribute:permissionLimits");
  stem = stemSave.save();
  gshTotalObjectCount++;
  if (stemSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for stem: " + stem.getName()); gshTotalChangeCount++;}
  stemSave = new StemSave(grouperSession).assignName("etc:attribute:rules").assignCreateParentStemsIfNotExist(true).assignDescription("folder for built in Grouper rules attributes").assignDisplayName("etc:attribute:rules");
  stem = stemSave.save();
  gshTotalObjectCount++;
  if (stemSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for stem: " + stem.getName()); gshTotalChangeCount++;}
  stemSave = new StemSave(grouperSession).assignName("etc:attribute:userData").assignCreateParentStemsIfNotExist(true).assignDescription("folder for built in Grouper user data attributes").assignDisplayName("etc:attribute:userData");
  stem = stemSave.save();
  gshTotalObjectCount++;
  if (stemSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for stem: " + stem.getName()); gshTotalChangeCount++;}
  stemSave = new StemSave(grouperSession).assignName("etc:deprovisioning").assignCreateParentStemsIfNotExist(true).assignDescription("folder for built in Grouper deprovisioning objects").assignDisplayName("etc:deprovisioning");
  stem = stemSave.save();
  gshTotalObjectCount++;
  if (stemSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for stem: " + stem.getName()); gshTotalChangeCount++;}
  stemSave = new StemSave(grouperSession).assignName("etc:grouperUi").assignCreateParentStemsIfNotExist(true).assignDisplayName("etc:grouperUi");
  stem = stemSave.save();
  gshTotalObjectCount++;
  if (stemSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for stem: " + stem.getName()); gshTotalChangeCount++;}
  stemSave = new StemSave(grouperSession).assignName("etc:legacy").assignCreateParentStemsIfNotExist(true).assignDisplayName("etc:legacy");
  stem = stemSave.save();
  gshTotalObjectCount++;
  if (stemSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for stem: " + stem.getName()); gshTotalChangeCount++;}
  stemSave = new StemSave(grouperSession).assignName("etc:legacy:attribute").assignCreateParentStemsIfNotExist(true).assignDescription("Folder for legacy attributes.  Do not delete.").assignDisplayName("etc:legacy:attribute");
  stem = stemSave.save();
  gshTotalObjectCount++;
  if (stemSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for stem: " + stem.getName()); gshTotalChangeCount++;}
  stemSave = new StemSave(grouperSession).assignName("etc:loader").assignCreateParentStemsIfNotExist(true).assignDisplayName("etc:loader");
  stem = stemSave.save();
  gshTotalObjectCount++;
  if (stemSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for stem: " + stem.getName()); gshTotalChangeCount++;}
  stemSave = new StemSave(grouperSession).assignName("etc:loader:basis").assignCreateParentStemsIfNotExist(true).assignDisplayName("etc:loader:basis");
  stem = stemSave.save();
  gshTotalObjectCount++;
  if (stemSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for stem: " + stem.getName()); gshTotalChangeCount++;}
  stemSave = new StemSave(grouperSession).assignName("etc:loader:ref").assignCreateParentStemsIfNotExist(true).assignDisplayName("etc:loader:ref");
  stem = stemSave.save();
  gshTotalObjectCount++;
  if (stemSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for stem: " + stem.getName()); gshTotalChangeCount++;}
  stemSave = new StemSave(grouperSession).assignName("etc:objectTypes").assignCreateParentStemsIfNotExist(true).assignDescription("folder for built in Grouper types objects").assignDisplayName("etc:objectTypes");
  stem = stemSave.save();
  gshTotalObjectCount++;
  if (stemSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for stem: " + stem.getName()); gshTotalChangeCount++;}
  stemSave = new StemSave(grouperSession).assignName("etc:pspng").assignCreateParentStemsIfNotExist(true).assignDescription("Location for pspng-management objects.").assignDisplayName("etc:pspng");
  stem = stemSave.save();
  gshTotalObjectCount++;
  if (stemSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for stem: " + stem.getName()); gshTotalChangeCount++;}
  stemSave = new StemSave(grouperSession).assignName("ref").assignCreateParentStemsIfNotExist(true).assignDisplayName("Reference");
  stem = stemSave.save();
  gshTotalObjectCount++;
  if (stemSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for stem: " + stem.getName()); gshTotalChangeCount++;}
  stemSave = new StemSave(grouperSession).assignName("ref:job").assignCreateParentStemsIfNotExist(true).assignDisplayName("Reference:Jobs");
  stem = stemSave.save();
  gshTotalObjectCount++;
  if (stemSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for stem: " + stem.getName()); gshTotalChangeCount++;}
  stemSave = new StemSave(grouperSession).assignName("ref:job:by-category").assignCreateParentStemsIfNotExist(true).assignDisplayName("Reference:Jobs:By Category");
  stem = stemSave.save();
  gshTotalObjectCount++;
  if (stemSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for stem: " + stem.getName()); gshTotalChangeCount++;}
  stemSave = new StemSave(grouperSession).assignName("ref:job:by-role").assignCreateParentStemsIfNotExist(true).assignDisplayName("Reference:Jobs:By Role");
  stem = stemSave.save();
  gshTotalObjectCount++;
  if (stemSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for stem: " + stem.getName()); gshTotalChangeCount++;}
  System.out.println(new Date().toString() + " Done with folders, objects: " + gshTotalObjectCount + ", expected approx total: 2,300, changes: " + gshTotalChangeCount + ", known errors (view output for full list): " + gshTotalErrorCount);
  GroupSave groupSave = null;
  Group group = null;
  groupSave = new GroupSave(grouperSession).assignName("app:its:cttoday:etc:readers").assignCreateParentStemsIfNotExist(true).assignDisplayName("Applications:ITS:Citizen Throw Today:etc:Citizen Throw Today Readers").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("app:its:cttoday:etc:updaters").assignCreateParentStemsIfNotExist(true).assignDisplayName("Applications:ITS:Citizen Throw Today:etc:Citizen Throw Today Updaters").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("app:its:cttoday:sources").assignCreateParentStemsIfNotExist(true).assignDisplayName("Applications:ITS:Citizen Throw Today:Citizen Throw Today Sources").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("app:its:lbsimply:authorized").assignCreateParentStemsIfNotExist(true).assignDisplayName("Applications:ITS:Lot Buy Simply:Lot Buy Simply Authorized").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("app:its:lbsimply:deny").assignCreateParentStemsIfNotExist(true).assignDisplayName("Applications:ITS:Lot Buy Simply:Lot Buy Simply Deny").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("app:its:lbsimply:etc:readers").assignCreateParentStemsIfNotExist(true).assignDisplayName("Applications:ITS:Lot Buy Simply:etc:Lot Buy Simply Readers").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("app:its:lbsimply:etc:updaters").assignCreateParentStemsIfNotExist(true).assignDisplayName("Applications:ITS:Lot Buy Simply:etc:Lot Buy Simply Updaters").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("app:its:lbsimply:sources").assignCreateParentStemsIfNotExist(true).assignDisplayName("Applications:ITS:Lot Buy Simply:Lot Buy Simply Sources").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("app:its:nistaff:etc:readers").assignCreateParentStemsIfNotExist(true).assignDisplayName("Applications:ITS:National Including Staff:etc:National Including Staff Readers").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("app:its:nistaff:etc:updaters").assignCreateParentStemsIfNotExist(true).assignDisplayName("Applications:ITS:National Including Staff:etc:National Including Staff Updaters").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("app:its:nistaff:sources").assignCreateParentStemsIfNotExist(true).assignDisplayName("Applications:ITS:National Including Staff:National Including Staff Sources").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("app:its:nsreturn:etc:readers").assignCreateParentStemsIfNotExist(true).assignDisplayName("Applications:ITS:Next Student Return:etc:Next Student Return Readers").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("app:its:nsreturn:etc:updaters").assignCreateParentStemsIfNotExist(true).assignDisplayName("Applications:ITS:Next Student Return:etc:Next Student Return Updaters").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("app:its:nsreturn:filter").assignCreateParentStemsIfNotExist(true).assignDisplayName("Applications:ITS:Next Student Return:Next Student Return Filter").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("app:its:nsreturn:Next Student Return Authorized").assignCreateParentStemsIfNotExist(true).assignDisplayName("Applications:ITS:Next Student Return:Next Student Return Authorized").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("app:its:nsreturn:sources").assignCreateParentStemsIfNotExist(true).assignDisplayName("Applications:ITS:Next Student Return:Next Student Return Sources").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("app:its:pcavoid:etc:readers").assignCreateParentStemsIfNotExist(true).assignDisplayName("Applications:ITS:Performance Clearly Avoid:etc:Performance Clearly Avoid Readers").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("app:its:pcavoid:etc:updaters").assignCreateParentStemsIfNotExist(true).assignDisplayName("Applications:ITS:Performance Clearly Avoid:etc:Performance Clearly Avoid Updaters").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("app:its:pcavoid:sources").assignCreateParentStemsIfNotExist(true).assignDisplayName("Applications:ITS:Performance Clearly Avoid:Performance Clearly Avoid Sources").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:dept:100000:affiliate").assignCreateParentStemsIfNotExist(true).assignDescription("Affiliate - Decentralized Holistic Ability auto-created by grouperLoader").assignDisplayName("basis:dept:100000 - Decentralized Holistic Ability:Affiliate - Decentralized Holistic Ability").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:dept:100000:contractor").assignCreateParentStemsIfNotExist(true).assignDescription("Contractor - Decentralized Holistic Ability auto-created by grouperLoader").assignDisplayName("basis:dept:100000 - Decentralized Holistic Ability:Contractor - Decentralized Holistic Ability").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:dept:100000:staff").assignCreateParentStemsIfNotExist(true).assignDescription("Staff - Decentralized Holistic Ability auto-created by grouperLoader").assignDisplayName("basis:dept:100000 - Decentralized Holistic Ability:Staff - Decentralized Holistic Ability").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:dept:110000:affiliate").assignCreateParentStemsIfNotExist(true).assignDescription("Affiliate - Streamlined Composite Neural-Net auto-created by grouperLoader").assignDisplayName("basis:dept:110000:Affiliate - Streamlined Composite Neural-Net").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:dept:110000:staff").assignCreateParentStemsIfNotExist(true).assignDescription("Staff - Streamlined Composite Neural-Net auto-created by grouperLoader").assignDisplayName("basis:dept:110000:Staff - Streamlined Composite Neural-Net").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:dept:110000:student_worker").assignCreateParentStemsIfNotExist(true).assignDescription("Student Worker - Streamlined Composite Neural-Net auto-created by grouperLoader").assignDisplayName("basis:dept:110000:Student Worker - Streamlined Composite Neural-Net").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:dept:110100:affiliate").assignCreateParentStemsIfNotExist(true).assignDescription("Affiliate - Adaptive Asymmetric Solution auto-created by grouperLoader").assignDisplayName("basis:dept:110100:Affiliate - Adaptive Asymmetric Solution").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:dept:110100:staff").assignCreateParentStemsIfNotExist(true).assignDescription("Staff - Adaptive Asymmetric Solution auto-created by grouperLoader").assignDisplayName("basis:dept:110100:Staff - Adaptive Asymmetric Solution").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:dept:110101:contractor").assignCreateParentStemsIfNotExist(true).assignDescription("Contractor - AAS - Innovative Radical Success auto-created by grouperLoader").assignDisplayName("basis:dept:110101:Contractor - AAS - Innovative Radical Success").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:dept:110101:staff").assignCreateParentStemsIfNotExist(true).assignDescription("Staff - AAS - Innovative Radical Success auto-created by grouperLoader").assignDisplayName("basis:dept:110101:Staff - AAS - Innovative Radical Success").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:dept:110102:contractor").assignCreateParentStemsIfNotExist(true).assignDescription("Contractor - AAS - Ergonomic Hybrid Open System auto-created by grouperLoader").assignDisplayName("basis:dept:110102:Contractor - AAS - Ergonomic Hybrid Open System").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:dept:110102:staff").assignCreateParentStemsIfNotExist(true).assignDescription("Staff - AAS - Ergonomic Hybrid Open System auto-created by grouperLoader").assignDisplayName("basis:dept:110102:Staff - AAS - Ergonomic Hybrid Open System").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:dept:110103:faculty").assignCreateParentStemsIfNotExist(true).assignDescription("Faculty - AAS - Inverse System-Worthy Superstructure auto-created by grouperLoader").assignDisplayName("basis:dept:110103:Faculty - AAS - Inverse System-Worthy Superstructure").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:dept:110103:staff").assignCreateParentStemsIfNotExist(true).assignDescription("Staff - AAS - Inverse System-Worthy Superstructure auto-created by grouperLoader").assignDisplayName("basis:dept:110103:Staff - AAS - Inverse System-Worthy Superstructure").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:dept:110200:affiliate").assignCreateParentStemsIfNotExist(true).assignDescription("Affiliate - Profit-Focused Reciprocal Firmware auto-created by grouperLoader").assignDisplayName("basis:dept:110200:Affiliate - Profit-Focused Reciprocal Firmware").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:dept:110200:faculty").assignCreateParentStemsIfNotExist(true).assignDescription("Faculty - Profit-Focused Reciprocal Firmware auto-created by grouperLoader").assignDisplayName("basis:dept:110200:Faculty - Profit-Focused Reciprocal Firmware").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:dept:110200:staff").assignCreateParentStemsIfNotExist(true).assignDescription("Staff - Profit-Focused Reciprocal Firmware auto-created by grouperLoader").assignDisplayName("basis:dept:110200:Staff - Profit-Focused Reciprocal Firmware").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:dept:110201:faculty").assignCreateParentStemsIfNotExist(true).assignDescription("Faculty - PRF - Multi-Tiered Intangible Software auto-created by grouperLoader").assignDisplayName("basis:dept:110201:Faculty - PRF - Multi-Tiered Intangible Software").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:dept:110201:staff").assignCreateParentStemsIfNotExist(true).assignDescription("Staff - PRF - Multi-Tiered Intangible Software auto-created by grouperLoader").assignDisplayName("basis:dept:110201:Staff - PRF - Multi-Tiered Intangible Software").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:dept:110202:affiliate").assignCreateParentStemsIfNotExist(true).assignDescription("Affiliate - PRF - Integrated Motivating Frame auto-created by grouperLoader").assignDisplayName("basis:dept:110202:Affiliate - PRF - Integrated Motivating Frame").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:dept:110202:faculty").assignCreateParentStemsIfNotExist(true).assignDescription("Faculty - PRF - Integrated \"test' Motivating Frame auto-created by grouperLoader <").assignDisplayName("basis:dept:110202:Faculty - PRF - Integrated \"test' <Motivating Frame").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:dept:110202:staff").assignCreateParentStemsIfNotExist(true).assignDescription("Staff - PRF - Integrated Motivating Frame auto-created by grouperLoader").assignDisplayName("basis:dept:110202:Staff - PRF - Integrated Motivating Frame").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:dept:110203:contractor").assignCreateParentStemsIfNotExist(true).assignDescription("Contractor - PRF - Fully-Configurable Even-Keeled Throughput auto-created by grouperLoader").assignDisplayName("basis:dept:110203:Contractor - PRF - Fully-Configurable Even-Keeled Throughput").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:dept:110203:staff").assignCreateParentStemsIfNotExist(true).assignDescription("Staff - PRF - Fully-Configurable Even-Keeled Throughput auto-created by grouperLoader").assignDisplayName("basis:dept:110203:Staff - PRF - Fully-Configurable Even-Keeled Throughput").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:dept:120000:staff").assignCreateParentStemsIfNotExist(true).assignDescription("Staff - Sharable Asynchronous Local Area Network auto-created by grouperLoader").assignDisplayName("basis:dept:120000:Staff - Sharable Asynchronous Local Area Network").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:dept:120000:student_worker").assignCreateParentStemsIfNotExist(true).assignDescription("Student Worker - Sharable Asynchronous Local Area Network auto-created by grouperLoader").assignDisplayName("basis:dept:120000:Student Worker - Sharable Asynchronous Local Area Network").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:dept:120100:contractor").assignCreateParentStemsIfNotExist(true).assignDescription("Contractor - Integrated Empowering Interface auto-created by grouperLoader").assignDisplayName("basis:dept:120100:Contractor - Integrated Empowering Interface").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:dept:120100:faculty").assignCreateParentStemsIfNotExist(true).assignDescription("Faculty - Integrated Empowering Interface auto-created by grouperLoader").assignDisplayName("basis:dept:120100:Faculty - Integrated Empowering Interface").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:dept:120100:staff").assignCreateParentStemsIfNotExist(true).assignDescription("Staff - Integrated Empowering Interface auto-created by grouperLoader").assignDisplayName("basis:dept:120100:Staff - Integrated Empowering Interface").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:dept:120101:faculty").assignCreateParentStemsIfNotExist(true).assignDescription("Faculty - IEI - Polarized 24/7 Capacity auto-created by grouperLoader").assignDisplayName("basis:dept:120101:Faculty - IEI - Polarized 24/7 Capacity").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:dept:120101:staff").assignCreateParentStemsIfNotExist(true).assignDescription("Staff - IEI - Polarized 24/7 Capacity auto-created by grouperLoader").assignDisplayName("basis:dept:120101:Staff - IEI - Polarized 24/7 Capacity").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:dept:120102:faculty").assignCreateParentStemsIfNotExist(true).assignDescription("Faculty - IEI - Managed Radical Artificial Intelligence auto-created by grouperLoader").assignDisplayName("basis:dept:120102:Faculty - IEI - Managed Radical Artificial Intelligence").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:dept:120102:staff").assignCreateParentStemsIfNotExist(true).assignDescription("Staff - IEI - Managed Radical Artificial Intelligence auto-created by grouperLoader").assignDisplayName("basis:dept:120102:Staff - IEI - Managed Radical Artificial Intelligence").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:dept:120103:faculty").assignCreateParentStemsIfNotExist(true).assignDescription("Faculty - IEI - Centralized Cohesive Approach auto-created by grouperLoader").assignDisplayName("basis:dept:120103:Faculty - IEI - Centralized Cohesive Approach").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:dept:120103:staff").assignCreateParentStemsIfNotExist(true).assignDescription("Staff - IEI - Centralized Cohesive Approach auto-created by grouperLoader").assignDisplayName("basis:dept:120103:Staff - IEI - Centralized Cohesive Approach").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:dept:120103:student_worker").assignCreateParentStemsIfNotExist(true).assignDescription("Student Worker - IEI - Centralized Cohesive Approach auto-created by grouperLoader").assignDisplayName("basis:dept:120103:Student Worker - IEI - Centralized Cohesive Approach").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:dept:120200:contractor").assignCreateParentStemsIfNotExist(true).assignDescription("Contractor - Grass-Roots Client-Server Support auto-created by grouperLoader").assignDisplayName("basis:dept:120200:Contractor - Grass-Roots Client-Server Support").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:dept:120200:faculty").assignCreateParentStemsIfNotExist(true).assignDescription("Faculty - Grass-Roots Client-Server Support auto-created by grouperLoader").assignDisplayName("basis:dept:120200:Faculty - Grass-Roots Client-Server Support").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:dept:120200:staff").assignCreateParentStemsIfNotExist(true).assignDescription("Staff - Grass-Roots Client-Server Support auto-created by grouperLoader").assignDisplayName("basis:dept:120200:Staff - Grass-Roots Client-Server Support").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:dept:120201:affiliate").assignCreateParentStemsIfNotExist(true).assignDescription("Affiliate - GCS - Vision-Oriented Attitude-Oriented Info-Mediaries auto-created by grouperLoader").assignDisplayName("basis:dept:120201:Affiliate - GCS - Vision-Oriented Attitude-Oriented Info-Mediaries").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:dept:120201:faculty").assignCreateParentStemsIfNotExist(true).assignDescription("Faculty - GCS - Vision-Oriented Attitude-Oriented Info-Mediaries auto-created by grouperLoader").assignDisplayName("basis:dept:120201:Faculty - GCS - Vision-Oriented Attitude-Oriented Info-Mediaries").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:dept:120201:staff").assignCreateParentStemsIfNotExist(true).assignDescription("Staff - GCS - Vision-Oriented Attitude-Oriented Info-Mediaries auto-created by grouperLoader").assignDisplayName("basis:dept:120201:Staff - GCS - Vision-Oriented Attitude-Oriented Info-Mediaries").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:dept:120201:student_worker").assignCreateParentStemsIfNotExist(true).assignDescription("Student Worker - GCS - Vision-Oriented Attitude-Oriented Info-Mediaries auto-created by grouperLoader").assignDisplayName("basis:dept:120201:Student Worker - GCS - Vision-Oriented Attitude-Oriented Info-Mediaries").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:dept:120202:contractor").assignCreateParentStemsIfNotExist(true).assignDescription("Contractor - GCS - Object-Based Human-Resource Frame auto-created by grouperLoader").assignDisplayName("basis:dept:120202:Contractor - GCS - Object-Based Human-Resource Frame").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:dept:120202:faculty").assignCreateParentStemsIfNotExist(true).assignDescription("Faculty - GCS - Object-Based Human-Resource Frame auto-created by grouperLoader").assignDisplayName("basis:dept:120202:Faculty - GCS - Object-Based Human-Resource Frame").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:dept:120202:staff").assignCreateParentStemsIfNotExist(true).assignDescription("Staff - GCS - Object-Based Human-Resource Frame auto-created by grouperLoader").assignDisplayName("basis:dept:120202:Staff - GCS - Object-Based Human-Resource Frame").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:dept:120203:contractor").assignCreateParentStemsIfNotExist(true).assignDescription("Contractor - GCS - Centralized Value-Added Access auto-created by grouperLoader").assignDisplayName("basis:dept:120203:Contractor - GCS - Centralized Value-Added Access").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:dept:120203:staff").assignCreateParentStemsIfNotExist(true).assignDescription("Staff - GCS - Centralized Value-Added Access auto-created by grouperLoader").assignDisplayName("basis:dept:120203:Staff - GCS - Centralized Value-Added Access").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:dept:130000:contractor").assignCreateParentStemsIfNotExist(true).assignDescription("Contractor - Reduced Incremental Firmware auto-created by grouperLoader").assignDisplayName("basis:dept:130000:Contractor - Reduced Incremental Firmware").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:dept:130000:staff").assignCreateParentStemsIfNotExist(true).assignDescription("Staff - Reduced Incremental Firmware auto-created by grouperLoader").assignDisplayName("basis:dept:130000:Staff - Reduced Incremental Firmware").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:dept:130100:contractor").assignCreateParentStemsIfNotExist(true).assignDescription("Contractor - Visionary Maximized Access auto-created by grouperLoader").assignDisplayName("basis:dept:130100:Contractor - Visionary Maximized Access").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:dept:130100:faculty").assignCreateParentStemsIfNotExist(true).assignDescription("Faculty - Visionary Maximized Access auto-created by grouperLoader").assignDisplayName("basis:dept:130100:Faculty - Visionary Maximized Access").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:dept:130100:staff").assignCreateParentStemsIfNotExist(true).assignDescription("Staff - Visionary Maximized Access auto-created by grouperLoader").assignDisplayName("basis:dept:130100:Staff - Visionary Maximized Access").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:dept:130101:affiliate").assignCreateParentStemsIfNotExist(true).assignDescription("Affiliate - VMA - Inverse Incremental Hardware auto-created by grouperLoader").assignDisplayName("basis:dept:130101:Affiliate - VMA - Inverse Incremental Hardware").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:dept:130101:staff").assignCreateParentStemsIfNotExist(true).assignDescription("Staff - VMA - Inverse Incremental Hardware auto-created by grouperLoader").assignDisplayName("basis:dept:130101:Staff - VMA - Inverse Incremental Hardware").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:dept:130101:student_worker").assignCreateParentStemsIfNotExist(true).assignDescription("Student Worker - VMA - Inverse Incremental Hardware auto-created by grouperLoader").assignDisplayName("basis:dept:130101:Student Worker - VMA - Inverse Incremental Hardware").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:dept:130102:staff").assignCreateParentStemsIfNotExist(true).assignDescription("Staff - VMA - Polarized Homogeneous Task-Force auto-created by grouperLoader").assignDisplayName("basis:dept:130102:Staff - VMA - Polarized Homogeneous Task-Force").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:dept:130103:contractor").assignCreateParentStemsIfNotExist(true).assignDescription("Contractor - VMA - Digitized Logistical Alliance auto-created by grouperLoader").assignDisplayName("basis:dept:130103:Contractor - VMA - Digitized Logistical Alliance").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:dept:130103:faculty").assignCreateParentStemsIfNotExist(true).assignDescription("Faculty - VMA - Digitized Logistical Alliance auto-created by grouperLoader").assignDisplayName("basis:dept:130103:Faculty - VMA - Digitized Logistical Alliance").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:dept:130103:staff").assignCreateParentStemsIfNotExist(true).assignDescription("Staff - VMA - Digitized Logistical Alliance auto-created by grouperLoader").assignDisplayName("basis:dept:130103:Staff - VMA - Digitized Logistical Alliance").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:dept:130200:affiliate").assignCreateParentStemsIfNotExist(true).assignDescription("Affiliate - Open-Architected Clear-Thinking Infrastructure auto-created by grouperLoader").assignDisplayName("basis:dept:130200:Affiliate - Open-Architected Clear-Thinking Infrastructure").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:dept:130200:contractor").assignCreateParentStemsIfNotExist(true).assignDescription("Contractor - Open-Architected Clear-Thinking Infrastructure auto-created by grouperLoader").assignDisplayName("basis:dept:130200:Contractor - Open-Architected Clear-Thinking Infrastructure").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:dept:130200:faculty").assignCreateParentStemsIfNotExist(true).assignDescription("Faculty - Open-Architected Clear-Thinking Infrastructure auto-created by grouperLoader").assignDisplayName("basis:dept:130200:Faculty - Open-Architected Clear-Thinking Infrastructure").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:dept:130200:staff").assignCreateParentStemsIfNotExist(true).assignDescription("Staff - Open-Architected Clear-Thinking Infrastructure auto-created by grouperLoader").assignDisplayName("basis:dept:130200:Staff - Open-Architected Clear-Thinking Infrastructure").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:dept:130201:affiliate").assignCreateParentStemsIfNotExist(true).assignDescription("Affiliate - OCI - Expanded 3Rdgeneration Open Architecture auto-created by grouperLoader").assignDisplayName("basis:dept:130201:Affiliate - OCI - Expanded 3Rdgeneration Open Architecture").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:dept:130201:staff").assignCreateParentStemsIfNotExist(true).assignDescription("Staff - OCI - Expanded 3Rdgeneration Open Architecture auto-created by grouperLoader").assignDisplayName("basis:dept:130201:Staff - OCI - Expanded 3Rdgeneration Open Architecture").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:dept:130201:student_worker").assignCreateParentStemsIfNotExist(true).assignDescription("Student Worker - OCI - Expanded 3Rdgeneration Open Architecture auto-created by grouperLoader").assignDisplayName("basis:dept:130201:Student Worker - OCI - Expanded 3Rdgeneration Open Architecture").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:dept:130202:affiliate").assignCreateParentStemsIfNotExist(true).assignDescription("Affiliate - OCI - Integrated Multimedia Model auto-created by grouperLoader").assignDisplayName("basis:dept:130202:Affiliate - OCI - Integrated Multimedia Model").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:dept:130202:faculty").assignCreateParentStemsIfNotExist(true).assignDescription("Faculty - OCI - Integrated Multimedia Model auto-created by grouperLoader").assignDisplayName("basis:dept:130202:Faculty - OCI - Integrated Multimedia Model").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:dept:130202:staff").assignCreateParentStemsIfNotExist(true).assignDescription("Staff - OCI - Integrated Multimedia Model auto-created by grouperLoader").assignDisplayName("basis:dept:130202:Staff - OCI - Integrated Multimedia Model").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:dept:130203:affiliate").assignCreateParentStemsIfNotExist(true).assignDescription("Affiliate - OCI - Automated National Database auto-created by grouperLoader").assignDisplayName("basis:dept:130203:Affiliate - OCI - Automated National Database").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:dept:130203:contractor").assignCreateParentStemsIfNotExist(true).assignDescription("Contractor - OCI - Automated National Database auto-created by grouperLoader").assignDisplayName("basis:dept:130203:Contractor - OCI - Automated National Database").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:dept:130203:staff").assignCreateParentStemsIfNotExist(true).assignDescription("Staff - OCI - Automated National Database auto-created by grouperLoader").assignDisplayName("basis:dept:130203:Staff - OCI - Automated National Database").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:org:100000:affiliate").assignCreateParentStemsIfNotExist(true).assignDescription("Affiliate auto-created by grouperLoader").assignDisplayName("basis:Organizations:100000 - Decentralized Holistic Ability:Affiliate").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:org:100000:contractor").assignCreateParentStemsIfNotExist(true).assignDescription("Contractor auto-created by grouperLoader").assignDisplayName("basis:Organizations:100000 - Decentralized Holistic Ability:Contractor").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:org:100000:employee").assignCreateParentStemsIfNotExist(true).assignDescription("Employee auto-created by grouperLoader").assignDisplayName("basis:Organizations:100000 - Decentralized Holistic Ability:Employee").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:org:100000:staff").assignCreateParentStemsIfNotExist(true).assignDescription("Staff auto-created by grouperLoader").assignDisplayName("basis:Organizations:100000 - Decentralized Holistic Ability:Staff").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:org:110000:affiliate").assignCreateParentStemsIfNotExist(true).assignDescription("Affiliate auto-created by grouperLoader").assignDisplayName("basis:Organizations:110000 - Streamlined Composite Neural-Net:Affiliate").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:org:110000:employee").assignCreateParentStemsIfNotExist(true).assignDescription("Employee auto-created by grouperLoader").assignDisplayName("basis:Organizations:110000 - Streamlined Composite Neural-Net:Employee").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:org:110000:staff").assignCreateParentStemsIfNotExist(true).assignDescription("Staff auto-created by grouperLoader").assignDisplayName("basis:Organizations:110000 - Streamlined Composite Neural-Net:Staff").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:org:110000:student_worker").assignCreateParentStemsIfNotExist(true).assignDescription("Student Worker auto-created by grouperLoader").assignDisplayName("basis:Organizations:110000 - Streamlined Composite Neural-Net:Student Worker").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:org:110100:affiliate").assignCreateParentStemsIfNotExist(true).assignDescription("Affiliate auto-created by grouperLoader").assignDisplayName("basis:Organizations:110100 - Adaptive Asymmetric Solution:Affiliate").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:org:110100:contractor").assignCreateParentStemsIfNotExist(true).assignDescription("Contractor auto-created by grouperLoader").assignDisplayName("basis:Organizations:110100 - Adaptive Asymmetric Solution:Contractor").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:org:110100:employee").assignCreateParentStemsIfNotExist(true).assignDescription("Employee auto-created by grouperLoader").assignDisplayName("basis:Organizations:110100 - Adaptive Asymmetric Solution:Employee").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:org:110100:faculty").assignCreateParentStemsIfNotExist(true).assignDescription("Faculty auto-created by grouperLoader").assignDisplayName("basis:Organizations:110100 - Adaptive Asymmetric Solution:Faculty").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:org:110100:staff").assignCreateParentStemsIfNotExist(true).assignDescription("Staff auto-created by grouperLoader").assignDisplayName("basis:Organizations:110100 - Adaptive Asymmetric Solution:Staff").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:org:110200:affiliate").assignCreateParentStemsIfNotExist(true).assignDescription("Affiliate auto-created by grouperLoader").assignDisplayName("basis:Organizations:110200 - Profit-Focused Reciprocal Firmware:Affiliate").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:org:110200:contractor").assignCreateParentStemsIfNotExist(true).assignDescription("Contractor auto-created by grouperLoader").assignDisplayName("basis:Organizations:110200 - Profit-Focused Reciprocal Firmware:Contractor").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:org:110200:employee").assignCreateParentStemsIfNotExist(true).assignDescription("Employee auto-created by grouperLoader").assignDisplayName("basis:Organizations:110200 - Profit-Focused Reciprocal Firmware:Employee").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:org:110200:faculty").assignCreateParentStemsIfNotExist(true).assignDescription("Faculty auto-created by grouperLoader").assignDisplayName("basis:Organizations:110200 - Profit-Focused Reciprocal Firmware:Faculty").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:org:110200:staff").assignCreateParentStemsIfNotExist(true).assignDescription("Staff auto-created by grouperLoader").assignDisplayName("basis:Organizations:110200 - Profit-Focused Reciprocal Firmware:Staff").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:org:120000:affiliate").assignCreateParentStemsIfNotExist(true).assignDescription("Affiliate auto-created by grouperLoader").assignDisplayName("basis:Organizations:120000 - Sharable Asynchronous Local Area Network:Affiliate").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:org:120000:employee").assignCreateParentStemsIfNotExist(true).assignDescription("Employee auto-created by grouperLoader").assignDisplayName("basis:Organizations:120000 - Sharable Asynchronous Local Area Network:Employee").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:org:120000:staff").assignCreateParentStemsIfNotExist(true).assignDescription("Staff auto-created by grouperLoader").assignDisplayName("basis:Organizations:120000 - Sharable Asynchronous Local Area Network:Staff").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:org:120000:student_worker").assignCreateParentStemsIfNotExist(true).assignDescription("Student Worker auto-created by grouperLoader").assignDisplayName("basis:Organizations:120000 - Sharable Asynchronous Local Area Network:Student Worker").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:org:120100:affiliate").assignCreateParentStemsIfNotExist(true).assignDescription("Affiliate auto-created by grouperLoader").assignDisplayName("basis:Organizations:120100 - Integrated Empowering Interface:Affiliate").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:org:120100:contractor").assignCreateParentStemsIfNotExist(true).assignDescription("Contractor auto-created by grouperLoader").assignDisplayName("basis:Organizations:120100 - Integrated Empowering Interface:Contractor").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:org:120100:employee").assignCreateParentStemsIfNotExist(true).assignDescription("Employee auto-created by grouperLoader").assignDisplayName("basis:Organizations:120100 - Integrated Empowering Interface:Employee").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:org:120100:faculty").assignCreateParentStemsIfNotExist(true).assignDescription("Faculty auto-created by grouperLoader").assignDisplayName("basis:Organizations:120100 - Integrated Empowering Interface:Faculty").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:org:120100:staff").assignCreateParentStemsIfNotExist(true).assignDescription("Staff auto-created by grouperLoader").assignDisplayName("basis:Organizations:120100 - Integrated Empowering Interface:Staff").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:org:120100:student_worker").assignCreateParentStemsIfNotExist(true).assignDescription("Student Worker auto-created by grouperLoader").assignDisplayName("basis:Organizations:120100 - Integrated Empowering Interface:Student Worker").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:org:120200:affiliate").assignCreateParentStemsIfNotExist(true).assignDescription("Affiliate auto-created by grouperLoader").assignDisplayName("basis:Organizations:120200 - Grass-Roots Client-Server Support:Affiliate").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:org:120200:contractor").assignCreateParentStemsIfNotExist(true).assignDescription("Contractor auto-created by grouperLoader").assignDisplayName("basis:Organizations:120200 - Grass-Roots Client-Server Support:Contractor").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:org:120200:employee").assignCreateParentStemsIfNotExist(true).assignDescription("Employee auto-created by grouperLoader").assignDisplayName("basis:Organizations:120200 - Grass-Roots Client-Server Support:Employee").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:org:120200:faculty").assignCreateParentStemsIfNotExist(true).assignDescription("Faculty auto-created by grouperLoader").assignDisplayName("basis:Organizations:120200 - Grass-Roots Client-Server Support:Faculty").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:org:120200:staff").assignCreateParentStemsIfNotExist(true).assignDescription("Staff auto-created by grouperLoader").assignDisplayName("basis:Organizations:120200 - Grass-Roots Client-Server Support:Staff").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:org:120200:student_worker").assignCreateParentStemsIfNotExist(true).assignDescription("Student Worker auto-created by grouperLoader").assignDisplayName("basis:Organizations:120200 - Grass-Roots Client-Server Support:Student Worker").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:org:130000:affiliate").assignCreateParentStemsIfNotExist(true).assignDescription("Affiliate auto-created by grouperLoader").assignDisplayName("basis:Organizations:130000 - Reduced Incremental Firmware:Affiliate").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:org:130000:contractor").assignCreateParentStemsIfNotExist(true).assignDescription("Contractor auto-created by grouperLoader").assignDisplayName("basis:Organizations:130000 - Reduced Incremental Firmware:Contractor").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:org:130000:employee").assignCreateParentStemsIfNotExist(true).assignDescription("Employee auto-created by grouperLoader").assignDisplayName("basis:Organizations:130000 - Reduced Incremental Firmware:Employee").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:org:130000:staff").assignCreateParentStemsIfNotExist(true).assignDescription("Staff auto-created by grouperLoader").assignDisplayName("basis:Organizations:130000 - Reduced Incremental Firmware:Staff").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:org:130100:affiliate").assignCreateParentStemsIfNotExist(true).assignDescription("Affiliate auto-created by grouperLoader").assignDisplayName("basis:Organizations:130100 - Visionary Maximized Access:Affiliate").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:org:130100:contractor").assignCreateParentStemsIfNotExist(true).assignDescription("Contractor auto-created by grouperLoader").assignDisplayName("basis:Organizations:130100 - Visionary Maximized Access:Contractor").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:org:130100:employee").assignCreateParentStemsIfNotExist(true).assignDescription("Employee auto-created by grouperLoader").assignDisplayName("basis:Organizations:130100 - Visionary Maximized Access:Employee").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:org:130100:faculty").assignCreateParentStemsIfNotExist(true).assignDescription("Faculty auto-created by grouperLoader").assignDisplayName("basis:Organizations:130100 - Visionary Maximized Access:Faculty").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:org:130100:staff").assignCreateParentStemsIfNotExist(true).assignDescription("Staff auto-created by grouperLoader").assignDisplayName("basis:Organizations:130100 - Visionary Maximized Access:Staff").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:org:130100:student_worker").assignCreateParentStemsIfNotExist(true).assignDescription("Student Worker auto-created by grouperLoader").assignDisplayName("basis:Organizations:130100 - Visionary Maximized Access:Student Worker").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:org:130200:affiliate").assignCreateParentStemsIfNotExist(true).assignDescription("Affiliate auto-created by grouperLoader").assignDisplayName("basis:Organizations:130200 - Open-Architected Clear-Thinking Infrastructure:Affiliate").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:org:130200:contractor").assignCreateParentStemsIfNotExist(true).assignDescription("Contractor auto-created by grouperLoader").assignDisplayName("basis:Organizations:130200 - Open-Architected Clear-Thinking Infrastructure:Contractor").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:org:130200:employee").assignCreateParentStemsIfNotExist(true).assignDescription("Employee auto-created by grouperLoader").assignDisplayName("basis:Organizations:130200 - Open-Architected Clear-Thinking Infrastructure:Employee").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:org:130200:faculty").assignCreateParentStemsIfNotExist(true).assignDescription("Faculty auto-created by grouperLoader").assignDisplayName("basis:Organizations:130200 - Open-Architected Clear-Thinking Infrastructure:Faculty").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:org:130200:staff").assignCreateParentStemsIfNotExist(true).assignDescription("Staff auto-created by grouperLoader").assignDisplayName("basis:Organizations:130200 - Open-Architected Clear-Thinking Infrastructure:Staff").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("basis:org:130200:student_worker").assignCreateParentStemsIfNotExist(true).assignDescription("Student Worker auto-created by grouperLoader").assignDisplayName("basis:Organizations:130200 - Open-Architected Clear-Thinking Infrastructure:Student Worker").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("etc:attribute:instrumentationData:instrumentationDataCollectorsGroup").assignCreateParentStemsIfNotExist(true).assignDisplayName("etc:attribute:instrumentationData:instrumentationDataCollectorsGroup").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("etc:attribute:instrumentationData:instrumentationDataInstancesGroup").assignCreateParentStemsIfNotExist(true).assignDisplayName("etc:attribute:instrumentationData:instrumentationDataInstancesGroup").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("etc:attribute:messages:grouperMessageRole").assignCreateParentStemsIfNotExist(true).assignDisplayName("etc:attribute:messages:grouperMessageRole").assignTypeOfGroup(TypeOfGroup.role);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("etc:deprovisioning:deprovisioningAdmins").assignCreateParentStemsIfNotExist(true).assignDescription("deprovisioning admin group can deprovision from all groups/objects in Grouper even if the user is not a Grouper overall SysAdmin").assignDisplayName("etc:deprovisioning:deprovisioningAdmins").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("etc:grouperUi:grouperUiUserData").assignCreateParentStemsIfNotExist(true).assignDescription("Internal group for grouper which has user data stored in membership attributes for grouperUiUserData").assignDisplayName("etc:grouperUi:grouperUiUserData").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("etc:loader:basis:depts").assignCreateParentStemsIfNotExist(true).assignDisplayName("etc:loader:basis:Basis Dept loader").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("etc:loader:basis:orgs").assignCreateParentStemsIfNotExist(true).assignDisplayName("etc:loader:basis:Basis Organization loader").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("etc:loader:ref:job-categories").assignCreateParentStemsIfNotExist(true).assignDisplayName("etc:loader:ref:Ref Jobs by Category loader").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("etc:loader:ref:job-roles").assignCreateParentStemsIfNotExist(true).assignDisplayName("etc:loader:ref:Ref Jobs by Role loader").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("ref:job:by-category:all-affiliate").assignCreateParentStemsIfNotExist(true).assignDescription("All Affiliate auto-created by grouperLoader").assignDisplayName("Reference:Jobs:By Category:All Affiliate").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("ref:job:by-category:all-contractor").assignCreateParentStemsIfNotExist(true).assignDescription("All Contractor auto-created by grouperLoader").assignDisplayName("Reference:Jobs:By Category:All Contractor").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("ref:job:by-category:all-employee").assignCreateParentStemsIfNotExist(true).assignDescription("All Employee auto-created by grouperLoader").assignDisplayName("Reference:Jobs:By Category:All Employee").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("ref:job:by-category:all-faculty").assignCreateParentStemsIfNotExist(true).assignDescription("All Faculty auto-created by grouperLoader").assignDisplayName("Reference:Jobs:By Category:All Faculty").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("ref:job:by-category:all-staff").assignCreateParentStemsIfNotExist(true).assignDescription("All Staff auto-created by grouperLoader").assignDisplayName("Reference:Jobs:By Category:All Staff").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("ref:job:by-category:all-student_worker").assignCreateParentStemsIfNotExist(true).assignDescription("All Student_Worker auto-created by grouperLoader").assignDisplayName("Reference:Jobs:By Category:All Student_Worker").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("ref:job:by-role:all-affiliate").assignCreateParentStemsIfNotExist(true).assignDescription("All Affiliate auto-created by grouperLoader").assignDisplayName("Reference:Jobs:By Role:All Affiliate").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("ref:job:by-role:all-contractor").assignCreateParentStemsIfNotExist(true).assignDescription("All Contractor auto-created by grouperLoader").assignDisplayName("Reference:Jobs:By Role:All Contractor").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("ref:job:by-role:all-faculty").assignCreateParentStemsIfNotExist(true).assignDescription("All Faculty auto-created by grouperLoader").assignDisplayName("Reference:Jobs:By Role:All Faculty").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("ref:job:by-role:all-staff").assignCreateParentStemsIfNotExist(true).assignDescription("All Staff auto-created by grouperLoader").assignDisplayName("Reference:Jobs:By Role:All Staff").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  groupSave = new GroupSave(grouperSession).assignName("ref:job:by-role:all-student_worker").assignCreateParentStemsIfNotExist(true).assignDescription("All Student_Worker auto-created by grouperLoader").assignDisplayName("Reference:Jobs:By Role:All Student_Worker").assignTypeOfGroup(TypeOfGroup.group);
  group = groupSave.save();
  gshTotalObjectCount++;
  if (groupSave.getSaveResultType() != SaveResultType.NO_CHANGE) { System.out.println("Made change for group: " + group.getName()); gshTotalChangeCount++;}
  System.out.println(new Date().toString() + " Done with groups, objects: " + gshTotalObjectCount + ", expected approx total: 2,300, changes: " + gshTotalChangeCount + ", known errors (view output for full list): " + gshTotalErrorCount);
  
  Group ownerGroup = GroupFinder.findByName(grouperSession, "app:its:lbsimply:authorized", false);
  Group leftFactorGroup = GroupFinder.findByName(grouperSession, "app:its:lbsimply:sources", false);
  Group rightFactorGroup = GroupFinder.findByName(grouperSession, "app:its:lbsimply:deny", false);
  CompositeType compositeType = CompositeType.COMPLEMENT;
  if (ownerGroup != null) { if (leftFactorGroup != null) { if (rightFactorGroup != null) {  CompositeSave compositeSave = new CompositeSave(grouperSession).assignOwnerGroup(ownerGroup).assignCompositeType(compositeType).assignLeftFactorGroup(leftFactorGroup).assignRightFactorGroup(rightFactorGroup); gshTotalObjectCount++; Composite composite = compositeSave.save(); if (compositeSave.getSaveResultType() != SaveResultType.NO_CHANGE) {System.out.println("Made change for composite: " + composite.toString()); gshTotalChangeCount++;}  } else { System.out.println("ERROR: cant find rightFactorGroup: 'app:its:lbsimply:deny'"); gshTotalErrorCount++; }  } else { System.out.println("ERROR: cant find leftFactorGroup: 'app:its:lbsimply:sources'"); gshTotalErrorCount++; }  } else { System.out.println("ERROR: cant find overallGroup: 'app:its:lbsimply:authorized'"); gshTotalErrorCount++; }
  ownerGroup = GroupFinder.findByName(grouperSession, "app:its:nsreturn:Next Student Return Authorized", false);
  leftFactorGroup = GroupFinder.findByName(grouperSession, "app:its:nsreturn:sources", false);
  rightFactorGroup = GroupFinder.findByName(grouperSession, "app:its:nsreturn:filter", false);
  compositeType = CompositeType.INTERSECTION;
  if (ownerGroup != null) { if (leftFactorGroup != null) { if (rightFactorGroup != null) {  CompositeSave compositeSave = new CompositeSave(grouperSession).assignOwnerGroup(ownerGroup).assignCompositeType(compositeType).assignLeftFactorGroup(leftFactorGroup).assignRightFactorGroup(rightFactorGroup); gshTotalObjectCount++; Composite composite = compositeSave.save(); if (compositeSave.getSaveResultType() != SaveResultType.NO_CHANGE) {System.out.println("Made change for composite: " + composite.toString()); gshTotalChangeCount++;}  } else { System.out.println("ERROR: cant find rightFactorGroup: 'app:its:nsreturn:filter'"); gshTotalErrorCount++; }  } else { System.out.println("ERROR: cant find leftFactorGroup: 'app:its:nsreturn:sources'"); gshTotalErrorCount++; }  } else { System.out.println("ERROR: cant find overallGroup: 'app:its:nsreturn:Next Student Return Authorized'"); gshTotalErrorCount++; }
  System.out.println(new Date().toString() + " Done with composites, objects: " + gshTotalObjectCount + ", expected approx total: 2,300, changes: " + gshTotalChangeCount + ", known errors (view output for full list): " + gshTotalErrorCount);
   }

  public static void loadSampleData2() {
    
    AttributeDefSave attributeDefSave = new AttributeDefSave(grouperSession).assignName("etc:attribute:attestation:attestationDef").assignCreateParentStemsIfNotExist(true).assignToGroup(true).assignToStem(true).assignAttributeDefType(AttributeDefType.type).assignMultiAssignable(false).assignMultiValued(false).assignValueType(AttributeDefValueType.marker);
    AttributeDef attributeDef = attributeDefSave.save();
    gshTotalObjectCount++;
    if (attributeDefSave.getSaveResultType() != SaveResultType.NO_CHANGE) {System.out.println("Made change for attributeDef: " + attributeDef.getName()); gshTotalChangeCount++;}
    attributeDefSave = new AttributeDefSave(grouperSession).assignName("etc:attribute:attestation:attestationValueDef").assignCreateParentStemsIfNotExist(true).assignToGroupAssn(true).assignToStemAssn(true).assignAttributeDefType(AttributeDefType.attr).assignMultiAssignable(false).assignMultiValued(false).assignValueType(AttributeDefValueType.string);
    attributeDef = attributeDefSave.save();
    gshTotalObjectCount++;
    if (attributeDefSave.getSaveResultType() != SaveResultType.NO_CHANGE) {System.out.println("Made change for attributeDef: " + attributeDef.getName()); gshTotalChangeCount++;}
    attributeDefSave = new AttributeDefSave(grouperSession).assignName("etc:attribute:attrExternalSubjectInvite:externalSubjectInviteAttrDef").assignCreateParentStemsIfNotExist(true).assignToStemAssn(true).assignAttributeDefType(AttributeDefType.attr).assignMultiAssignable(false).assignMultiValued(false).assignValueType(AttributeDefValueType.string);
    attributeDef = attributeDefSave.save();
    gshTotalObjectCount++;
    if (attributeDefSave.getSaveResultType() != SaveResultType.NO_CHANGE) {System.out.println("Made change for attributeDef: " + attributeDef.getName()); gshTotalChangeCount++;}
    attributeDefSave = new AttributeDefSave(grouperSession).assignName("etc:attribute:attrExternalSubjectInvite:externalSubjectInviteDef").assignCreateParentStemsIfNotExist(true).assignToStem(true).assignAttributeDefType(AttributeDefType.type).assignMultiAssignable(true).assignMultiValued(false).assignValueType(AttributeDefValueType.marker);
    attributeDef = attributeDefSave.save();
    gshTotalObjectCount++;
    if (attributeDefSave.getSaveResultType() != SaveResultType.NO_CHANGE) {System.out.println("Made change for attributeDef: " + attributeDef.getName()); gshTotalChangeCount++;}
    attributeDefSave = new AttributeDefSave(grouperSession).assignName("etc:attribute:attrLoader:attributeDefLoaderDef").assignCreateParentStemsIfNotExist(true).assignToAttributeDef(true).assignAttributeDefType(AttributeDefType.attr).assignMultiAssignable(false).assignMultiValued(false).assignValueType(AttributeDefValueType.string);
    attributeDef = attributeDefSave.save();
    gshTotalObjectCount++;
    if (attributeDefSave.getSaveResultType() != SaveResultType.NO_CHANGE) {System.out.println("Made change for attributeDef: " + attributeDef.getName()); gshTotalChangeCount++;}
    attributeDefSave = new AttributeDefSave(grouperSession).assignName("etc:attribute:attrLoader:attributeDefLoaderTypeDef").assignCreateParentStemsIfNotExist(true).assignToAttributeDef(true).assignAttributeDefType(AttributeDefType.type).assignMultiAssignable(false).assignMultiValued(false).assignValueType(AttributeDefValueType.marker);
    attributeDef = attributeDefSave.save();
    gshTotalObjectCount++;
    if (attributeDefSave.getSaveResultType() != SaveResultType.NO_CHANGE) {System.out.println("Made change for attributeDef: " + attributeDef.getName()); gshTotalChangeCount++;}
    attributeDefSave = new AttributeDefSave(grouperSession).assignName("etc:attribute:entities:entitySubjectIdentifierDef").assignCreateParentStemsIfNotExist(true).assignToGroup(true).assignAttributeDefPublic(true).assignAttributeDefType(AttributeDefType.attr).assignMultiAssignable(false).assignMultiValued(false).assignValueType(AttributeDefValueType.string);
    attributeDef = attributeDefSave.save();
    gshTotalObjectCount++;
    if (attributeDefSave.getSaveResultType() != SaveResultType.NO_CHANGE) {System.out.println("Made change for attributeDef: " + attributeDef.getName()); gshTotalChangeCount++;}
    attributeDefSave = new AttributeDefSave(grouperSession).assignName("etc:attribute:hooks:membershipOneInFolderDef").assignCreateParentStemsIfNotExist(true).assignToStem(true).assignAttributeDefType(AttributeDefType.attr).assignMultiAssignable(false).assignMultiValued(false).assignValueType(AttributeDefValueType.marker);
    attributeDef = attributeDefSave.save();
    gshTotalObjectCount++;
    if (attributeDefSave.getSaveResultType() != SaveResultType.NO_CHANGE) {System.out.println("Made change for attributeDef: " + attributeDef.getName()); gshTotalChangeCount++;}
    attributeDefSave = new AttributeDefSave(grouperSession).assignName("etc:attribute:instrumentationData:instrumentationDataCollectorDetailsDef").assignCreateParentStemsIfNotExist(true).assignToGroupAssn(true).assignAttributeDefType(AttributeDefType.attr).assignMultiAssignable(false).assignMultiValued(false).assignValueType(AttributeDefValueType.string);
    attributeDef = attributeDefSave.save();
    gshTotalObjectCount++;
    if (attributeDefSave.getSaveResultType() != SaveResultType.NO_CHANGE) {System.out.println("Made change for attributeDef: " + attributeDef.getName()); gshTotalChangeCount++;}
    attributeDefSave = new AttributeDefSave(grouperSession).assignName("etc:attribute:instrumentationData:instrumentationDataCollectorsDef").assignCreateParentStemsIfNotExist(true).assignToGroup(true).assignAttributeDefType(AttributeDefType.attr).assignMultiAssignable(false).assignMultiValued(false).assignValueType(AttributeDefValueType.marker);
    attributeDef = attributeDefSave.save();
    gshTotalObjectCount++;
    if (attributeDefSave.getSaveResultType() != SaveResultType.NO_CHANGE) {System.out.println("Made change for attributeDef: " + attributeDef.getName()); gshTotalChangeCount++;}
    attributeDefSave = new AttributeDefSave(grouperSession).assignName("etc:attribute:instrumentationData:instrumentationDataInstanceCountsDef").assignCreateParentStemsIfNotExist(true).assignToGroupAssn(true).assignAttributeDefType(AttributeDefType.attr).assignMultiAssignable(false).assignMultiValued(true).assignValueType(AttributeDefValueType.string);
    attributeDef = attributeDefSave.save();
    gshTotalObjectCount++;
    if (attributeDefSave.getSaveResultType() != SaveResultType.NO_CHANGE) {System.out.println("Made change for attributeDef: " + attributeDef.getName()); gshTotalChangeCount++;}
    attributeDefSave = new AttributeDefSave(grouperSession).assignName("etc:attribute:instrumentationData:instrumentationDataInstanceDetailsDef").assignCreateParentStemsIfNotExist(true).assignToGroupAssn(true).assignAttributeDefType(AttributeDefType.attr).assignMultiAssignable(false).assignMultiValued(false).assignValueType(AttributeDefValueType.string);
    attributeDef = attributeDefSave.save();
    gshTotalObjectCount++;
    if (attributeDefSave.getSaveResultType() != SaveResultType.NO_CHANGE) {System.out.println("Made change for attributeDef: " + attributeDef.getName()); gshTotalChangeCount++;}
    attributeDefSave = new AttributeDefSave(grouperSession).assignName("etc:attribute:instrumentationData:instrumentationDataInstancesDef").assignCreateParentStemsIfNotExist(true).assignToGroup(true).assignAttributeDefType(AttributeDefType.attr).assignMultiAssignable(false).assignMultiValued(false).assignValueType(AttributeDefValueType.marker);
    attributeDef = attributeDefSave.save();
    gshTotalObjectCount++;
    if (attributeDefSave.getSaveResultType() != SaveResultType.NO_CHANGE) {System.out.println("Made change for attributeDef: " + attributeDef.getName()); gshTotalChangeCount++;}
    attributeDefSave = new AttributeDefSave(grouperSession).assignName("etc:attribute:loaderLdap:grouperLoaderLdapDef").assignCreateParentStemsIfNotExist(true).assignToGroup(true).assignAttributeDefType(AttributeDefType.attr).assignMultiAssignable(false).assignMultiValued(false).assignValueType(AttributeDefValueType.marker);
    attributeDef = attributeDefSave.save();
    gshTotalObjectCount++;
    if (attributeDefSave.getSaveResultType() != SaveResultType.NO_CHANGE) {System.out.println("Made change for attributeDef: " + attributeDef.getName()); gshTotalChangeCount++;}
    attributeDefSave = new AttributeDefSave(grouperSession).assignName("etc:attribute:loaderLdap:grouperLoaderLdapValueDef").assignCreateParentStemsIfNotExist(true).assignToGroupAssn(true).assignAttributeDefType(AttributeDefType.attr).assignMultiAssignable(false).assignMultiValued(false).assignValueType(AttributeDefValueType.string);
    attributeDef = attributeDefSave.save();
    gshTotalObjectCount++;
    if (attributeDefSave.getSaveResultType() != SaveResultType.NO_CHANGE) {System.out.println("Made change for attributeDef: " + attributeDef.getName()); gshTotalChangeCount++;}
    attributeDefSave = new AttributeDefSave(grouperSession).assignName("etc:attribute:loaderMetadata:loaderMetadataDef").assignCreateParentStemsIfNotExist(true).assignToGroup(true).assignAttributeDefType(AttributeDefType.type).assignMultiAssignable(false).assignMultiValued(false).assignValueType(AttributeDefValueType.marker);
    attributeDef = attributeDefSave.save();
    gshTotalObjectCount++;
    if (attributeDefSave.getSaveResultType() != SaveResultType.NO_CHANGE) {System.out.println("Made change for attributeDef: " + attributeDef.getName()); gshTotalChangeCount++;}
    attributeDefSave = new AttributeDefSave(grouperSession).assignName("etc:attribute:loaderMetadata:loaderMetadataValueDef").assignCreateParentStemsIfNotExist(true).assignToGroupAssn(true).assignAttributeDefType(AttributeDefType.attr).assignMultiAssignable(false).assignMultiValued(false).assignValueType(AttributeDefValueType.string);
    attributeDef = attributeDefSave.save();
    gshTotalObjectCount++;
    if (attributeDefSave.getSaveResultType() != SaveResultType.NO_CHANGE) {System.out.println("Made change for attributeDef: " + attributeDef.getName()); gshTotalChangeCount++;}
    attributeDefSave = new AttributeDefSave(grouperSession).assignName("etc:attribute:messages:grouperMessageQueueDef").assignCreateParentStemsIfNotExist(true).assignToEffMembership(true).assignToGroup(true).assignAttributeDefType(AttributeDefType.perm).assignMultiAssignable(false).assignMultiValued(false).assignValueType(AttributeDefValueType.marker);
    attributeDef = attributeDefSave.save();
    gshTotalObjectCount++;
    if (attributeDefSave.getSaveResultType() != SaveResultType.NO_CHANGE) {System.out.println("Made change for attributeDef: " + attributeDef.getName()); gshTotalChangeCount++;}
    attributeDefSave = new AttributeDefSave(grouperSession).assignName("etc:attribute:messages:grouperMessageTopicDef").assignCreateParentStemsIfNotExist(true).assignToEffMembership(true).assignToGroup(true).assignAttributeDefType(AttributeDefType.perm).assignMultiAssignable(false).assignMultiValued(false).assignValueType(AttributeDefValueType.marker);
    attributeDef = attributeDefSave.save();
    gshTotalObjectCount++;
    if (attributeDefSave.getSaveResultType() != SaveResultType.NO_CHANGE) {System.out.println("Made change for attributeDef: " + attributeDef.getName()); gshTotalChangeCount++;}
    attributeDefSave = new AttributeDefSave(grouperSession).assignName("etc:attribute:permissionLimits:limitsDef").assignCreateParentStemsIfNotExist(true).assignToAttributeDef(true).assignToEffMembership(true).assignToEffMembershipAssn(true).assignToGroup(true).assignToGroupAssn(true).assignAttributeDefType(AttributeDefType.limit).assignMultiAssignable(true).assignMultiValued(false).assignValueType(AttributeDefValueType.string);
    attributeDef = attributeDefSave.save();
    gshTotalObjectCount++;
    if (attributeDefSave.getSaveResultType() != SaveResultType.NO_CHANGE) {System.out.println("Made change for attributeDef: " + attributeDef.getName()); gshTotalChangeCount++;}
    attributeDefSave = new AttributeDefSave(grouperSession).assignName("etc:attribute:permissionLimits:limitsDefInt").assignCreateParentStemsIfNotExist(true).assignToAttributeDef(true).assignToEffMembership(true).assignToEffMembershipAssn(true).assignToGroup(true).assignToGroupAssn(true).assignAttributeDefType(AttributeDefType.limit).assignMultiAssignable(true).assignMultiValued(false).assignValueType(AttributeDefValueType.integer);
    attributeDef = attributeDefSave.save();
    gshTotalObjectCount++;
    if (attributeDefSave.getSaveResultType() != SaveResultType.NO_CHANGE) {System.out.println("Made change for attributeDef: " + attributeDef.getName()); gshTotalChangeCount++;}
    attributeDefSave = new AttributeDefSave(grouperSession).assignName("etc:attribute:permissionLimits:limitsDefMarker").assignCreateParentStemsIfNotExist(true).assignToAttributeDef(true).assignToEffMembership(true).assignToEffMembershipAssn(true).assignToGroup(true).assignToGroupAssn(true).assignAttributeDefType(AttributeDefType.limit).assignMultiAssignable(true).assignMultiValued(false).assignValueType(AttributeDefValueType.marker);
    attributeDef = attributeDefSave.save();
    gshTotalObjectCount++;
    if (attributeDefSave.getSaveResultType() != SaveResultType.NO_CHANGE) {System.out.println("Made change for attributeDef: " + attributeDef.getName()); gshTotalChangeCount++;}
    attributeDefSave = new AttributeDefSave(grouperSession).assignName("etc:attribute:rules:rulesAttrDef").assignCreateParentStemsIfNotExist(true).assignToAttributeDefAssn(true).assignToGroupAssn(true).assignToStemAssn(true).assignAttributeDefType(AttributeDefType.attr).assignMultiAssignable(false).assignMultiValued(false).assignValueType(AttributeDefValueType.string);
    attributeDef = attributeDefSave.save();
    gshTotalObjectCount++;
    if (attributeDefSave.getSaveResultType() != SaveResultType.NO_CHANGE) {System.out.println("Made change for attributeDef: " + attributeDef.getName()); gshTotalChangeCount++;}
    attributeDefSave = new AttributeDefSave(grouperSession).assignName("etc:attribute:rules:rulesTypeDef").assignCreateParentStemsIfNotExist(true).assignToAttributeDef(true).assignToGroup(true).assignToStem(true).assignAttributeDefType(AttributeDefType.type).assignMultiAssignable(true).assignMultiValued(false).assignValueType(AttributeDefValueType.marker);
    attributeDef = attributeDefSave.save();
    gshTotalObjectCount++;
    if (attributeDefSave.getSaveResultType() != SaveResultType.NO_CHANGE) {System.out.println("Made change for attributeDef: " + attributeDef.getName()); gshTotalChangeCount++;}
    attributeDefSave = new AttributeDefSave(grouperSession).assignName("etc:attribute:userData:grouperUserDataDef").assignCreateParentStemsIfNotExist(true).assignToImmMembership(true).assignToImmMembership(true).assignAttributeDefType(AttributeDefType.attr).assignMultiAssignable(false).assignMultiValued(false).assignValueType(AttributeDefValueType.marker);
    attributeDef = attributeDefSave.save();
    gshTotalObjectCount++;
    if (attributeDefSave.getSaveResultType() != SaveResultType.NO_CHANGE) {System.out.println("Made change for attributeDef: " + attributeDef.getName()); gshTotalChangeCount++;}
    attributeDefSave = new AttributeDefSave(grouperSession).assignName("etc:attribute:userData:grouperUserDataValueDef").assignCreateParentStemsIfNotExist(true).assignToImmMembershipAssn(true).assignAttributeDefType(AttributeDefType.attr).assignMultiAssignable(false).assignMultiValued(false).assignValueType(AttributeDefValueType.string);
    attributeDef = attributeDefSave.save();
    gshTotalObjectCount++;
    if (attributeDefSave.getSaveResultType() != SaveResultType.NO_CHANGE) {System.out.println("Made change for attributeDef: " + attributeDef.getName()); gshTotalChangeCount++;}
    attributeDefSave = new AttributeDefSave(grouperSession).assignName("etc:deprovisioning:deprovisioningDef").assignCreateParentStemsIfNotExist(true).assignToAttributeDef(true).assignToGroup(true).assignToStem(true).assignAttributeDefType(AttributeDefType.type).assignMultiAssignable(true).assignMultiValued(false).assignValueType(AttributeDefValueType.marker);
    attributeDef = attributeDefSave.save();
    gshTotalObjectCount++;
    if (attributeDefSave.getSaveResultType() != SaveResultType.NO_CHANGE) {System.out.println("Made change for attributeDef: " + attributeDef.getName()); gshTotalChangeCount++;}
    attributeDefSave = new AttributeDefSave(grouperSession).assignName("etc:deprovisioning:deprovisioningValueDef").assignCreateParentStemsIfNotExist(true).assignToAttributeDefAssn(true).assignToGroupAssn(true).assignToStemAssn(true).assignAttributeDefType(AttributeDefType.attr).assignMultiAssignable(false).assignMultiValued(false).assignValueType(AttributeDefValueType.string);
    attributeDef = attributeDefSave.save();
    gshTotalObjectCount++;
    if (attributeDefSave.getSaveResultType() != SaveResultType.NO_CHANGE) {System.out.println("Made change for attributeDef: " + attributeDef.getName()); gshTotalChangeCount++;}
    attributeDefSave = new AttributeDefSave(grouperSession).assignName("etc:legacy:attribute:legacyAttributeDef_grouperLoader").assignCreateParentStemsIfNotExist(true).assignToGroupAssn(true).assignAttributeDefType(AttributeDefType.attr).assignMultiAssignable(false).assignMultiValued(false).assignValueType(AttributeDefValueType.string);
    attributeDef = attributeDefSave.save();
    gshTotalObjectCount++;
    if (attributeDefSave.getSaveResultType() != SaveResultType.NO_CHANGE) {System.out.println("Made change for attributeDef: " + attributeDef.getName()); gshTotalChangeCount++;}
    attributeDefSave = new AttributeDefSave(grouperSession).assignName("etc:legacy:attribute:legacyGroupTypeDef_grouperLoader").assignCreateParentStemsIfNotExist(true).assignToGroup(true).assignAttributeDefType(AttributeDefType.attr).assignMultiAssignable(false).assignMultiValued(false).assignValueType(AttributeDefValueType.marker);
    attributeDef = attributeDefSave.save();
    gshTotalObjectCount++;
    if (attributeDefSave.getSaveResultType() != SaveResultType.NO_CHANGE) {System.out.println("Made change for attributeDef: " + attributeDef.getName()); gshTotalChangeCount++;}
    attributeDefSave = new AttributeDefSave(grouperSession).assignName("etc:objectTypes:grouperObjectTypeDef").assignCreateParentStemsIfNotExist(true).assignToGroup(true).assignToStem(true).assignAttributeDefType(AttributeDefType.type).assignMultiAssignable(true).assignMultiValued(false).assignValueType(AttributeDefValueType.marker);
    attributeDef = attributeDefSave.save();
    gshTotalObjectCount++;
    if (attributeDefSave.getSaveResultType() != SaveResultType.NO_CHANGE) {System.out.println("Made change for attributeDef: " + attributeDef.getName()); gshTotalChangeCount++;}
    attributeDefSave = new AttributeDefSave(grouperSession).assignName("etc:objectTypes:grouperObjectTypeValueDef").assignCreateParentStemsIfNotExist(true).assignToAttributeDefAssn(true).assignToGroupAssn(true).assignToStemAssn(true).assignAttributeDefType(AttributeDefType.attr).assignMultiAssignable(false).assignMultiValued(false).assignValueType(AttributeDefValueType.string);
    attributeDef = attributeDefSave.save();
    gshTotalObjectCount++;
    if (attributeDefSave.getSaveResultType() != SaveResultType.NO_CHANGE) {System.out.println("Made change for attributeDef: " + attributeDef.getName()); gshTotalChangeCount++;}
    attributeDefSave = new AttributeDefSave(grouperSession).assignName("etc:pspng:do_not_provision_to_def").assignCreateParentStemsIfNotExist(true).assignToGroup(true).assignToStem(true).assignAttributeDefType(AttributeDefType.type).assignMultiAssignable(true).assignMultiValued(false).assignValueType(AttributeDefValueType.string);
    attributeDef = attributeDefSave.save();
    gshTotalObjectCount++;
    if (attributeDefSave.getSaveResultType() != SaveResultType.NO_CHANGE) {System.out.println("Made change for attributeDef: " + attributeDef.getName()); gshTotalChangeCount++;}
    attributeDefSave = new AttributeDefSave(grouperSession).assignName("etc:pspng:provision_to_def").assignCreateParentStemsIfNotExist(true).assignToGroup(true).assignToStem(true).assignAttributeDefType(AttributeDefType.type).assignMultiAssignable(true).assignMultiValued(false).assignValueType(AttributeDefValueType.string);
    attributeDef = attributeDefSave.save();
    gshTotalObjectCount++;
    if (attributeDefSave.getSaveResultType() != SaveResultType.NO_CHANGE) {System.out.println("Made change for attributeDef: " + attributeDef.getName()); gshTotalChangeCount++;}
    System.out.println(new Date().toString() + " Done with attribute definitions, objects: " + gshTotalObjectCount + ", expected approx total: 2,300, changes: " + gshTotalChangeCount + ", known errors (view output for full list): " + gshTotalErrorCount);
    System.out.println(new Date().toString() + " Done with role hierarchies, objects: " + gshTotalObjectCount + ", expected approx total: 2,300, changes: " + gshTotalChangeCount + ", known errors (view output for full list): " + gshTotalErrorCount);
    attributeDef = AttributeDefFinder.findByName("etc:pspng:do_not_provision_to_def", false);
    if (attributeDef != null) { int changeCount = attributeDef.getAttributeDefActionDelegate().configureActionList("assign"); gshTotalObjectCount+=1; if (changeCount > 0) { gshTotalChangeCount+=changeCount; System.out.println("Made " + changeCount + " changes for actionList of attributeDef: etc:pspng:do_not_provision_to_def");  } } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:pspng:do_not_provision_to_def'"); }
    attributeDef = AttributeDefFinder.findByName("etc:attribute:permissionLimits:limitsDefInt", false);
    if (attributeDef != null) { int changeCount = attributeDef.getAttributeDefActionDelegate().configureActionList("assign"); gshTotalObjectCount+=1; if (changeCount > 0) { gshTotalChangeCount+=changeCount; System.out.println("Made " + changeCount + " changes for actionList of attributeDef: etc:attribute:permissionLimits:limitsDefInt");  } } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:permissionLimits:limitsDefInt'"); }
    attributeDef = AttributeDefFinder.findByName("etc:attribute:attestation:attestationValueDef", false);
    if (attributeDef != null) { int changeCount = attributeDef.getAttributeDefActionDelegate().configureActionList("assign"); gshTotalObjectCount+=1; if (changeCount > 0) { gshTotalChangeCount+=changeCount; System.out.println("Made " + changeCount + " changes for actionList of attributeDef: etc:attribute:attestation:attestationValueDef");  } } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:attestation:attestationValueDef'"); }
    attributeDef = AttributeDefFinder.findByName("etc:attribute:attrLoader:attributeDefLoaderDef", false);
    if (attributeDef != null) { int changeCount = attributeDef.getAttributeDefActionDelegate().configureActionList("assign"); gshTotalObjectCount+=1; if (changeCount > 0) { gshTotalChangeCount+=changeCount; System.out.println("Made " + changeCount + " changes for actionList of attributeDef: etc:attribute:attrLoader:attributeDefLoaderDef");  } } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:attrLoader:attributeDefLoaderDef'"); }
    attributeDef = AttributeDefFinder.findByName("etc:attribute:attestation:attestationDef", false);
    if (attributeDef != null) { int changeCount = attributeDef.getAttributeDefActionDelegate().configureActionList("assign"); gshTotalObjectCount+=1; if (changeCount > 0) { gshTotalChangeCount+=changeCount; System.out.println("Made " + changeCount + " changes for actionList of attributeDef: etc:attribute:attestation:attestationDef");  } } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:attestation:attestationDef'"); }
    attributeDef = AttributeDefFinder.findByName("etc:attribute:hooks:membershipOneInFolderDef", false);
    if (attributeDef != null) { int changeCount = attributeDef.getAttributeDefActionDelegate().configureActionList("assign"); gshTotalObjectCount+=1; if (changeCount > 0) { gshTotalChangeCount+=changeCount; System.out.println("Made " + changeCount + " changes for actionList of attributeDef: etc:attribute:hooks:membershipOneInFolderDef");  } } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:hooks:membershipOneInFolderDef'"); }
    attributeDef = AttributeDefFinder.findByName("etc:attribute:attrExternalSubjectInvite:externalSubjectInviteDef", false);
    if (attributeDef != null) { int changeCount = attributeDef.getAttributeDefActionDelegate().configureActionList("assign"); gshTotalObjectCount+=1; if (changeCount > 0) { gshTotalChangeCount+=changeCount; System.out.println("Made " + changeCount + " changes for actionList of attributeDef: etc:attribute:attrExternalSubjectInvite:externalSubjectInviteDef");  } } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:attrExternalSubjectInvite:externalSubjectInviteDef'"); }
    attributeDef = AttributeDefFinder.findByName("etc:attribute:instrumentationData:instrumentationDataInstanceDetailsDef", false);
    if (attributeDef != null) { int changeCount = attributeDef.getAttributeDefActionDelegate().configureActionList("assign"); gshTotalObjectCount+=1; if (changeCount > 0) { gshTotalChangeCount+=changeCount; System.out.println("Made " + changeCount + " changes for actionList of attributeDef: etc:attribute:instrumentationData:instrumentationDataInstanceDetailsDef");  } } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:instrumentationData:instrumentationDataInstanceDetailsDef'"); }
    attributeDef = AttributeDefFinder.findByName("etc:attribute:userData:grouperUserDataValueDef", false);
    if (attributeDef != null) { int changeCount = attributeDef.getAttributeDefActionDelegate().configureActionList("assign"); gshTotalObjectCount+=1; if (changeCount > 0) { gshTotalChangeCount+=changeCount; System.out.println("Made " + changeCount + " changes for actionList of attributeDef: etc:attribute:userData:grouperUserDataValueDef");  } } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:userData:grouperUserDataValueDef'"); }
    attributeDef = AttributeDefFinder.findByName("etc:objectTypes:grouperObjectTypeDef", false);
    if (attributeDef != null) { int changeCount = attributeDef.getAttributeDefActionDelegate().configureActionList("assign"); gshTotalObjectCount+=1; if (changeCount > 0) { gshTotalChangeCount+=changeCount; System.out.println("Made " + changeCount + " changes for actionList of attributeDef: etc:objectTypes:grouperObjectTypeDef");  } } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:objectTypes:grouperObjectTypeDef'"); }
    attributeDef = AttributeDefFinder.findByName("etc:attribute:instrumentationData:instrumentationDataInstanceCountsDef", false);
    if (attributeDef != null) { int changeCount = attributeDef.getAttributeDefActionDelegate().configureActionList("assign"); gshTotalObjectCount+=1; if (changeCount > 0) { gshTotalChangeCount+=changeCount; System.out.println("Made " + changeCount + " changes for actionList of attributeDef: etc:attribute:instrumentationData:instrumentationDataInstanceCountsDef");  } } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:instrumentationData:instrumentationDataInstanceCountsDef'"); }
    attributeDef = AttributeDefFinder.findByName("etc:attribute:permissionLimits:limitsDefMarker", false);
    if (attributeDef != null) { int changeCount = attributeDef.getAttributeDefActionDelegate().configureActionList("assign"); gshTotalObjectCount+=1; if (changeCount > 0) { gshTotalChangeCount+=changeCount; System.out.println("Made " + changeCount + " changes for actionList of attributeDef: etc:attribute:permissionLimits:limitsDefMarker");  } } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:permissionLimits:limitsDefMarker'"); }
    attributeDef = AttributeDefFinder.findByName("etc:legacy:attribute:legacyAttributeDef_grouperLoader", false);
    if (attributeDef != null) { int changeCount = attributeDef.getAttributeDefActionDelegate().configureActionList("assign"); gshTotalObjectCount+=1; if (changeCount > 0) { gshTotalChangeCount+=changeCount; System.out.println("Made " + changeCount + " changes for actionList of attributeDef: etc:legacy:attribute:legacyAttributeDef_grouperLoader");  } } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:legacy:attribute:legacyAttributeDef_grouperLoader'"); }
    attributeDef = AttributeDefFinder.findByName("etc:attribute:loaderLdap:grouperLoaderLdapValueDef", false);
    if (attributeDef != null) { int changeCount = attributeDef.getAttributeDefActionDelegate().configureActionList("assign"); gshTotalObjectCount+=1; if (changeCount > 0) { gshTotalChangeCount+=changeCount; System.out.println("Made " + changeCount + " changes for actionList of attributeDef: etc:attribute:loaderLdap:grouperLoaderLdapValueDef");  } } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:loaderLdap:grouperLoaderLdapValueDef'"); }
    attributeDef = AttributeDefFinder.findByName("etc:attribute:instrumentationData:instrumentationDataCollectorsDef", false);
    if (attributeDef != null) { int changeCount = attributeDef.getAttributeDefActionDelegate().configureActionList("assign"); gshTotalObjectCount+=1; if (changeCount > 0) { gshTotalChangeCount+=changeCount; System.out.println("Made " + changeCount + " changes for actionList of attributeDef: etc:attribute:instrumentationData:instrumentationDataCollectorsDef");  } } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:instrumentationData:instrumentationDataCollectorsDef'"); }
    attributeDef = AttributeDefFinder.findByName("etc:attribute:attrLoader:attributeDefLoaderTypeDef", false);
    if (attributeDef != null) { int changeCount = attributeDef.getAttributeDefActionDelegate().configureActionList("assign"); gshTotalObjectCount+=1; if (changeCount > 0) { gshTotalChangeCount+=changeCount; System.out.println("Made " + changeCount + " changes for actionList of attributeDef: etc:attribute:attrLoader:attributeDefLoaderTypeDef");  } } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:attrLoader:attributeDefLoaderTypeDef'"); }
    attributeDef = AttributeDefFinder.findByName("etc:attribute:instrumentationData:instrumentationDataInstancesDef", false);
    if (attributeDef != null) { int changeCount = attributeDef.getAttributeDefActionDelegate().configureActionList("assign"); gshTotalObjectCount+=1; if (changeCount > 0) { gshTotalChangeCount+=changeCount; System.out.println("Made " + changeCount + " changes for actionList of attributeDef: etc:attribute:instrumentationData:instrumentationDataInstancesDef");  } } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:instrumentationData:instrumentationDataInstancesDef'"); }
    attributeDef = AttributeDefFinder.findByName("etc:attribute:loaderMetadata:loaderMetadataValueDef", false);
    if (attributeDef != null) { int changeCount = attributeDef.getAttributeDefActionDelegate().configureActionList("assign"); gshTotalObjectCount+=1; if (changeCount > 0) { gshTotalChangeCount+=changeCount; System.out.println("Made " + changeCount + " changes for actionList of attributeDef: etc:attribute:loaderMetadata:loaderMetadataValueDef");  } } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:loaderMetadata:loaderMetadataValueDef'"); }
    attributeDef = AttributeDefFinder.findByName("etc:deprovisioning:deprovisioningDef", false);
    if (attributeDef != null) { int changeCount = attributeDef.getAttributeDefActionDelegate().configureActionList("assign"); gshTotalObjectCount+=1; if (changeCount > 0) { gshTotalChangeCount+=changeCount; System.out.println("Made " + changeCount + " changes for actionList of attributeDef: etc:deprovisioning:deprovisioningDef");  } } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:deprovisioning:deprovisioningDef'"); }
    attributeDef = AttributeDefFinder.findByName("etc:attribute:userData:grouperUserDataDef", false);
    if (attributeDef != null) { int changeCount = attributeDef.getAttributeDefActionDelegate().configureActionList("assign"); gshTotalObjectCount+=1; if (changeCount > 0) { gshTotalChangeCount+=changeCount; System.out.println("Made " + changeCount + " changes for actionList of attributeDef: etc:attribute:userData:grouperUserDataDef");  } } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:userData:grouperUserDataDef'"); }
    attributeDef = AttributeDefFinder.findByName("etc:attribute:attrExternalSubjectInvite:externalSubjectInviteAttrDef", false);
    if (attributeDef != null) { int changeCount = attributeDef.getAttributeDefActionDelegate().configureActionList("assign"); gshTotalObjectCount+=1; if (changeCount > 0) { gshTotalChangeCount+=changeCount; System.out.println("Made " + changeCount + " changes for actionList of attributeDef: etc:attribute:attrExternalSubjectInvite:externalSubjectInviteAttrDef");  } } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:attrExternalSubjectInvite:externalSubjectInviteAttrDef'"); }
    attributeDef = AttributeDefFinder.findByName("etc:attribute:instrumentationData:instrumentationDataCollectorDetailsDef", false);
    if (attributeDef != null) { int changeCount = attributeDef.getAttributeDefActionDelegate().configureActionList("assign"); gshTotalObjectCount+=1; if (changeCount > 0) { gshTotalChangeCount+=changeCount; System.out.println("Made " + changeCount + " changes for actionList of attributeDef: etc:attribute:instrumentationData:instrumentationDataCollectorDetailsDef");  } } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:instrumentationData:instrumentationDataCollectorDetailsDef'"); }
    attributeDef = AttributeDefFinder.findByName("etc:pspng:provision_to_def", false);
    if (attributeDef != null) { int changeCount = attributeDef.getAttributeDefActionDelegate().configureActionList("assign"); gshTotalObjectCount+=1; if (changeCount > 0) { gshTotalChangeCount+=changeCount; System.out.println("Made " + changeCount + " changes for actionList of attributeDef: etc:pspng:provision_to_def");  } } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:pspng:provision_to_def'"); }
    attributeDef = AttributeDefFinder.findByName("etc:deprovisioning:deprovisioningValueDef", false);
    if (attributeDef != null) { int changeCount = attributeDef.getAttributeDefActionDelegate().configureActionList("assign"); gshTotalObjectCount+=1; if (changeCount > 0) { gshTotalChangeCount+=changeCount; System.out.println("Made " + changeCount + " changes for actionList of attributeDef: etc:deprovisioning:deprovisioningValueDef");  } } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:deprovisioning:deprovisioningValueDef'"); }
    attributeDef = AttributeDefFinder.findByName("etc:legacy:attribute:legacyGroupTypeDef_grouperLoader", false);
    if (attributeDef != null) { int changeCount = attributeDef.getAttributeDefActionDelegate().configureActionList("assign"); gshTotalObjectCount+=1; if (changeCount > 0) { gshTotalChangeCount+=changeCount; System.out.println("Made " + changeCount + " changes for actionList of attributeDef: etc:legacy:attribute:legacyGroupTypeDef_grouperLoader");  } } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:legacy:attribute:legacyGroupTypeDef_grouperLoader'"); }
    attributeDef = AttributeDefFinder.findByName("etc:attribute:messages:grouperMessageTopicDef", false);
    if (attributeDef != null) { int changeCount = attributeDef.getAttributeDefActionDelegate().configureActionList("send_to_topic"); gshTotalObjectCount+=1; if (changeCount > 0) { gshTotalChangeCount+=changeCount; System.out.println("Made " + changeCount + " changes for actionList of attributeDef: etc:attribute:messages:grouperMessageTopicDef");  } } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:messages:grouperMessageTopicDef'"); }
    attributeDef = AttributeDefFinder.findByName("etc:attribute:permissionLimits:limitsDef", false);
    if (attributeDef != null) { int changeCount = attributeDef.getAttributeDefActionDelegate().configureActionList("assign"); gshTotalObjectCount+=1; if (changeCount > 0) { gshTotalChangeCount+=changeCount; System.out.println("Made " + changeCount + " changes for actionList of attributeDef: etc:attribute:permissionLimits:limitsDef");  } } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:permissionLimits:limitsDef'"); }
    attributeDef = AttributeDefFinder.findByName("etc:attribute:entities:entitySubjectIdentifierDef", false);
    if (attributeDef != null) { int changeCount = attributeDef.getAttributeDefActionDelegate().configureActionList("assign"); gshTotalObjectCount+=1; if (changeCount > 0) { gshTotalChangeCount+=changeCount; System.out.println("Made " + changeCount + " changes for actionList of attributeDef: etc:attribute:entities:entitySubjectIdentifierDef");  } } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:entities:entitySubjectIdentifierDef'"); }
    attributeDef = AttributeDefFinder.findByName("etc:attribute:loaderMetadata:loaderMetadataDef", false);
    if (attributeDef != null) { int changeCount = attributeDef.getAttributeDefActionDelegate().configureActionList("assign"); gshTotalObjectCount+=1; if (changeCount > 0) { gshTotalChangeCount+=changeCount; System.out.println("Made " + changeCount + " changes for actionList of attributeDef: etc:attribute:loaderMetadata:loaderMetadataDef");  } } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:loaderMetadata:loaderMetadataDef'"); }
    attributeDef = AttributeDefFinder.findByName("etc:attribute:rules:rulesTypeDef", false);
    if (attributeDef != null) { int changeCount = attributeDef.getAttributeDefActionDelegate().configureActionList("assign"); gshTotalObjectCount+=1; if (changeCount > 0) { gshTotalChangeCount+=changeCount; System.out.println("Made " + changeCount + " changes for actionList of attributeDef: etc:attribute:rules:rulesTypeDef");  } } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:rules:rulesTypeDef'"); }
    attributeDef = AttributeDefFinder.findByName("etc:attribute:rules:rulesAttrDef", false);
    if (attributeDef != null) { int changeCount = attributeDef.getAttributeDefActionDelegate().configureActionList("assign"); gshTotalObjectCount+=1; if (changeCount > 0) { gshTotalChangeCount+=changeCount; System.out.println("Made " + changeCount + " changes for actionList of attributeDef: etc:attribute:rules:rulesAttrDef");  } } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:rules:rulesAttrDef'"); }
    attributeDef = AttributeDefFinder.findByName("etc:objectTypes:grouperObjectTypeValueDef", false);
    if (attributeDef != null) { int changeCount = attributeDef.getAttributeDefActionDelegate().configureActionList("assign"); gshTotalObjectCount+=1; if (changeCount > 0) { gshTotalChangeCount+=changeCount; System.out.println("Made " + changeCount + " changes for actionList of attributeDef: etc:objectTypes:grouperObjectTypeValueDef");  } } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:objectTypes:grouperObjectTypeValueDef'"); }
    attributeDef = AttributeDefFinder.findByName("etc:attribute:loaderLdap:grouperLoaderLdapDef", false);
    if (attributeDef != null) { int changeCount = attributeDef.getAttributeDefActionDelegate().configureActionList("assign"); gshTotalObjectCount+=1; if (changeCount > 0) { gshTotalChangeCount+=changeCount; System.out.println("Made " + changeCount + " changes for actionList of attributeDef: etc:attribute:loaderLdap:grouperLoaderLdapDef");  } } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:loaderLdap:grouperLoaderLdapDef'"); }
    attributeDef = AttributeDefFinder.findByName("etc:attribute:messages:grouperMessageQueueDef", false);
    if (attributeDef != null) { int changeCount = attributeDef.getAttributeDefActionDelegate().configureActionList("receive,send_to_queue"); gshTotalObjectCount+=2; if (changeCount > 0) { gshTotalChangeCount+=changeCount; System.out.println("Made " + changeCount + " changes for actionList of attributeDef: etc:attribute:messages:grouperMessageQueueDef");  } } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:messages:grouperMessageQueueDef'"); }
    System.out.println(new Date().toString() + " Done with attribute actions, objects: " + gshTotalObjectCount + ", expected approx total: 2,300, changes: " + gshTotalChangeCount + ", known errors (view output for full list): " + gshTotalErrorCount);
    System.out.println(new Date().toString() + " Done with attribute action hierarchies, objects: " + gshTotalObjectCount + ", expected approx total: 2,300, changes: " + gshTotalChangeCount + ", known errors (view output for full list): " + gshTotalErrorCount);
    Subject subject = SubjectFinder.findByIdentifierAndSource("basis:org:110200:affiliate", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 025cb4dee8da4a8fbf0fc5f98aded845: basis:org:110200:affiliate");  }
    Privilege privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-category:all-affiliate", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-category:all-affiliate'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:130000:affiliate", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 052415d22ff24502b48e40446ce02585: basis:org:130000:affiliate");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "app:its:cttoday:etc:updaters", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'app:its:cttoday:etc:updaters'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:130000:affiliate", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 052415d22ff24502b48e40446ce02585: basis:org:130000:affiliate");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "app:its:lbsimply:sources", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'app:its:lbsimply:sources'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:130000:affiliate", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 052415d22ff24502b48e40446ce02585: basis:org:130000:affiliate");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "app:its:nistaff:sources", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'app:its:nistaff:sources'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:130000:affiliate", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 052415d22ff24502b48e40446ce02585: basis:org:130000:affiliate");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-category:all-affiliate", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-category:all-affiliate'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:130200:contractor", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 0625307acdd44e97bb0abc7e53f5241b: basis:org:130200:contractor");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "app:its:cttoday:sources", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'app:its:cttoday:sources'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:130200:contractor", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 0625307acdd44e97bb0abc7e53f5241b: basis:org:130200:contractor");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-category:all-contractor", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-category:all-contractor'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:120200:student_worker", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 09f36dae9246453c80dde77a0721459e: basis:org:120200:student_worker");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "app:its:cttoday:etc:updaters", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'app:its:cttoday:etc:updaters'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:120200:student_worker", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 09f36dae9246453c80dde77a0721459e: basis:org:120200:student_worker");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "app:its:cttoday:sources", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'app:its:cttoday:sources'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:120200:student_worker", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 09f36dae9246453c80dde77a0721459e: basis:org:120200:student_worker");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "app:its:nistaff:sources", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'app:its:nistaff:sources'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:120200:student_worker", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 09f36dae9246453c80dde77a0721459e: basis:org:120200:student_worker");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-category:all-student_worker", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-category:all-student_worker'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:100000:contractor", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 0a3b8ff9a1844bafb17b41ef03a9daa6: basis:org:100000:contractor");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-category:all-contractor", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-category:all-contractor'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("app:its:pcavoid:etc:readers", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 0b6814c1ada24608813c1f2f65e1bcfa: app:its:pcavoid:etc:readers");  }
    privilege = Privilege.listToPriv("readers", false);
    group = GroupFinder.findByName(grouperSession, "app:its:pcavoid:sources", false);
    if (privilege != null) { if (subject != null) { if (group != null) { boolean changed = group.grantPriv(subject, privilege, false);    gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group privilege: " + group.getName() + ", privilege: " + privilege + ", subject: " + GrouperUtil.subjectToString(subject)); }  } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'app:its:pcavoid:sources'"); } }  } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:110200:faculty", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 0e43ad4e1e514ae6978a88308818de7d: basis:org:110200:faculty");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "app:its:lbsimply:sources", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'app:its:lbsimply:sources'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:110200:faculty", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 0e43ad4e1e514ae6978a88308818de7d: basis:org:110200:faculty");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-category:all-faculty", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-category:all-faculty'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:110100:affiliate", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 0e9324dc7a2f4235a0e12e0f43744b75: basis:org:110100:affiliate");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "app:its:nsreturn:etc:updaters", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'app:its:nsreturn:etc:updaters'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:110100:affiliate", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 0e9324dc7a2f4235a0e12e0f43744b75: basis:org:110100:affiliate");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "app:its:nsreturn:sources", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'app:its:nsreturn:sources'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:110100:affiliate", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 0e9324dc7a2f4235a0e12e0f43744b75: basis:org:110100:affiliate");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-category:all-affiliate", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-category:all-affiliate'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:110200:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 10b1728f88cb47a48b775fbcaa93efc4: basis:dept:110200:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:110200:employee", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:110200:employee'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:110200:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 10b1728f88cb47a48b775fbcaa93efc4: basis:dept:110200:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:110200:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:110200:staff'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:110200:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 10b1728f88cb47a48b775fbcaa93efc4: basis:dept:110200:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-role:all-staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-role:all-staff'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:120100:student_worker", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 171cb84c248345b087ac9dc9c3360ceb: basis:org:120100:student_worker");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "app:its:cttoday:etc:readers", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'app:its:cttoday:etc:readers'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:120100:student_worker", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 171cb84c248345b087ac9dc9c3360ceb: basis:org:120100:student_worker");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-category:all-student_worker", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-category:all-student_worker'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:130103:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 18ac4e52b2c84897ac8b344c528a29f8: basis:dept:130103:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:130100:employee", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:130100:employee'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:130103:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 18ac4e52b2c84897ac8b344c528a29f8: basis:dept:130103:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:130100:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:130100:staff'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:130103:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 18ac4e52b2c84897ac8b344c528a29f8: basis:dept:130103:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-role:all-staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-role:all-staff'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:110200:employee", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 1ba7abf90125424cad9e07e58a06956b: basis:org:110200:employee");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "app:its:cttoday:sources", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'app:its:cttoday:sources'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:110200:employee", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 1ba7abf90125424cad9e07e58a06956b: basis:org:110200:employee");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "app:its:lbsimply:etc:readers", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'app:its:lbsimply:etc:readers'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:110200:employee", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 1ba7abf90125424cad9e07e58a06956b: basis:org:110200:employee");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "app:its:nistaff:sources", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'app:its:nistaff:sources'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:110200:employee", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 1ba7abf90125424cad9e07e58a06956b: basis:org:110200:employee");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-category:all-employee", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-category:all-employee'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:120201:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 1cbb028ec4b6438998c2662d0d711b64: basis:dept:120201:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:120200:employee", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:120200:employee'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:120201:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 1cbb028ec4b6438998c2662d0d711b64: basis:dept:120201:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:120200:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:120200:staff'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:120201:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 1cbb028ec4b6438998c2662d0d711b64: basis:dept:120201:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-role:all-staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-role:all-staff'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:110200:contractor", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 1e4571d665e849d2894b2d4ff7852ba7: basis:org:110200:contractor");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-category:all-contractor", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-category:all-contractor'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:110103:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 215001fa2fde4712be46bb09025447d4: basis:dept:110103:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:110100:employee", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:110100:employee'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:110103:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 215001fa2fde4712be46bb09025447d4: basis:dept:110103:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:110100:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:110100:staff'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:110103:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 215001fa2fde4712be46bb09025447d4: basis:dept:110103:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-role:all-staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-role:all-staff'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:130200:employee", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 216944a37c4a4e4a972c256828627f0d: basis:org:130200:employee");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-category:all-employee", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-category:all-employee'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:110203:contractor", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 258cb0d4128444599422520303adb56f: basis:dept:110203:contractor");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:110200:contractor", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:110200:contractor'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:110203:contractor", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 258cb0d4128444599422520303adb56f: basis:dept:110203:contractor");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-role:all-contractor", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-role:all-contractor'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:120103:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 27c7ee0d5b3d427eabe6e625efa750ed: basis:dept:120103:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:120100:employee", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:120100:employee'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:120103:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 27c7ee0d5b3d427eabe6e625efa750ed: basis:dept:120103:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:120100:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:120100:staff'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:120103:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 27c7ee0d5b3d427eabe6e625efa750ed: basis:dept:120103:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-role:all-staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-role:all-staff'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:120200:contractor", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 285aa934332141dabbb80db46085a827: basis:org:120200:contractor");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "app:its:lbsimply:sources", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'app:its:lbsimply:sources'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:120200:contractor", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 285aa934332141dabbb80db46085a827: basis:org:120200:contractor");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "app:its:pcavoid:sources", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'app:its:pcavoid:sources'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:120200:contractor", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 285aa934332141dabbb80db46085a827: basis:org:120200:contractor");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-category:all-contractor", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-category:all-contractor'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:130000:contractor", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 28f38df15c9e4d6e906a7c13252afde6: basis:org:130000:contractor");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-category:all-contractor", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-category:all-contractor'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:130200:student_worker", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 2a8150d8fa1d4569bdcb3dae3b8329ed: basis:org:130200:student_worker");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "app:its:nsreturn:sources", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'app:its:nsreturn:sources'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:130200:student_worker", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 2a8150d8fa1d4569bdcb3dae3b8329ed: basis:org:130200:student_worker");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-category:all-student_worker", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-category:all-student_worker'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:120100:faculty", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 2afd275154cc462abcef698adb5a7698: basis:org:120100:faculty");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "app:its:nistaff:sources", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'app:its:nistaff:sources'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:120100:faculty", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 2afd275154cc462abcef698adb5a7698: basis:org:120100:faculty");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "app:its:pcavoid:etc:updaters", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'app:its:pcavoid:etc:updaters'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:120100:faculty", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 2afd275154cc462abcef698adb5a7698: basis:org:120100:faculty");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-category:all-faculty", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-category:all-faculty'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:110000:student_worker", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 2c5cbe6bc54e441b9ef026e56e4ca2e4: basis:org:110000:student_worker");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "app:its:lbsimply:etc:updaters", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'app:its:lbsimply:etc:updaters'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:110000:student_worker", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 2c5cbe6bc54e441b9ef026e56e4ca2e4: basis:org:110000:student_worker");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "app:its:nsreturn:sources", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'app:its:nsreturn:sources'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:110000:student_worker", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 2c5cbe6bc54e441b9ef026e56e4ca2e4: basis:org:110000:student_worker");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-category:all-student_worker", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-category:all-student_worker'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:130203:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 2de33341baca46cc909efe860feda912: basis:dept:130203:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:130200:employee", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:130200:employee'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:130203:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 2de33341baca46cc909efe860feda912: basis:dept:130203:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:130200:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:130200:staff'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:130203:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 2de33341baca46cc909efe860feda912: basis:dept:130203:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-role:all-staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-role:all-staff'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("app:its:nsreturn:etc:readers", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 2f9d18bcd3744b53b1a2197501408db6: app:its:nsreturn:etc:readers");  }
    privilege = Privilege.listToPriv("readers", false);
    group = GroupFinder.findByName(grouperSession, "app:its:nsreturn:sources", false);
    if (privilege != null) { if (subject != null) { if (group != null) { boolean changed = group.grantPriv(subject, privilege, false);    gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group privilege: " + group.getName() + ", privilege: " + privilege + ", subject: " + GrouperUtil.subjectToString(subject)); }  } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'app:its:nsreturn:sources'"); } }  } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:120200:employee", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 305ee9a358de4288bc582b5ae16f0f69: basis:org:120200:employee");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-category:all-employee", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-category:all-employee'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:120203:contractor", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 3296ce0203414a079c361e21276d2951: basis:dept:120203:contractor");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:120200:contractor", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:120200:contractor'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:120203:contractor", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 3296ce0203414a079c361e21276d2951: basis:dept:120203:contractor");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-role:all-contractor", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-role:all-contractor'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("app:its:pcavoid:etc:updaters", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 331bb9b7934c4f7e9682adce0d117591: app:its:pcavoid:etc:updaters");  }
    privilege = Privilege.listToPriv("updaters", false);
    group = GroupFinder.findByName(grouperSession, "app:its:pcavoid:sources", false);
    if (privilege != null) { if (subject != null) { if (group != null) { boolean changed = group.grantPriv(subject, privilege, false);    gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group privilege: " + group.getName() + ", privilege: " + privilege + ", subject: " + GrouperUtil.subjectToString(subject)); }  } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'app:its:pcavoid:sources'"); } }  } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:130100:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 33c608beda2a4824b48dab86d5abd0ca: basis:dept:130100:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:130100:employee", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:130100:employee'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:130100:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 33c608beda2a4824b48dab86d5abd0ca: basis:dept:130100:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:130100:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:130100:staff'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:130100:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 33c608beda2a4824b48dab86d5abd0ca: basis:dept:130100:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-role:all-staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-role:all-staff'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("app:its:nistaff:etc:updaters", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 341cc7068ef14543abc0ac7a4d09d3e4: app:its:nistaff:etc:updaters");  }
    privilege = Privilege.listToPriv("updaters", false);
    group = GroupFinder.findByName(grouperSession, "app:its:nistaff:sources", false);
    if (privilege != null) { if (subject != null) { if (group != null) { boolean changed = group.grantPriv(subject, privilege, false);    gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group privilege: " + group.getName() + ", privilege: " + privilege + ", subject: " + GrouperUtil.subjectToString(subject)); }  } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'app:its:nistaff:sources'"); } }  } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:110200:faculty", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 3792af53d43c49a28a8ea21669c25d4f: basis:dept:110200:faculty");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:110200:employee", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:110200:employee'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:110200:faculty", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 3792af53d43c49a28a8ea21669c25d4f: basis:dept:110200:faculty");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:110200:faculty", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:110200:faculty'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:110200:faculty", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 3792af53d43c49a28a8ea21669c25d4f: basis:dept:110200:faculty");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-role:all-faculty", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-role:all-faculty'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:110000:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 37de26d5c13e49bfb083150cb0100af6: basis:org:110000:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "app:its:nistaff:etc:updaters", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'app:its:nistaff:etc:updaters'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:110000:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 37de26d5c13e49bfb083150cb0100af6: basis:org:110000:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "app:its:pcavoid:etc:readers", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'app:its:pcavoid:etc:readers'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:110000:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 37de26d5c13e49bfb083150cb0100af6: basis:org:110000:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-category:all-staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-category:all-staff'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:130100:student_worker", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 3ae6f5fd1f734dc0b4862e0b99a8c56e: basis:org:130100:student_worker");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "app:its:pcavoid:sources", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'app:its:pcavoid:sources'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:130100:student_worker", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 3ae6f5fd1f734dc0b4862e0b99a8c56e: basis:org:130100:student_worker");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-category:all-student_worker", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-category:all-student_worker'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:120202:contractor", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 3d177eeb2a764af7b08a372e2e989083: basis:dept:120202:contractor");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:120200:contractor", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:120200:contractor'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:120202:contractor", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 3d177eeb2a764af7b08a372e2e989083: basis:dept:120202:contractor");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-role:all-contractor", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-role:all-contractor'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:120000:student_worker", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 3f5c595875054dc8ade2a2e116369553: basis:org:120000:student_worker");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "app:its:lbsimply:etc:readers", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'app:its:lbsimply:etc:readers'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:120000:student_worker", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 3f5c595875054dc8ade2a2e116369553: basis:org:120000:student_worker");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-category:all-student_worker", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-category:all-student_worker'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:110102:contractor", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 42968bfbce9a4d47b53d17d48aeeb671: basis:dept:110102:contractor");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:110100:contractor", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:110100:contractor'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:110102:contractor", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 42968bfbce9a4d47b53d17d48aeeb671: basis:dept:110102:contractor");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-role:all-contractor", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-role:all-contractor'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:130200:faculty", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 464aed4b8d624d19a0028249b6f71362: basis:org:130200:faculty");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "app:its:cttoday:sources", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'app:its:cttoday:sources'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:130200:faculty", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 464aed4b8d624d19a0028249b6f71362: basis:org:130200:faculty");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "app:its:nsreturn:sources", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'app:its:nsreturn:sources'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:130200:faculty", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 464aed4b8d624d19a0028249b6f71362: basis:org:130200:faculty");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-category:all-faculty", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-category:all-faculty'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:130100:affiliate", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 47c347b3afeb481bb2548249be1fb6ac: basis:org:130100:affiliate");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "app:its:nsreturn:sources", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'app:its:nsreturn:sources'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:130100:affiliate", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 47c347b3afeb481bb2548249be1fb6ac: basis:org:130100:affiliate");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-category:all-affiliate", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-category:all-affiliate'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:130102:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 513284a770f646558284cda6d86cc7bb: basis:dept:130102:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:130100:employee", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:130100:employee'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:130102:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 513284a770f646558284cda6d86cc7bb: basis:dept:130102:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:130100:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:130100:staff'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:130102:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 513284a770f646558284cda6d86cc7bb: basis:dept:130102:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-role:all-staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-role:all-staff'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:120100:contractor", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 51d9fd9223334a46970f55fa4ea4317a: basis:dept:120100:contractor");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:120100:affiliate", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:120100:affiliate'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:120100:contractor", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 51d9fd9223334a46970f55fa4ea4317a: basis:dept:120100:contractor");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:120100:contractor", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:120100:contractor'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:120100:contractor", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 51d9fd9223334a46970f55fa4ea4317a: basis:dept:120100:contractor");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-role:all-contractor", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-role:all-contractor'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:120100:faculty", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 51dd9e5137df4c58a168897f07af32c3: basis:dept:120100:faculty");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:120100:employee", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:120100:employee'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:120100:faculty", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 51dd9e5137df4c58a168897f07af32c3: basis:dept:120100:faculty");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:120100:faculty", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:120100:faculty'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:120100:faculty", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 51dd9e5137df4c58a168897f07af32c3: basis:dept:120100:faculty");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-role:all-faculty", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-role:all-faculty'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:130101:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 5316f248c8f74291816c8839e5a627d9: basis:dept:130101:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:130100:employee", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:130100:employee'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:130101:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 5316f248c8f74291816c8839e5a627d9: basis:dept:130101:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:130100:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:130100:staff'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:130101:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 5316f248c8f74291816c8839e5a627d9: basis:dept:130101:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-role:all-staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-role:all-staff'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:110100:contractor", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 5370cd05634941ba8e21fae8d4990ccd: basis:org:110100:contractor");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "app:its:lbsimply:etc:updaters", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'app:its:lbsimply:etc:updaters'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:110100:contractor", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 5370cd05634941ba8e21fae8d4990ccd: basis:org:110100:contractor");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "app:its:nistaff:sources", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'app:its:nistaff:sources'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:110100:contractor", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 5370cd05634941ba8e21fae8d4990ccd: basis:org:110100:contractor");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-category:all-contractor", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-category:all-contractor'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("app:its:cttoday:etc:readers", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 537b5e41c3834209bd3b26c9d3cb3474: app:its:cttoday:etc:readers");  }
    privilege = Privilege.listToPriv("readers", false);
    group = GroupFinder.findByName(grouperSession, "app:its:cttoday:sources", false);
    if (privilege != null) { if (subject != null) { if (group != null) { boolean changed = group.grantPriv(subject, privilege, false);    gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group privilege: " + group.getName() + ", privilege: " + privilege + ", subject: " + GrouperUtil.subjectToString(subject)); }  } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'app:its:cttoday:sources'"); } }  } 
    subject = SubjectFinder.findByIdentifierAndSource("app:its:cttoday:etc:readers", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 537b5e41c3834209bd3b26c9d3cb3474: app:its:cttoday:etc:readers");  }
    privilege = Privilege.listToPriv("readers", false);
    group = GroupFinder.findByName(grouperSession, "basis:dept:120000:student_worker", false);
    if (privilege != null) { if (subject != null) { if (group != null) { boolean changed = group.grantPriv(subject, privilege, false);    gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group privilege: " + group.getName() + ", privilege: " + privilege + ", subject: " + GrouperUtil.subjectToString(subject)); }  } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:120000:student_worker'"); } }  } 
    subject = SubjectFinder.findByIdentifierAndSource("app:its:cttoday:etc:readers", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 537b5e41c3834209bd3b26c9d3cb3474: app:its:cttoday:etc:readers");  }
    privilege = Privilege.listToPriv("readers", false);
    group = GroupFinder.findByName(grouperSession, "basis:org:120000:affiliate", false);
    if (privilege != null) { if (subject != null) { if (group != null) { boolean changed = group.grantPriv(subject, privilege, false);    gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group privilege: " + group.getName() + ", privilege: " + privilege + ", subject: " + GrouperUtil.subjectToString(subject)); }  } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:120000:affiliate'"); } }  } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:100000:employee", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 541b7f84963a4b1c90df70edbe57c9f5: basis:org:100000:employee");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "app:its:lbsimply:etc:readers", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'app:its:lbsimply:etc:readers'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:100000:employee", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 541b7f84963a4b1c90df70edbe57c9f5: basis:org:100000:employee");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "app:its:nistaff:sources", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'app:its:nistaff:sources'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:100000:employee", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 541b7f84963a4b1c90df70edbe57c9f5: basis:org:100000:employee");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-category:all-employee", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-category:all-employee'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:110000:employee", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 5997508cbafe4a2daf92f8c8dee2f9b9: basis:org:110000:employee");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-category:all-employee", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-category:all-employee'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:130101:student_worker", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 5ef9df2d594b4836985cc852f99694d5: basis:dept:130101:student_worker");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:130100:student_worker", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:130100:student_worker'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:130101:student_worker", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 5ef9df2d594b4836985cc852f99694d5: basis:dept:130101:student_worker");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-role:all-student_worker", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-role:all-student_worker'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:110202:faculty", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 5fb6e5d599f443e386ebe73b2498f049: basis:dept:110202:faculty");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:110200:employee", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:110200:employee'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:110202:faculty", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 5fb6e5d599f443e386ebe73b2498f049: basis:dept:110202:faculty");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:110200:faculty", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:110200:faculty'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:110202:faculty", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 5fb6e5d599f443e386ebe73b2498f049: basis:dept:110202:faculty");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-role:all-faculty", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-role:all-faculty'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:130101:affiliate", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 600a04c8b0374573955612c55ee77b38: basis:dept:130101:affiliate");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:130100:affiliate", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:130100:affiliate'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:130101:affiliate", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 600a04c8b0374573955612c55ee77b38: basis:dept:130101:affiliate");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-role:all-affiliate", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-role:all-affiliate'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:120000:student_worker", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 61726dfa6b0a4d568f71af37ee16a13f: basis:dept:120000:student_worker");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:120000:affiliate", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:120000:affiliate'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:120000:student_worker", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 61726dfa6b0a4d568f71af37ee16a13f: basis:dept:120000:student_worker");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:120000:student_worker", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:120000:student_worker'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:120000:student_worker", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 61726dfa6b0a4d568f71af37ee16a13f: basis:dept:120000:student_worker");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-role:all-student_worker", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-role:all-student_worker'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:110000:affiliate", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 62f584b2cbda4a189db01dc6a88bf972: basis:dept:110000:affiliate");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:110000:affiliate", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:110000:affiliate'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:110000:affiliate", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 62f584b2cbda4a189db01dc6a88bf972: basis:dept:110000:affiliate");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-role:all-affiliate", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-role:all-affiliate'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:110201:faculty", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 63990a6dcd20433684ac7cc798a88363: basis:dept:110201:faculty");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:110200:employee", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:110200:employee'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:110201:faculty", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 63990a6dcd20433684ac7cc798a88363: basis:dept:110201:faculty");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:110200:faculty", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:110200:faculty'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:110201:faculty", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 63990a6dcd20433684ac7cc798a88363: basis:dept:110201:faculty");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-role:all-faculty", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-role:all-faculty'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:120000:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 663580829b9e431d91e05fdce17d2933: basis:dept:120000:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:120000:employee", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:120000:employee'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:120000:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 663580829b9e431d91e05fdce17d2933: basis:dept:120000:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:120000:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:120000:staff'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:120000:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 663580829b9e431d91e05fdce17d2933: basis:dept:120000:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-role:all-staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-role:all-staff'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:130201:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 679cb60c7e1e43a283088e1e349091a1: basis:dept:130201:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:130200:employee", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:130200:employee'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:130201:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 679cb60c7e1e43a283088e1e349091a1: basis:dept:130201:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:130200:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:130200:staff'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:130201:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 679cb60c7e1e43a283088e1e349091a1: basis:dept:130201:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-role:all-staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-role:all-staff'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:100000:affiliate", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 6958490d7f8c44d5af3b340311b08835: basis:dept:100000:affiliate");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:100000:affiliate", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:100000:affiliate'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:100000:affiliate", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 6958490d7f8c44d5af3b340311b08835: basis:dept:100000:affiliate");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-role:all-affiliate", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-role:all-affiliate'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:110202:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 6a24f57408174a51a761539272f1bbb1: basis:dept:110202:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:110200:employee", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:110200:employee'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:110202:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 6a24f57408174a51a761539272f1bbb1: basis:dept:110202:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:110200:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:110200:staff'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:110202:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 6a24f57408174a51a761539272f1bbb1: basis:dept:110202:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-role:all-staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-role:all-staff'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:110201:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 6cb9510b01194c3ba24c2bce66f8c658: basis:dept:110201:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:110200:employee", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:110200:employee'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:110201:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 6cb9510b01194c3ba24c2bce66f8c658: basis:dept:110201:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:110200:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:110200:staff'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:110201:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 6cb9510b01194c3ba24c2bce66f8c658: basis:dept:110201:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-role:all-staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-role:all-staff'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:120200:faculty", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 6f288bd4870449e49f5fd1b5a001dfcd: basis:org:120200:faculty");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "app:its:nsreturn:sources", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'app:its:nsreturn:sources'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:120200:faculty", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 6f288bd4870449e49f5fd1b5a001dfcd: basis:org:120200:faculty");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "app:its:pcavoid:sources", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'app:its:pcavoid:sources'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:120200:faculty", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 6f288bd4870449e49f5fd1b5a001dfcd: basis:org:120200:faculty");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-category:all-faculty", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-category:all-faculty'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:110100:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 70dd3bb21679448591dfe6c151a02d51: basis:org:110100:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "app:its:lbsimply:sources", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'app:its:lbsimply:sources'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:110100:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 70dd3bb21679448591dfe6c151a02d51: basis:org:110100:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "app:its:nsreturn:etc:updaters", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'app:its:nsreturn:etc:updaters'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:110100:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 70dd3bb21679448591dfe6c151a02d51: basis:org:110100:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "app:its:pcavoid:etc:updaters", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'app:its:pcavoid:etc:updaters'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:110100:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 70dd3bb21679448591dfe6c151a02d51: basis:org:110100:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-category:all-staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-category:all-staff'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:130201:student_worker", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 74784f873e4247148e185aaffa1f0673: basis:dept:130201:student_worker");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:130200:student_worker", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:130200:student_worker'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:130201:student_worker", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 74784f873e4247148e185aaffa1f0673: basis:dept:130201:student_worker");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-role:all-student_worker", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-role:all-student_worker'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:130200:contractor", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 7a34a6e520814c5ab60dfce73fc88ce0: basis:dept:130200:contractor");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:130200:contractor", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:130200:contractor'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:130200:contractor", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 7a34a6e520814c5ab60dfce73fc88ce0: basis:dept:130200:contractor");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-role:all-contractor", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-role:all-contractor'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:130100:faculty", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 7d7cd3bfe9114687bde427f86a178ef1: basis:dept:130100:faculty");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:130100:employee", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:130100:employee'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:130100:faculty", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 7d7cd3bfe9114687bde427f86a178ef1: basis:dept:130100:faculty");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:130100:faculty", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:130100:faculty'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:130100:faculty", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 7d7cd3bfe9114687bde427f86a178ef1: basis:dept:130100:faculty");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-role:all-faculty", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-role:all-faculty'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:130202:affiliate", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 7e0126a06a234237b6d88178f1c69c41: basis:dept:130202:affiliate");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:130200:affiliate", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:130200:affiliate'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:130202:affiliate", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 7e0126a06a234237b6d88178f1c69c41: basis:dept:130202:affiliate");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-role:all-affiliate", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-role:all-affiliate'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("app:its:nsreturn:etc:updaters", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 7f5453e622a64028963de763a16b7459: app:its:nsreturn:etc:updaters");  }
    privilege = Privilege.listToPriv("updaters", false);
    group = GroupFinder.findByName(grouperSession, "app:its:nsreturn:sources", false);
    if (privilege != null) { if (subject != null) { if (group != null) { boolean changed = group.grantPriv(subject, privilege, false);    gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group privilege: " + group.getName() + ", privilege: " + privilege + ", subject: " + GrouperUtil.subjectToString(subject)); }  } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'app:its:nsreturn:sources'"); } }  } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:120101:faculty", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 7fdcb494195c4cdba0cd2032c4a9cac7: basis:dept:120101:faculty");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:120100:employee", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:120100:employee'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:120101:faculty", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 7fdcb494195c4cdba0cd2032c4a9cac7: basis:dept:120101:faculty");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:120100:faculty", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:120100:faculty'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:120101:faculty", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 7fdcb494195c4cdba0cd2032c4a9cac7: basis:dept:120101:faculty");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-role:all-faculty", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-role:all-faculty'"); } } 
  }

  public static void loadSampleData3() {

    subject = SubjectFinder.findByIdAndSource("800000000", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000000");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:130202:affiliate", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:130202:affiliate'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000001", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000001");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:130100:contractor", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:130100:contractor'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000002", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000002");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:110101:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:110101:staff'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000003", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000003");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:110103:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:110103:staff'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000003", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000003");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:110203:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:110203:staff'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000004", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000004");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:110000:affiliate", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:110000:affiliate'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000004", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000004");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:110200:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:110200:staff'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000005", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000005");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:120201:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:120201:staff'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000006", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000006");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:120103:student_worker", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:120103:student_worker'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000007", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000007");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:110203:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:110203:staff'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000008", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000008");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:110203:contractor", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:110203:contractor'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000008", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000008");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:120000:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:120000:staff'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000009", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000009");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:120200:faculty", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:120200:faculty'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000009", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000009");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:120200:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:120200:staff'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000010", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000010");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:130103:contractor", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:130103:contractor'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000011", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000011");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:110202:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:110202:staff'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000011", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000011");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:130203:affiliate", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:130203:affiliate'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000012", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000012");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:130200:faculty", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:130200:faculty'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000013", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000013");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:130200:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:130200:staff'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000014", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000014");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:110202:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:110202:staff'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000015", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000015");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:110103:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:110103:staff'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000015", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000015");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:120202:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:120202:staff'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000016", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000016");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:130100:contractor", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:130100:contractor'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000017", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000017");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:120201:student_worker", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:120201:student_worker'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000018", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000018");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:130200:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:130200:staff'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000019", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000019");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:130101:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:130101:staff'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000020", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000020");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:130201:student_worker", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:130201:student_worker'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000021", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000021");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:120202:contractor", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:120202:contractor'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000022", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000022");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:120103:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:120103:staff'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000023", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000023");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:120203:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:120203:staff'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000024", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000024");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:130200:contractor", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:130200:contractor'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000025", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000025");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:110200:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:110200:staff'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000025", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000025");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:120100:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:120100:staff'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000025", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000025");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:130103:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:130103:staff'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000026", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000026");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:120100:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:120100:staff'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000027", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000027");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:110203:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:110203:staff'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000028", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000028");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:120203:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:120203:staff'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000029", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000029");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:110100:affiliate", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:110100:affiliate'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000029", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000029");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:110102:contractor", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:110102:contractor'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000029", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000029");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:130203:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:130203:staff'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000030", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000030");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:120100:faculty", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:120100:faculty'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000031", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000031");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:120200:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:120200:staff'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000032", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000032");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:110101:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:110101:staff'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000033", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000033");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:120102:faculty", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:120102:faculty'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000034", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000034");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:110100:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:110100:staff'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000034", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000034");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "etc:grouperUi:grouperUiUserData", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'etc:grouperUi:grouperUiUserData'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000035", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000035");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:130202:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:130202:staff'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000036", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000036");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:120101:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:120101:staff'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000037", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000037");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:110201:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:110201:staff'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000037", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000037");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:130103:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:130103:staff'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000037", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000037");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:130200:affiliate", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:130200:affiliate'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000038", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000038");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:120102:faculty", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:120102:faculty'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000039", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000039");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:100000:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:100000:staff'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000040", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000040");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:130000:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:130000:staff'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000041", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000041");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:130102:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:130102:staff'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000041", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000041");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "etc:grouperUi:grouperUiUserData", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'etc:grouperUi:grouperUiUserData'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000042", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000042");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:130102:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:130102:staff'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000043", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000043");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:120200:contractor", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:120200:contractor'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000044", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000044");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:120101:faculty", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:120101:faculty'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000045", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000045");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:100000:contractor", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:100000:contractor'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000045", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000045");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:130100:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:130100:staff'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000045", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000045");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:130101:student_worker", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:130101:student_worker'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000046", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000046");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:120200:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:120200:staff'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000047", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000047");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:120103:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:120103:staff'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000048", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000048");  }
  
    group = GroupFinder.findByName(grouperSession, "basis:dept:120201:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:120201:staff'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000049", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000049");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:110202:faculty", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:110202:faculty'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000050", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000050");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:110102:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:110102:staff'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000051", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000051");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:130100:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:130100:staff'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000052", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000052");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:130000:contractor", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:130000:contractor'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000053", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000053");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:110102:contractor", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:110102:contractor'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000053", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000053");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:110200:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:110200:staff'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000054", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000054");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:120202:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:120202:staff'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000054", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000054");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:130101:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:130101:staff'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000055", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000055");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:130100:faculty", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:130100:faculty'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000056", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000056");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:110201:faculty", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:110201:faculty'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000057", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000057");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:110000:student_worker", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:110000:student_worker'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000057", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000057");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:120202:faculty", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:120202:faculty'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000058", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000058");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:100000:affiliate", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:100000:affiliate'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000058", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000058");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:110103:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:110103:staff'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000059", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000059");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:110101:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:110101:staff'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000060", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000060");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:110200:faculty", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:110200:faculty'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000060", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000060");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:120201:affiliate", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:120201:affiliate'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000060", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000060");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:120203:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:120203:staff'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000061", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000061");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:110100:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:110100:staff'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000061", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000061");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:130202:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:130202:staff'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000062", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000062");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:120000:student_worker", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:120000:student_worker'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000062", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000062");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:130101:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:130101:staff'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000063", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000063");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:110101:contractor", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:110101:contractor'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000063", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000063");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:110203:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:110203:staff'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000064", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000064");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:120103:faculty", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:120103:faculty'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000065", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000065");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:110000:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:110000:staff'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000065", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000065");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:110103:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:110103:staff'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000066", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000066");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:110103:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:110103:staff'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000066", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000066");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:130201:affiliate", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:130201:affiliate'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000067", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000067");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:120101:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:120101:staff'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000068", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000068");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:120100:faculty", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:120100:faculty'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000069", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000069");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:130200:contractor", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:130200:contractor'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000070", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000070");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:110200:affiliate", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:110200:affiliate'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000070", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000070");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:120203:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:120203:staff'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000071", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000071");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:110101:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:110101:staff'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000071", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000071");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:130201:affiliate", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:130201:affiliate'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000072", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000072");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:110102:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:110102:staff'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000073", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000073");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:120000:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:120000:staff'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000074", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000074");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:110201:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:110201:staff'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000075", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000075");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:110202:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:110202:staff'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000076", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000076");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:110202:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:110202:staff'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000076", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000076");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:120203:contractor", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:120203:contractor'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000077", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000077");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:110000:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:110000:staff'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000077", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000077");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:110100:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:110100:staff'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000077", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000077");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "etc:grouperUi:grouperUiUserData", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'etc:grouperUi:grouperUiUserData'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000078", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000078");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:110100:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:110100:staff'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000079", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000079");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:120000:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:120000:staff'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000080", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000080");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:130101:affiliate", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:130101:affiliate'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000080", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000080");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:130102:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:130102:staff'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000081", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000081");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:110000:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:110000:staff'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000082", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000082");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:130201:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:130201:staff'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000083", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000083");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:130000:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:130000:staff'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000084", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000084");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:120102:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:120102:staff'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000085", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000085");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:120000:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:120000:staff'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000085", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000085");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:130203:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:130203:staff'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000086", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000086");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:100000:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:100000:staff'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000086", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000086");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:120101:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:120101:staff'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000087", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000087");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:130103:contractor", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:130103:contractor'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000087", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000087");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:130103:faculty", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:130103:faculty'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000088", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000088");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:120203:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:120203:staff'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000088", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000088");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:130202:faculty", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:130202:faculty'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000089", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000089");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:120100:contractor", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:120100:contractor'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000089", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000089");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:130100:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:130100:staff'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000090", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000090");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:130203:contractor", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:130203:contractor'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000091", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000091");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:110202:affiliate", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:110202:affiliate'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000091", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000091");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:130000:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:130000:staff'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000092", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000092");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:110103:faculty", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:110103:faculty'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000093", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000093");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:120100:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:120100:staff'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000094", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000094");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:120202:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:120202:staff'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000095", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000095");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:120201:faculty", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:120201:faculty'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000096", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000096");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:130000:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:130000:staff'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000097", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000097");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:130202:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:130202:staff'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000098", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000098");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:110200:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:110200:staff'"); } } 
    subject = SubjectFinder.findByIdAndSource("800000099", "jdbc", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000099");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:dept:120202:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:120202:staff'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:120100:contractor", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 81bf0873572c43d280021bbd7bf068fe: basis:org:120100:contractor");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "app:its:cttoday:etc:updaters", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'app:its:cttoday:etc:updaters'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:120100:contractor", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 81bf0873572c43d280021bbd7bf068fe: basis:org:120100:contractor");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-category:all-contractor", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-category:all-contractor'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:110000:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 85fc77e648ce40968b327e2f51b35a9d: basis:dept:110000:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:110000:employee", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:110000:employee'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:110000:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 85fc77e648ce40968b327e2f51b35a9d: basis:dept:110000:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:110000:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:110000:staff'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:110000:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 85fc77e648ce40968b327e2f51b35a9d: basis:dept:110000:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-role:all-staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-role:all-staff'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:130000:contractor", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 86470037165d4b1c93f3f0d5d6e420ec: basis:dept:130000:contractor");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:130000:affiliate", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:130000:affiliate'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:130000:contractor", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 86470037165d4b1c93f3f0d5d6e420ec: basis:dept:130000:contractor");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:130000:contractor", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:130000:contractor'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:130000:contractor", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 86470037165d4b1c93f3f0d5d6e420ec: basis:dept:130000:contractor");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-role:all-contractor", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-role:all-contractor'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:120102:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 8649a0d6eb274cf0bd067915299b2b63: basis:dept:120102:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:120100:employee", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:120100:employee'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:120102:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 8649a0d6eb274cf0bd067915299b2b63: basis:dept:120102:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:120100:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:120100:staff'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:120102:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 8649a0d6eb274cf0bd067915299b2b63: basis:dept:120102:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-role:all-staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-role:all-staff'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:130200:affiliate", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 887afeb28439496f939817f7ac86a49e: basis:org:130200:affiliate");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "app:its:cttoday:etc:readers", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'app:its:cttoday:etc:readers'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:130200:affiliate", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 887afeb28439496f939817f7ac86a49e: basis:org:130200:affiliate");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "app:its:nistaff:etc:updaters", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'app:its:nistaff:etc:updaters'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:130200:affiliate", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 887afeb28439496f939817f7ac86a49e: basis:org:130200:affiliate");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "app:its:nsreturn:etc:readers", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'app:its:nsreturn:etc:readers'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:130200:affiliate", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 887afeb28439496f939817f7ac86a49e: basis:org:130200:affiliate");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-category:all-affiliate", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-category:all-affiliate'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:130100:employee", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 88d86c27626c473dbb98d5697051c64e: basis:org:130100:employee");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "app:its:cttoday:etc:readers", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'app:its:cttoday:etc:readers'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:130100:employee", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 88d86c27626c473dbb98d5697051c64e: basis:org:130100:employee");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-category:all-employee", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-category:all-employee'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:110000:student_worker", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 91fa2b2058914ec7aeaa565f7f3abe14: basis:dept:110000:student_worker");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:110000:student_worker", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:110000:student_worker'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:110000:student_worker", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 91fa2b2058914ec7aeaa565f7f3abe14: basis:dept:110000:student_worker");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-role:all-student_worker", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-role:all-student_worker'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:120203:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 925c9d0b7e75411ba5d9afd39cb986ec: basis:dept:120203:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:120200:employee", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:120200:employee'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:120203:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 925c9d0b7e75411ba5d9afd39cb986ec: basis:dept:120203:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:120200:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:120200:staff'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:120203:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 925c9d0b7e75411ba5d9afd39cb986ec: basis:dept:120203:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-role:all-staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-role:all-staff'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:120202:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 9682f36e13e14e49955a9e5c744d6286: basis:dept:120202:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:120200:employee", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:120200:employee'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:120202:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 9682f36e13e14e49955a9e5c744d6286: basis:dept:120202:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:120200:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:120200:staff'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:120202:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 9682f36e13e14e49955a9e5c744d6286: basis:dept:120202:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-role:all-staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-role:all-staff'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:110101:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 9903845dbbbe42048c31a55cae146d79: basis:dept:110101:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:110100:employee", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:110100:employee'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:110101:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 9903845dbbbe42048c31a55cae146d79: basis:dept:110101:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:110100:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:110100:staff'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:110101:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 9903845dbbbe42048c31a55cae146d79: basis:dept:110101:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-role:all-staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-role:all-staff'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:130200:faculty", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 99940781fb0f49a397e013240c3e0c97: basis:dept:130200:faculty");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:130200:employee", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:130200:employee'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:130200:faculty", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 99940781fb0f49a397e013240c3e0c97: basis:dept:130200:faculty");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:130200:faculty", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:130200:faculty'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:130200:faculty", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 99940781fb0f49a397e013240c3e0c97: basis:dept:130200:faculty");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-role:all-faculty", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-role:all-faculty'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:100000:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 9a35761232a2422ab2b89c95a488878c: basis:dept:100000:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:100000:employee", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:100000:employee'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:100000:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 9a35761232a2422ab2b89c95a488878c: basis:dept:100000:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:100000:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:100000:staff'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:100000:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 9a35761232a2422ab2b89c95a488878c: basis:dept:100000:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-role:all-staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-role:all-staff'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:110100:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 9be436998f25482aa5780213dc3c3906: basis:dept:110100:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:110100:employee", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:110100:employee'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:110100:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 9be436998f25482aa5780213dc3c3906: basis:dept:110100:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:110100:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:110100:staff'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:110100:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 9be436998f25482aa5780213dc3c3906: basis:dept:110100:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-role:all-staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-role:all-staff'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:110100:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 9be436998f25482aa5780213dc3c3906: basis:dept:110100:staff");  }
    privilege = Privilege.listToPriv("readers", false);
    group = GroupFinder.findByName(grouperSession, "app:its:nistaff:sources", false);
    if (privilege != null) { if (subject != null) { if (group != null) { boolean changed = group.grantPriv(subject, privilege, false);    gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group privilege: " + group.getName() + ", privilege: " + privilege + ", subject: " + GrouperUtil.subjectToString(subject)); }  } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'app:its:nistaff:sources'"); } }  } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:110100:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 9be436998f25482aa5780213dc3c3906: basis:dept:110100:staff");  }
    privilege = Privilege.listToPriv("readers", false);
    group = GroupFinder.findByName(grouperSession, "app:its:nsreturn:Next Student Return Authorized", false);
    if (privilege != null) { if (subject != null) { if (group != null) { boolean changed = group.grantPriv(subject, privilege, false);    gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group privilege: " + group.getName() + ", privilege: " + privilege + ", subject: " + GrouperUtil.subjectToString(subject)); }  } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'app:its:nsreturn:Next Student Return Authorized'"); } }  } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:110100:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 9be436998f25482aa5780213dc3c3906: basis:dept:110100:staff");  }
    privilege = Privilege.listToPriv("readers", false);
    group = GroupFinder.findByName(grouperSession, "app:its:pcavoid:sources", false);
    if (privilege != null) { if (subject != null) { if (group != null) { boolean changed = group.grantPriv(subject, privilege, false);    gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group privilege: " + group.getName() + ", privilege: " + privilege + ", subject: " + GrouperUtil.subjectToString(subject)); }  } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'app:its:pcavoid:sources'"); } }  } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:110100:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 9be436998f25482aa5780213dc3c3906: basis:dept:110100:staff");  }
    privilege = Privilege.listToPriv("readers", false);
    group = GroupFinder.findByName(grouperSession, "basis:dept:110100:staff", false);
    if (privilege != null) { if (subject != null) { if (group != null) { boolean changed = group.grantPriv(subject, privilege, false);    gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group privilege: " + group.getName() + ", privilege: " + privilege + ", subject: " + GrouperUtil.subjectToString(subject)); }  } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:110100:staff'"); } }  } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:110100:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 9be436998f25482aa5780213dc3c3906: basis:dept:110100:staff");  }
    privilege = Privilege.listToPriv("readers", false);
    group = GroupFinder.findByName(grouperSession, "basis:org:110100:affiliate", false);
    if (privilege != null) { if (subject != null) { if (group != null) { boolean changed = group.grantPriv(subject, privilege, false);    gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group privilege: " + group.getName() + ", privilege: " + privilege + ", subject: " + GrouperUtil.subjectToString(subject)); }  } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:110100:affiliate'"); } }  } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:110100:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 9be436998f25482aa5780213dc3c3906: basis:dept:110100:staff");  }
    privilege = Privilege.listToPriv("readers", false);
    group = GroupFinder.findByName(grouperSession, "basis:org:110100:employee", false);
    if (privilege != null) { if (subject != null) { if (group != null) { boolean changed = group.grantPriv(subject, privilege, false);    gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group privilege: " + group.getName() + ", privilege: " + privilege + ", subject: " + GrouperUtil.subjectToString(subject)); }  } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:110100:employee'"); } }  } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:110100:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 9be436998f25482aa5780213dc3c3906: basis:dept:110100:staff");  }
    privilege = Privilege.listToPriv("readers", false);
    group = GroupFinder.findByName(grouperSession, "ref:job:by-role:all-affiliate", false);
    if (privilege != null) { if (subject != null) { if (group != null) { boolean changed = group.grantPriv(subject, privilege, false);    gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group privilege: " + group.getName() + ", privilege: " + privilege + ", subject: " + GrouperUtil.subjectToString(subject)); }  } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-role:all-affiliate'"); } }  } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:110100:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 9be436998f25482aa5780213dc3c3906: basis:dept:110100:staff");  }
    privilege = Privilege.listToPriv("viewers", false);
    group = GroupFinder.findByName(grouperSession, "app:its:lbsimply:sources", false);
    if (privilege != null) { if (subject != null) { if (group != null) { boolean changed = group.grantPriv(subject, privilege, false);    gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group privilege: " + group.getName() + ", privilege: " + privilege + ", subject: " + GrouperUtil.subjectToString(subject)); }  } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'app:its:lbsimply:sources'"); } }  } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:110100:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 9be436998f25482aa5780213dc3c3906: basis:dept:110100:staff");  }
    privilege = Privilege.listToPriv("viewers", false);
    group = GroupFinder.findByName(grouperSession, "app:its:nsreturn:sources", false);
    if (privilege != null) { if (subject != null) { if (group != null) { boolean changed = group.grantPriv(subject, privilege, false);    gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group privilege: " + group.getName() + ", privilege: " + privilege + ", subject: " + GrouperUtil.subjectToString(subject)); }  } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'app:its:nsreturn:sources'"); } }  } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:110100:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 9be436998f25482aa5780213dc3c3906: basis:dept:110100:staff");  }
    privilege = Privilege.listToPriv("viewers", false);
    group = GroupFinder.findByName(grouperSession, "basis:dept:110100:affiliate", false);
    if (privilege != null) { if (subject != null) { if (group != null) { boolean changed = group.grantPriv(subject, privilege, false);    gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group privilege: " + group.getName() + ", privilege: " + privilege + ", subject: " + GrouperUtil.subjectToString(subject)); }  } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:dept:110100:affiliate'"); } }  } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:110100:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 9be436998f25482aa5780213dc3c3906: basis:dept:110100:staff");  }
    privilege = Privilege.listToPriv("viewers", false);
    group = GroupFinder.findByName(grouperSession, "basis:org:110100:staff", false);
    if (privilege != null) { if (subject != null) { if (group != null) { boolean changed = group.grantPriv(subject, privilege, false);    gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group privilege: " + group.getName() + ", privilege: " + privilege + ", subject: " + GrouperUtil.subjectToString(subject)); }  } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:110100:staff'"); } }  } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:110100:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 9be436998f25482aa5780213dc3c3906: basis:dept:110100:staff");  }
    privilege = Privilege.listToPriv("viewers", false);
    group = GroupFinder.findByName(grouperSession, "etc:loader:basis:depts", false);
    if (privilege != null) { if (subject != null) { if (group != null) { boolean changed = group.grantPriv(subject, privilege, false);    gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group privilege: " + group.getName() + ", privilege: " + privilege + ", subject: " + GrouperUtil.subjectToString(subject)); }  } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'etc:loader:basis:depts'"); } }  } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:110100:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 9be436998f25482aa5780213dc3c3906: basis:dept:110100:staff");  }
    privilege = Privilege.listToPriv("viewers", false);
    group = GroupFinder.findByName(grouperSession, "ref:job:by-role:all-staff", false);
    if (privilege != null) { if (subject != null) { if (group != null) { boolean changed = group.grantPriv(subject, privilege, false);    gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group privilege: " + group.getName() + ", privilege: " + privilege + ", subject: " + GrouperUtil.subjectToString(subject)); }  } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-role:all-staff'"); } }  } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:100000:contractor", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 9d29781d0aef4bf08296cd58659c6ad1: basis:dept:100000:contractor");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:100000:contractor", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:100000:contractor'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:100000:contractor", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 9d29781d0aef4bf08296cd58659c6ad1: basis:dept:100000:contractor");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-role:all-contractor", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-role:all-contractor'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:110203:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 9e09a47959e5446083db952c3fb3e178: basis:dept:110203:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:110200:employee", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:110200:employee'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:110203:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 9e09a47959e5446083db952c3fb3e178: basis:dept:110203:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:110200:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:110200:staff'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:110203:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: 9e09a47959e5446083db952c3fb3e178: basis:dept:110203:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-role:all-staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-role:all-staff'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:130203:contractor", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: a2571d3a537745f5b6378606d25c2be1: basis:dept:130203:contractor");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:130200:contractor", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:130200:contractor'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:130203:contractor", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: a2571d3a537745f5b6378606d25c2be1: basis:dept:130203:contractor");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-role:all-contractor", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-role:all-contractor'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:110100:employee", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: a759ba0971c64a8b88b595d526ee3e6b: basis:org:110100:employee");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "app:its:lbsimply:etc:updaters", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'app:its:lbsimply:etc:updaters'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:110100:employee", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: a759ba0971c64a8b88b595d526ee3e6b: basis:org:110100:employee");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "app:its:lbsimply:sources", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'app:its:lbsimply:sources'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:110100:employee", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: a759ba0971c64a8b88b595d526ee3e6b: basis:org:110100:employee");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "app:its:nistaff:sources", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'app:its:nistaff:sources'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:110100:employee", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: a759ba0971c64a8b88b595d526ee3e6b: basis:org:110100:employee");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "app:its:pcavoid:sources", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'app:its:pcavoid:sources'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:110100:employee", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: a759ba0971c64a8b88b595d526ee3e6b: basis:org:110100:employee");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-category:all-employee", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-category:all-employee'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:110000:affiliate", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: a9580e4689714416b4850af3e9ba2513: basis:org:110000:affiliate");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "app:its:lbsimply:sources", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'app:its:lbsimply:sources'"); } } 

  }

  public static void loadSampleData4() {
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:110000:affiliate", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: a9580e4689714416b4850af3e9ba2513: basis:org:110000:affiliate");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "app:its:nistaff:etc:readers", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'app:its:nistaff:etc:readers'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:110000:affiliate", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: a9580e4689714416b4850af3e9ba2513: basis:org:110000:affiliate");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "app:its:nistaff:etc:updaters", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'app:its:nistaff:etc:updaters'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:110000:affiliate", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: a9580e4689714416b4850af3e9ba2513: basis:org:110000:affiliate");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-category:all-affiliate", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-category:all-affiliate'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:120000:affiliate", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: b06127660a164ed0a235afb6eacaede8: basis:org:120000:affiliate");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "app:its:cttoday:sources", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'app:its:cttoday:sources'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:120000:affiliate", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: b06127660a164ed0a235afb6eacaede8: basis:org:120000:affiliate");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-category:all-affiliate", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-category:all-affiliate'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:120101:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: b23abb3859fa4605930adcdb14508657: basis:dept:120101:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:120100:employee", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:120100:employee'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:120101:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: b23abb3859fa4605930adcdb14508657: basis:dept:120101:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:120100:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:120100:staff'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:120101:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: b23abb3859fa4605930adcdb14508657: basis:dept:120101:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-role:all-staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-role:all-staff'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:120201:student_worker", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: b4360ed345f94e0e90539fc16880dd99: basis:dept:120201:student_worker");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:120200:student_worker", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:120200:student_worker'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:120201:student_worker", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: b4360ed345f94e0e90539fc16880dd99: basis:dept:120201:student_worker");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-role:all-student_worker", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-role:all-student_worker'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:130103:faculty", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: b4c37af39e6d4ed0826e58a05c2dc03e: basis:dept:130103:faculty");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:130100:employee", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:130100:employee'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:130103:faculty", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: b4c37af39e6d4ed0826e58a05c2dc03e: basis:dept:130103:faculty");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:130100:faculty", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:130100:faculty'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:130103:faculty", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: b4c37af39e6d4ed0826e58a05c2dc03e: basis:dept:130103:faculty");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-role:all-faculty", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-role:all-faculty'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:120103:student_worker", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: b4cc6c141b2049f8a190702333b0ee57: basis:dept:120103:student_worker");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:120100:affiliate", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:120100:affiliate'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:120103:student_worker", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: b4cc6c141b2049f8a190702333b0ee57: basis:dept:120103:student_worker");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:120100:student_worker", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:120100:student_worker'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:120103:student_worker", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: b4cc6c141b2049f8a190702333b0ee57: basis:dept:120103:student_worker");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-role:all-student_worker", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-role:all-student_worker'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:120200:faculty", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: b53e173330884e5ba3e04998942317d0: basis:dept:120200:faculty");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:120200:employee", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:120200:employee'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:120200:faculty", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: b53e173330884e5ba3e04998942317d0: basis:dept:120200:faculty");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:120200:faculty", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:120200:faculty'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:120200:faculty", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: b53e173330884e5ba3e04998942317d0: basis:dept:120200:faculty");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-role:all-faculty", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-role:all-faculty'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:130100:contractor", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: b609f1b61c364d728d330c573ac71b03: basis:dept:130100:contractor");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:130100:contractor", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:130100:contractor'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:130100:contractor", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: b609f1b61c364d728d330c573ac71b03: basis:dept:130100:contractor");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-role:all-contractor", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-role:all-contractor'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:110101:contractor", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: b852d5fbc9f848d69e6ffef512b39000: basis:dept:110101:contractor");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:110100:contractor", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:110100:contractor'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:110101:contractor", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: b852d5fbc9f848d69e6ffef512b39000: basis:dept:110101:contractor");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-role:all-contractor", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-role:all-contractor'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:130200:affiliate", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: b99b33da665047edb1da0bd7605b0af3: basis:dept:130200:affiliate");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:130200:affiliate", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:130200:affiliate'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:130200:affiliate", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: b99b33da665047edb1da0bd7605b0af3: basis:dept:130200:affiliate");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-role:all-affiliate", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-role:all-affiliate'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:100000:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: bed486a7005c442cb9fd8709c48c4fb4: basis:org:100000:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "app:its:pcavoid:etc:updaters", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'app:its:pcavoid:etc:updaters'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:100000:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: bed486a7005c442cb9fd8709c48c4fb4: basis:org:100000:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-category:all-staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-category:all-staff'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("app:its:lbsimply:etc:readers", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: c2a1b8bcb4034bf3a40f981ed5106887: app:its:lbsimply:etc:readers");  }
    privilege = Privilege.listToPriv("readers", false);
    group = GroupFinder.findByName(grouperSession, "app:its:lbsimply:sources", false);
    if (privilege != null) { if (subject != null) { if (group != null) { boolean changed = group.grantPriv(subject, privilege, false);    gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group privilege: " + group.getName() + ", privilege: " + privilege + ", subject: " + GrouperUtil.subjectToString(subject)); }  } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'app:its:lbsimply:sources'"); } }  } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:130202:faculty", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: c2d142d40e9546ef96861f60aa3af370: basis:dept:130202:faculty");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:130200:employee", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:130200:employee'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:130202:faculty", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: c2d142d40e9546ef96861f60aa3af370: basis:dept:130202:faculty");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:130200:faculty", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:130200:faculty'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:130202:faculty", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: c2d142d40e9546ef96861f60aa3af370: basis:dept:130202:faculty");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-role:all-faculty", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-role:all-faculty'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:130000:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: c2ef3fab42194a71a116bfaa6aa4e45b: basis:org:130000:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "app:its:cttoday:sources", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'app:its:cttoday:sources'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:130000:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: c2ef3fab42194a71a116bfaa6aa4e45b: basis:org:130000:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "app:its:pcavoid:etc:readers", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'app:its:pcavoid:etc:readers'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:130000:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: c2ef3fab42194a71a116bfaa6aa4e45b: basis:org:130000:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-category:all-staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-category:all-staff'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:110100:faculty", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: c632aba57e9f4c4295f54b4cdb424f9e: basis:org:110100:faculty");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "app:its:lbsimply:etc:updaters", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'app:its:lbsimply:etc:updaters'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:110100:faculty", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: c632aba57e9f4c4295f54b4cdb424f9e: basis:org:110100:faculty");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "app:its:nistaff:sources", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'app:its:nistaff:sources'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:110100:faculty", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: c632aba57e9f4c4295f54b4cdb424f9e: basis:org:110100:faculty");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "app:its:pcavoid:etc:updaters", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'app:its:pcavoid:etc:updaters'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:110100:faculty", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: c632aba57e9f4c4295f54b4cdb424f9e: basis:org:110100:faculty");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-category:all-faculty", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-category:all-faculty'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:130100:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: c7b495bb7f6c4381a13f51dadd26dc57: basis:org:130100:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-category:all-staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-category:all-staff'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:120100:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: c81480d658604a368eac22d11752715d: basis:dept:120100:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:120100:employee", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:120100:employee'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:120100:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: c81480d658604a368eac22d11752715d: basis:dept:120100:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:120100:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:120100:staff'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:120100:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: c81480d658604a368eac22d11752715d: basis:dept:120100:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-role:all-staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-role:all-staff'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:120103:faculty", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: c81fb25a4c0441349fecf7a928d2237e: basis:dept:120103:faculty");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:120100:employee", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:120100:employee'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:120103:faculty", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: c81fb25a4c0441349fecf7a928d2237e: basis:dept:120103:faculty");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:120100:faculty", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:120100:faculty'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:120103:faculty", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: c81fb25a4c0441349fecf7a928d2237e: basis:dept:120103:faculty");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-role:all-faculty", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-role:all-faculty'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:130103:contractor", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: c954360a52ca4927a8f3d13e85c9cbee: basis:dept:130103:contractor");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:130100:contractor", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:130100:contractor'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:130103:contractor", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: c954360a52ca4927a8f3d13e85c9cbee: basis:dept:130103:contractor");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-role:all-contractor", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-role:all-contractor'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:130100:faculty", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: cde441cf4b2e43a4b92d060e88585f3b: basis:org:130100:faculty");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "app:its:nsreturn:etc:updaters", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'app:its:nsreturn:etc:updaters'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:130100:faculty", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: cde441cf4b2e43a4b92d060e88585f3b: basis:org:130100:faculty");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "app:its:pcavoid:sources", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'app:its:pcavoid:sources'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:130100:faculty", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: cde441cf4b2e43a4b92d060e88585f3b: basis:org:130100:faculty");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-category:all-faculty", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-category:all-faculty'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:120100:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: d04aaf21093a47988f75041b4f471c78: basis:org:120100:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "app:its:cttoday:sources", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'app:its:cttoday:sources'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:120100:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: d04aaf21093a47988f75041b4f471c78: basis:org:120100:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-category:all-staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-category:all-staff'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:130200:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: d103efe9d6a249cb8ca672a4daea2909: basis:org:130200:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "app:its:pcavoid:etc:readers", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'app:its:pcavoid:etc:readers'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:130200:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: d103efe9d6a249cb8ca672a4daea2909: basis:org:130200:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "app:its:pcavoid:sources", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'app:its:pcavoid:sources'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:130200:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: d103efe9d6a249cb8ca672a4daea2909: basis:org:130200:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-category:all-staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-category:all-staff'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:110200:affiliate", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: d28a72b3dde64eab8eb0b1c51bd99627: basis:dept:110200:affiliate");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:110200:affiliate", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:110200:affiliate'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:110200:affiliate", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: d28a72b3dde64eab8eb0b1c51bd99627: basis:dept:110200:affiliate");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-role:all-affiliate", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-role:all-affiliate'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:120201:faculty", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: d3967c8226ef4932b5de1189230679a7: basis:dept:120201:faculty");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:120200:employee", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:120200:employee'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:120201:faculty", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: d3967c8226ef4932b5de1189230679a7: basis:dept:120201:faculty");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:120200:faculty", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:120200:faculty'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:120201:faculty", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: d3967c8226ef4932b5de1189230679a7: basis:dept:120201:faculty");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-role:all-faculty", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-role:all-faculty'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:120100:employee", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: d404c6bf9f3c4d01899f9a9b9008df37: basis:org:120100:employee");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "app:its:lbsimply:etc:readers", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'app:its:lbsimply:etc:readers'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:120100:employee", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: d404c6bf9f3c4d01899f9a9b9008df37: basis:org:120100:employee");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-category:all-employee", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-category:all-employee'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:110202:affiliate", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: d415d910a7724c188cadc5ef7c7bfa28: basis:dept:110202:affiliate");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:110200:affiliate", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:110200:affiliate'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:110202:affiliate", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: d415d910a7724c188cadc5ef7c7bfa28: basis:dept:110202:affiliate");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-role:all-affiliate", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-role:all-affiliate'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:120200:contractor", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: d54f17dcfd5c4b80aedf37b5d1718a6d: basis:dept:120200:contractor");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:120200:contractor", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:120200:contractor'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:120200:contractor", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: d54f17dcfd5c4b80aedf37b5d1718a6d: basis:dept:120200:contractor");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-role:all-contractor", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-role:all-contractor'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:130000:employee", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: d64da33024c343d188a9d694c6829906: basis:org:130000:employee");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-category:all-employee", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-category:all-employee'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:120201:affiliate", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: d8cf2ac3f8f148d2a791c28e9714970c: basis:dept:120201:affiliate");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:120200:affiliate", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:120200:affiliate'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:120201:affiliate", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: d8cf2ac3f8f148d2a791c28e9714970c: basis:dept:120201:affiliate");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-role:all-affiliate", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-role:all-affiliate'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:120200:affiliate", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: dc66a354afb04344874a27c3770e172d: basis:org:120200:affiliate");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "app:its:nsreturn:etc:updaters", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'app:its:nsreturn:etc:updaters'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:120200:affiliate", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: dc66a354afb04344874a27c3770e172d: basis:org:120200:affiliate");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "app:its:pcavoid:etc:readers", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'app:its:pcavoid:etc:readers'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:120200:affiliate", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: dc66a354afb04344874a27c3770e172d: basis:org:120200:affiliate");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-category:all-affiliate", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-category:all-affiliate'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:130100:contractor", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: def7b1d18e934c0cb8442e7a51bce9f6: basis:org:130100:contractor");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "app:its:nistaff:etc:readers", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'app:its:nistaff:etc:readers'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:130100:contractor", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: def7b1d18e934c0cb8442e7a51bce9f6: basis:org:130100:contractor");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-category:all-contractor", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-category:all-contractor'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:120200:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: e5f4bb5b141d4cd4989ec3be32379e39: basis:dept:120200:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:120200:employee", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:120200:employee'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:120200:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: e5f4bb5b141d4cd4989ec3be32379e39: basis:dept:120200:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:120200:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:120200:staff'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:120200:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: e5f4bb5b141d4cd4989ec3be32379e39: basis:dept:120200:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-role:all-staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-role:all-staff'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:120100:affiliate", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: eaa579f7fe53470688138e6d8fb71a2a: basis:org:120100:affiliate");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "app:its:nsreturn:sources", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'app:its:nsreturn:sources'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:120100:affiliate", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: eaa579f7fe53470688138e6d8fb71a2a: basis:org:120100:affiliate");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-category:all-affiliate", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-category:all-affiliate'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:130000:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: ed6d9d4e67e54d6ba75fa6a387978780: basis:dept:130000:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:130000:employee", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:130000:employee'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:130000:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: ed6d9d4e67e54d6ba75fa6a387978780: basis:dept:130000:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:130000:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:130000:staff'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:130000:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: ed6d9d4e67e54d6ba75fa6a387978780: basis:dept:130000:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-role:all-staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-role:all-staff'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:110103:faculty", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: ee1801d88aa548f89fd8fb700d60cd67: basis:dept:110103:faculty");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:110100:employee", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:110100:employee'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:110103:faculty", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: ee1801d88aa548f89fd8fb700d60cd67: basis:dept:110103:faculty");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:110100:faculty", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:110100:faculty'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:110103:faculty", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: ee1801d88aa548f89fd8fb700d60cd67: basis:dept:110103:faculty");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-role:all-faculty", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-role:all-faculty'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:120000:employee", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: eea4dab72724437d8ae0f179c6397b5f: basis:org:120000:employee");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "app:its:cttoday:etc:readers", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'app:its:cttoday:etc:readers'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:120000:employee", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: eea4dab72724437d8ae0f179c6397b5f: basis:org:120000:employee");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "app:its:nsreturn:etc:readers", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'app:its:nsreturn:etc:readers'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:120000:employee", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: eea4dab72724437d8ae0f179c6397b5f: basis:org:120000:employee");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-category:all-employee", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-category:all-employee'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:100000:affiliate", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: eeb63238771f4d7d9dc0764cf483b858: basis:org:100000:affiliate");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "app:its:nsreturn:etc:readers", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'app:its:nsreturn:etc:readers'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:100000:affiliate", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: eeb63238771f4d7d9dc0764cf483b858: basis:org:100000:affiliate");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "app:its:pcavoid:sources", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'app:its:pcavoid:sources'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:100000:affiliate", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: eeb63238771f4d7d9dc0764cf483b858: basis:org:100000:affiliate");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-category:all-affiliate", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-category:all-affiliate'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("app:its:lbsimply:etc:updaters", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: eed68638a4dd4c6fabe31b12d02e41fb: app:its:lbsimply:etc:updaters");  }
    privilege = Privilege.listToPriv("updaters", false);
    group = GroupFinder.findByName(grouperSession, "app:its:lbsimply:sources", false);
    if (privilege != null) { if (subject != null) { if (group != null) { boolean changed = group.grantPriv(subject, privilege, false);    gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group privilege: " + group.getName() + ", privilege: " + privilege + ", subject: " + GrouperUtil.subjectToString(subject)); }  } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'app:its:lbsimply:sources'"); } }  } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:130200:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: ef189de323d14b5cbdfafa182f73eefd: basis:dept:130200:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:130200:employee", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:130200:employee'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:130200:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: ef189de323d14b5cbdfafa182f73eefd: basis:dept:130200:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:130200:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:130200:staff'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:130200:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: ef189de323d14b5cbdfafa182f73eefd: basis:dept:130200:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-role:all-staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-role:all-staff'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:130201:affiliate", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: ef88455f4eb043bb8d274fa6f2740a97: basis:dept:130201:affiliate");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:130200:affiliate", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:130200:affiliate'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:130201:affiliate", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: ef88455f4eb043bb8d274fa6f2740a97: basis:dept:130201:affiliate");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-role:all-affiliate", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-role:all-affiliate'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:130203:affiliate", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: f2f0f7a9bda342129380fc76b2888353: basis:dept:130203:affiliate");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:130200:affiliate", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:130200:affiliate'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:130203:affiliate", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: f2f0f7a9bda342129380fc76b2888353: basis:dept:130203:affiliate");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-role:all-affiliate", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-role:all-affiliate'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:130202:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: f4462d52283f47c293a8a06e336cca6b: basis:dept:130202:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:130200:employee", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:130200:employee'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:130202:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: f4462d52283f47c293a8a06e336cca6b: basis:dept:130202:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:130200:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:130200:staff'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:130202:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: f4462d52283f47c293a8a06e336cca6b: basis:dept:130202:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-role:all-staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-role:all-staff'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:120000:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: f49bdc939b7a4744947e715f479488a1: basis:org:120000:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "app:its:cttoday:sources", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'app:its:cttoday:sources'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:120000:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: f49bdc939b7a4744947e715f479488a1: basis:org:120000:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "app:its:nistaff:etc:updaters", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'app:its:nistaff:etc:updaters'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:120000:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: f49bdc939b7a4744947e715f479488a1: basis:org:120000:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-category:all-staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-category:all-staff'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:110102:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: f51ec94149374c6399c03249d7422f99: basis:dept:110102:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:110100:employee", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:110100:employee'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:110102:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: f51ec94149374c6399c03249d7422f99: basis:dept:110102:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:110100:staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:110100:staff'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:110102:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: f51ec94149374c6399c03249d7422f99: basis:dept:110102:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-role:all-staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-role:all-staff'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:120202:faculty", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: f5d8576815a6415a8cc290eb37511424: basis:dept:120202:faculty");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:120200:employee", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:120200:employee'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:120202:faculty", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: f5d8576815a6415a8cc290eb37511424: basis:dept:120202:faculty");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:120200:faculty", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:120200:faculty'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:120202:faculty", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: f5d8576815a6415a8cc290eb37511424: basis:dept:120202:faculty");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-role:all-faculty", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-role:all-faculty'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:120102:faculty", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: f659a9a4f7f048c594307dd3a8db9f45: basis:dept:120102:faculty");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:120100:employee", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:120100:employee'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:120102:faculty", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: f659a9a4f7f048c594307dd3a8db9f45: basis:dept:120102:faculty");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:120100:faculty", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:120100:faculty'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:120102:faculty", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: f659a9a4f7f048c594307dd3a8db9f45: basis:dept:120102:faculty");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-role:all-faculty", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-role:all-faculty'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:110200:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: f85307f32df14146bf3d9cc464a3fcd9: basis:org:110200:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "app:its:nistaff:etc:readers", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'app:its:nistaff:etc:readers'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:110200:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: f85307f32df14146bf3d9cc464a3fcd9: basis:org:110200:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-category:all-staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-category:all-staff'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:120200:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: fb1e9d82ef6a43568b3c7de7f7306d61: basis:org:120200:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "app:its:lbsimply:sources", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'app:its:lbsimply:sources'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:120200:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: fb1e9d82ef6a43568b3c7de7f7306d61: basis:org:120200:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "app:its:nsreturn:sources", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'app:its:nsreturn:sources'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:org:120200:staff", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: fb1e9d82ef6a43568b3c7de7f7306d61: basis:org:120200:staff");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-category:all-staff", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-category:all-staff'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("app:its:cttoday:etc:updaters", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: fcbdc33233ef4488b39d4e95472e2aa7: app:its:cttoday:etc:updaters");  }
    privilege = Privilege.listToPriv("updaters", false);
    group = GroupFinder.findByName(grouperSession, "app:its:cttoday:sources", false);
    if (privilege != null) { if (subject != null) { if (group != null) { boolean changed = group.grantPriv(subject, privilege, false);    gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group privilege: " + group.getName() + ", privilege: " + privilege + ", subject: " + GrouperUtil.subjectToString(subject)); }  } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'app:its:cttoday:sources'"); } }  } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:110100:affiliate", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: fefd245fb22442da8b582928ea9a959e: basis:dept:110100:affiliate");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "basis:org:110100:affiliate", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'basis:org:110100:affiliate'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("basis:dept:110100:affiliate", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: fefd245fb22442da8b582928ea9a959e: basis:dept:110100:affiliate");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "ref:job:by-role:all-affiliate", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'ref:job:by-role:all-affiliate'"); } } 
    subject = SubjectFinder.findByIdentifierAndSource("app:its:nistaff:etc:readers", "g:gsa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find group subject: g:gsa: ffba29d235e44efabd5f640841e21e2f: app:its:nistaff:etc:readers");  }
    privilege = Privilege.listToPriv("readers", false);
    group = GroupFinder.findByName(grouperSession, "app:its:nistaff:sources", false);
    if (privilege != null) { if (subject != null) { if (group != null) { boolean changed = group.grantPriv(subject, privilege, false);    gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group privilege: " + group.getName() + ", privilege: " + privilege + ", subject: " + GrouperUtil.subjectToString(subject)); }  } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'app:its:nistaff:sources'"); } }  } 
    subject = SubjectFinder.findByIdAndSource("GrouperAll", "g:isa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: g:isa: GrouperAll");  }
    privilege = Privilege.listToPriv("attrReaders", false);
    attributeDef = AttributeDefFinder.findByName("etc:attribute:entities:entitySubjectIdentifierDef", false);
    if (privilege != null) { if (subject != null) { if (attributeDef != null) { boolean changed = attributeDef.getPrivilegeDelegate().grantPriv(subject, privilege, false);  gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for attributeDef privilege: " + attributeDef.getName() + ", privilege: " + privilege + ", subject: " + GrouperUtil.subjectToString(subject));  } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find attribute definition: 'etc:attribute:entities:entitySubjectIdentifierDef'"); } }  } 
    subject = SubjectFinder.findByIdAndSource("GrouperAll", "g:isa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: g:isa: GrouperAll");  }
    privilege = Privilege.listToPriv("attrReaders", false);
    attributeDef = AttributeDefFinder.findByName("etc:attribute:permissionLimits:limitsDef", false);
    if (privilege != null) { if (subject != null) { if (attributeDef != null) { boolean changed = attributeDef.getPrivilegeDelegate().grantPriv(subject, privilege, false);  gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for attributeDef privilege: " + attributeDef.getName() + ", privilege: " + privilege + ", subject: " + GrouperUtil.subjectToString(subject));  } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find attribute definition: 'etc:attribute:permissionLimits:limitsDef'"); } }  } 
    subject = SubjectFinder.findByIdAndSource("GrouperAll", "g:isa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: g:isa: GrouperAll");  }
    privilege = Privilege.listToPriv("attrReaders", false);
    attributeDef = AttributeDefFinder.findByName("etc:attribute:permissionLimits:limitsDefInt", false);
    if (privilege != null) { if (subject != null) { if (attributeDef != null) { boolean changed = attributeDef.getPrivilegeDelegate().grantPriv(subject, privilege, false);  gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for attributeDef privilege: " + attributeDef.getName() + ", privilege: " + privilege + ", subject: " + GrouperUtil.subjectToString(subject));  } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find attribute definition: 'etc:attribute:permissionLimits:limitsDefInt'"); } }  } 
    subject = SubjectFinder.findByIdAndSource("GrouperAll", "g:isa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: g:isa: GrouperAll");  }
    privilege = Privilege.listToPriv("attrReaders", false);
    attributeDef = AttributeDefFinder.findByName("etc:attribute:permissionLimits:limitsDefMarker", false);
    if (privilege != null) { if (subject != null) { if (attributeDef != null) { boolean changed = attributeDef.getPrivilegeDelegate().grantPriv(subject, privilege, false);  gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for attributeDef privilege: " + attributeDef.getName() + ", privilege: " + privilege + ", subject: " + GrouperUtil.subjectToString(subject));  } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find attribute definition: 'etc:attribute:permissionLimits:limitsDefMarker'"); } }  } 
    subject = SubjectFinder.findByIdAndSource("GrouperAll", "g:isa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: g:isa: GrouperAll");  }
    privilege = Privilege.listToPriv("attrUpdaters", false);
    attributeDef = AttributeDefFinder.findByName("etc:attribute:entities:entitySubjectIdentifierDef", false);
    if (privilege != null) { if (subject != null) { if (attributeDef != null) { boolean changed = attributeDef.getPrivilegeDelegate().grantPriv(subject, privilege, false);  gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for attributeDef privilege: " + attributeDef.getName() + ", privilege: " + privilege + ", subject: " + GrouperUtil.subjectToString(subject));  } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find attribute definition: 'etc:attribute:entities:entitySubjectIdentifierDef'"); } }  } 
    subject = SubjectFinder.findByIdAndSource("GrouperAll", "g:isa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: g:isa: GrouperAll");  }
    privilege = Privilege.listToPriv("attrUpdaters", false);
    attributeDef = AttributeDefFinder.findByName("etc:attribute:permissionLimits:limitsDef", false);
    if (privilege != null) { if (subject != null) { if (attributeDef != null) { boolean changed = attributeDef.getPrivilegeDelegate().grantPriv(subject, privilege, false);  gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for attributeDef privilege: " + attributeDef.getName() + ", privilege: " + privilege + ", subject: " + GrouperUtil.subjectToString(subject));  } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find attribute definition: 'etc:attribute:permissionLimits:limitsDef'"); } }  } 
    subject = SubjectFinder.findByIdAndSource("GrouperAll", "g:isa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: g:isa: GrouperAll");  }
    privilege = Privilege.listToPriv("attrUpdaters", false);
    attributeDef = AttributeDefFinder.findByName("etc:attribute:permissionLimits:limitsDefInt", false);
    if (privilege != null) { if (subject != null) { if (attributeDef != null) { boolean changed = attributeDef.getPrivilegeDelegate().grantPriv(subject, privilege, false);  gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for attributeDef privilege: " + attributeDef.getName() + ", privilege: " + privilege + ", subject: " + GrouperUtil.subjectToString(subject));  } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find attribute definition: 'etc:attribute:permissionLimits:limitsDefInt'"); } }  } 
    subject = SubjectFinder.findByIdAndSource("GrouperAll", "g:isa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: g:isa: GrouperAll");  }
    privilege = Privilege.listToPriv("attrUpdaters", false);
    attributeDef = AttributeDefFinder.findByName("etc:attribute:permissionLimits:limitsDefMarker", false);
    if (privilege != null) { if (subject != null) { if (attributeDef != null) { boolean changed = attributeDef.getPrivilegeDelegate().grantPriv(subject, privilege, false);  gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for attributeDef privilege: " + attributeDef.getName() + ", privilege: " + privilege + ", subject: " + GrouperUtil.subjectToString(subject));  } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find attribute definition: 'etc:attribute:permissionLimits:limitsDefMarker'"); } }  } 
    subject = SubjectFinder.findByIdAndSource("GrouperSystem", "g:isa", false);
    if (subject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: g:isa: GrouperSystem");  }
    privilege = null;
    group = GroupFinder.findByName(grouperSession, "etc:grouperUi:grouperUiUserData", false);
    if (subject != null) { if (group != null) { boolean changed = group.addOrEditMember(subject, false, true, null, null, false);      gshTotalObjectCount++;  if (changed) { gshTotalChangeCount++;  System.out.println("Made change for group membership: " + group.getName() + ", field: members, subject: " + GrouperUtil.subjectToString(subject)); } } else { gshTotalErrorCount++; System.out.println("ERROR: cant find group: 'etc:grouperUi:grouperUiUserData'"); } } 
    System.out.println(new Date().toString() + " Done with memberships and privileges, objects: " + gshTotalObjectCount + ", expected approx total: 2,300, changes: " + gshTotalChangeCount + ", known errors (view output for full list): " + gshTotalErrorCount);
    attributeDef = AttributeDefFinder.findByName("etc:attribute:attestation:attestationDef", false);
    attributeDefName = null;
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:attestation:attestation").assignCreateParentStemsIfNotExist(true).assignDescription("has attestation attributes").assignDisplayName("etc:attribute:attestation:attestation");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:attestation:attestationDef'"); } 
    attributeDef = AttributeDefFinder.findByName("etc:attribute:attestation:attestationValueDef", false);
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:attestation:attestationCalculatedDaysLeft").assignCreateParentStemsIfNotExist(true).assignDescription("In order to search for attestations, this is the calculated days left before needs attestation").assignDisplayName("etc:attribute:attestation:attestationCalculatedDaysLeft");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:attestation:attestationValueDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:attestation:attestationDateCertified").assignCreateParentStemsIfNotExist(true).assignDescription("Last certified date for this group").assignDisplayName("etc:attribute:attestation:attestationDateCertified");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:attestation:attestationValueDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:attestation:attestationDaysBeforeToRemind").assignCreateParentStemsIfNotExist(true).assignDescription("Number of days before attestation deadline to start sending emails about it to owners").assignDisplayName("etc:attribute:attestation:attestationDaysBeforeToRemind");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:attestation:attestationValueDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:attestation:attestationDaysUntilRecertify").assignCreateParentStemsIfNotExist(true).assignDescription("Number of days until need to recertify from last certification").assignDisplayName("etc:attribute:attestation:attestationDaysUntilRecertify");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:attestation:attestationValueDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:attestation:attestationDirectAssignment").assignCreateParentStemsIfNotExist(true).assignDescription("If this group has attestation settings and not inheriting from ancestor folders (group only)").assignDisplayName("etc:attribute:attestation:attestationDirectAssignment");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:attestation:attestationValueDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:attestation:attestationEmailAddresses").assignCreateParentStemsIfNotExist(true).assignDescription("Comma separated email addresses to send reminders to, if blank then send to group admins").assignDisplayName("etc:attribute:attestation:attestationEmailAddresses");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:attestation:attestationValueDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:attestation:attestationHasAttestation").assignCreateParentStemsIfNotExist(true).assignDescription("If this folder has attestation directly assigned or if this group has attestation either directly or indirectly assigned").assignDisplayName("etc:attribute:attestation:attestationHasAttestation");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:attestation:attestationValueDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:attestation:attestationLastEmailedDate").assignCreateParentStemsIfNotExist(true).assignDescription("yyyy/mm/dd date that this was last emailed so multiple emails don't go out on same day (group only)").assignDisplayName("etc:attribute:attestation:attestationLastEmailedDate");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:attestation:attestationValueDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:attestation:attestationSendEmail").assignCreateParentStemsIfNotExist(true).assignDescription("true or false if emails should be sent").assignDisplayName("etc:attribute:attestation:attestationSendEmail");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:attestation:attestationValueDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:attestation:attestationStemScope").assignCreateParentStemsIfNotExist(true).assignDescription("one or sub for if attestation settings inherit to just this folder or also to subfolders (folder only)").assignDisplayName("etc:attribute:attestation:attestationStemScope");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:attestation:attestationValueDef'"); } 
    attributeDef = AttributeDefFinder.findByName("etc:attribute:attrExternalSubjectInvite:externalSubjectInviteAttrDef", false);
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:attrExternalSubjectInvite:externalSubjectEmailAddress").assignCreateParentStemsIfNotExist(true).assignDescription("email address this invite was sent to").assignDisplayName("etc:attribute:attrExternalSubjectInvite:externalSubjectEmailAddress");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:attrExternalSubjectInvite:externalSubjectInviteAttrDef'"); } 
    attributeDef = AttributeDefFinder.findByName("etc:attribute:attrExternalSubjectInvite:externalSubjectInviteDef", false);
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:attrExternalSubjectInvite:externalSubjectInvite").assignCreateParentStemsIfNotExist(true).assignDescription("is an invite").assignDisplayName("etc:attribute:attrExternalSubjectInvite:externalSubjectInvite");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:attrExternalSubjectInvite:externalSubjectInviteDef'"); } 
    attributeDef = AttributeDefFinder.findByName("etc:attribute:attrExternalSubjectInvite:externalSubjectInviteAttrDef", false);
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:attrExternalSubjectInvite:externalSubjectInviteDate").assignCreateParentStemsIfNotExist(true).assignDescription("number of millis since 1970 that this invite was issued").assignDisplayName("etc:attribute:attrExternalSubjectInvite:externalSubjectInviteDate");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:attrExternalSubjectInvite:externalSubjectInviteAttrDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:attrExternalSubjectInvite:externalSubjectInviteEmail").assignCreateParentStemsIfNotExist(true).assignDescription("email sent to user as invite").assignDisplayName("etc:attribute:attrExternalSubjectInvite:externalSubjectInviteEmail");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:attrExternalSubjectInvite:externalSubjectInviteAttrDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:attrExternalSubjectInvite:externalSubjectInviteEmailWhenRegistered").assignCreateParentStemsIfNotExist(true).assignDescription("email addresses to notify when the user registers").assignDisplayName("etc:attribute:attrExternalSubjectInvite:externalSubjectInviteEmailWhenRegistered");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:attrExternalSubjectInvite:externalSubjectInviteAttrDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:attrExternalSubjectInvite:externalSubjectInviteExpireDate").assignCreateParentStemsIfNotExist(true).assignDescription("number of millis since 1970 when this invite expires").assignDisplayName("etc:attribute:attrExternalSubjectInvite:externalSubjectInviteExpireDate");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:attrExternalSubjectInvite:externalSubjectInviteAttrDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:attrExternalSubjectInvite:externalSubjectInviteGroupUuids").assignCreateParentStemsIfNotExist(true).assignDescription("comma separated group ids to assign this user to").assignDisplayName("etc:attribute:attrExternalSubjectInvite:externalSubjectInviteGroupUuids");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:attrExternalSubjectInvite:externalSubjectInviteAttrDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:attrExternalSubjectInvite:externalSubjectInviteMemberId").assignCreateParentStemsIfNotExist(true).assignDescription("member id who invited this user").assignDisplayName("etc:attribute:attrExternalSubjectInvite:externalSubjectInviteMemberId");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:attrExternalSubjectInvite:externalSubjectInviteAttrDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:attrExternalSubjectInvite:externalSubjectInviteUuid").assignCreateParentStemsIfNotExist(true).assignDescription("unique id in the email sent to the user").assignDisplayName("etc:attribute:attrExternalSubjectInvite:externalSubjectInviteUuid");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:attrExternalSubjectInvite:externalSubjectInviteAttrDef'"); } 
    attributeDef = AttributeDefFinder.findByName("etc:attribute:attrLoader:attributeDefLoaderTypeDef", false);
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:attrLoader:attributeLoader").assignCreateParentStemsIfNotExist(true).assignDescription("is a loader based attribute def, the loader attributes will be available to be assigned").assignDisplayName("etc:attribute:attrLoader:attributeLoader");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:attrLoader:attributeDefLoaderTypeDef'"); } 
    attributeDef = AttributeDefFinder.findByName("etc:attribute:attrLoader:attributeDefLoaderDef", false);
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:attrLoader:attributeLoaderActionQuery").assignCreateParentStemsIfNotExist(true).assignDescription("SQL query with at least the following column: action_name").assignDisplayName("etc:attribute:attrLoader:attributeLoaderActionQuery");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:attrLoader:attributeDefLoaderDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:attrLoader:attributeLoaderActionSetQuery").assignCreateParentStemsIfNotExist(true).assignDescription("SQL query with at least the following columns: if_has_action_name, then_has_action_name").assignDisplayName("etc:attribute:attrLoader:attributeLoaderActionSetQuery");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:attrLoader:attributeDefLoaderDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:attrLoader:attributeLoaderAttrQuery").assignCreateParentStemsIfNotExist(true).assignDescription("SQL query with at least some of the following columns: attr_name, attr_display_name, attr_description").assignDisplayName("etc:attribute:attrLoader:attributeLoaderAttrQuery");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:attrLoader:attributeDefLoaderDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:attrLoader:attributeLoaderAttrSetQuery").assignCreateParentStemsIfNotExist(true).assignDescription("SQL query with at least the following columns: if_has_attr_name, then_has_attr_name").assignDisplayName("etc:attribute:attrLoader:attributeLoaderAttrSetQuery");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:attrLoader:attributeDefLoaderDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:attrLoader:attributeLoaderAttrsLike").assignCreateParentStemsIfNotExist(true).assignDescription("If empty, then orphans will be left alone (for attributeDefName and attributeDefNameSets).  If %, then all orphans deleted.  If a SQL like string, then only ones in that like string not in loader will be deleted").assignDisplayName("etc:attribute:attrLoader:attributeLoaderAttrsLike");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:attrLoader:attributeDefLoaderDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:attrLoader:attributeLoaderDbName").assignCreateParentStemsIfNotExist(true).assignDescription("DB name in grouper-loader.properties or default grouper db if blank").assignDisplayName("etc:attribute:attrLoader:attributeLoaderDbName");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:attrLoader:attributeDefLoaderDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:attrLoader:attributeLoaderIntervalSeconds").assignCreateParentStemsIfNotExist(true).assignDescription("If a START_TO_START_INTERVAL schedule type, this is the number of seconds between runs").assignDisplayName("etc:attribute:attrLoader:attributeLoaderIntervalSeconds");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:attrLoader:attributeDefLoaderDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:attrLoader:attributeLoaderPriority").assignCreateParentStemsIfNotExist(true).assignDescription("Quartz has a fixed threadpool (max configured in the grouper-loader.properties), and when the max is reached, then jobs are prioritized by this integer.  The higher the better, and the default if not set is 5.").assignDisplayName("etc:attribute:attrLoader:attributeLoaderPriority");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:attrLoader:attributeDefLoaderDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:attrLoader:attributeLoaderQuartzCron").assignCreateParentStemsIfNotExist(true).assignDescription("If a CRON schedule type, this is the cron setting string from the quartz product to run a job daily, hourly, weekly, etc.  e.g. daily at 7am: 0 0 7 * * ?").assignDisplayName("etc:attribute:attrLoader:attributeLoaderQuartzCron");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:attrLoader:attributeDefLoaderDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:attrLoader:attributeLoaderScheduleType").assignCreateParentStemsIfNotExist(true).assignDescription("Type of schedule.  Defaults to CRON if a cron schedule is entered, or START_TO_START_INTERVAL if an interval is entered").assignDisplayName("etc:attribute:attrLoader:attributeLoaderScheduleType");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:attrLoader:attributeDefLoaderDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:attrLoader:attributeLoaderType").assignCreateParentStemsIfNotExist(true).assignDescription("Type of loader, e.g. ATTR_SQL_SIMPLE").assignDisplayName("etc:attribute:attrLoader:attributeLoaderType");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:attrLoader:attributeDefLoaderDef'"); } 
    attributeDef = AttributeDefFinder.findByName("etc:attribute:entities:entitySubjectIdentifierDef", false);
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:entities:entitySubjectIdentifier").assignCreateParentStemsIfNotExist(true).assignDescription("This overrides the subjectId of the entity").assignDisplayName("etc:attribute:entities:entitySubjectIdentifier");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:entities:entitySubjectIdentifierDef'"); } 
    attributeDef = AttributeDefFinder.findByName("etc:attribute:hooks:membershipOneInFolderDef", false);
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:hooks:hookMembershipOneInFolder").assignCreateParentStemsIfNotExist(true).assignDescription("put this attribute on a folder to ensure there is one membership only for any group in folder").assignDisplayName("etc:attribute:hooks:hookMembershipOneInFolder");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:hooks:membershipOneInFolderDef'"); } 
    attributeDef = AttributeDefFinder.findByName("etc:attribute:instrumentationData:instrumentationDataCollectorDetailsDef", false);
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:instrumentationData:instrumentationDataCollectorLastUpdate").assignCreateParentStemsIfNotExist(true).assignDisplayName("etc:attribute:instrumentationData:instrumentationDataCollectorLastUpdate");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:instrumentationData:instrumentationDataCollectorDetailsDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:instrumentationData:instrumentationDataCollectorUuid").assignCreateParentStemsIfNotExist(true).assignDisplayName("etc:attribute:instrumentationData:instrumentationDataCollectorUuid");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:instrumentationData:instrumentationDataCollectorDetailsDef'"); } 
    attributeDef = AttributeDefFinder.findByName("etc:attribute:instrumentationData:instrumentationDataInstanceCountsDef", false);
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:instrumentationData:instrumentationDataInstanceCounts").assignCreateParentStemsIfNotExist(true).assignDisplayName("etc:attribute:instrumentationData:instrumentationDataInstanceCounts");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:instrumentationData:instrumentationDataInstanceCountsDef'"); } 
    attributeDef = AttributeDefFinder.findByName("etc:attribute:instrumentationData:instrumentationDataInstanceDetailsDef", false);
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:instrumentationData:instrumentationDataInstanceEngineName").assignCreateParentStemsIfNotExist(true).assignDisplayName("etc:attribute:instrumentationData:instrumentationDataInstanceEngineName");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:instrumentationData:instrumentationDataInstanceDetailsDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:instrumentationData:instrumentationDataInstanceLastUpdate").assignCreateParentStemsIfNotExist(true).assignDisplayName("etc:attribute:instrumentationData:instrumentationDataInstanceLastUpdate");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:instrumentationData:instrumentationDataInstanceDetailsDef'"); } 
    attributeDef = AttributeDefFinder.findByName("etc:attribute:instrumentationData:instrumentationDataInstancesDef", false);
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:instrumentationData:instrumentationDataInstances:689da21903e44047a862e80954f62fda").assignCreateParentStemsIfNotExist(true).assignDisplayName("etc:attribute:instrumentationData:instrumentationDataInstances:689da21903e44047a862e80954f62fda");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:instrumentationData:instrumentationDataInstancesDef'"); } 
    attributeDef = AttributeDefFinder.findByName("etc:attribute:instrumentationData:instrumentationDataInstanceDetailsDef", false);
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:instrumentationData:instrumentationDataInstanceServerLabel").assignCreateParentStemsIfNotExist(true).assignDisplayName("etc:attribute:instrumentationData:instrumentationDataInstanceServerLabel");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:instrumentationData:instrumentationDataInstanceDetailsDef'"); } 
    attributeDef = AttributeDefFinder.findByName("etc:attribute:loaderLdap:grouperLoaderLdapDef", false);
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:loaderLdap:grouperLoaderLdap").assignCreateParentStemsIfNotExist(true).assignDescription("Marks a group to be processed by the Grouper loader as an LDAP synced job").assignDisplayName("etc:attribute:loaderLdap:Grouper loader LDAP");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:loaderLdap:grouperLoaderLdapDef'"); } 
    attributeDef = AttributeDefFinder.findByName("etc:attribute:loaderLdap:grouperLoaderLdapValueDef", false);
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:loaderLdap:grouperLoaderLdapAdmins").assignCreateParentStemsIfNotExist(true).assignDescription("Comma separated subjectIds or subjectIdentifiers who will be allowed to ADMIN the group.  optional for LDAP_GROUP_LIST or LDAP_GROUPS_FROM_ATTRIBUTES").assignDisplayName("etc:attribute:loaderLdap:Grouper loader LDAP group admins");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:loaderLdap:grouperLoaderLdapValueDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:loaderLdap:grouperLoaderLdapAndGroups").assignCreateParentStemsIfNotExist(true).assignDescription("If you want to restrict membership in the dynamic group based on other group(s), put the list of group names here comma-separated.  The require groups means if you put a group names in there (e.g. school:community:employee) then it will 'and' that group with the member list from the loader.  So only members of the group from the loader query who are also employees will be in the resulting group").assignDisplayName("etc:attribute:loaderLdap:Grouper loader LDAP require in groups");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:loaderLdap:grouperLoaderLdapValueDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:loaderLdap:grouperLoaderLdapAttributeFilterExpression").assignCreateParentStemsIfNotExist(true).assignDescription("JEXL expression that returns true or false to signify if an attribute (in GROUPS_FROM_ATTRIBUTES) is ok to use for a group.  attributeValue is the variable that is the value of the attribute.").assignDisplayName("etc:attribute:loaderLdap:Grouper loader LDAP attribute filter expression");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:loaderLdap:grouperLoaderLdapValueDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:loaderLdap:grouperLoaderLdapExtraAttributes").assignCreateParentStemsIfNotExist(true).assignDescription("Attribute names (comma separated) to get LDAP data for expressions in group name, displayExtension, description, optional, for LDAP_GROUP_LIST").assignDisplayName("etc:attribute:loaderLdap:Grouper loader LDAP extra attributes");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:loaderLdap:grouperLoaderLdapValueDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:loaderLdap:grouperLoaderLdapFilter").assignCreateParentStemsIfNotExist(true).assignDescription("LDAP filter returns objects that have subjectIds or subjectIdentifiers and group name (if LDAP_GROUP_LIST)").assignDisplayName("etc:attribute:loaderLdap:Grouper loader LDAP filter");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:loaderLdap:grouperLoaderLdapValueDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:loaderLdap:grouperLoaderLdapGroupAttribute").assignCreateParentStemsIfNotExist(true).assignDescription("Attribute name of the filter object result that holds the group name (required for loader ldap type: LDAP_GROUPS_FROM_ATTRIBUTE)").assignDisplayName("etc:attribute:loaderLdap:Grouper loader LDAP group attribute name");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:loaderLdap:grouperLoaderLdapValueDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:loaderLdap:grouperLoaderLdapGroupAttrReaders").assignCreateParentStemsIfNotExist(true).assignDescription("Comma separated subjectIds or subjectIdentifiers who will be allowed to GROUP_ATTR_READ on the group.  optional for LDAP_GROUP_LIST or LDAP_GROUPS_FROM_ATTRIBUTES").assignDisplayName("etc:attribute:loaderLdap:Grouper loader LDAP group attribute readers");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:loaderLdap:grouperLoaderLdapValueDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:loaderLdap:grouperLoaderLdapGroupAttrUpdaters").assignCreateParentStemsIfNotExist(true).assignDescription("Comma separated subjectIds or subjectIdentifiers who will be allowed to GROUP_ATTR_UPDATE on the group.  optional for LDAP_GROUP_LIST or LDAP_GROUPS_FROM_ATTRIBUTES").assignDisplayName("etc:attribute:loaderLdap:Grouper loader LDAP group attribute updaters");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:loaderLdap:grouperLoaderLdapValueDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:loaderLdap:grouperLoaderLdapGroupDescriptionExpression").assignCreateParentStemsIfNotExist(true).assignDescription("JEXL expression language fragment that evaluates to the group description, optional for LDAP_GROUP_LIST or LDAP_GROUPS_FROM_ATTRIBUTES").assignDisplayName("etc:attribute:loaderLdap:Grouper loader LDAP group description expression");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:loaderLdap:grouperLoaderLdapValueDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:loaderLdap:grouperLoaderLdapGroupDisplayNameExpression").assignCreateParentStemsIfNotExist(true).assignDescription("JEXL expression language fragment that evaluates to the group display name, optional for LDAP_GROUP_LIST or LDAP_GROUPS_FROM_ATTRIBUTES").assignDisplayName("etc:attribute:loaderLdap:Grouper loader LDAP group display name expression");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:loaderLdap:grouperLoaderLdapValueDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:loaderLdap:grouperLoaderLdapGroupNameExpression").assignCreateParentStemsIfNotExist(true).assignDescription("JEXL expression language fragment that evaluates to the group name (relative in the stem as the group which has the loader definition), optional, for LDAP_GROUP_LIST, or LDAP_GROUPS_FROM_ATTRIBUTES").assignDisplayName("etc:attribute:loaderLdap:Grouper loader LDAP group name expression");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:loaderLdap:grouperLoaderLdapValueDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:loaderLdap:grouperLoaderLdapGroupsLike").assignCreateParentStemsIfNotExist(true).assignDescription("This should be a sql like string (e.g. school:orgs:%org%_systemOfRecord), and the loader should be able to query group names to see which names are managed by this loader job.  So if a group falls off the loader resultset (or is moved), this will help the loader remove the members from this group.  Note, if the group is used anywhere as a member or composite member, it wont be removed.  All include/exclude/requireGroups will be removed.  Though the two groups, include and exclude, will not be removed if they have members.  There is a grouper-loader.properties setting to remove loader groups if empty and not used: #if using a sql table, and specifying the name like string, then shoudl the group (in addition to memberships)# be removed if not used anywhere else?loader.sqlTable.likeString.removeGroupIfNotUsed = true").assignDisplayName("etc:attribute:loaderLdap:Grouper loader LDAP groups like");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:loaderLdap:grouperLoaderLdapValueDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:loaderLdap:grouperLoaderLdapGroupTypes").assignCreateParentStemsIfNotExist(true).assignDescription("Comma separated GroupTypes which will be applied to the loaded groups.  The reason this enhancement exists is so we can do a group list filter and attach addIncludeExclude to the groups.  Note, if you do this (or use some requireGroups), the group name in the loader query should end in the system of record suffix, which by default is _systemOfRecord. optional for LDAP_GROUP_LIST or LDAP_GROUPS_FROM_ATTRIBUTES").assignDisplayName("etc:attribute:loaderLdap:Grouper loader LDAP group types");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:loaderLdap:grouperLoaderLdapValueDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:loaderLdap:grouperLoaderLdapOptins").assignCreateParentStemsIfNotExist(true).assignDescription("Comma separated subjectIds or subjectIdentifiers who will be allowed to OPT IN to the group membership list.  optional for LDAP_GROUP_LIST or LDAP_GROUPS_FROM_ATTRIBUTES").assignDisplayName("etc:attribute:loaderLdap:Grouper loader LDAP group optins");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:loaderLdap:grouperLoaderLdapValueDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:loaderLdap:grouperLoaderLdapOptouts").assignCreateParentStemsIfNotExist(true).assignDescription("Comma separated subjectIds or subjectIdentifiers who will be allowed to OPT OUT of the group membership list.  optional for LDAP_GROUP_LIST or LDAP_GROUPS_FROM_ATTRIBUTES").assignDisplayName("etc:attribute:loaderLdap:Grouper loader LDAP group optouts");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:loaderLdap:grouperLoaderLdapValueDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:loaderLdap:grouperLoaderLdapPriority").assignCreateParentStemsIfNotExist(true).assignDescription("Quartz has a fixed threadpool (max configured in the grouper-loader.properties), and when the max is reached, then jobs are prioritized by this integer.  The higher the better, and the default if not set is 5.").assignDisplayName("etc:attribute:loaderLdap:Grouper loader LDAP scheduling priority");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:loaderLdap:grouperLoaderLdapValueDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:loaderLdap:grouperLoaderLdapQuartzCron").assignCreateParentStemsIfNotExist(true).assignDescription("Quartz cron config string, e.g. every day at 8am is: 0 0 8 * * ?").assignDisplayName("etc:attribute:loaderLdap:Grouper loader LDAP quartz cron");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:loaderLdap:grouperLoaderLdapValueDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:loaderLdap:grouperLoaderLdapReaders").assignCreateParentStemsIfNotExist(true).assignDescription("Comma separated subjectIds or subjectIdentifiers who will be allowed to READ the group membership.  optional for LDAP_GROUP_LIST or LDAP_GROUPS_FROM_ATTRIBUTES").assignDisplayName("etc:attribute:loaderLdap:Grouper loader LDAP group readers");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:loaderLdap:grouperLoaderLdapValueDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:loaderLdap:grouperLoaderLdapResultsTransformationClass").assignCreateParentStemsIfNotExist(true).assignDescription("Grouper loader LDAP results transformation class (optional for loader ldap type: LDAP_GROUPS_FROM_ATTRIBUTE)").assignDisplayName("etc:attribute:loaderLdap:grouperLoaderLdapResultsTransformationClass");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:loaderLdap:grouperLoaderLdapValueDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:loaderLdap:grouperLoaderLdapSearchDn").assignCreateParentStemsIfNotExist(true).assignDescription("Location that constrains the subtree where the filter is applicable").assignDisplayName("etc:attribute:loaderLdap:Grouper loader LDAP search base DN");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:loaderLdap:grouperLoaderLdapValueDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:loaderLdap:grouperLoaderLdapSearchScope").assignCreateParentStemsIfNotExist(true).assignDescription("How the deep in the subtree the search will take place.  Can be OBJECT_SCOPE, ONELEVEL_SCOPE, or SUBTREE_SCOPE (default)").assignDisplayName("etc:attribute:loaderLdap:Grouper loader LDAP search scope");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:loaderLdap:grouperLoaderLdapValueDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:loaderLdap:grouperLoaderLdapServerId").assignCreateParentStemsIfNotExist(true).assignDescription("Server ID that is configured in the grouper-loader.properties that identifies the connection information to the LDAP server").assignDisplayName("etc:attribute:loaderLdap:Grouper loader LDAP server ID");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:loaderLdap:grouperLoaderLdapValueDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:loaderLdap:grouperLoaderLdapSourceId").assignCreateParentStemsIfNotExist(true).assignDescription("Source ID from the subject.properties that narrows the search for subjects.  This is optional though makes the loader job more efficient").assignDisplayName("etc:attribute:loaderLdap:Grouper loader LDAP source ID");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:loaderLdap:grouperLoaderLdapValueDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:loaderLdap:grouperLoaderLdapSubjectAttribute").assignCreateParentStemsIfNotExist(true).assignDescription("Attribute name of the filter object result that holds the subject id.  Note, if you use 'dn', and dn is not an attribute of the object, then the fully qualified object name will be used").assignDisplayName("etc:attribute:loaderLdap:Grouper loader LDAP subject attribute name");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:loaderLdap:grouperLoaderLdapValueDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:loaderLdap:grouperLoaderLdapSubjectExpression").assignCreateParentStemsIfNotExist(true).assignDescription("JEXL expression language fragment that processes the subject string before passing it to the subject API (optional)").assignDisplayName("etc:attribute:loaderLdap:Grouper loader LDAP subject expression");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:loaderLdap:grouperLoaderLdapValueDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:loaderLdap:grouperLoaderLdapSubjectIdType").assignCreateParentStemsIfNotExist(true).assignDescription("The type of subject ID.  This can be either: subjectId (most efficient), subjectIdentifier (2nd most efficient), or subjectIdOrIdentifier").assignDisplayName("etc:attribute:loaderLdap:Grouper loader LDAP subject ID type");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:loaderLdap:grouperLoaderLdapValueDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:loaderLdap:grouperLoaderLdapType").assignCreateParentStemsIfNotExist(true).assignDescription("This holds the type of job from the GrouperLoaderType enum, currently the only valid values are LDAP_SIMPLE, LDAP_GROUP_LIST, LDAP_GROUPS_FROM_ATTRIBUTES. Simple is a group loaded from LDAP filter which returns subject ids or identifiers.  Group list is an LDAP filter which returns group objects, and the group objects have a list of subjects.  Groups from attributes is an LDAP filter that returns subjects which have a multi-valued attribute e.g. affiliations where groups will be created based on subject who have each attribute value  ").assignDisplayName("etc:attribute:loaderLdap:Grouper loader LDAP type");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:loaderLdap:grouperLoaderLdapValueDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:loaderLdap:grouperLoaderLdapUpdaters").assignCreateParentStemsIfNotExist(true).assignDescription("Comma separated subjectIds or subjectIdentifiers who will be allowed to UPDATE the group memberships.  optional for LDAP_GROUP_LIST or LDAP_GROUPS_FROM_ATTRIBUTES").assignDisplayName("etc:attribute:loaderLdap:Grouper loader LDAP group updaters");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:loaderLdap:grouperLoaderLdapValueDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:loaderLdap:grouperLoaderLdapViewers").assignCreateParentStemsIfNotExist(true).assignDescription("Comma separated subjectIds or subjectIdentifiers who will be allowed to VIEW the group.  optional for LDAP_GROUP_LIST or LDAP_GROUPS_FROM_ATTRIBUTES").assignDisplayName("etc:attribute:loaderLdap:Grouper loader LDAP group viewers");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:loaderLdap:grouperLoaderLdapValueDef'"); } 
    attributeDef = AttributeDefFinder.findByName("etc:attribute:loaderMetadata:loaderMetadataValueDef", false);
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId").assignCreateParentStemsIfNotExist(true).assignDescription("Group id which is being populated from the loader").assignDisplayName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:loaderMetadata:loaderMetadataValueDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970").assignCreateParentStemsIfNotExist(true).assignDescription("Millis since 1970 that this group was fully processed").assignDisplayName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:loaderMetadata:loaderMetadataValueDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastIncrementalMillisSince1970").assignCreateParentStemsIfNotExist(true).assignDescription("Millis since 1970 that this group was incrementally processed").assignDisplayName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastIncrementalMillisSince1970");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:loaderMetadata:loaderMetadataValueDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary").assignCreateParentStemsIfNotExist(true).assignDescription("Summary of loader job").assignDisplayName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:loaderMetadata:loaderMetadataValueDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded").assignCreateParentStemsIfNotExist(true).assignDescription("True means the group was loaded from loader").assignDisplayName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:loaderMetadata:loaderMetadataValueDef'"); } 
    attributeDef = AttributeDefFinder.findByName("etc:attribute:loaderMetadata:loaderMetadataDef", false);
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:loaderMetadata:loaderMetadata").assignCreateParentStemsIfNotExist(true).assignDescription("has metadata attributes").assignDisplayName("etc:attribute:loaderMetadata:loaderMetadata");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:loaderMetadata:loaderMetadataDef'"); } 
    attributeDef = AttributeDefFinder.findByName("etc:attribute:permissionLimits:limitsDefInt", false);
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:permissionLimits:limitAmountLessThan").assignCreateParentStemsIfNotExist(true).assignDescription("Make sure the amount is less than the configured value").assignDisplayName("etc:attribute:permissionLimits:amount less than");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:permissionLimits:limitsDefInt'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:permissionLimits:limitAmountLessThanOrEqual").assignCreateParentStemsIfNotExist(true).assignDescription("Make sure the amount is less or equal to the configured value").assignDisplayName("etc:attribute:permissionLimits:amount less than or equal to");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:permissionLimits:limitsDefInt'"); } 
    attributeDef = AttributeDefFinder.findByName("etc:attribute:permissionLimits:limitsDef", false);
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:permissionLimits:limitExpression").assignCreateParentStemsIfNotExist(true).assignDescription("An expression language limit has a value of an EL which evaluates to true or false").assignDisplayName("etc:attribute:permissionLimits:Expression");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:permissionLimits:limitsDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:permissionLimits:limitIpOnNetworkRealm").assignCreateParentStemsIfNotExist(true).assignDescription("If the user is on an IP address on a centrally configured list of addresses").assignDisplayName("etc:attribute:permissionLimits:ipAddress on network realm");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:permissionLimits:limitsDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:permissionLimits:limitIpOnNetworks").assignCreateParentStemsIfNotExist(true).assignDescription("If the user is on an IP address on the following networks").assignDisplayName("etc:attribute:permissionLimits:ipAddress on networks");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:permissionLimits:limitsDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:permissionLimits:limitLabelsContain").assignCreateParentStemsIfNotExist(true).assignDescription("Configure a set of comma separated labels.  The env variable 'labels' should be passed with comma separated labels.  If one is there, its ok, if not, then disallowed").assignDisplayName("etc:attribute:permissionLimits:labels contains");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:permissionLimits:limitsDef'"); } 
    attributeDef = AttributeDefFinder.findByName("etc:attribute:permissionLimits:limitsDefMarker", false);
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:permissionLimits:limitWeekday9to5").assignCreateParentStemsIfNotExist(true).assignDescription("Make sure the check for the permission happens between 9am to 5pm on Monday through Friday").assignDisplayName("etc:attribute:permissionLimits:Weekday 9 to 5");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:permissionLimits:limitsDefMarker'"); } 
    attributeDef = AttributeDefFinder.findByName("etc:attribute:rules:rulesTypeDef", false);
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:rules:rule").assignCreateParentStemsIfNotExist(true).assignDescription("is a rule").assignDisplayName("etc:attribute:rules:rule");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:rules:rulesTypeDef'"); } 
    attributeDef = AttributeDefFinder.findByName("etc:attribute:rules:rulesAttrDef", false);
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:rules:ruleActAsSubjectId").assignCreateParentStemsIfNotExist(true).assignDescription("subject id to act as, mutually exclusive with identifier").assignDisplayName("etc:attribute:rules:ruleActAsSubjectId");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:rules:rulesAttrDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:rules:ruleActAsSubjectIdentifier").assignCreateParentStemsIfNotExist(true).assignDescription("subject identifier to act as, mutually exclusive with id").assignDisplayName("etc:attribute:rules:ruleActAsSubjectIdentifier");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:rules:rulesAttrDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:rules:ruleActAsSubjectSourceId").assignCreateParentStemsIfNotExist(true).assignDescription("subject source id to act as").assignDisplayName("etc:attribute:rules:ruleActAsSubjectSourceId");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:rules:rulesAttrDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:rules:ruleCheckArg0").assignCreateParentStemsIfNotExist(true).assignDescription("when the check needs an arg, this is the arg0").assignDisplayName("etc:attribute:rules:ruleCheckArg0");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:rules:rulesAttrDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:rules:ruleCheckArg1").assignCreateParentStemsIfNotExist(true).assignDescription("when the check needs an arg, this is the arg1").assignDisplayName("etc:attribute:rules:ruleCheckArg1");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:rules:rulesAttrDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:rules:ruleCheckOwnerId").assignCreateParentStemsIfNotExist(true).assignDescription("when the check should be to see if rule should fire, this is owner of type, mutually exclusive with name").assignDisplayName("etc:attribute:rules:ruleCheckOwnerId");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:rules:rulesAttrDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:rules:ruleCheckOwnerName").assignCreateParentStemsIfNotExist(true).assignDescription("when the check should be to see if rule should fire, this is owner of type, mutually exclusice with id").assignDisplayName("etc:attribute:rules:ruleCheckOwnerName");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:rules:rulesAttrDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:rules:ruleCheckStemScope").assignCreateParentStemsIfNotExist(true).assignDescription("when the check is a stem type, this is Stem.Scope ALL or SUB").assignDisplayName("etc:attribute:rules:ruleCheckStemScope");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:rules:rulesAttrDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:rules:ruleCheckType").assignCreateParentStemsIfNotExist(true).assignDescription("when the check should be to see if rule should fire, enum: RuleCheckType").assignDisplayName("etc:attribute:rules:ruleCheckType");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:rules:rulesAttrDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:rules:ruleIfConditionEl").assignCreateParentStemsIfNotExist(true).assignDescription("expression language to run to see if the rule should run, or blank if should run always").assignDisplayName("etc:attribute:rules:ruleIfConditionEl");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:rules:rulesAttrDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:rules:ruleIfConditionEnum").assignCreateParentStemsIfNotExist(true).assignDescription("RuleIfConditionEnum that sees if rule should fire, or exclude if should run always").assignDisplayName("etc:attribute:rules:ruleIfConditionEnum");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:rules:rulesAttrDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:rules:ruleIfConditionEnumArg0").assignCreateParentStemsIfNotExist(true).assignDescription("RuleIfConditionEnumArg0 if the if condition takes an argument, this is the first one").assignDisplayName("etc:attribute:rules:ruleIfConditionEnumArg0");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:rules:rulesAttrDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:rules:ruleIfConditionEnumArg1").assignCreateParentStemsIfNotExist(true).assignDescription("RuleIfConditionEnumArg1 if the if condition takes an argument, this is the second param").assignDisplayName("etc:attribute:rules:ruleIfConditionEnumArg1");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:rules:rulesAttrDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:rules:ruleIfOwnerId").assignCreateParentStemsIfNotExist(true).assignDescription("when the if part has an arg, this is owner of if, mutually exclusive with name").assignDisplayName("etc:attribute:rules:ruleIfOwnerId");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:rules:rulesAttrDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:rules:ruleIfOwnerName").assignCreateParentStemsIfNotExist(true).assignDescription("when the if part has an arg, this is owner of if, mutually exclusive with id").assignDisplayName("etc:attribute:rules:ruleIfOwnerName");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:rules:rulesAttrDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:rules:ruleIfStemScope").assignCreateParentStemsIfNotExist(true).assignDescription("when the if part is a stem, this is the scope of SUB or ONE").assignDisplayName("etc:attribute:rules:ruleIfStemScope");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:rules:rulesAttrDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:rules:ruleRunDaemon").assignCreateParentStemsIfNotExist(true).assignDescription("T|F for if this rule daemon should run.  Default to true if blank and check and if are enums, false if not").assignDisplayName("etc:attribute:rules:ruleRunDaemon");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:rules:rulesAttrDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:rules:ruleThenEl").assignCreateParentStemsIfNotExist(true).assignDescription("expression language to run when the rule fires").assignDisplayName("etc:attribute:rules:ruleThenEl");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:rules:rulesAttrDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:rules:ruleThenEnum").assignCreateParentStemsIfNotExist(true).assignDescription("RuleThenEnum to run when the rule fires").assignDisplayName("etc:attribute:rules:ruleThenEnum");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:rules:rulesAttrDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:rules:ruleThenEnumArg0").assignCreateParentStemsIfNotExist(true).assignDescription("RuleThenEnum argument 0 to run when the rule fires (enum might need args)").assignDisplayName("etc:attribute:rules:ruleThenEnumArg0");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:rules:rulesAttrDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:rules:ruleThenEnumArg1").assignCreateParentStemsIfNotExist(true).assignDescription("RuleThenEnum argument 1 to run when the rule fires (enum might need args)").assignDisplayName("etc:attribute:rules:ruleThenEnumArg1");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:rules:rulesAttrDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:rules:ruleThenEnumArg2").assignCreateParentStemsIfNotExist(true).assignDescription("RuleThenEnum argument 2 to run when the rule fires (enum might need args)").assignDisplayName("etc:attribute:rules:ruleThenEnumArg2");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:rules:rulesAttrDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:rules:ruleValid").assignCreateParentStemsIfNotExist(true).assignDescription("T|F for if this rule is valid, or the reason, managed by hook automatically").assignDisplayName("etc:attribute:rules:ruleValid");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:rules:rulesAttrDef'"); } 
    attributeDef = AttributeDefFinder.findByName("etc:attribute:userData:grouperUserDataDef", false);
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:userData:grouperUserData").assignCreateParentStemsIfNotExist(true).assignDescription("Marks a group that has memberships which have attributes for user data").assignDisplayName("etc:attribute:userData:Grouper user data");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:userData:grouperUserDataDef'"); } 
    attributeDef = AttributeDefFinder.findByName("etc:attribute:userData:grouperUserDataValueDef", false);
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:userData:grouperUserDataFavoriteAttributeDefNames").assignCreateParentStemsIfNotExist(true).assignDescription("A list of attribute definition name ids and metadata in json format that are the favorites for a user").assignDisplayName("etc:attribute:userData:Grouper user data favorite attribute definition names");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:userData:grouperUserDataValueDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:userData:grouperUserDataFavoriteAttributeDefs").assignCreateParentStemsIfNotExist(true).assignDescription("A list of attribute definition ids and metadata in json format that are the favorites for a user").assignDisplayName("etc:attribute:userData:Grouper user data favorite attribute definitions");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:userData:grouperUserDataValueDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:userData:grouperUserDataFavoriteGroups").assignCreateParentStemsIfNotExist(true).assignDescription("A list of group ids and metadata in json format that are the favorites for a user").assignDisplayName("etc:attribute:userData:Grouper user data favorite groups");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:userData:grouperUserDataValueDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:userData:grouperUserDataFavoriteStems").assignCreateParentStemsIfNotExist(true).assignDescription("A list of folder ids and metadata in json format that are the favorites for a user").assignDisplayName("etc:attribute:userData:Grouper user data favorite folders");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:userData:grouperUserDataValueDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:userData:grouperUserDataFavoriteSubjects").assignCreateParentStemsIfNotExist(true).assignDescription("A list of member ids and metadata in json format that are the favorites for a user").assignDisplayName("etc:attribute:userData:Grouper user data favorite subjects");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:userData:grouperUserDataValueDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:userData:grouperUserDataPreferences").assignCreateParentStemsIfNotExist(true).assignDescription("Preferences and metadata in json format for a user").assignDisplayName("etc:attribute:userData:Grouper user data preferences");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:userData:grouperUserDataValueDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:userData:grouperUserDataRecentAttributeDefNames").assignCreateParentStemsIfNotExist(true).assignDescription("A list of attribute definition name ids and metadata in json format that are the recently used attribute definition names for a user").assignDisplayName("etc:attribute:userData:Grouper user data recent attribute definition names");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:userData:grouperUserDataValueDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:userData:grouperUserDataRecentAttributeDefs").assignCreateParentStemsIfNotExist(true).assignDescription("A list of attribute definition ids and metadata in json format that are the recently used attribute definitions for a user").assignDisplayName("etc:attribute:userData:Grouper user data recent attribute definitions");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:userData:grouperUserDataValueDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:userData:grouperUserDataRecentGroups").assignCreateParentStemsIfNotExist(true).assignDescription("A list of group ids and metadata in json format that are the recently used groups for a user").assignDisplayName("etc:attribute:userData:Grouper user data recent groups");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:userData:grouperUserDataValueDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:userData:grouperUserDataRecentStems").assignCreateParentStemsIfNotExist(true).assignDescription("A list of folder ids and metadata in json format that are the recently used folders for a user").assignDisplayName("etc:attribute:userData:Grouper user data recent folders");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:userData:grouperUserDataValueDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:userData:grouperUserDataRecentSubjects").assignCreateParentStemsIfNotExist(true).assignDescription("A list of attribute member ids and metadata in json format that are the recently used subjects for a user").assignDisplayName("etc:attribute:userData:Grouper user data recent subjects");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:userData:grouperUserDataValueDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:attribute:userData:grouperUserDataVisualizationPrefs").assignCreateParentStemsIfNotExist(true).assignDescription("Recent options for the visualization form for a user in json format").assignDisplayName("etc:attribute:userData:Grouper user data visualization preferences");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:attribute:userData:grouperUserDataValueDef'"); } 
    attributeDef = AttributeDefFinder.findByName("etc:deprovisioning:deprovisioningDef", false);
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:deprovisioning:deprovisioning").assignCreateParentStemsIfNotExist(true).assignDescription("has deprovisioning attributes").assignDisplayName("etc:deprovisioning:deprovisioning");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:deprovisioning:deprovisioningDef'"); } 
    attributeDef = AttributeDefFinder.findByName("etc:deprovisioning:deprovisioningValueDef", false);
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:deprovisioning:deprovisioningAffiliation").assignCreateParentStemsIfNotExist(true).assignDescription("Affiliation configured in the grouper.properties.  e.g. employee, student, etc").assignDisplayName("etc:deprovisioning:deprovisioningAffiliation");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:deprovisioning:deprovisioningValueDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:deprovisioning:deprovisioningAllowAddsWhileDeprovisioned").assignCreateParentStemsIfNotExist(true).assignDescription("If allows adds to group of people who are deprovisioned.  can be: blank, true, or false.  If blank, then will not allow adds unless auto change loader is false").assignDisplayName("etc:deprovisioning:deprovisioningAllowAddsWhileDeprovisioned");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:deprovisioning:deprovisioningValueDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:deprovisioning:deprovisioningAutoChangeLoader").assignCreateParentStemsIfNotExist(true).assignDescription("If this is a loader job, if being in a deprovisioned group means the user should not be in the loaded group. can be: blank (true), or false (false)").assignDisplayName("etc:deprovisioning:deprovisioningAutoChangeLoader");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:deprovisioning:deprovisioningValueDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:deprovisioning:deprovisioningAutoselectForRemoval").assignCreateParentStemsIfNotExist(true).assignDescription("If the deprovisioning screen should autoselect this object as an object to deprovision can be: blank, true, or false.  If blank, then will autoselect unless deprovisioningAutoChangeLoader is false").assignDisplayName("etc:deprovisioning:deprovisioningAutoselectForRemoval");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:deprovisioning:deprovisioningValueDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:deprovisioning:deprovisioningCertifiedMillis").assignCreateParentStemsIfNotExist(true).assignDescription("(String) number of millis since 1970 that this group was certified for deprovisioning. i.e. the group managers indicate that the deprovisioned users are ok being in the group and do not send email reminders about it anymore until there are newly deprovisioned entities").assignDisplayName("etc:deprovisioning:deprovisioningCertifiedMillis");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:deprovisioning:deprovisioningValueDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:deprovisioning:deprovisioningDeprovision").assignCreateParentStemsIfNotExist(true).assignDescription("if this object should be in consideration for the deprovisioning system.  Can be: blank, true, or false.  Defaults to true").assignDisplayName("etc:deprovisioning:deprovisioningDeprovision");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:deprovisioning:deprovisioningValueDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:deprovisioning:deprovisioningDirectAssignment").assignCreateParentStemsIfNotExist(true).assignDescription("if deprovisioning configuration is directly assigned to the group or folder or inherited from parent").assignDisplayName("etc:deprovisioning:deprovisioningDirectAssignment");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:deprovisioning:deprovisioningValueDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:deprovisioning:deprovisioningEmailAddresses").assignCreateParentStemsIfNotExist(true).assignDescription("Email addresses to send deprovisioning messages.  If blank, then send to group managers, or comma separated email addresses (mutually exclusive with deprovisioningMailToGroup)").assignDisplayName("etc:deprovisioning:deprovisioningEmailAddresses");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:deprovisioning:deprovisioningValueDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:deprovisioning:deprovisioningEmailBody").assignCreateParentStemsIfNotExist(true).assignDescription("custom email body for emails, if blank use the default configured body.  Note there are template variables $$name$$ $$netId$$ $$userSubjectId$$ $$userEmailAddress$$ $$userDescription$$").assignDisplayName("etc:deprovisioning:deprovisioningEmailBody");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:deprovisioning:deprovisioningValueDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:deprovisioning:deprovisioningInheritedFromFolderId").assignCreateParentStemsIfNotExist(true).assignDescription("Stem ID of the folder where the configuration is inherited from.  This is blank if this is a direct assignment and not inherited").assignDisplayName("etc:deprovisioning:deprovisioningInheritedFromFolderId");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:deprovisioning:deprovisioningValueDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:deprovisioning:deprovisioningLastEmailedDate").assignCreateParentStemsIfNotExist(true).assignDescription("yyyy/mm/dd date that this was last emailed so multiple emails dont go out on same day").assignDisplayName("etc:deprovisioning:deprovisioningLastEmailedDate");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:deprovisioning:deprovisioningValueDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:deprovisioning:deprovisioningMailToGroup").assignCreateParentStemsIfNotExist(true).assignDescription("Group ID which holds people to email members of that group to send deprovisioning messages (mutually exclusive with deprovisioningEmailAddresses)").assignDisplayName("etc:deprovisioning:deprovisioningMailToGroup");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:deprovisioning:deprovisioningValueDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:deprovisioning:deprovisioningSendEmail").assignCreateParentStemsIfNotExist(true).assignDescription("If this is true, then send an email about the deprovisioning event.  If the assignments were removed, then give a description of the action.  If assignments were not removed, then remind the managers to unassign.  Can be <blank>, true, or false.  Defaults to false unless the assignments were not removed.").assignDisplayName("etc:deprovisioning:deprovisioningSendEmail");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:deprovisioning:deprovisioningValueDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:deprovisioning:deprovisioningShowForRemoval").assignCreateParentStemsIfNotExist(true).assignDescription("If the deprovisioning screen should show this object if the user as an assignment.  Can be: blank, true, or false.  If blank, will default to true unless auto change loader is false.").assignDisplayName("etc:deprovisioning:deprovisioningShowForRemoval");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:deprovisioning:deprovisioningValueDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:deprovisioning:deprovisioningStemScope").assignCreateParentStemsIfNotExist(true).assignDescription("If configuration is assigned to a folder, then this is 'one' or 'sub'.  'one' means only applicable to objects directly in this folder.  'sub' (default) means applicable to all objects in this folder and subfolders.  Note, the inheritance stops when a sub folder or object has configuration assigned.").assignDisplayName("etc:deprovisioning:deprovisioningStemScope");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:deprovisioning:deprovisioningValueDef'"); } 
    attributeDef = AttributeDefFinder.findByName("etc:legacy:attribute:legacyAttributeDef_grouperLoader", false);
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:legacy:attribute:legacyAttribute_grouperLoaderAndGroups").assignCreateParentStemsIfNotExist(true).assignDisplayName("etc:legacy:attribute:legacyAttribute_grouperLoaderAndGroups");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:legacy:attribute:legacyAttributeDef_grouperLoader'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:legacy:attribute:legacyAttribute_grouperLoaderDbName").assignCreateParentStemsIfNotExist(true).assignDisplayName("etc:legacy:attribute:legacyAttribute_grouperLoaderDbName");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:legacy:attribute:legacyAttributeDef_grouperLoader'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:legacy:attribute:legacyAttribute_grouperLoaderGroupQuery").assignCreateParentStemsIfNotExist(true).assignDisplayName("etc:legacy:attribute:legacyAttribute_grouperLoaderGroupQuery");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:legacy:attribute:legacyAttributeDef_grouperLoader'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:legacy:attribute:legacyAttribute_grouperLoaderGroupsLike").assignCreateParentStemsIfNotExist(true).assignDisplayName("etc:legacy:attribute:legacyAttribute_grouperLoaderGroupsLike");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:legacy:attribute:legacyAttributeDef_grouperLoader'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:legacy:attribute:legacyAttribute_grouperLoaderGroupTypes").assignCreateParentStemsIfNotExist(true).assignDisplayName("etc:legacy:attribute:legacyAttribute_grouperLoaderGroupTypes");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:legacy:attribute:legacyAttributeDef_grouperLoader'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:legacy:attribute:legacyAttribute_grouperLoaderIntervalSeconds").assignCreateParentStemsIfNotExist(true).assignDisplayName("etc:legacy:attribute:legacyAttribute_grouperLoaderIntervalSeconds");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:legacy:attribute:legacyAttributeDef_grouperLoader'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:legacy:attribute:legacyAttribute_grouperLoaderPriority").assignCreateParentStemsIfNotExist(true).assignDisplayName("etc:legacy:attribute:legacyAttribute_grouperLoaderPriority");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:legacy:attribute:legacyAttributeDef_grouperLoader'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:legacy:attribute:legacyAttribute_grouperLoaderQuartzCron").assignCreateParentStemsIfNotExist(true).assignDisplayName("etc:legacy:attribute:legacyAttribute_grouperLoaderQuartzCron");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:legacy:attribute:legacyAttributeDef_grouperLoader'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:legacy:attribute:legacyAttribute_grouperLoaderQuery").assignCreateParentStemsIfNotExist(true).assignDisplayName("etc:legacy:attribute:legacyAttribute_grouperLoaderQuery");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:legacy:attribute:legacyAttributeDef_grouperLoader'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:legacy:attribute:legacyAttribute_grouperLoaderScheduleType").assignCreateParentStemsIfNotExist(true).assignDisplayName("etc:legacy:attribute:legacyAttribute_grouperLoaderScheduleType");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:legacy:attribute:legacyAttributeDef_grouperLoader'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:legacy:attribute:legacyAttribute_grouperLoaderType").assignCreateParentStemsIfNotExist(true).assignDisplayName("etc:legacy:attribute:legacyAttribute_grouperLoaderType");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:legacy:attribute:legacyAttributeDef_grouperLoader'"); } 
    attributeDef = AttributeDefFinder.findByName("etc:legacy:attribute:legacyGroupTypeDef_grouperLoader", false);
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:legacy:attribute:legacyGroupType_grouperLoader").assignCreateParentStemsIfNotExist(true).assignDisplayName("etc:legacy:attribute:legacyGroupType_grouperLoader");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:legacy:attribute:legacyGroupTypeDef_grouperLoader'"); } 
    attributeDef = AttributeDefFinder.findByName("etc:objectTypes:grouperObjectTypeValueDef", false);
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:objectTypes:grouperObjectTypeDataOwner").assignCreateParentStemsIfNotExist(true).assignDescription("e.g. Registrar's office owns this data").assignDisplayName("etc:objectTypes:grouperObjectTypeDataOwner");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:objectTypes:grouperObjectTypeValueDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:objectTypes:grouperObjectTypeDirectAssignment").assignCreateParentStemsIfNotExist(true).assignDescription("if configuration is directly assigned to the group or folder or inherited from parent").assignDisplayName("etc:objectTypes:grouperObjectTypeDirectAssignment");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:objectTypes:grouperObjectTypeValueDef'"); } 
    attributeDef = AttributeDefFinder.findByName("etc:objectTypes:grouperObjectTypeDef", false);
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:objectTypes:grouperObjectTypeMarker").assignCreateParentStemsIfNotExist(true).assignDescription("has grouper object type attributes").assignDisplayName("etc:objectTypes:grouperObjectTypeMarker");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:objectTypes:grouperObjectTypeDef'"); } 
    attributeDef = AttributeDefFinder.findByName("etc:objectTypes:grouperObjectTypeValueDef", false);
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:objectTypes:grouperObjectTypeMembersDescription").assignCreateParentStemsIfNotExist(true).assignDescription("Human readable description of the members of this group").assignDisplayName("etc:objectTypes:grouperObjectTypeMembersDescription");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:objectTypes:grouperObjectTypeValueDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:objectTypes:grouperObjectTypeName").assignCreateParentStemsIfNotExist(true).assignDescription("ref, basis, policy,etc, bundle, org, test, service, app, readOnly, grouperSecurity").assignDisplayName("etc:objectTypes:grouperObjectTypeName");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:objectTypes:grouperObjectTypeValueDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:objectTypes:grouperObjectTypeOwnerStemId").assignCreateParentStemsIfNotExist(true).assignDescription("Stem ID of the folder where the configuration is inherited from.  This is blank if this is a direct assignment and not inherited").assignDisplayName("etc:objectTypes:grouperObjectTypeOwnerStemId");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:objectTypes:grouperObjectTypeValueDef'"); } 
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:objectTypes:grouperObjectTypeServiceName").assignCreateParentStemsIfNotExist(true).assignDescription("name of the service that this app falls under").assignDisplayName("etc:objectTypes:grouperObjectTypeServiceName");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:objectTypes:grouperObjectTypeValueDef'"); } 
    attributeDef = AttributeDefFinder.findByName("etc:pspng:do_not_provision_to_def", false);
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:pspng:do_not_provision_to").assignCreateParentStemsIfNotExist(true).assignDescription("Defines what provisioners should not process a group or groups within a folder. Since the default is already for provisioners to not provision any groups, this attribute is to override a provision_to attribute set on an ancestor folder. ").assignDisplayName("etc:pspng:do_not_provision_to");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:pspng:do_not_provision_to_def'"); } 
    attributeDef = AttributeDefFinder.findByName("etc:pspng:provision_to_def", false);
    if (attributeDef != null) {  AttributeDefNameSave attributeDefNameSave = new AttributeDefNameSave(grouperSession, attributeDef).assignName("etc:pspng:provision_to").assignCreateParentStemsIfNotExist(true).assignDescription("Defines what provisioners should process a group or groups within a folder").assignDisplayName("etc:pspng:provision_to");  attributeDefName = attributeDefNameSave.save();  gshTotalObjectCount++;  if (attributeDefNameSave.getSaveResultType() != SaveResultType.NO_CHANGE) {gshTotalChangeCount++;  System.out.println("Made change for attributeDefName: " + attributeDefName.getName()); }   } else { gshTotalErrorCount++;  System.out.println("ERROR: cant find attributeDef: 'etc:pspng:provision_to_def'"); } 
    System.out.println(new Date().toString() + " Done with attribute names, objects: " + gshTotalObjectCount + ", expected approx total: 2,300, changes: " + gshTotalChangeCount + ", known errors (view output for full list): " + gshTotalErrorCount);
    System.out.println(new Date().toString() + " Done with attribute name hierarchies, objects: " + gshTotalObjectCount + ", expected approx total: 2,300, changes: " + gshTotalChangeCount + ", known errors (view output for full list): " + gshTotalErrorCount);

    attributeDef = AttributeDefFinder.findByName("etc:attribute:attestation:attestationValueDef", false);
    AttributeDefScopeType attributeDefScopeType = AttributeDefScopeType.valueOfIgnoreCase("nameEquals", true);
    if (attributeDef != null) { if (attributeDefScopeType != null) { gshTotalObjectCount++;  if (attributeDef.getAttributeDefScopeDelegate().retrieveAttributeDefScope(attributeDefScopeType, "\"etc:attribute:attestation:attestation\"", "null") != null) { gshTotalChangeCount++; attributeDef.getAttributeDefScopeDelegate().assignScope(attributeDefScopeType, "\"etc:attribute:attestation:attestation\"", "null"); System.out.println("Made change for attributeDefScope on attributeDef: etc:attribute:attestation:attestationValueDef, etc:attribute:attestation:attestation, null"); }  } else { gshTotalErrorCount++; System.out.println("ERROR: cant find attributeDefScopeType: 'nameEquals'"); }  } else { gshTotalErrorCount++; System.out.println("ERROR: cant find attributeDef: 'etc:attribute:attestation:attestationValueDef'"); }
    attributeDef = AttributeDefFinder.findByName("etc:attribute:attrLoader:attributeDefLoaderDef", false);
    attributeDefScopeType = AttributeDefScopeType.valueOfIgnoreCase("attributeDefNameIdAssigned", true);
    if (attributeDef != null) { if (attributeDefScopeType != null) { gshTotalObjectCount++;  if (attributeDef.getAttributeDefScopeDelegate().retrieveAttributeDefScope(attributeDefScopeType, "\"b203cbc73cce4092a1ffc99b5b9f2ab9\"", "null") != null) { gshTotalChangeCount++; attributeDef.getAttributeDefScopeDelegate().assignScope(attributeDefScopeType, "\"b203cbc73cce4092a1ffc99b5b9f2ab9\"", "null"); System.out.println("Made change for attributeDefScope on attributeDef: etc:attribute:attrLoader:attributeDefLoaderDef, b203cbc73cce4092a1ffc99b5b9f2ab9, null"); }  } else { gshTotalErrorCount++; System.out.println("ERROR: cant find attributeDefScopeType: 'attributeDefNameIdAssigned'"); }  } else { gshTotalErrorCount++; System.out.println("ERROR: cant find attributeDef: 'etc:attribute:attrLoader:attributeDefLoaderDef'"); }
    attributeDef = AttributeDefFinder.findByName("etc:legacy:attribute:legacyAttributeDef_grouperLoader", false);
    attributeDefScopeType = AttributeDefScopeType.valueOfIgnoreCase("idEquals", true);
    if (attributeDef != null) { if (attributeDefScopeType != null) { gshTotalObjectCount++;  if (attributeDef.getAttributeDefScopeDelegate().retrieveAttributeDefScope(attributeDefScopeType, "\"9330da6c88c74b93bf97d10fc13b4e88\"", "null") != null) { gshTotalChangeCount++; attributeDef.getAttributeDefScopeDelegate().assignScope(attributeDefScopeType, "\"9330da6c88c74b93bf97d10fc13b4e88\"", "null"); System.out.println("Made change for attributeDefScope on attributeDef: etc:legacy:attribute:legacyAttributeDef_grouperLoader, 9330da6c88c74b93bf97d10fc13b4e88, null"); }  } else { gshTotalErrorCount++; System.out.println("ERROR: cant find attributeDefScopeType: 'idEquals'"); }  } else { gshTotalErrorCount++; System.out.println("ERROR: cant find attributeDef: 'etc:legacy:attribute:legacyAttributeDef_grouperLoader'"); }
    attributeDef = AttributeDefFinder.findByName("etc:attribute:loaderMetadata:loaderMetadataValueDef", false);
    attributeDefScopeType = AttributeDefScopeType.valueOfIgnoreCase("nameEquals", true);
    if (attributeDef != null) { if (attributeDefScopeType != null) { gshTotalObjectCount++;  if (attributeDef.getAttributeDefScopeDelegate().retrieveAttributeDefScope(attributeDefScopeType, "\"etc:attribute:loaderMetadata:loaderMetadata\"", "null") != null) { gshTotalChangeCount++; attributeDef.getAttributeDefScopeDelegate().assignScope(attributeDefScopeType, "\"etc:attribute:loaderMetadata:loaderMetadata\"", "null"); System.out.println("Made change for attributeDefScope on attributeDef: etc:attribute:loaderMetadata:loaderMetadataValueDef, etc:attribute:loaderMetadata:loaderMetadata, null"); }  } else { gshTotalErrorCount++; System.out.println("ERROR: cant find attributeDefScopeType: 'nameEquals'"); }  } else { gshTotalErrorCount++; System.out.println("ERROR: cant find attributeDef: 'etc:attribute:loaderMetadata:loaderMetadataValueDef'"); }
    attributeDef = AttributeDefFinder.findByName("etc:attribute:attrExternalSubjectInvite:externalSubjectInviteAttrDef", false);
    attributeDefScopeType = AttributeDefScopeType.valueOfIgnoreCase("nameEquals", true);
    if (attributeDef != null) { if (attributeDefScopeType != null) { gshTotalObjectCount++;  if (attributeDef.getAttributeDefScopeDelegate().retrieveAttributeDefScope(attributeDefScopeType, "\"etc:attribute:attrExternalSubjectInvite:externalSubjectInvite\"", "null") != null) { gshTotalChangeCount++; attributeDef.getAttributeDefScopeDelegate().assignScope(attributeDefScopeType, "\"etc:attribute:attrExternalSubjectInvite:externalSubjectInvite\"", "null"); System.out.println("Made change for attributeDefScope on attributeDef: etc:attribute:attrExternalSubjectInvite:externalSubjectInviteAttrDef, etc:attribute:attrExternalSubjectInvite:externalSubjectInvite, null"); }  } else { gshTotalErrorCount++; System.out.println("ERROR: cant find attributeDefScopeType: 'nameEquals'"); }  } else { gshTotalErrorCount++; System.out.println("ERROR: cant find attributeDef: 'etc:attribute:attrExternalSubjectInvite:externalSubjectInviteAttrDef'"); }
    attributeDef = AttributeDefFinder.findByName("etc:deprovisioning:deprovisioningValueDef", false);
    attributeDefScopeType = AttributeDefScopeType.valueOfIgnoreCase("nameEquals", true);
    if (attributeDef != null) { if (attributeDefScopeType != null) { gshTotalObjectCount++;  if (attributeDef.getAttributeDefScopeDelegate().retrieveAttributeDefScope(attributeDefScopeType, "\"etc:deprovisioning:deprovisioning\"", "null") != null) { gshTotalChangeCount++; attributeDef.getAttributeDefScopeDelegate().assignScope(attributeDefScopeType, "\"etc:deprovisioning:deprovisioning\"", "null"); System.out.println("Made change for attributeDefScope on attributeDef: etc:deprovisioning:deprovisioningValueDef, etc:deprovisioning:deprovisioning, null"); }  } else { gshTotalErrorCount++; System.out.println("ERROR: cant find attributeDefScopeType: 'nameEquals'"); }  } else { gshTotalErrorCount++; System.out.println("ERROR: cant find attributeDef: 'etc:deprovisioning:deprovisioningValueDef'"); }
    attributeDef = AttributeDefFinder.findByName("etc:attribute:rules:rulesAttrDef", false);
    attributeDefScopeType = AttributeDefScopeType.valueOfIgnoreCase("nameEquals", true);
    if (attributeDef != null) { if (attributeDefScopeType != null) { gshTotalObjectCount++;  if (attributeDef.getAttributeDefScopeDelegate().retrieveAttributeDefScope(attributeDefScopeType, "\"etc:attribute:rules:rule\"", "null") != null) { gshTotalChangeCount++; attributeDef.getAttributeDefScopeDelegate().assignScope(attributeDefScopeType, "\"etc:attribute:rules:rule\"", "null"); System.out.println("Made change for attributeDefScope on attributeDef: etc:attribute:rules:rulesAttrDef, etc:attribute:rules:rule, null"); }  } else { gshTotalErrorCount++; System.out.println("ERROR: cant find attributeDefScopeType: 'nameEquals'"); }  } else { gshTotalErrorCount++; System.out.println("ERROR: cant find attributeDef: 'etc:attribute:rules:rulesAttrDef'"); }
    attributeDef = AttributeDefFinder.findByName("etc:objectTypes:grouperObjectTypeValueDef", false);
    attributeDefScopeType = AttributeDefScopeType.valueOfIgnoreCase("nameEquals", true);
    if (attributeDef != null) { if (attributeDefScopeType != null) { gshTotalObjectCount++;  if (attributeDef.getAttributeDefScopeDelegate().retrieveAttributeDefScope(attributeDefScopeType, "\"etc:objectTypes:grouperObjectTypeMarker\"", "null") != null) { gshTotalChangeCount++; attributeDef.getAttributeDefScopeDelegate().assignScope(attributeDefScopeType, "\"etc:objectTypes:grouperObjectTypeMarker\"", "null"); System.out.println("Made change for attributeDefScope on attributeDef: etc:objectTypes:grouperObjectTypeValueDef, etc:objectTypes:grouperObjectTypeMarker, null"); }  } else { gshTotalErrorCount++; System.out.println("ERROR: cant find attributeDefScopeType: 'nameEquals'"); }  } else { gshTotalErrorCount++; System.out.println("ERROR: cant find attributeDef: 'etc:objectTypes:grouperObjectTypeValueDef'"); }
    System.out.println(new Date().toString() + " Done with attribute definition scopes, objects: " + gshTotalObjectCount + ", expected approx total: 2,300, changes: " + gshTotalChangeCount + ", known errors (view output for full list): " + gshTotalErrorCount);
    
    AttributeAssignSave attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:org:120000:student_worker", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:org:120000:student_worker"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("3779b51223804784b4a02ee238b73079");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194977884");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 1 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:legacy:attribute:legacyGroupType_grouperLoader", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:legacy:attribute:legacyGroupType_grouperLoader");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "etc:loader:basis:depts", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: etc:loader:basis:depts"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:legacy:attribute:legacyAttribute_grouperLoaderType", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:legacy:attribute:legacyAttribute_grouperLoaderType");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("SQL_GROUP_LIST");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:legacy:attribute:legacyAttribute_grouperLoaderGroupQuery", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:legacy:attribute:legacyAttribute_grouperLoaderGroupQuery");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("\nselect distinct\n  'basis:dept:' || d.id || ':' || replace(r.name, ' ', '_') as group_name,\n  'Basis:Departments:'\n      || d.id || ' - ' || replace(d.name, ':', '_') || ':'\n      || initcap(r.name) || ' - ' || replace(d.name, ':', '_') as group_display_name\n from mock_person_jobs pj\n join mock_jobs j on pj.job_id = j.id\n join mock_depts d on j.dept_id = d.id\n join mock_job_roles r on j.job_role_id = r.id\n");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:legacy:attribute:legacyAttribute_grouperLoaderQuartzCron", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:legacy:attribute:legacyAttribute_grouperLoaderQuartzCron");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("59 59 23 31 12 ? 2099");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:legacy:attribute:legacyAttribute_grouperLoaderScheduleType", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:legacy:attribute:legacyAttribute_grouperLoaderScheduleType");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("CRON");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:legacy:attribute:legacyAttribute_grouperLoaderQuery", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:legacy:attribute:legacyAttribute_grouperLoaderQuery");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("\nselect distinct\n  'basis:dept:' || d.id || ':' || replace(r.name, ' ', '_') as group_name,\n  pj.person_id as subject_id\nfrom mock_person_jobs pj\njoin mock_jobs j on pj.job_id = j.id\njoin mock_depts d on j.dept_id = d.id\njoin mock_job_roles r on j.job_role_id = r.id\n");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:legacy:attribute:legacyAttribute_grouperLoaderDbName", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:legacy:attribute:legacyAttribute_grouperLoaderDbName");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("grouper");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 13;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;

  }

  public static void loadSampleData5() {
    
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:org:130000:affiliate", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:org:130000:affiliate"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 1 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("3779b51223804784b4a02ee238b73079");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1544235371152");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:dept:130100:staff", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:dept:130100:staff"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194965679");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("ab0645494ae3498aa8436f7a5fc1f2c1");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 3 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:org:110100:faculty", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:org:110100:faculty"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 1 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("3779b51223804784b4a02ee238b73079");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194977820");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:dept:120200:staff", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:dept:120200:staff"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 3 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194964751");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("ab0645494ae3498aa8436f7a5fc1f2c1");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:org:120200:faculty", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:org:120200:faculty"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 3 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("3779b51223804784b4a02ee238b73079");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194978629");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:org:130200:faculty", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:org:130200:faculty"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194978875");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 2 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("3779b51223804784b4a02ee238b73079");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:dept:130203:contractor", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:dept:130203:contractor"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 1 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("ab0645494ae3498aa8436f7a5fc1f2c1");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194966283");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:dept:120200:contractor", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:dept:120200:contractor"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("ab0645494ae3498aa8436f7a5fc1f2c1");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194964910");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 1 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:dept:130102:staff", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:dept:130102:staff"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("ab0645494ae3498aa8436f7a5fc1f2c1");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194965893");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 3 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "ref:job:by-category:all-faculty", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: ref:job:by-category:all-faculty"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 6 inserted: 6 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194991490");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("7fb2004727904b13bdf45fd217695bd9");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:dept:130100:contractor", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:dept:130100:contractor"); problemWithAttributeAssign 
    = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194965283");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("ab0645494ae3498aa8436f7a5fc1f2c1");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 2 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:org:120200:employee", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:org:120200:employee"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("3779b51223804784b4a02ee238b73079");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 7 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1544235371286");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:dept:110200:faculty", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:dept:110200:faculty"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 1 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194963706");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("ab0645494ae3498aa8436f7a5fc1f2c1");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:dept:130000:contractor", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:dept:130000:contractor"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194965320");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 1 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("ab0645494ae3498aa8436f7a5fc1f2c1");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.imm_mem);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:userData:grouperUserData", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:userData:grouperUserData");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    ownerGroup = GroupFinder.findByName(grouperSession, "etc:grouperUi:grouperUiUserData", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: etc:grouperUi:grouperUiUserData"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    Subject ownerSubject = SubjectFinder.findByIdAndSource("800000034", "jdbc", false);
    if (ownerSubject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000034");  problemWithAttributeAssign = true;  }
    if (ownerSubject != null) { Member ownerMember = MemberFinder.findBySubject(grouperSession, ownerSubject, true); attributeAssignSave.assignOwnerMember(ownerMember); }
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.imm_mem_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:userData:grouperUserDataVisualizationPrefs", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:userData:grouperUserDataVisualizationPrefs");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("{\"drawShowLoaders\":true,\"drawModule\":\"text\",\"drawShowStems\":false,\"drawMaxSiblings\":50,\"drawNumParentsLevels\":-1,\"drawShowMemberCounts\":true,\"drawShowProvisioners\":true,\"drawObjectNameType\":\"path\",\"drawNumChildrenLevels\":-1}");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 3;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.imm_mem);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:userData:grouperUserData", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:userData:grouperUserData");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    ownerGroup = GroupFinder.findByName(grouperSession, "etc:grouperUi:grouperUiUserData", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: etc:grouperUi:grouperUiUserData"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    ownerSubject = SubjectFinder.findByIdAndSource("800000041", "jdbc", false);
    if (ownerSubject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000041");  problemWithAttributeAssign = true;  }
    if (ownerSubject != null) { Member ownerMember = MemberFinder.findBySubject(grouperSession, ownerSubject, true); attributeAssignSave.assignOwnerMember(ownerMember); }
    gshTotalObjectCount += 1;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:org:110100:staff", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:org:110100:staff"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194977948");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("3779b51223804784b4a02ee238b73079");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 4 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "ref:job:by-role:all-student_worker", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: ref:job:by-role:all-student_worker"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("true");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194997447");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("095c803dd00d4122a72fb765108eab09");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 6 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:dept:120203:staff", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:dept:120203:staff"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("ab0645494ae3498aa8436f7a5fc1f2c1");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 5 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194965445");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:dept:130202:faculty", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:dept:130202:faculty"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 1 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194966129");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("ab0645494ae3498aa8436f7a5fc1f2c1");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:dept:130100:faculty", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:dept:130100:faculty"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 1 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("ab0645494ae3498aa8436f7a5fc1f2c1");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194965562");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:dept:120000:staff", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:dept:120000:staff"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("ab0645494ae3498aa8436f7a5fc1f2c1");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194964526");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 4 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:dept:100000:affiliate", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:dept:100000:affiliate"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("ab0645494ae3498aa8436f7a5fc1f2c1");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194963194");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 1 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:dept:120201:student_worker", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:dept:120201:student_worker"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 1 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194965108");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("ab0645494ae3498aa8436f7a5fc1f2c1");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;

  }
  public static void loadSampleData6() {
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:org:130000:contractor", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:org:130000:contractor"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 1 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194978589");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("3779b51223804784b4a02ee238b73079");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:org:100000:employee", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:org:100000:employee"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("3779b51223804784b4a02ee238b73079");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1544235370581");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 1 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "ref:job:by-role:all-affiliate", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: ref:job:by-role:all-affiliate"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194997424");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 11 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("095c803dd00d4122a72fb765108eab09");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("true");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:dept:120201:staff", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:dept:120201:staff"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 2 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194965103");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("ab0645494ae3498aa8436f7a5fc1f2c1");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:dept:110102:contractor", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:dept:110102:contractor"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194963074");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 2 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("ab0645494ae3498aa8436f7a5fc1f2c1");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:dept:110203:staff", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:dept:110203:staff"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194964318");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 4 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("ab0645494ae3498aa8436f7a5fc1f2c1");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:dept:130200:contractor", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:dept:130200:contractor"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 2 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("ab0645494ae3498aa8436f7a5fc1f2c1");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194966050");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }

    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:org:130100:affiliate", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:org:130100:affiliate"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 1 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("3779b51223804784b4a02ee238b73079");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194978609");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:dept:130103:contractor", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:dept:130103:contractor"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194966150");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 2 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("ab0645494ae3498aa8436f7a5fc1f2c1");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:legacy:attribute:legacyGroupType_grouperLoader", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:legacy:attribute:legacyGroupType_grouperLoader");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "etc:loader:basis:orgs", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: etc:loader:basis:orgs"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:legacy:attribute:legacyAttribute_grouperLoaderScheduleType", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:legacy:attribute:legacyAttribute_grouperLoaderScheduleType");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("CRON");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:legacy:attribute:legacyAttribute_grouperLoaderType", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:legacy:attribute:legacyAttribute_grouperLoaderType");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("SQL_GROUP_LIST");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:legacy:attribute:legacyAttribute_grouperLoaderDbName", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:legacy:attribute:legacyAttribute_grouperLoaderDbName");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("grouper");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:legacy:attribute:legacyAttribute_grouperLoaderQuartzCron", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:legacy:attribute:legacyAttribute_grouperLoaderQuartzCron");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("59 59 23 31 12 ? 2099");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:legacy:attribute:legacyAttribute_grouperLoaderGroupQuery", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:legacy:attribute:legacyAttribute_grouperLoaderGroupQuery");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("\nselect distinct\n  'basis:org:' || d_org.id || ':' || replace(r.name, ' ', '_') as group_name,\n  'Basis:Organizations:Org ' || d_org.id || ' - ' || replace(d_org.name, ':', '_') || ':' || initcap(r.name) as group_display_name\n from mock_person_jobs pj\n join mock_jobs j on pj.job_id = j.id\n join mock_job_roles r on j.job_role_id = r.id\n join mock_depts d on j.dept_id = d.id\n join mock_depts d_org on d.umbrella_dept_id = d_org.id\n");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:legacy:attribute:legacyAttribute_grouperLoaderQuery", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:legacy:attribute:legacyAttribute_grouperLoaderQuery");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("\nselect distinct\n  'basis:org:' || d_org.id || ':' || replace(r.name, ' ', '_') as group_name,\n  'basis:dept:' || d.id || ':' || replace(r.name, ' ', '_') as subject_identifier,\n  'g:gsa' as subject_source_id\n from mock_person_jobs pj\n join mock_jobs j on pj.job_id = j.id\n join mock_job_roles r on j.job_role_id = r.id\n join mock_depts d on j.dept_id = d.id\n join mock_depts d_org on d.umbrella_dept_id = d_org.id\n");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 13;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:org:130100:faculty", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:org:130100:faculty"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 2 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("3779b51223804784b4a02ee238b73079");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194978741");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:dept:120102:staff", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:dept:120102:staff"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("ab0645494ae3498aa8436f7a5fc1f2c1");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194964483");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 1 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:dept:120102:faculty", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:dept:120102:faculty"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194964473");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 2 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("ab0645494ae3498aa8436f7a5fc1f2c1");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:dept:120103:student_worker", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:dept:120103:student_worker"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("ab0645494ae3498aa8436f7a5fc1f2c1");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 1 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194964725");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:org:130000:employee", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:org:130000:employee"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("3779b51223804784b4a02ee238b73079");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1544235370833");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 1 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:legacy:attribute:legacyGroupType_grouperLoader", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:legacy:attribute:legacyGroupType_grouperLoader");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "etc:loader:ref:job-categories", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: etc:loader:ref:job-categories"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:legacy:attribute:legacyAttribute_grouperLoaderScheduleType", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:legacy:attribute:legacyAttribute_grouperLoaderScheduleType");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("CRON");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:legacy:attribute:legacyAttribute_grouperLoaderGroupQuery", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:legacy:attribute:legacyAttribute_grouperLoaderGroupQuery");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("\nselect distinct\n 'ref:job:by-category:all-' || extension as group_name,\n 'Reference:Jobs:Jobs By Category:All ' || initcap(extension) as group_display_name\n from grouper_groups where name like 'basis:org:%:%'\n ");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:legacy:attribute:legacyAttribute_grouperLoaderDbName", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:legacy:attribute:legacyAttribute_grouperLoaderDbName");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("grouper");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:legacy:attribute:legacyAttribute_grouperLoaderQuery", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:legacy:attribute:legacyAttribute_grouperLoaderQuery");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("\nselect distinct\n 'ref:job:by-category:all-' || extension as group_name,\n name as subject_identifier,\n  'g:gsa' as subject_source_id\n from grouper_groups where name like 'basis:org:%:%'\n ");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:legacy:attribute:legacyAttribute_grouperLoaderType", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:legacy:attribute:legacyAttribute_grouperLoaderType");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("SQL_GROUP_LIST");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:legacy:attribute:legacyAttribute_grouperLoaderQuartzCron", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:legacy:attribute:legacyAttribute_grouperLoaderQuartzCron");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("59 59 23 31 12 ? 2099");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 13;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:org:120000:affiliate", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:org:120000:affiliate"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 1 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("3779b51223804784b4a02ee238b73079");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1544235370958");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:dept:110200:affiliate", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:dept:110200:affiliate"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 1 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194963859");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("ab0645494ae3498aa8436f7a5fc1f2c1");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:org:110200:employee", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:org:110200:employee"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 7 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("3779b51223804784b4a02ee238b73079");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1544235371173");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:org:110000:staff", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:org:110000:staff"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("3779b51223804784b4a02ee238b73079");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 1 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194977971");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:dept:120100:staff", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:dept:120100:staff"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194964257");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("ab0645494ae3498aa8436f7a5fc1f2c1");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 3 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:dept:100000:staff", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:dept:100000:staff"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 2 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("ab0645494ae3498aa8436f7a5fc1f2c1");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194963193");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:dept:120202:faculty", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:dept:120202:faculty"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194965652");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 1 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("ab0645494ae3498aa8436f7a5fc1f2c1");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "ref:job:by-category:all-staff", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: ref:job:by-category:all-staff"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194991497");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("7fb2004727904b13bdf45fd217695bd9");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 10 inserted: 10 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:dept:130200:affiliate", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:dept:130200:affiliate"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("ab0645494ae3498aa8436f7a5fc1f2c1");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194965954");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 1 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:org:130200:contractor", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:org:130200:contractor"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 2 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("3779b51223804784b4a02ee238b73079");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194978979");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:dept:130200:faculty", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:dept:130200:faculty"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 1 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194966036");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("ab0645494ae3498aa8436f7a5fc1f2c1");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:org:130200:affiliate", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:org:130200:affiliate"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("3779b51223804784b4a02ee238b73079");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 4 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194978755");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:dept:120103:staff", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:dept:120103:staff"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("ab0645494ae3498aa8436f7a5fc1f2c1");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 2 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194964603");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "ref:job:by-role:all-staff", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: ref:job:by-role:all-staff"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 28 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("true");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("095c803dd00d4122a72fb765108eab09");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194997443");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:dept:110100:staff", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:dept:110100:staff"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194963510");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("ab0645494ae3498aa8436f7a5fc1f2c1");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 4 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "ref:job:by-category:all-student_worker", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: ref:job:by-category:all-student_worker"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 6 inserted: 6 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194991494");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("7fb2004727904b13bdf45fd217695bd9");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:dept:130202:staff", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:dept:130202:staff"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("ab0645494ae3498aa8436f7a5fc1f2c1");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194966198");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 3 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:dept:130103:staff", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:dept:130103:staff"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 2 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194965892");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("ab0645494ae3498aa8436f7a5fc1f2c1");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:org:130000:staff", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:org:130000:staff"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("3779b51223804784b4a02ee238b73079");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 1 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194978599");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:dept:120101:staff", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:dept:120101:staff"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("ab0645494ae3498aa8436f7a5fc1f2c1");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 3 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194964987");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:org:100000:affiliate", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:org:100000:affiliate"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194978198");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("3779b51223804784b4a02ee238b73079");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 1 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:org:100000:staff", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:org:100000:staff"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false
    );
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194977945");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 1 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("3779b51223804784b4a02ee238b73079");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:dept:110200:staff", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:dept:110200:staff"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194963556");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("ab0645494ae3498aa8436f7a5fc1f2c1");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 4 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:dept:110102:staff", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:dept:110102:staff"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194963634");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("ab0645494ae3498aa8436f7a5fc1f2c1");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 2 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:dept:130201:affiliate", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:dept:130201:affiliate"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194966257");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("ab0645494ae3498aa8436f7a5fc1f2c1");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 2 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:dept:110202:affiliate", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:dept:110202:affiliate"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("ab0645494ae3498aa8436f7a5fc1f2c1");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 1 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194963976");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;

  }
  public static void loadSampleData7(){
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:dept:130202:affiliate", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:dept:130202:affiliate"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("ab0645494ae3498aa8436f7a5fc1f2c1");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 1 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194966215");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:dept:130201:student_worker", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:dept:130201:student_worker"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194966298");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("ab0645494ae3498aa8436f7a5fc1f2c1");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 1 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:org:130100:staff", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:org:130100:staff"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("3779b51223804784b4a02ee238b73079");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194978753");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 4 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "ref:job:by-category:all-affiliate", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: ref:job:by-category:all-affiliate"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194988725");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("7fb2004727904b13bdf45fd217695bd9");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 10 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:dept:110202:faculty", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:dept:110202:faculty"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 1 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("ab0645494ae3498aa8436f7a5fc1f2c1");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194963477");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:org:130100:employee", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:org:130100:employee"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 6 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1544235370593");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("3779b51223804784b4a02ee238b73079");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:org:120100:employee", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:org:120100:employee"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1544235371080");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("3779b51223804784b4a02ee238b73079");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 8 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:dept:130101:student_worker", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:dept:130101:student_worker"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194965626");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("ab0645494ae3498aa8436f7a5fc1f2c1");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 1 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:dept:120200:faculty", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:dept:120200:faculty"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("ab0645494ae3498aa8436f7a5fc1f2c1");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194964950");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 1 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:dept:120103:faculty", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:dept:120103:faculty"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("ab0645494ae3498aa8436f7a5fc1f2c1");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194964508");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 1 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:org:120000:employee", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:org:120000:employee"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("3779b51223804784b4a02ee238b73079");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1544235371257");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 1 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:dept:120202:staff", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:dept:120202:staff"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 4 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("ab0645494ae3498aa8436f7a5fc1f2c1");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194965368");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:org:110000:affiliate", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:org:110000:affiliate"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("3779b51223804784b4a02ee238b73079");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194977968");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 1 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:dept:100000:contractor", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:dept:100000:contractor"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194963246");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 1 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("ab0645494ae3498aa8436f7a5fc1f2c1");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:org:120000:staff", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:org:120000:staff"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194978057");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 1 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("3779b51223804784b4a02ee238b73079");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:dept:130000:staff", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:dept:130000:staff"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194965496");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("ab0645494ae3498aa8436f7a5fc1f2c1");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 4 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:dept:110103:staff", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:dept:110103:staff"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194963427");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 5 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("ab0645494ae3498aa8436f7a5fc1f2c1");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:org:120200:contractor", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:org:120200:contractor"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194978427");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("3779b51223804784b4a02ee238b73079");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 3 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:dept:120203:contractor", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:dept:120203:contractor"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("ab0645494ae3498aa8436f7a5fc1f2c1");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 1 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194965638");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:dept:110000:staff", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:dept:110000:staff"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("ab0645494ae3498aa8436f7a5fc1f2c1");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 3 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194963876");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:dept:120101:faculty", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:dept:120101:faculty"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("ab0645494ae3498aa8436f7a5fc1f2c1");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194964729");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 1 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    
  }
  
  public static void loadSampleData8() {
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:dept:110103:faculty", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:dept:110103:faculty"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194963277");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("ab0645494ae3498aa8436f7a5fc1f2c1");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 1 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:org:110200:faculty", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:org:110200:faculty"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 3 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("3779b51223804784b4a02ee238b73079");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194977795");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:dept:110203:contractor", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:dept:110203:contractor"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194964240");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 1 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("ab0645494ae3498aa8436f7a5fc1f2c1");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:org:110100:employee", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:org:110100:employee"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 5 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("3779b51223804784b4a02ee238b73079");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1544235370987");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:org:120100:staff", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:org:120100:staff"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("3779b51223804784b4a02ee238b73079");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 4 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194977895");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:legacy:attribute:legacyGroupType_grouperLoader", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:legacy:attribute:legacyGroupType_grouperLoader");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "etc:loader:ref:job-roles", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: etc:loader:ref:job-roles"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:legacy:attribute:legacyAttribute_grouperLoaderScheduleType", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:legacy:attribute:legacyAttribute_grouperLoaderScheduleType");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("CRON");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:legacy:attribute:legacyAttribute_grouperLoaderDbName", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:legacy:attribute:legacyAttribute_grouperLoaderDbName");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("grouper");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:legacy:attribute:legacyAttribute_grouperLoaderQuery", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:legacy:attribute:legacyAttribute_grouperLoaderQuery");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("\nselect distinct\n 'ref:job:by-role:all-' || extension as group_name,\n name as subject_identifier,\n  'g:gsa' as subject_source_id\n from grouper_groups where name like 'basis:dept:%:%'\n ");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:legacy:attribute:legacyAttribute_grouperLoaderGroupQuery", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:legacy:attribute:legacyAttribute_grouperLoaderGroupQuery");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("\nselect distinct\n 'ref:job:by-role:all-' || extension as group_name,\n 'Reference:Jobs:Jobs By Role:All ' || initcap(extension) as group_display_name\n from grouper_groups where name like 'basis:dept:%:%'\n ");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:legacy:attribute:legacyAttribute_grouperLoaderQuartzCron", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:legacy:attribute:legacyAttribute_grouperLoaderQuartzCron");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("59 59 23 31 12 ? 2099");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:legacy:attribute:legacyAttribute_grouperLoaderType", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:legacy:attribute:legacyAttribute_grouperLoaderType");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("SQL_GROUP_LIST");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 13;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:dept:130200:staff", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:dept:130200:staff"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("ab0645494ae3498aa8436f7a5fc1f2c1");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194966122");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 2 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.imm_mem);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:userData:grouperUserData", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:userData:grouperUserData");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    ownerGroup = GroupFinder.findByName(grouperSession, "etc:grouperUi:grouperUiUserData", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: etc:grouperUi:grouperUiUserData"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    ownerSubject = SubjectFinder.findByIdAndSource("GrouperSystem", "g:isa", false);
    if (ownerSubject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: g:isa: GrouperSystem");  problemWithAttributeAssign = true;  }
    if (ownerSubject != null) { Member ownerMember = MemberFinder.findBySubject(grouperSession, ownerSubject, true); attributeAssignSave.assignOwnerMember(ownerMember); }
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.imm_mem_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:userData:grouperUserDataPreferences", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:userData:grouperUserDataPreferences");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("{\"indexCol2\":\"RecentlyUsed\"}");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.imm_mem_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:userData:grouperUserDataRecentGroups", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:userData:grouperUserDataRecentGroups");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("{\"list\":[{\"uuid\":\"ee82302813e9425fab91654626ffaa19\",\"timestamp\":1549305135889},{\"uuid\":\"537b5e41c3834209bd3b26c9d3cb3474\",\"timestamp\":1549304321881},{\"uuid\":\"61726dfa6b0a4d568f71af37ee16a13f\",\"timestamp\":1549216700120},{\"uuid\":\"b06127660a164ed0a235afb6eacaede8\",\"timestamp\":1549216644391},{\"uuid\":\"171cb84c248345b087ac9dc9c3360ceb\",\"timestamp\":1549216602197},{\"uuid\":\"a7df72ac017d4e7db00b02a00f5f23b9\",\"timestamp\":1548971711068},{\"uuid\":\"7d2632af41234464b808080c7aa3ac3d\",\"timestamp\":1548971711047},{\"uuid\":\"82cf8894526d4671b00ca444a34c8602\",\"timestamp\":1548971711025},{\"uuid\":\"bd0b6535b88b45a0ba0782fc7d2e78c1\",\"timestamp\":1545504914637},{\"uuid\":\"89460f4c0f75405fad5897ad1e9dd8a4\",\"timestamp\":1545504914610},{\"uuid\":\"f859cabab2254c74881a42d945b4b3ed\",\"timestamp\":1545504914589}]}");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.imm_mem_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:userData:grouperUserDataRecentSubjects", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:userData:grouperUserDataRecentSubjects");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("{\"list\":[{\"uuid\":\"c64f778c69be48d9b2aa06eb3f78a081\",\"timestamp\":1549216700148}]}");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.imm_mem_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:userData:grouperUserDataVisualizationPrefs", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:userData:grouperUserDataVisualizationPrefs");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("{\"drawShowLoaders\":true,\"drawModule\":\"d3\",\"drawShowStems\":true,\"drawMaxSiblings\":8,\"drawNumParentsLevels\":-1,\"drawShowMemberCounts\":false,\"drawShowProvisioners\":true,\"drawObjectNameType\":\"displayExtension\",\"drawNumChildrenLevels\":-1}");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.imm_mem_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:userData:grouperUserDataFavoriteGroups", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:userData:grouperUserDataFavoriteGroups");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("{\"list\":[{\"uuid\":\"5fb6e5d599f443e386ebe73b2498f049\",\"timestamp\":1549942380640},{\"uuid\":\"f859cabab2254c74881a42d945b4b3ed\",\"timestamp\":1549838874452},{\"uuid\":\"82cf8894526d4671b00ca444a34c8602\",\"timestamp\":1549838568040},{\"uuid\":\"c632aba57e9f4c4295f54b4cdb424f9e\",\"timestamp\":1545928566200},{\"uuid\":\"0e9324dc7a2f4235a0e12e0f43744b75\",\"timestamp\":1545924872188}]}");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 11;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:pspng:provision_to", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:pspng:provision_to");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:org:110100:affiliate", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:org:110100:affiliate"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignSave.addValue("testDB2");
    gshTotalObjectCount += 2;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:org:110200:affiliate", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:org:110200:affiliate"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("3779b51223804784b4a02ee238b73079");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 2 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194977818");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:org:130200:student_worker", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:org:130200:student_worker"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("3779b51223804784b4a02ee238b73079");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 1 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194978895");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:org:130200:employee", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:org:130200:employee"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 6 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("3779b51223804784b4a02ee238b73079");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1544235370577");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:dept:130101:affiliate", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:dept:130101:affiliate"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194966018");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("ab0645494ae3498aa8436f7a5fc1f2c1");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 1 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:org:110000:employee", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:org:110000:employee"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1544235371062");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 1 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("3779b51223804784b4a02ee238b73079");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:org:110100:affiliate", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:org:110100:affiliate"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 1 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194977926");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("3779b51223804784b4a02ee238b73079");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:dept:120202:contractor", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:dept:120202:contractor"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194965705");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("ab0645494ae3498aa8436f7a5fc1f2c1");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 1 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.imm_mem);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:userData:grouperUserData", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:userData:grouperUserData");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    ownerGroup = GroupFinder.findByName(grouperSession, "etc:grouperUi:grouperUiUserData", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: etc:grouperUi:grouperUiUserData"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    ownerSubject = SubjectFinder.findByIdAndSource("800000077", "jdbc", false);
    if (ownerSubject == null) { gshTotalErrorCount++; System.out.println("Error: cant find subject: jdbc: 800000077");  problemWithAttributeAssign = true;  }
    if (ownerSubject != null) { Member ownerMember = MemberFinder.findBySubject(grouperSession, ownerSubject, true); attributeAssignSave.assignOwnerMember(ownerMember); }
    gshTotalObjectCount += 1;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:org:120200:affiliate", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:org:120200:affiliate"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194977961");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 1 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("3779b51223804784b4a02ee238b73079");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:dept:110201:staff", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:dept:110201:staff"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("ab0645494ae3498aa8436f7a5fc1f2c1");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194963783");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 2 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:dept:120100:faculty", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:dept:120100:faculty"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 2 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194964851");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("ab0645494ae3498aa8436f7a5fc1f2c1");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:dept:120201:faculty", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:dept:120201:faculty"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 1 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194965152");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("ab0645494ae3498aa8436f7a5fc1f2c1");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "ref:job:by-category:all-contractor", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: ref:job:by-category:all-contractor"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("7fb2004727904b13bdf45fd217695bd9");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 8 inserted: 8 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194991494");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:org:100000:contractor", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:org:100000:contractor"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194977898");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 1 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("3779b51223804784b4a02ee238b73079");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "ref:job:by-category:all-employee", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: ref:job:by-category:all-employee"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("7fb2004727904b13bdf45fd217695bd9");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194988683");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 10 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:dept:130103:faculty", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:dept:130103:faculty"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 1 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("ab0645494ae3498aa8436f7a5fc1f2c1");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194965870");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:org:110100:contractor", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:org:110100:contractor"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194977831");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 2 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("3779b51223804784b4a02ee238b73079");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:dept:110201:faculty", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:dept:110201:faculty"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 1 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194964270");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("ab0645494ae3498aa8436f7a5fc1f2c1");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:org:120200:student_worker", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:org:120200:student_worker"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("3779b51223804784b4a02ee238b73079");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 1 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194978584");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;

  }
  
  public static void loadSampleData9() {
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:org:120100:faculty", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:org:120100:faculty"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194977802");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 4 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("3779b51223804784b4a02ee238b73079");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:dept:110100:affiliate", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:dept:110100:affiliate"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("ab0645494ae3498aa8436f7a5fc1f2c1");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194963859");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 1 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:dept:110000:affiliate", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:dept:110000:affiliate"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 1 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("ab0645494ae3498aa8436f7a5fc1f2c1");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194963409");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:dept:130203:affiliate", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:dept:130203:affiliate"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("ab0645494ae3498aa8436f7a5fc1f2c1");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194966239");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 1 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:org:110200:contractor", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:org:110200:contractor"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("3779b51223804784b4a02ee238b73079");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 1 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194977847");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:org:130100:contractor", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:org:130100:contractor"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194978734");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 2 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("3779b51223804784b4a02ee238b73079");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:org:130200:staff", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:org:130200:staff"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("3779b51223804784b4a02ee238b73079");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194978914");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 4 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "ref:job:by-role:all-contractor", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: ref:job:by-role:all-contractor"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 13 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("true");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194997443");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("095c803dd00d4122a72fb765108eab09");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:org:110200:staff", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:org:110200:staff"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 4 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("3779b51223804784b4a02ee238b73079");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194977851");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:org:120200:staff", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:org:120200:staff"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("3779b51223804784b4a02ee238b73079");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 4 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194978548");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:dept:110000:student_worker", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:dept:110000:student_worker"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194963660");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("ab0645494ae3498aa8436f7a5fc1f2c1");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 1 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:org:130100:student_worker", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:org:130100:student_worker"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 1 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("3779b51223804784b4a02ee238b73079");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194978743");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:dept:120000:student_worker", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:dept:120000:student_worker"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 1 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("ab0645494ae3498aa8436f7a5fc1f2c1");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194964191");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:org:110000:student_worker", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:org:110000:student_worker"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("3779b51223804784b4a02ee238b73079");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194978059");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 1 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:instrumentationData:instrumentationDataInstances:689da21903e44047a862e80954f62fda", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:instrumentationData:instrumentationDataInstances:689da21903e44047a862e80954f62fda");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "etc:attribute:instrumentationData:instrumentationDataInstancesGroup", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: etc:attribute:instrumentationData:instrumentationDataInstancesGroup"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:instrumentationData:instrumentationDataInstanceLastUpdate", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:instrumentationData:instrumentationDataInstanceLastUpdate");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1550248941278");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:instrumentationData:instrumentationDataInstanceEngineName", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:instrumentationData:instrumentationDataInstanceEngineName");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("grouperUI");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:instrumentationData:instrumentationDataInstanceCounts", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:instrumentationData:instrumentationDataInstanceCounts");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("{\"startTime\":1550199600000,\"duration\":3600000,\"UI_REQUESTS\":144}");
    attributeAssignOnAssignSave.addValue("{\"startTime\":1548867600000,\"duration\":3600000,\"UI_REQUESTS\":63}");
    attributeAssignOnAssignSave.addValue("{\"startTime\":1550163600000,\"duration\":3600000,\"UI_REQUESTS\":12}");
    attributeAssignOnAssignSave.addValue("{\"startTime\":1547665200000,\"duration\":3600000,\"UI_REQUESTS\":31}");
    attributeAssignOnAssignSave.addValue("{\"startTime\":1550174400000,\"duration\":3600000,\"UI_REQUESTS\":15}");
    attributeAssignOnAssignSave.addValue("{\"startTime\":1548205200000,\"duration\":3600000,\"UI_REQUESTS\":80}");
    attributeAssignOnAssignSave.addValue("{\"startTime\":1550156400000,\"duration\":3600000,\"UI_REQUESTS\":46}");
    attributeAssignOnAssignSave.addValue("{\"startTime\":1548201600000,\"duration\":3600000,\"UI_REQUESTS\":13}");
    attributeAssignOnAssignSave.addValue("{\"startTime\":1549375200000,\"duration\":3600000,\"UI_REQUESTS\":11}");
    attributeAssignOnAssignSave.addValue("{\"startTime\":1549818000000,\"duration\":3600000,\"UI_REQUESTS\":8}");
    attributeAssignOnAssignSave.addValue("{\"startTime\":1547661600000,\"duration\":3600000,\"UI_REQUESTS\":124}");
    attributeAssignOnAssignSave.addValue("{\"startTime\":1550160000000,\"duration\":3600000,\"UI_REQUESTS\":60}");
    attributeAssignOnAssignSave.addValue("{\"startTime\":1549422000000,\"duration\":3600000,\"UI_REQUESTS\":51}");
    attributeAssignOnAssignSave.addValue("{\"startTime\":1549918800000,\"duration\":3600000,\"UI_REQUESTS\":164}");
    attributeAssignOnAssignSave.addValue("{\"startTime\":1549911600000,\"duration\":3600000,\"UI_REQUESTS\":25}");
    attributeAssignOnAssignSave.addValue("{\"startTime\":1550242800000,\"duration\":3600000,\"UI_REQUESTS\":18}");
    attributeAssignOnAssignSave.addValue("{\"startTime\":1548532800000,\"duration\":3600000,\"UI_REQUESTS\":33}");
    attributeAssignOnAssignSave.addValue("{\"startTime\":1548864000000,\"duration\":3600000,\"UI_REQUESTS\":30}");
    attributeAssignOnAssignSave.addValue("{\"startTime\":1550178000000,\"duration\":3600000,\"UI_REQUESTS\":25}");
    attributeAssignOnAssignSave.addValue("{\"startTime\":1548871200000,\"duration\":3600000,\"UI_REQUESTS\":8}");
    attributeAssignOnAssignSave.addValue("{\"startTime\":1548536400000,\"duration\":3600000,\"UI_REQUESTS\":10}");
    attributeAssignOnAssignSave.addValue("{\"startTime\":1548259200000,\"duration\":3600000,\"UI_REQUESTS\":151}");
    attributeAssignOnAssignSave.addValue("{\"startTime\":1549728000000,\"duration\":3600000,\"UI_REQUESTS\":8}");
    attributeAssignOnAssignSave.addValue("{\"startTime\":1549296000000,\"duration\":3600000,\"UI_REQUESTS\":13}");
    attributeAssignOnAssignSave.addValue("{\"startTime\":1548439200000,\"duration\":3600000,\"UI_REQUESTS\":100}");
    attributeAssignOnAssignSave.addValue("{\"startTime\":1549814400000,\"duration\":3600000,\"UI_REQUESTS\":31}");
    attributeAssignOnAssignSave.addValue("{\"startTime\":1549839600000,\"duration\":3600000,\"UI_REQUESTS\":21}");
    attributeAssignOnAssignSave.addValue("{\"startTime\":1549303200000,\"duration\":3600000,\"UI_REQUESTS\":28}");
    attributeAssignOnAssignSave.addValue("{\"startTime\":1548428400000,\"duration\":3600000,\"UI_REQUESTS\":99}");
    attributeAssignOnAssignSave.addValue("{\"startTime\":1547751600000,\"duration\":3600000,\"UI_REQUESTS\":99}");
    attributeAssignOnAssignSave.addValue("{\"startTime\":1549220400000,\"duration\":3600000,\"UI_REQUESTS\":7}");
    attributeAssignOnAssignSave.addValue("{\"startTime\":1547755200000,\"duration\":3600000,\"UI_REQUESTS\":1}");
    attributeAssignOnAssignSave.addValue("{\"startTime\":1548435600000,\"duration\":3600000,\"UI_REQUESTS\":51}");
    attributeAssignOnAssignSave.addValue("{\"startTime\":1549915200000,\"duration\":3600000,\"UI_REQUESTS\":65}");
    attributeAssignOnAssignSave.addValue("{\"startTime\":1548255600000,\"duration\":3600000,\"UI_REQUESTS\":73}");
    attributeAssignOnAssignSave.addValue("{\"startTime\":1549396800000,\"duration\":3600000,\"UI_REQUESTS\":38}");
    attributeAssignOnAssignSave.addValue("{\"startTime\":1548262800000,\"duration\":3600000,\"UI_REQUESTS\":29}");
    attributeAssignOnAssignSave.addValue("{\"startTime\":1548874800000,\"duration\":3600000,\"UI_REQUESTS\":10}");
    attributeAssignOnAssignSave.addValue("{\"startTime\":1550016000000,\"duration\":3600000,\"UI_REQUESTS\":10}");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:instrumentationData:instrumentationDataInstanceServerLabel", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:instrumentationData:instrumentationDataInstanceServerLabel");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("ITSCER28");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 47;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "ref:job:by-role:all-faculty", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: ref:job:by-role:all-faculty"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 15 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("095c803dd00d4122a72fb765108eab09");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("true");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194997483");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:pspng:provision_to", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:pspng:provision_to");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:org:110100:faculty", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:org:110100:faculty"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignSave.addValue("testDB2");
    gshTotalObjectCount += 2;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:dept:130203:staff", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:dept:130203:staff"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("ab0645494ae3498aa8436f7a5fc1f2c1");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 2 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194966295");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:dept:130101:staff", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:dept:130101:staff"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 3 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194965679");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("ab0645494ae3498aa8436f7a5fc1f2c1");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:dept:120201:affiliate", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:dept:120201:affiliate"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("ab0645494ae3498aa8436f7a5fc1f2c1");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194965045");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 1 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:dept:110101:staff", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:dept:110101:staff"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 4 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("ab0645494ae3498aa8436f7a5fc1f2c1");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194963193");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:org:120100:student_worker", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:org:120100:student_worker"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194977772");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("3779b51223804784b4a02ee238b73079");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 1 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:dept:130201:staff", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:dept:130201:staff"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("ab0645494ae3498aa8436f7a5fc1f2c1");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 1 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194966338");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:dept:110101:contractor", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:dept:110101:contractor"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 1 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194963337");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("ab0645494ae3498aa8436f7a5fc1f2c1");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:org:120100:contractor", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:org:120100:contractor"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 1 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194978030");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("3779b51223804784b4a02ee238b73079");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:dept:120100:contractor", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:dept:120100:contractor"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("ab0645494ae3498aa8436f7a5fc1f2c1");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 1 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194964950");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:dept:110202:staff", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:dept:110202:staff"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 4 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("ab0645494ae3498aa8436f7a5fc1f2c1");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1545194964246");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    problemWithAttributeAssign = false;
    attributeAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignSave.assignAttributeAssignType(AttributeAssignType.group);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:loaderMetadata", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:loaderMetadata");  problemWithAttributeAssign = true; }
    attributeAssignSave.assignAttributeDefName(attributeDefName);
    ownerGroup = GroupFinder.findByName(grouperSession, "basis:org:120100:affiliate", false);
    if (ownerGroup == null) { gshTotalErrorCount++; System.out.println("Error: cant find group: basis:org:120100:affiliate"); problemWithAttributeAssign = true;  }
    attributeAssignSave.assignOwnerGroup(ownerGroup);
    attributeAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastFullMillisSince1970");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("1544235371267");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLoaded");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("false");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataLastSummary");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("total: 2 inserted: 0 deleted: 0 updated: 0");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    attributeAssignOnAssignSave = new AttributeAssignSave(grouperSession).assignAttributeAssignIdsToNotUse(attributeAssignIdsAlreadyUsed).assignPrintChangesToSystemOut(true);
    attributeAssignOnAssignSave.assignAttributeAssignType(AttributeAssignType.group_asgn);
    attributeDefName = AttributeDefNameFinder.findByName("etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId", false);
    if (attributeDefName == null) { gshTotalErrorCount++;  System.out.println("Error: cant find attributeDefName: etc:attribute:loaderMetadata:grouperLoaderMetadataGroupId");  problemWithAttributeAssign = true; }
    attributeAssignOnAssignSave.assignAttributeDefName(attributeDefName);
    attributeAssignOnAssignSave.assignPutAttributeAssignIdsToNotUseSet(true);
    attributeAssignOnAssignSave.addValue("3779b51223804784b4a02ee238b73079");
    attributeAssignSave.addAttributeAssignOnThisAssignment(attributeAssignOnAssignSave);
    gshTotalObjectCount += 9;
    if (!problemWithAttributeAssign) { AttributeAssign attributeAssign = attributeAssignSave.save(); if (attributeAssignSave.getChangesCount() > 0) { gshTotalChangeCount+=attributeAssignSave.getChangesCount();  System.out.println("Made " + attributeAssignSave.getChangesCount() + " changes for attribute assign: " + attributeAssign.toString()); } }
    System.out.println(new Date().toString() + " Script complete: total objects, objects: " + gshTotalObjectCount + ", expected approx total: 2,300, changes: " + gshTotalChangeCount + ", known errors (view output for full list): " + gshTotalErrorCount);

  }
}
