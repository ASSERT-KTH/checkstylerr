[
    {
        "line": "15",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - org.bukkit.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "32",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - org.bukkit.event.entity.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "44",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - java.io.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "46",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - java.util.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "170",
        "column": "25",
        "severity": "error",
        "message": "Parameter minigame should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "170",
        "column": "34",
        "severity": "error",
        "message": "'minigame' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "180",
        "column": "5",
        "severity": "error",
        "message": "Class 'RecorderData' looks like designed for extension (can be subclassed), but the method 'getWhitelistMode' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'RecorderData' final or making the method 'getWhitelistMode' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "184",
        "column": "5",
        "severity": "error",
        "message": "Class 'RecorderData' looks like designed for extension (can be subclassed), but the method 'setWhitelistMode' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'RecorderData' final or making the method 'setWhitelistMode' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "184",
        "column": "34",
        "severity": "error",
        "message": "Parameter bool should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "188",
        "column": "5",
        "severity": "error",
        "message": "Class 'RecorderData' looks like designed for extension (can be subclassed), but the method 'getWhitelistModeCallback' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'RecorderData' final or making the method 'getWhitelistModeCallback' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "197",
        "column": "34",
        "severity": "error",
        "message": "Parameter value should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "203",
        "column": "5",
        "severity": "error",
        "message": "Class 'RecorderData' looks like designed for extension (can be subclassed), but the method 'addWBBlock' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'RecorderData' final or making the method 'addWBBlock' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "203",
        "column": "28",
        "severity": "error",
        "message": "Parameter mat should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "207",
        "column": "5",
        "severity": "error",
        "message": "Class 'RecorderData' looks like designed for extension (can be subclassed), but the method 'getWBBlocks' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'RecorderData' final or making the method 'getWBBlocks' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "211",
        "column": "5",
        "severity": "error",
        "message": "Class 'RecorderData' looks like designed for extension (can be subclassed), but the method 'removeWBBlock' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'RecorderData' final or making the method 'removeWBBlock' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "211",
        "column": "34",
        "severity": "error",
        "message": "Parameter mat should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "219",
        "column": "5",
        "severity": "error",
        "message": "Class 'RecorderData' looks like designed for extension (can be subclassed), but the method 'hasCreatedRegenBlocks' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'RecorderData' final or making the method 'hasCreatedRegenBlocks' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "223",
        "column": "5",
        "severity": "error",
        "message": "Class 'RecorderData' looks like designed for extension (can be subclassed), but the method 'setCreatedRegenBlocks' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'RecorderData' final or making the method 'setCreatedRegenBlocks' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "223",
        "column": "39",
        "severity": "error",
        "message": "Parameter bool should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "227",
        "column": "5",
        "severity": "error",
        "message": "Class 'RecorderData' looks like designed for extension (can be subclassed), but the method 'getMinigame' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'RecorderData' final or making the method 'getMinigame' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "231",
        "column": "5",
        "severity": "error",
        "message": "Class 'RecorderData' looks like designed for extension (can be subclassed), but the method 'addBlock' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'RecorderData' final or making the method 'addBlock' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "231",
        "column": "33",
        "severity": "error",
        "message": "Parameter block should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "231",
        "column": "46",
        "severity": "error",
        "message": "Parameter modifier should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "236",
        "column": "5",
        "severity": "error",
        "message": "Class 'RecorderData' looks like designed for extension (can be subclassed), but the method 'addBlock' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'RecorderData' final or making the method 'addBlock' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "236",
        "column": "33",
        "severity": "error",
        "message": "Parameter block should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "236",
        "column": "51",
        "severity": "error",
        "message": "Parameter modifier should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "238",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 134).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "243",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 107).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "244",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 109).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "248",
        "severity": "error",
        "message": "'if' construct must use '{}'s.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.NeedBracesCheck"
    },
    {
        "line": "249",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 112).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "254",
        "severity": "error",
        "message": "'if' construct must use '{}'s.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.NeedBracesCheck"
    },
    {
        "line": "255",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 118).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "258",
        "severity": "error",
        "message": "'if' construct must use '{}'s.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.NeedBracesCheck"
    },
    {
        "line": "259",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 112).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "271",
        "severity": "error",
        "message": "'if' construct must use '{}'s.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.NeedBracesCheck"
    },
    {
        "line": "277",
        "column": "5",
        "severity": "error",
        "message": "Class 'RecorderData' looks like designed for extension (can be subclassed), but the method 'addInventory' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'RecorderData' final or making the method 'addInventory' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "277",
        "column": "30",
        "severity": "error",
        "message": "Parameter bdata should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "277",
        "column": "49",
        "severity": "error",
        "message": "Parameter ih should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "290",
        "column": "5",
        "severity": "error",
        "message": "Class 'RecorderData' looks like designed for extension (can be subclassed), but the method 'addEntity' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'RecorderData' final or making the method 'addEntity' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "290",
        "column": "27",
        "severity": "error",
        "message": "Parameter ent should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "290",
        "column": "39",
        "severity": "error",
        "message": "Parameter player should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "290",
        "column": "62",
        "severity": "error",
        "message": "Parameter created should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "295",
        "column": "5",
        "severity": "error",
        "message": "Class 'RecorderData' looks like designed for extension (can be subclassed), but the method 'hasEntity' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'RecorderData' final or making the method 'hasEntity' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "295",
        "column": "30",
        "severity": "error",
        "message": "Parameter ent should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "299",
        "column": "5",
        "severity": "error",
        "message": "Class 'RecorderData' looks like designed for extension (can be subclassed), but the method 'hasBlock' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'RecorderData' final or making the method 'hasBlock' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "299",
        "column": "29",
        "severity": "error",
        "message": "Parameter block should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "300",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 134).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "304",
        "column": "5",
        "severity": "error",
        "message": "Class 'RecorderData' looks like designed for extension (can be subclassed), but the method 'restoreAll' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'RecorderData' final or making the method 'restoreAll' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "304",
        "column": "28",
        "severity": "error",
        "message": "Parameter modifier should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "314",
        "column": "5",
        "severity": "error",
        "message": "Class 'RecorderData' looks like designed for extension (can be subclassed), but the method 'restoreBlocks' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'RecorderData' final or making the method 'restoreBlocks' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "319",
        "column": "5",
        "severity": "error",
        "message": "Class 'RecorderData' looks like designed for extension (can be subclassed), but the method 'restoreEntities' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'RecorderData' final or making the method 'restoreEntities' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "324",
        "column": "5",
        "severity": "error",
        "message": "Class 'RecorderData' looks like designed for extension (can be subclassed), but the method 'restoreBlocks' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'RecorderData' final or making the method 'restoreBlocks' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "345",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 103).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "348",
        "severity": "error",
        "message": "'if' construct must use '{}'s.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.NeedBracesCheck"
    },
    {
        "line": "349",
        "severity": "error",
        "message": "'if' construct must use '{}'s.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.NeedBracesCheck"
    },
    {
        "line": "349",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 121).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "349",
        "column": "112",
        "severity": "error",
        "message": "'instanceof' should be on a new line.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
    },
    {
        "line": "351",
        "severity": "error",
        "message": "'if' construct must use '{}'s.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.NeedBracesCheck"
    },
    {
        "line": "372",
        "column": "40",
        "severity": "error",
        "message": "Parameter baseBlocks should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "374",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 115).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "375",
        "severity": "error",
        "message": "'if' construct must use '{}'s.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.NeedBracesCheck"
    },
    {
        "line": "377",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 111).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "378",
        "severity": "error",
        "message": "'if' construct must use '{}'s.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.NeedBracesCheck"
    },
    {
        "line": "384",
        "column": "5",
        "severity": "error",
        "message": "Class 'RecorderData' looks like designed for extension (can be subclassed), but the method 'restoreEntities' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'RecorderData' final or making the method 'restoreEntities' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "384",
        "column": "33",
        "severity": "error",
        "message": "Parameter player should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "387",
        "column": "24",
        "severity": "error",
        "message": "'entdata' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "406",
        "column": "5",
        "severity": "error",
        "message": "Class 'RecorderData' looks like designed for extension (can be subclassed), but the method 'clearRestoreData' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'RecorderData' final or making the method 'clearRestoreData' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "411",
        "column": "5",
        "severity": "error",
        "message": "Class 'RecorderData' looks like designed for extension (can be subclassed), but the method 'hasData' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'RecorderData' final or making the method 'hasData' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "415",
        "column": "5",
        "severity": "error",
        "message": "Class 'RecorderData' looks like designed for extension (can be subclassed), but the method 'checkBlockSides' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'RecorderData' final or making the method 'checkBlockSides' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "415",
        "column": "36",
        "severity": "error",
        "message": "Parameter location should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "441",
        "column": "5",
        "severity": "error",
        "message": "Class 'RecorderData' looks like designed for extension (can be subclassed), but the method 'hasRegenArea' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'RecorderData' final or making the method 'hasRegenArea' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "445",
        "column": "5",
        "severity": "error",
        "message": "Class 'RecorderData' looks like designed for extension (can be subclassed), but the method 'getRegenMinX' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'RecorderData' final or making the method 'getRegenMinX' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "452",
        "column": "5",
        "severity": "error",
        "message": "Class 'RecorderData' looks like designed for extension (can be subclassed), but the method 'getRegenMaxX' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'RecorderData' final or making the method 'getRegenMaxX' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "459",
        "column": "5",
        "severity": "error",
        "message": "Class 'RecorderData' looks like designed for extension (can be subclassed), but the method 'getRegenMinY' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'RecorderData' final or making the method 'getRegenMinY' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "466",
        "column": "5",
        "severity": "error",
        "message": "Class 'RecorderData' looks like designed for extension (can be subclassed), but the method 'getRegenMaxY' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'RecorderData' final or making the method 'getRegenMaxY' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "473",
        "column": "5",
        "severity": "error",
        "message": "Class 'RecorderData' looks like designed for extension (can be subclassed), but the method 'getRegenMinZ' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'RecorderData' final or making the method 'getRegenMinZ' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "480",
        "column": "5",
        "severity": "error",
        "message": "Class 'RecorderData' looks like designed for extension (can be subclassed), but the method 'getRegenMaxZ' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'RecorderData' final or making the method 'getRegenMaxZ' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "487",
        "column": "5",
        "severity": "error",
        "message": "Class 'RecorderData' looks like designed for extension (can be subclassed), but the method 'blockInRegenArea' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'RecorderData' final or making the method 'blockInRegenArea' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "487",
        "column": "37",
        "severity": "error",
        "message": "Parameter location should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "488",
        "column": "75",
        "severity": "error",
        "message": "'&&' should be on a new line.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
    },
    {
        "line": "489",
        "column": "98",
        "severity": "error",
        "message": "'&&' should be on a new line.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
    },
    {
        "line": "490",
        "column": "98",
        "severity": "error",
        "message": "'&&' should be on a new line.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
    },
    {
        "line": "494",
        "column": "5",
        "severity": "error",
        "message": "Class 'RecorderData' looks like designed for extension (can be subclassed), but the method 'saveAllBlockData' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'RecorderData' final or making the method 'saveAllBlockData' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "495",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 109).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "508",
        "column": "5",
        "severity": "error",
        "message": "Class 'RecorderData' looks like designed for extension (can be subclassed), but the method 'restoreBlockData' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'RecorderData' final or making the method 'restoreBlockData' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "509",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 109).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "512",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 103).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "529",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 108).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "569",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 151).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "570",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 143).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "575",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 107).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "600",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 106).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "604",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 118).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "633",
        "column": "32",
        "severity": "error",
        "message": "Parameter event should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "634",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 108).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "640",
        "column": "33",
        "severity": "error",
        "message": "Parameter event should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "642",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 112).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "649",
        "column": "30",
        "severity": "error",
        "message": "Parameter event should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "652",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 101).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "664",
        "column": "32",
        "severity": "error",
        "message": "Parameter event should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "671",
        "column": "32",
        "severity": "error",
        "message": "Parameter event should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "678",
        "column": "81",
        "severity": "error",
        "message": "'||' should be on a new line.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
    },
    {
        "line": "690",
        "column": "27",
        "severity": "error",
        "message": "Parameter event should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "700",
        "column": "32",
        "severity": "error",
        "message": "Parameter event should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "706",
        "column": "48",
        "severity": "error",
        "message": "'||' should be on a new line.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
    },
    {
        "line": "707",
        "column": "54",
        "severity": "error",
        "message": "'||' should be on a new line.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
    },
    {
        "line": "708",
        "column": "58",
        "severity": "error",
        "message": "'||' should be on a new line.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
    },
    {
        "line": "715",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 117).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "722",
        "column": "35",
        "severity": "error",
        "message": "Parameter event should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "723",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 116).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "732",
        "column": "32",
        "severity": "error",
        "message": "Parameter event should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "733",
        "severity": "error",
        "message": "'if' construct must use '{}'s.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.NeedBracesCheck"
    },
    {
        "line": "738",
        "severity": "error",
        "message": "'if' construct must use '{}'s.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.NeedBracesCheck"
    },
    {
        "line": "745",
        "severity": "error",
        "message": "'if' construct must use '{}'s.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.NeedBracesCheck"
    },
    {
        "line": "751",
        "column": "28",
        "severity": "error",
        "message": "Parameter event should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "752",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 110).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "758",
        "column": "28",
        "severity": "error",
        "message": "Parameter event should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "759",
        "severity": "error",
        "message": "'if' construct must use '{}'s.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.NeedBracesCheck"
    },
    {
        "line": "759",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 108).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "764",
        "column": "29",
        "severity": "error",
        "message": "Parameter event should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "765",
        "severity": "error",
        "message": "'if' construct must use '{}'s.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.NeedBracesCheck"
    },
    {
        "line": "765",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 108).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "770",
        "column": "27",
        "severity": "error",
        "message": "Parameter event should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "771",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 117).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    }
]