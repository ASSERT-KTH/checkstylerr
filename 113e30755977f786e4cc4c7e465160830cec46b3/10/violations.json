[
    {
        "line": "71",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - java.util.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "84",
        "column": "54",
        "severity": "error",
        "message": "'4' is a magic number.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck"
    },
    {
        "line": "92",
        "column": "61",
        "severity": "error",
        "message": "'15' is a magic number.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck"
    },
    {
        "line": "94",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 154).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "96",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 122).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "137",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 101).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "138",
        "column": "7",
        "severity": "error",
        "message": "'?' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "138",
        "column": "7",
        "severity": "error",
        "message": "Avoid inline conditionals.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.AvoidInlineConditionalsCheck"
    },
    {
        "line": "138",
        "column": "83",
        "severity": "error",
        "message": "':' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "138",
        "column": "83",
        "severity": "error",
        "message": "':' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "139",
        "column": "52",
        "severity": "error",
        "message": "'5' is a magic number.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck"
    },
    {
        "line": "140",
        "column": "52",
        "severity": "error",
        "message": "'10' is a magic number.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck"
    },
    {
        "line": "146",
        "column": "58",
        "severity": "error",
        "message": "'5' is a magic number.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck"
    },
    {
        "line": "147",
        "column": "58",
        "severity": "error",
        "message": "'10' is a magic number.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck"
    },
    {
        "line": "165",
        "column": "21",
        "severity": "error",
        "message": "Parameter name should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "165",
        "column": "28",
        "severity": "error",
        "message": "'name' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "165",
        "column": "34",
        "severity": "error",
        "message": "Parameter type should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "165",
        "column": "47",
        "severity": "error",
        "message": "'type' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "165",
        "column": "53",
        "severity": "error",
        "message": "Parameter start should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "167",
        "column": "7",
        "severity": "error",
        "message": "'if' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "168",
        "column": "89",
        "severity": "error",
        "message": "'+' should be on a new line.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
    },
    {
        "line": "175",
        "column": "21",
        "severity": "error",
        "message": "Parameter name should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "175",
        "column": "28",
        "severity": "error",
        "message": "'name' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "177",
        "column": "7",
        "severity": "error",
        "message": "'if' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "178",
        "column": "89",
        "severity": "error",
        "message": "'+' should be on a new line.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
    },
    {
        "line": "184",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'isPlayersAtStart' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'isPlayersAtStart' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "188",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'setPlayersAtStart' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'setPlayersAtStart' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "188",
        "column": "35",
        "severity": "error",
        "message": "Parameter playersAtStart should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "188",
        "column": "43",
        "severity": "error",
        "message": "'playersAtStart' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "192",
        "column": "24",
        "severity": "error",
        "message": "Parameter type should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "192",
        "column": "37",
        "severity": "error",
        "message": "'type' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "192",
        "column": "43",
        "severity": "error",
        "message": "Parameter start should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "196",
        "severity": "error",
        "message": "'if' construct must use '{}'s.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.NeedBracesCheck"
    },
    {
        "line": "198",
        "column": "9",
        "severity": "error",
        "message": "'if' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "202",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 109).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "269",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'getState' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'getState' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "273",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'setState' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'setState' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "273",
        "column": "26",
        "severity": "error",
        "message": "Parameter state should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "273",
        "column": "40",
        "severity": "error",
        "message": "'state' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "277",
        "column": "32",
        "severity": "error",
        "message": "Parameter flag should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "281",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'getConfigFlag' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'getConfigFlag' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "281",
        "column": "34",
        "severity": "error",
        "message": "Parameter name should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "281",
        "column": "41",
        "severity": "error",
        "message": "'name' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "285",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'addModule' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'addModule' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "285",
        "column": "30",
        "severity": "error",
        "message": "Parameter module should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "293",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'removeModule' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'removeModule' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "293",
        "column": "30",
        "severity": "error",
        "message": "Parameter moduleName should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "297",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'getModules' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'getModules' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "301",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'getModule' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'getModule' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "301",
        "column": "37",
        "severity": "error",
        "message": "Parameter name should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "301",
        "column": "44",
        "severity": "error",
        "message": "'name' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "305",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'isTeamGame' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'isTeamGame' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "306",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 114).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "309",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'hasFlags' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'hasFlags' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "313",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'addFlag' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'addFlag' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "313",
        "column": "25",
        "severity": "error",
        "message": "Parameter flag should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "317",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'getFlags' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'getFlags' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "321",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'setFlags' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'setFlags' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "321",
        "column": "26",
        "severity": "error",
        "message": "Parameter flags should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "321",
        "column": "39",
        "severity": "error",
        "message": "'flags' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "325",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'removeFlag' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'removeFlag' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "325",
        "column": "31",
        "severity": "error",
        "message": "Parameter flag should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "333",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'setStartLocation' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'setStartLocation' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "333",
        "column": "34",
        "severity": "error",
        "message": "Parameter loc should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "337",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'addStartLocation' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'addStartLocation' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "337",
        "column": "34",
        "severity": "error",
        "message": "Parameter loc should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "341",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'addStartLocation' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'addStartLocation' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "341",
        "column": "34",
        "severity": "error",
        "message": "Parameter loc should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "341",
        "column": "48",
        "severity": "error",
        "message": "Parameter number should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "349",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'getStartLocations' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'getStartLocations' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "353",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'removeStartLocation' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'removeStartLocation' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "353",
        "column": "40",
        "severity": "error",
        "message": "Parameter locNumber should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "361",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'isRandomizeStart' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'isRandomizeStart' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "365",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'setRandomizeStart' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'setRandomizeStart' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "365",
        "column": "35",
        "severity": "error",
        "message": "Parameter bool should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "369",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'getSpectatorLocation' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'getSpectatorLocation' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "373",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'setSpectatorLocation' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'setSpectatorLocation' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "373",
        "column": "38",
        "severity": "error",
        "message": "Parameter loc should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "377",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'isEnabled' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'isEnabled' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "381",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'setEnabled' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'setEnabled' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "381",
        "column": "28",
        "severity": "error",
        "message": "Parameter enabled should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "381",
        "column": "36",
        "severity": "error",
        "message": "'enabled' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "385",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'getMinPlayers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'getMinPlayers' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "389",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'setMinPlayers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'setMinPlayers' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "389",
        "column": "31",
        "severity": "error",
        "message": "Parameter minPlayers should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "389",
        "column": "35",
        "severity": "error",
        "message": "'minPlayers' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "393",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'usePlayerDisplayNames' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'usePlayerDisplayNames' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "397",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'setUsePlayerDisplayNames' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'setUsePlayerDisplayNames' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "397",
        "column": "42",
        "severity": "error",
        "message": "Parameter value should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "401",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'getMaxPlayers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'getMaxPlayers' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "405",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'setMaxPlayers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'setMaxPlayers' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "405",
        "column": "31",
        "severity": "error",
        "message": "Parameter maxPlayers should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "405",
        "column": "35",
        "severity": "error",
        "message": "'maxPlayers' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "409",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'isSpMaxPlayers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'isSpMaxPlayers' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "413",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'setSpMaxPlayers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'setSpMaxPlayers' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "413",
        "column": "33",
        "severity": "error",
        "message": "Parameter spMaxPlayers should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "413",
        "column": "41",
        "severity": "error",
        "message": "'spMaxPlayers' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "417",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'getFloorDegen1' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'getFloorDegen1' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "421",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'setFloorDegen1' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'setFloorDegen1' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "421",
        "column": "32",
        "severity": "error",
        "message": "Parameter loc should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "425",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'getFloorDegen2' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'getFloorDegen2' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "429",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'setFloorDegen2' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'setFloorDegen2' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "429",
        "column": "32",
        "severity": "error",
        "message": "Parameter loc should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "433",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'getDegenType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'getDegenType' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "437",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'setDegenType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'setDegenType' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "437",
        "column": "30",
        "severity": "error",
        "message": "Parameter degenType should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "437",
        "column": "37",
        "severity": "error",
        "message": "'degenType' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "441",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'getDegenRandomChance' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'getDegenRandomChance' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "445",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'setDegenRandomChance' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'setDegenRandomChance' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "445",
        "column": "38",
        "severity": "error",
        "message": "Parameter degenRandomChance should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "445",
        "column": "42",
        "severity": "error",
        "message": "'degenRandomChance' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "449",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'getEndPosition' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'getEndPosition' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "453",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'setEndPosition' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'setEndPosition' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "453",
        "column": "32",
        "severity": "error",
        "message": "Parameter endPosition should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "453",
        "column": "41",
        "severity": "error",
        "message": "'endPosition' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "457",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'getQuitPosition' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'getQuitPosition' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "461",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'setQuitPosition' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'setQuitPosition' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "461",
        "column": "33",
        "severity": "error",
        "message": "Parameter quitPosition should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "461",
        "column": "42",
        "severity": "error",
        "message": "'quitPosition' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "465",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'getLobbyPosition' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'getLobbyPosition' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "469",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'setLobbyPosition' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'setLobbyPosition' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "469",
        "column": "34",
        "severity": "error",
        "message": "Parameter lobbyPosisiton should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "469",
        "column": "43",
        "severity": "error",
        "message": "'lobbyPosisiton' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "473",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "473",
        "column": "27",
        "severity": "error",
        "message": "Parameter useDisplay should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "474",
        "severity": "error",
        "message": "'if' construct must use '{}'s.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.NeedBracesCheck"
    },
    {
        "line": "479",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'setDisplayName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'setDisplayName' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "479",
        "column": "32",
        "severity": "error",
        "message": "Parameter displayName should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "479",
        "column": "39",
        "severity": "error",
        "message": "'displayName' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "483",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'setshowPlayerBroadcasts' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'setshowPlayerBroadcasts' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "483",
        "column": "41",
        "severity": "error",
        "message": "Parameter showPlayerBroadcasts should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "483",
        "column": "49",
        "severity": "error",
        "message": "'showPlayerBroadcasts' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "487",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'getShowPlayerBroadcasts' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'getShowPlayerBroadcasts' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "491",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'getType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'getType' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "495",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'setType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'setType' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "495",
        "column": "25",
        "severity": "error",
        "message": "Parameter type should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "495",
        "column": "38",
        "severity": "error",
        "message": "'type' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "506",
        "column": "34",
        "severity": "error",
        "message": "Parameter value should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "514",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'getMpTimer' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'getMpTimer' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "518",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'setMpTimer' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'setMpTimer' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "518",
        "column": "28",
        "severity": "error",
        "message": "Parameter mpTimer should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "518",
        "column": "45",
        "severity": "error",
        "message": "'mpTimer' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "522",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'isNotWaitingForPlayers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'isNotWaitingForPlayers' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "527",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'isWaitingForPlayers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'isWaitingForPlayers' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "531",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'hasStarted' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'hasStarted' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "535",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'getMinigameTimer' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'getMinigameTimer' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "539",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'setMinigameTimer' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'setMinigameTimer' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "539",
        "column": "34",
        "severity": "error",
        "message": "Parameter mgTimer should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "543",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'getMpBets' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'getMpBets' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "547",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'setMpBets' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'setMpBets' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "547",
        "column": "27",
        "severity": "error",
        "message": "Parameter mpBets should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "547",
        "column": "43",
        "severity": "error",
        "message": "'mpBets' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "551",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'getUsePermissions' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'getUsePermissions' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "555",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'setUsePermissions' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'setUsePermissions' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "555",
        "column": "35",
        "severity": "error",
        "message": "Parameter usePermissions should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "555",
        "column": "43",
        "severity": "error",
        "message": "'usePermissions' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "559",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'getPlayers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'getPlayers' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "563",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'addPlayer' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'addPlayer' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "563",
        "column": "27",
        "severity": "error",
        "message": "Parameter player should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "567",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'removePlayer' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'removePlayer' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "567",
        "column": "30",
        "severity": "error",
        "message": "Parameter player should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "571",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'hasPlayers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'hasPlayers' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "575",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'hasSpectators' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'hasSpectators' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "579",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'getSpectators' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'getSpectators' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "583",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'addSpectator' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'addSpectator' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "583",
        "column": "30",
        "severity": "error",
        "message": "Parameter player should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "587",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'removeSpectator' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'removeSpectator' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "587",
        "column": "33",
        "severity": "error",
        "message": "Parameter player should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "591",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'isSpectator' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'isSpectator' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "591",
        "column": "32",
        "severity": "error",
        "message": "Parameter player should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "595",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'setScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'setScore' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "595",
        "column": "26",
        "severity": "error",
        "message": "Parameter ply should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "595",
        "column": "46",
        "severity": "error",
        "message": "Parameter amount should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "596",
        "column": "31",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "598",
        "column": "11",
        "severity": "error",
        "message": "'if' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "598",
        "column": "16",
        "severity": "error",
        "message": "'!=' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "600",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 121).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "600",
        "column": "120",
        "severity": "error",
        "message": "')' is preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
    },
    {
        "line": "602",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 131).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "607",
        "column": "7",
        "severity": "error",
        "message": "'if' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "607",
        "column": "20",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "612",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'getMinScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'getMinScore' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "616",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'setMinScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'setMinScore' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "616",
        "column": "29",
        "severity": "error",
        "message": "Parameter minScore should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "616",
        "column": "33",
        "severity": "error",
        "message": "'minScore' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "620",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'getMaxScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'getMaxScore' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "624",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'setMaxScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'setMaxScore' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "624",
        "column": "29",
        "severity": "error",
        "message": "Parameter maxScore should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "624",
        "column": "33",
        "severity": "error",
        "message": "'maxScore' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "628",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'getMaxScorePerPlayer' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'getMaxScorePerPlayer' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "637",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'getFloorDegenerator' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'getFloorDegenerator' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "641",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'addFloorDegenerator' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'addFloorDegenerator' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "645",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'getTimer' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'getTimer' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "649",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'setTimer' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'setTimer' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "649",
        "column": "26",
        "severity": "error",
        "message": "Parameter time should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "653",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'isUsingXPBarTimer' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'isUsingXPBarTimer' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "657",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'setUseXPBarTimer' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'setUseXPBarTimer' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "657",
        "column": "34",
        "severity": "error",
        "message": "Parameter useXPBarTimer should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "657",
        "column": "42",
        "severity": "error",
        "message": "'useXPBarTimer' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "661",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'getStartWaitTime' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'getStartWaitTime' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "665",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'setStartWaitTime' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'setStartWaitTime' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "665",
        "column": "34",
        "severity": "error",
        "message": "Parameter startWaitTime should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "665",
        "column": "38",
        "severity": "error",
        "message": "'startWaitTime' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "669",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'hasItemDrops' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'hasItemDrops' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "673",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'setItemDrops' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'setItemDrops' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "673",
        "column": "30",
        "severity": "error",
        "message": "Parameter itemDrops should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "673",
        "column": "38",
        "severity": "error",
        "message": "'itemDrops' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "677",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'hasDeathDrops' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'hasDeathDrops' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "681",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'setDeathDrops' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'setDeathDrops' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "681",
        "column": "31",
        "severity": "error",
        "message": "Parameter deathDrops should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "681",
        "column": "39",
        "severity": "error",
        "message": "'deathDrops' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "685",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'hasItemPickup' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'hasItemPickup' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "689",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'setItemPickup' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'setItemPickup' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "689",
        "column": "31",
        "severity": "error",
        "message": "Parameter itemPickup should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "689",
        "column": "39",
        "severity": "error",
        "message": "'itemPickup' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "693",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'getBlockRecorder' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'getBlockRecorder' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "697",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'isRegenerating' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'isRegenerating' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "701",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'canBlockBreak' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'canBlockBreak' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "705",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'setCanBlockBreak' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'setCanBlockBreak' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "705",
        "column": "34",
        "severity": "error",
        "message": "Parameter blockBreak should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "705",
        "column": "42",
        "severity": "error",
        "message": "'blockBreak' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "709",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'canBlockPlace' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'canBlockPlace' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "713",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'setCanBlockPlace' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'setCanBlockPlace' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "713",
        "column": "34",
        "severity": "error",
        "message": "Parameter blockPlace should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "713",
        "column": "42",
        "severity": "error",
        "message": "'blockPlace' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "717",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'getDefaultGamemode' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'getDefaultGamemode' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "721",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'setDefaultGamemode' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'setDefaultGamemode' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "721",
        "column": "36",
        "severity": "error",
        "message": "Parameter defaultGamemode should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "721",
        "column": "45",
        "severity": "error",
        "message": "'defaultGamemode' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "725",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'getDefaultGamemodeCallback' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'getDefaultGamemodeCallback' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "732",
        "column": "34",
        "severity": "error",
        "message": "Parameter value should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "740",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'canBlocksdrop' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'canBlocksdrop' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "744",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'setBlocksdrop' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'setBlocksdrop' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "744",
        "column": "31",
        "severity": "error",
        "message": "Parameter blocksdrop should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "744",
        "column": "39",
        "severity": "error",
        "message": "'blocksdrop' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "748",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'getMechanicName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'getMechanicName' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "752",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'getMechanic' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'getMechanic' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "756",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'setMechanic' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'setMechanic' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "756",
        "column": "29",
        "severity": "error",
        "message": "Parameter scoreType should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "758",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 107).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "764",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'isFlagCarrier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'isFlagCarrier' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "764",
        "column": "34",
        "severity": "error",
        "message": "Parameter ply should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "768",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'addFlagCarrier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'addFlagCarrier' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "768",
        "column": "32",
        "severity": "error",
        "message": "Parameter ply should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "768",
        "column": "52",
        "severity": "error",
        "message": "Parameter flag should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "772",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'removeFlagCarrier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'removeFlagCarrier' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "772",
        "column": "35",
        "severity": "error",
        "message": "Parameter ply should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "776",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'getFlagCarrier' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'getFlagCarrier' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "776",
        "column": "35",
        "severity": "error",
        "message": "Parameter ply should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "780",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'resetFlags' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'resetFlags' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "795",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'hasDroppedFlag' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'hasDroppedFlag' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "795",
        "column": "35",
        "severity": "error",
        "message": "Parameter id should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "799",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'addDroppedFlag' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'addDroppedFlag' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "799",
        "column": "32",
        "severity": "error",
        "message": "Parameter id should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "799",
        "column": "43",
        "severity": "error",
        "message": "Parameter flag should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "803",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'removeDroppedFlag' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'removeDroppedFlag' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "803",
        "column": "35",
        "severity": "error",
        "message": "Parameter id should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "807",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'getDroppedFlag' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'getDroppedFlag' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "807",
        "column": "35",
        "severity": "error",
        "message": "Parameter id should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "811",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'hasPaintBallMode' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'hasPaintBallMode' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "815",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'setPaintBallMode' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'setPaintBallMode' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "815",
        "column": "34",
        "severity": "error",
        "message": "Parameter paintBallMode should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "815",
        "column": "42",
        "severity": "error",
        "message": "'paintBallMode' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "819",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'getPaintBallDamage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'getPaintBallDamage' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "823",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'setPaintBallDamage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'setPaintBallDamage' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "823",
        "column": "36",
        "severity": "error",
        "message": "Parameter paintBallDamage should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "823",
        "column": "40",
        "severity": "error",
        "message": "'paintBallDamage' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "827",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'hasUnlimitedAmmo' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'hasUnlimitedAmmo' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "831",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'setUnlimitedAmmo' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'setUnlimitedAmmo' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "831",
        "column": "34",
        "severity": "error",
        "message": "Parameter unlimitedAmmo should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "831",
        "column": "42",
        "severity": "error",
        "message": "'unlimitedAmmo' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "835",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'canSaveCheckpoint' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'canSaveCheckpoint' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "839",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'setSaveCheckpoint' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'setSaveCheckpoint' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "839",
        "column": "35",
        "severity": "error",
        "message": "Parameter saveCheckpoint should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "843",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'canLateJoin' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'canLateJoin' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "847",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'setLateJoin' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'setLateJoin' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "847",
        "column": "29",
        "severity": "error",
        "message": "Parameter lateJoin should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "847",
        "column": "37",
        "severity": "error",
        "message": "'lateJoin' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "851",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'canSpectateFly' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'canSpectateFly' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "855",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'setCanSpectateFly' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'setCanSpectateFly' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "855",
        "column": "35",
        "severity": "error",
        "message": "Parameter canSpectateFly should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "855",
        "column": "43",
        "severity": "error",
        "message": "'canSpectateFly' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "859",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'isRandomizeChests' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'isRandomizeChests' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "863",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'setRandomizeChests' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'setRandomizeChests' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "863",
        "column": "36",
        "severity": "error",
        "message": "Parameter randomizeChests should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "863",
        "column": "44",
        "severity": "error",
        "message": "'randomizeChests' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "867",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'getMinChestRandom' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'getMinChestRandom' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "871",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'setMinChestRandom' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'setMinChestRandom' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "871",
        "column": "35",
        "severity": "error",
        "message": "Parameter minChestRandom should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "871",
        "column": "39",
        "severity": "error",
        "message": "'minChestRandom' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "875",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'getMaxChestRandom' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'getMaxChestRandom' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "879",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'setMaxChestRandom' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'setMaxChestRandom' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "879",
        "column": "35",
        "severity": "error",
        "message": "Parameter maxChestRandom should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "879",
        "column": "39",
        "severity": "error",
        "message": "'maxChestRandom' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "883",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'getRegenArea1' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'getRegenArea1' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "887",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'setRegenArea1' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'setRegenArea1' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "887",
        "column": "31",
        "severity": "error",
        "message": "Parameter regenArea1 should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "887",
        "column": "40",
        "severity": "error",
        "message": "'regenArea1' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "891",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'getRegenArea2' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'getRegenArea2' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "895",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'setRegenArea2' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'setRegenArea2' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "895",
        "column": "31",
        "severity": "error",
        "message": "Parameter regenArea2 should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "895",
        "column": "40",
        "severity": "error",
        "message": "'regenArea2' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "899",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'getRegenDelay' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'getRegenDelay' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "903",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'setRegenDelay' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'setRegenDelay' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "903",
        "column": "31",
        "severity": "error",
        "message": "Parameter regenDelay should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "903",
        "column": "35",
        "severity": "error",
        "message": "'regenDelay' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "904",
        "severity": "error",
        "message": "'if' construct must use '{}'s.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.NeedBracesCheck"
    },
    {
        "line": "909",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'getLives' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'getLives' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "913",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'setLives' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'setLives' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "913",
        "column": "26",
        "severity": "error",
        "message": "Parameter lives should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "913",
        "column": "32",
        "severity": "error",
        "message": "'lives' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "917",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'getFloorDegenTime' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'getFloorDegenTime' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "921",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'setFloorDegenTime' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'setFloorDegenTime' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "921",
        "column": "35",
        "severity": "error",
        "message": "Parameter floorDegenTime should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "921",
        "column": "39",
        "severity": "error",
        "message": "'floorDegenTime' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "925",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'isAllowedEnderpearls' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'isAllowedEnderpearls' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "929",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'setAllowEnderpearls' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'setAllowEnderpearls' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "929",
        "column": "37",
        "severity": "error",
        "message": "Parameter allowEnderpearls should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "929",
        "column": "45",
        "severity": "error",
        "message": "'allowEnderpearls' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "933",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'isAllowedMPCheckpoints' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'isAllowedMPCheckpoints' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "937",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'setAllowMPCheckpoints' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'setAllowMPCheckpoints' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "937",
        "column": "39",
        "severity": "error",
        "message": "Parameter allowMPCheckpoints should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "937",
        "column": "47",
        "severity": "error",
        "message": "'allowMPCheckpoints' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "941",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'isAllowedFlight' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'isAllowedFlight' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "945",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'setAllowedFlight' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'setAllowedFlight' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "945",
        "column": "34",
        "severity": "error",
        "message": "Parameter allowFlight should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "945",
        "column": "42",
        "severity": "error",
        "message": "'allowFlight' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "949",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'isFlightEnabled' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'isFlightEnabled' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "953",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'setFlightEnabled' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'setFlightEnabled' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "953",
        "column": "34",
        "severity": "error",
        "message": "Parameter enableFlight should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "953",
        "column": "42",
        "severity": "error",
        "message": "'enableFlight' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "957",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'getScoreboardManager' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'getScoreboardManager' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "961",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'getObjective' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'getObjective' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "965",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'setObjective' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'setObjective' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "965",
        "column": "30",
        "severity": "error",
        "message": "Parameter objective should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "965",
        "column": "37",
        "severity": "error",
        "message": "'objective' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "969",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'getGametypeName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'getGametypeName' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "973",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'setGametypeName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'setGametypeName' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "973",
        "column": "33",
        "severity": "error",
        "message": "Parameter gametypeName should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "973",
        "column": "40",
        "severity": "error",
        "message": "'gametypeName' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "977",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'canDisplayScoreboard' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'canDisplayScoreboard' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "981",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'setDisplayScoreboard' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'setDisplayScoreboard' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "981",
        "column": "38",
        "severity": "error",
        "message": "Parameter bool should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "985",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'allowDragonEggTeleport' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'allowDragonEggTeleport' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "989",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'setAllowDragonEggTeleport' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'setAllowDragonEggTeleport' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "989",
        "column": "43",
        "severity": "error",
        "message": "Parameter allow should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "993",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'getSettings' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'getSettings' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "993",
        "column": "37",
        "severity": "error",
        "message": "Parameter stat should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "1003",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'getStatSettings' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'getStatSettings' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "1003",
        "column": "60",
        "severity": "error",
        "message": "Parameter stats should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "1013",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'displayMenu' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'displayMenu' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "1013",
        "column": "5",
        "severity": "error",
        "message": "Method length is 246 lines (max allowed is 150).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.MethodLengthCheck"
    },
    {
        "line": "1013",
        "column": "29",
        "severity": "error",
        "message": "Parameter player should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "1014",
        "column": "30",
        "severity": "error",
        "message": "'6' is a magic number.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck"
    },
    {
        "line": "1015",
        "column": "36",
        "severity": "error",
        "message": "'6' is a magic number.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck"
    },
    {
        "line": "1016",
        "column": "34",
        "severity": "error",
        "message": "'6' is a magic number.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck"
    },
    {
        "line": "1017",
        "column": "14",
        "severity": "error",
        "message": "'flags' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "1017",
        "column": "31",
        "severity": "error",
        "message": "'6' is a magic number.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck"
    },
    {
        "line": "1018",
        "column": "31",
        "severity": "error",
        "message": "'6' is a magic number.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck"
    },
    {
        "line": "1032",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 151).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "1038",
        "column": "34",
        "severity": "error",
        "message": "Parameter value should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "1044",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 105).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "1048",
        "severity": "error",
        "message": "'if' construct must use '{}'s.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.NeedBracesCheck"
    },
    {
        "line": "1048",
        "column": "60",
        "severity": "error",
        "message": "'&&' should be on a new line.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
    },
    {
        "line": "1054",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 111).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "1057",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 104).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "1064",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 121).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "1064",
        "column": "121",
        "severity": "error",
        "message": "'+' should be on a new line.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
    },
    {
        "line": "1066",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 122).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "1067",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 131).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "1068",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 126).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "1069",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 103).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "1071",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 113).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "1074",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 121).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "1081",
        "column": "42",
        "severity": "error",
        "message": "Parameter value should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "1088",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 114).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "1096",
        "column": "42",
        "severity": "error",
        "message": "Parameter value should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "1101",
        "column": "20",
        "severity": "error",
        "message": "'3' is a magic number.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck"
    },
    {
        "line": "1102",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 131).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "1103",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 211).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "1104",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 142).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "1105",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 114).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "1114",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 125).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "1120",
        "column": "34",
        "severity": "error",
        "message": "Parameter value should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "1130",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 119).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "1130",
        "column": "114",
        "severity": "error",
        "message": "'100' is a magic number.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck"
    },
    {
        "line": "1131",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 102).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "1132",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 115).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "1132",
        "column": "115",
        "severity": "error",
        "message": "'+' should be on a new line.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
    },
    {
        "line": "1139",
        "column": "34",
        "severity": "error",
        "message": "Parameter value should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "1150",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 105).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "1151",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 184).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "1162",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 113).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "1165",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 108).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "1166",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 101).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "1178",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 182).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "1180",
        "severity": "error",
        "message": "'if' construct must use '{}'s.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.NeedBracesCheck"
    },
    {
        "line": "1181",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 126).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "1182",
        "severity": "error",
        "message": "'else' construct must use '{}'s.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.NeedBracesCheck"
    },
    {
        "line": "1183",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 121).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "1185",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 162).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "1185",
        "column": "159",
        "severity": "error",
        "message": "'53' is a magic number.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck"
    },
    {
        "line": "1186",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 112).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "1186",
        "column": "110",
        "severity": "error",
        "message": "'9' is a magic number.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck"
    },
    {
        "line": "1190",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 130).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "1195",
        "column": "54",
        "severity": "error",
        "message": "'20' is a magic number.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck"
    },
    {
        "line": "1200",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 125).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "1212",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 114).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "1213",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 146).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "1214",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 132).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "1215",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 141).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "1216",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 165).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "1217",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 110).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "1218",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 117).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "1220",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 194).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "1222",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 110).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "1222",
        "column": "108",
        "severity": "error",
        "message": "'9' is a magic number.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck"
    },
    {
        "line": "1231",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 112).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "1231",
        "column": "110",
        "severity": "error",
        "message": "'9' is a magic number.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck"
    },
    {
        "line": "1232",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 115).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "1238",
        "column": "53",
        "severity": "error",
        "message": "'4' is a magic number.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck"
    },
    {
        "line": "1239",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 178).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "1240",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 176).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "1241",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 161).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "1242",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 159).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "1243",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 156).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "1244",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 118).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "1245",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 153).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "1246",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 113).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "1247",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 207).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "1248",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 115).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "1251",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 106).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "1251",
        "column": "104",
        "severity": "error",
        "message": "'9' is a magic number.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck"
    },
    {
        "line": "1260",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'getScoreboardData' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'getScoreboardData' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "1265",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'saveMinigame' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'saveMinigame' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "1277",
        "severity": "error",
        "message": "'if' construct must use '{}'s.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.NeedBracesCheck"
    },
    {
        "line": "1277",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 135).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "1282",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 116).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "1289",
        "severity": "error",
        "message": "'if' construct must use '{}'s.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.NeedBracesCheck"
    },
    {
        "line": "1289",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 135).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "1299",
        "severity": "error",
        "message": "'if' construct must use '{}'s.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.NeedBracesCheck"
    },
    {
        "line": "1299",
        "column": "62",
        "severity": "error",
        "message": "'&&' should be on a new line.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
    },
    {
        "line": "1300",
        "column": "74",
        "severity": "error",
        "message": "'||' should be on a new line.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.OperatorWrapCheck"
    },
    {
        "line": "1301",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 119).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "1314",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 101).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "1324",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'loadMinigame' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'loadMinigame' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "1333",
        "severity": "error",
        "message": "'if' construct must use '{}'s.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.NeedBracesCheck"
    },
    {
        "line": "1338",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 116).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "1343",
        "severity": "error",
        "message": "'if' construct must use '{}'s.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.NeedBracesCheck"
    },
    {
        "line": "1351",
        "severity": "error",
        "message": "'if' construct must use '{}'s.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.NeedBracesCheck"
    },
    {
        "line": "1356",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 106).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "1367",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 117).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "1369",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 194).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "1387",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 162).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "1392",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 133).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "1393",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 138).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "1395",
        "column": "35",
        "severity": "error",
        "message": "Parameter result should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "1403",
        "column": "35",
        "severity": "error",
        "message": "Parameter t should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "1411",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "1416",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'get' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'get' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "1417",
        "column": "32",
        "severity": "error",
        "message": "Parameter name should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "1417",
        "column": "39",
        "severity": "error",
        "message": "'name' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "1434",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'getKeys' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'getKeys' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "1439",
        "column": "5",
        "severity": "error",
        "message": "Class 'Minigame' looks like designed for extension (can be subclassed), but the method 'getAsString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Minigame' final or making the method 'getAsString' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    }
]