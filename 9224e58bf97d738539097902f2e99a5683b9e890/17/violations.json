[
    {
        "line": "17",
        "column": "5",
        "severity": "warning",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "18",
        "column": "5",
        "severity": "warning",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "20",
        "severity": "warning",
        "message": "Line is longer than 100 characters (found 115).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "20",
        "column": "34",
        "severity": "warning",
        "message": "Parameter pathToJar should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "20",
        "column": "52",
        "severity": "warning",
        "message": "Parameter projectName should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "20",
        "column": "59",
        "severity": "warning",
        "message": "'projectName' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "25",
        "column": "5",
        "severity": "warning",
        "message": "Class 'DesignWizardDecorator' looks like designed for extension (can be subclassed), but the method 'getDesignWizard' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DesignWizardDecorator' final or making the method 'getDesignWizard' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "29",
        "severity": "warning",
        "message": "Line is longer than 100 characters (found 106).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "29",
        "column": "5",
        "severity": "warning",
        "message": "Class 'DesignWizardDecorator' looks like designed for extension (can be subclassed), but the method 'getClassesByAnnotation' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DesignWizardDecorator' final or making the method 'getClassesByAnnotation' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "29",
        "column": "50",
        "severity": "warning",
        "message": "Parameter annotationName should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "44",
        "column": "5",
        "severity": "warning",
        "message": "Class 'DesignWizardDecorator' looks like designed for extension (can be subclassed), but the method 'hasAnnotation' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DesignWizardDecorator' final or making the method 'hasAnnotation' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "44",
        "column": "34",
        "severity": "warning",
        "message": "Parameter aClass should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "44",
        "column": "52",
        "severity": "warning",
        "message": "Parameter annotation should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "48",
        "severity": "warning",
        "message": "'if' child has incorrect indentation level 16, expected level should be 12.",
        "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
    },
    {
        "line": "49",
        "severity": "warning",
        "message": "'if rcurly' has incorrect indentation level 12, expected level should be 8.",
        "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
    },
    {
        "line": "53",
        "column": "5",
        "severity": "warning",
        "message": "Class 'DesignWizardDecorator' looks like designed for extension (can be subclassed), but the method 'getAllAnnotations' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DesignWizardDecorator' final or making the method 'getAllAnnotations' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "58",
        "column": "5",
        "severity": "warning",
        "message": "Class 'DesignWizardDecorator' looks like designed for extension (can be subclassed), but the method 'getClass' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DesignWizardDecorator' final or making the method 'getClass' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "58",
        "column": "31",
        "severity": "warning",
        "message": "Parameter className should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "62",
        "column": "5",
        "severity": "warning",
        "message": "Class 'DesignWizardDecorator' looks like designed for extension (can be subclassed), but the method 'getAnnotation' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'DesignWizardDecorator' final or making the method 'getAnnotation' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "62",
        "column": "36",
        "severity": "warning",
        "message": "Parameter annotationName should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    }
]