[
    {
        "line": "16",
        "severity": "warning",
        "message": "Line is longer than 100 characters (found 115).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "24",
        "column": "28",
        "severity": "warning",
        "message": "Variable 'dw' must be private and have accessor methods.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheck"
    },
    {
        "line": "29",
        "column": "34",
        "severity": "warning",
        "message": "Variable 'collections' must be private and have accessor methods.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheck"
    },
    {
        "line": "34",
        "column": "22",
        "severity": "warning",
        "message": "Variable 'name' must be private and have accessor methods.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheck"
    },
    {
        "line": "39",
        "column": "30",
        "severity": "warning",
        "message": "Variable 'classNodes' must be private and have accessor methods.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheck"
    },
    {
        "line": "44",
        "column": "30",
        "severity": "warning",
        "message": "Variable 'resultTrue' must be private and have accessor methods.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheck"
    },
    {
        "line": "49",
        "column": "30",
        "severity": "warning",
        "message": "Variable 'resultFalse' must be private and have accessor methods.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheck"
    },
    {
        "line": "54",
        "column": "22",
        "severity": "warning",
        "message": "Variable 'report' must be private and have accessor methods.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheck"
    },
    {
        "line": "60",
        "column": "31",
        "severity": "warning",
        "message": "Parameter dw should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "60",
        "column": "44",
        "severity": "warning",
        "message": "'dw' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "75",
        "column": "31",
        "severity": "warning",
        "message": "Parameter dw should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "75",
        "column": "44",
        "severity": "warning",
        "message": "'dw' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "75",
        "column": "48",
        "severity": "warning",
        "message": "Parameter classes should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "80",
        "column": "5",
        "severity": "warning",
        "message": "Class 'AbstractDesignRule' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AbstractDesignRule' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "86",
        "column": "5",
        "severity": "warning",
        "message": "Class 'AbstractDesignRule' looks like designed for extension (can be subclassed), but the method 'getResultsTrue' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AbstractDesignRule' final or making the method 'getResultsTrue' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "90",
        "column": "5",
        "severity": "warning",
        "message": "Class 'AbstractDesignRule' looks like designed for extension (can be subclassed), but the method 'getResultsFalse' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AbstractDesignRule' final or making the method 'getResultsFalse' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "94",
        "column": "5",
        "severity": "warning",
        "message": "Class 'AbstractDesignRule' looks like designed for extension (can be subclassed), but the method 'addResultTrue' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AbstractDesignRule' final or making the method 'addResultTrue' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "94",
        "column": "31",
        "severity": "warning",
        "message": "Parameter node should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "98",
        "column": "5",
        "severity": "warning",
        "message": "Class 'AbstractDesignRule' looks like designed for extension (can be subclassed), but the method 'addResultFalse' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AbstractDesignRule' final or making the method 'addResultFalse' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "98",
        "column": "32",
        "severity": "warning",
        "message": "Parameter node should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "102",
        "column": "5",
        "severity": "warning",
        "message": "Class 'AbstractDesignRule' looks like designed for extension (can be subclassed), but the method 'hasSetMethod' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AbstractDesignRule' final or making the method 'hasSetMethod' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "102",
        "column": "36",
        "severity": "warning",
        "message": "Parameter fieldNode should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "102",
        "column": "57",
        "severity": "warning",
        "message": "Parameter entityNode should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "103",
        "column": "16",
        "severity": "warning",
        "message": "'name' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "106",
        "severity": "warning",
        "message": "Line is longer than 100 characters (found 111).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "106",
        "column": "88",
        "severity": "warning",
        "message": "'+' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "106",
        "column": "88",
        "severity": "warning",
        "message": "'+' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "106",
        "column": "92",
        "severity": "warning",
        "message": "'+' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "106",
        "column": "92",
        "severity": "warning",
        "message": "'+' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "106",
        "column": "107",
        "severity": "warning",
        "message": "'+' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "106",
        "column": "107",
        "severity": "warning",
        "message": "'+' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "110",
        "severity": "warning",
        "message": "'if' construct must use '{}'s.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.NeedBracesCheck"
    },
    {
        "line": "121",
        "column": "5",
        "severity": "warning",
        "message": "Class 'AbstractDesignRule' looks like designed for extension (can be subclassed), but the method 'hasGetMethod' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AbstractDesignRule' final or making the method 'hasGetMethod' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "121",
        "column": "36",
        "severity": "warning",
        "message": "Parameter fieldNode should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "121",
        "column": "57",
        "severity": "warning",
        "message": "Parameter entityNode should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "122",
        "column": "16",
        "severity": "warning",
        "message": "'name' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "124",
        "column": "88",
        "severity": "warning",
        "message": "'+' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "124",
        "column": "88",
        "severity": "warning",
        "message": "'+' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "128",
        "severity": "warning",
        "message": "'if' construct must use '{}'s.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.NeedBracesCheck"
    },
    {
        "line": "145",
        "severity": "warning",
        "message": "Expected @return tag.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "153",
        "column": "31",
        "severity": "warning",
        "message": "Parameter classes should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "153",
        "column": "46",
        "severity": "warning",
        "message": "Expected @param tag for 'classes'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "171",
        "severity": "warning",
        "message": "'method def modifier' has incorrect indentation level 3, expected level should be 4.",
        "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
    },
    {
        "line": "171",
        "column": "29",
        "severity": "warning",
        "message": "Parameter classe should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "171",
        "column": "39",
        "severity": "warning",
        "message": "Expected @param tag for 'classe'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "172",
        "severity": "warning",
        "message": "'method def' child has incorrect indentation level 7, expected level should be 8.",
        "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
    },
    {
        "line": "173",
        "severity": "warning",
        "message": "'method def' child has incorrect indentation level 7, expected level should be 8.",
        "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
    },
    {
        "line": "174",
        "severity": "warning",
        "message": "'method def' child has incorrect indentation level 7, expected level should be 8.",
        "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
    },
    {
        "line": "175",
        "severity": "warning",
        "message": "'if' has incorrect indentation level 7, expected level should be 8.",
        "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
    },
    {
        "line": "176",
        "severity": "warning",
        "message": "'if' child has incorrect indentation level 11, expected level should be 12.",
        "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
    },
    {
        "line": "177",
        "severity": "warning",
        "message": "'if rcurly' has incorrect indentation level 7, expected level should be 8.",
        "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
    },
    {
        "line": "178",
        "severity": "warning",
        "message": "'method def rcurly' has incorrect indentation level 3, expected level should be 4.",
        "source": "com.puppycrawl.tools.checkstyle.checks.indentation.IndentationCheck"
    },
    {
        "line": "185",
        "severity": "warning",
        "message": "Line is longer than 100 characters (found 106).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "187",
        "column": "39",
        "severity": "warning",
        "message": "Parameter classes should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "197",
        "severity": "warning",
        "message": "Expected @return tag.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocMethodCheck"
    },
    {
        "line": "199",
        "column": "5",
        "severity": "warning",
        "message": "Class 'AbstractDesignRule' looks like designed for extension (can be subclassed), but the method 'isCollection' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AbstractDesignRule' final or making the method 'isCollection' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "199",
        "column": "33",
        "severity": "warning",
        "message": "Parameter node should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "206",
        "column": "5",
        "severity": "warning",
        "message": "Class 'AbstractDesignRule' looks like designed for extension (can be subclassed), but the method 'isSet' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'AbstractDesignRule' final or making the method 'isSet' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "206",
        "column": "26",
        "severity": "warning",
        "message": "Parameter node should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "224",
        "column": "36",
        "severity": "warning",
        "message": "Parameter classNode should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "224",
        "column": "57",
        "severity": "warning",
        "message": "Parameter methodName should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "227",
        "severity": "warning",
        "message": "'if' construct must use '{}'s.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.NeedBracesCheck"
    }
]