/* * Copyright 2015 Google Inc. All Rights Reserved. * * Licensed under the Apache License, Version 2.0 (the "License"); * you may not use this file except in compliance with the License. * You may obtain a copy of the License at * *       http://www.apache.org/licenses/LICENSE-2.0 * * Unless required by applicable law or agreed to in writing, software * distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the License for the specific language governing permissions and * limitations under the License. */package com.google.gcloud.spi;import com.google.api.services.storage.model.Bucket;import com.google.api.services.storage.model.StorageObject;import com.google.gcloud.storage.BlobReadChannel;import com.google.gcloud.storage.BlobWriteChannel;import java.io.IOException;import java.nio.ByteBuffer;import java.util.Iterator;public interface StorageRpc {  Bucket create(Bucket bucket) throws IOException;  StorageObject create(StorageObject object, ByteBuffer content) throws IOException;  Iterator<Bucket> list() throws IOException;  Iterator<StorageObject> list(String bucket, String prefix, String delimiter, String cursor,      boolean versions, int limit) throws IOException;  Bucket get(String bucket) throws IOException;  StorageObject get(String bucket, String object) throws IOException;  Bucket patch(Bucket bucket) throws IOException;  StorageObject patch(StorageObject storageObject) throws IOException;  void delete(Bucket bucket) throws  IOException;  void delete(StorageObject object) throws IOException;  StorageObject compose(String bucket, Iterable<String> src, StorageObject dest) throws IOException;  StorageObject copy(StorageObject from, StorageObject to) throws IOException;  BlobReadChannel reader(StorageObject from) throws IOException;  BlobWriteChannel writer(StorageObject to) throws IOException;}