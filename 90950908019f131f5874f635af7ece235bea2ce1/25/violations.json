[
    {
        "line": "3",
        "severity": "error",
        "message": "Line does not match expected header line of ' \\* contributor license agreements.  See the NOTICE file distributed with'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.header.RegexpHeaderCheck"
    },
    {
        "line": "23",
        "column": "8",
        "severity": "warning",
        "message": "Unused import - com.google.inject.assistedinject.Assisted.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck"
    },
    {
        "line": "24",
        "severity": "warning",
        "message": "Wrong order for 'org.apache.commons.lang.StringUtils' import.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheck"
    },
    {
        "line": "26",
        "severity": "warning",
        "message": "'org.apache.usergrid.persistence.core.scope.ApplicationScope' should be separated from previous imports.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheck"
    },
    {
        "line": "29",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - org.apache.usergrid.persistence.index.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "37",
        "severity": "warning",
        "message": "'org.elasticsearch.action.ShardOperationFailedException' should be separated from previous imports.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheck"
    },
    {
        "line": "42",
        "column": "8",
        "severity": "warning",
        "message": "Unused import - org.elasticsearch.action.admin.indices.alias.IndicesAliasesResponse.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck"
    },
    {
        "line": "43",
        "column": "8",
        "severity": "warning",
        "message": "Unused import - org.elasticsearch.action.admin.indices.alias.get.GetAliasesRequest.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck"
    },
    {
        "line": "44",
        "column": "8",
        "severity": "warning",
        "message": "Unused import - org.elasticsearch.action.admin.indices.alias.get.GetAliasesResponse.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck"
    },
    {
        "line": "58",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - org.elasticsearch.index.query.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "61",
        "column": "8",
        "severity": "warning",
        "message": "Unused import - org.elasticsearch.indices.InvalidAliasNameException.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck"
    },
    {
        "line": "69",
        "severity": "warning",
        "message": "'rx.Observable' should be separated from previous imports.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheck"
    },
    {
        "line": "69",
        "column": "8",
        "severity": "warning",
        "message": "Unused import - rx.Observable.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck"
    },
    {
        "line": "70",
        "column": "8",
        "severity": "warning",
        "message": "Unused import - rx.functions.Func1.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.UnusedImportsCheck"
    },
    {
        "line": "72",
        "severity": "warning",
        "message": "Wrong order for 'java.io.IOException' import.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.ImportOrderCheck"
    },
    {
        "line": "78",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - org.apache.usergrid.persistence.index.impl.IndexingUtils.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "86",
        "column": "33",
        "severity": "warning",
        "message": "Name 'logger' must match pattern '^([A-Z](_?[A-Z0-9]+)*)|(log)$'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.naming.ConstantNameCheck"
    },
    {
        "line": "88",
        "column": "40",
        "severity": "warning",
        "message": "Name 'mappingsCreated' must match pattern '^([A-Z](_?[A-Z0-9]+)*)|(log)$'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.naming.ConstantNameCheck"
    },
    {
        "line": "115",
        "severity": "warning",
        "message": "Line is longer than 120 characters (found 163).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "123",
        "severity": "warning",
        "message": "Line is longer than 120 characters (found 146).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "143",
        "column": "51",
        "severity": "warning",
        "message": "',' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "166",
        "column": "13",
        "severity": "warning",
        "message": "'}' at column 13 should be alone on a line.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
    },
    {
        "line": "173",
        "column": "9",
        "severity": "warning",
        "message": "'}' at column 9 should be alone on a line.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
    },
    {
        "line": "190",
        "column": "51",
        "severity": "warning",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "195",
        "column": "17",
        "severity": "warning",
        "message": "'}' at column 17 should be alone on a line.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
    },
    {
        "line": "195",
        "column": "18",
        "severity": "warning",
        "message": "'catch' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "195",
        "column": "18",
        "severity": "warning",
        "message": "'}' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "195",
        "column": "42",
        "severity": "warning",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "196",
        "column": "56",
        "severity": "warning",
        "message": "',' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "212",
        "column": "9",
        "severity": "warning",
        "message": "'}' at column 9 should be alone on a line.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
    },
    {
        "line": "219",
        "column": "44",
        "severity": "warning",
        "message": "',' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "663",
        "column": "13",
        "severity": "warning",
        "message": "Redundant 'static' modifier.",
        "source": "com.puppycrawl.tools.checkstyle.checks.modifier.RedundantModifierCheck"
    },
    {
        "line": "668",
        "column": "9",
        "severity": "warning",
        "message": "Redundant 'public' modifier.",
        "source": "com.puppycrawl.tools.checkstyle.checks.modifier.RedundantModifierCheck"
    }
]