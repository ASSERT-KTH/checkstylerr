// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/webrisk/v1beta1/webrisk.proto

package com.google.webrisk.v1beta1;

public interface SearchHashesResponseOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.cloud.webrisk.v1beta1.SearchHashesResponse)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * The full hashes that matched the requested prefixes.
   * The hash will be populated in the key.
   * </pre>
   *
   * <code>repeated .google.cloud.webrisk.v1beta1.SearchHashesResponse.ThreatHash threats = 1;
   * </code>
   */
  java.util.List<com.google.webrisk.v1beta1.SearchHashesResponse.ThreatHash> getThreatsList();
  /**
   *
   *
   * <pre>
   * The full hashes that matched the requested prefixes.
   * The hash will be populated in the key.
   * </pre>
   *
   * <code>repeated .google.cloud.webrisk.v1beta1.SearchHashesResponse.ThreatHash threats = 1;
   * </code>
   */
  com.google.webrisk.v1beta1.SearchHashesResponse.ThreatHash getThreats(int index);
  /**
   *
   *
   * <pre>
   * The full hashes that matched the requested prefixes.
   * The hash will be populated in the key.
   * </pre>
   *
   * <code>repeated .google.cloud.webrisk.v1beta1.SearchHashesResponse.ThreatHash threats = 1;
   * </code>
   */
  int getThreatsCount();
  /**
   *
   *
   * <pre>
   * The full hashes that matched the requested prefixes.
   * The hash will be populated in the key.
   * </pre>
   *
   * <code>repeated .google.cloud.webrisk.v1beta1.SearchHashesResponse.ThreatHash threats = 1;
   * </code>
   */
  java.util.List<? extends com.google.webrisk.v1beta1.SearchHashesResponse.ThreatHashOrBuilder>
      getThreatsOrBuilderList();
  /**
   *
   *
   * <pre>
   * The full hashes that matched the requested prefixes.
   * The hash will be populated in the key.
   * </pre>
   *
   * <code>repeated .google.cloud.webrisk.v1beta1.SearchHashesResponse.ThreatHash threats = 1;
   * </code>
   */
  com.google.webrisk.v1beta1.SearchHashesResponse.ThreatHashOrBuilder getThreatsOrBuilder(
      int index);

  /**
   *
   *
   * <pre>
   * For requested entities that did not match the threat list, how long to
   * cache the response until.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp negative_expire_time = 2;</code>
   */
  boolean hasNegativeExpireTime();
  /**
   *
   *
   * <pre>
   * For requested entities that did not match the threat list, how long to
   * cache the response until.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp negative_expire_time = 2;</code>
   */
  com.google.protobuf.Timestamp getNegativeExpireTime();
  /**
   *
   *
   * <pre>
   * For requested entities that did not match the threat list, how long to
   * cache the response until.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp negative_expire_time = 2;</code>
   */
  com.google.protobuf.TimestampOrBuilder getNegativeExpireTimeOrBuilder();
}
