/**
 * This code was generated by
 * \ / _    _  _|   _  _
 *  | (_)\/(_)(_|\/| |(/_  v1.0.0
 *       /       /
 */

package com.twilio.rest.preview.trustedComms;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.JsonParseException;
import com.fasterxml.jackson.databind.JsonMappingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.google.common.base.MoreObjects;
import com.twilio.base.Resource;
import com.twilio.exception.ApiConnectionException;
import com.twilio.exception.ApiException;
import com.twilio.exception.RestException;
import com.twilio.http.HttpMethod;
import com.twilio.http.Request;
import com.twilio.http.Response;
import com.twilio.http.TwilioRestClient;
import com.twilio.rest.Domains;

import java.io.IOException;
import java.io.InputStream;
import java.net.URI;
import java.util.Map;
import java.util.Objects;

/**
 * PLEASE NOTE that this class contains preview products that are subject to
 * change. Use them with caution. If you currently do not have developer preview
 * access, please contact help@twilio.com.
 */
@JsonIgnoreProperties(ignoreUnknown = true)
public class Device extends Resource {
    private static final long serialVersionUID = 45132712110033L;

    /**
     * Create a DeviceCreator to execute create.
     *
     * @param phoneNumber The end user Phone Number
     * @param pushToken The Push Token for this Phone Number
     * @return DeviceCreator capable of executing the create
     */
    public static DeviceCreator creator(final String phoneNumber,
                                        final String pushToken) {
        return new DeviceCreator(phoneNumber, pushToken);
    }

    /**
     * Converts a JSON String into a Device object using the provided ObjectMapper.
     *
     * @param json Raw JSON String
     * @param objectMapper Jackson ObjectMapper
     * @return Device object represented by the provided JSON
     */
    public static Device fromJson(final String json, final ObjectMapper objectMapper) {
        // Convert all checked exceptions to Runtime
        try {
            return objectMapper.readValue(json, Device.class);
        } catch (final JsonMappingException | JsonParseException e) {
            throw new ApiException(e.getMessage(), e);
        } catch (final IOException e) {
            throw new ApiConnectionException(e.getMessage(), e);
        }
    }

    /**
     * Converts a JSON InputStream into a Device object using the provided
     * ObjectMapper.
     *
     * @param json Raw JSON InputStream
     * @param objectMapper Jackson ObjectMapper
     * @return Device object represented by the provided JSON
     */
    public static Device fromJson(final InputStream json, final ObjectMapper objectMapper) {
        // Convert all checked exceptions to Runtime
        try {
            return objectMapper.readValue(json, Device.class);
        } catch (final JsonMappingException | JsonParseException e) {
            throw new ApiException(e.getMessage(), e);
        } catch (final IOException e) {
            throw new ApiConnectionException(e.getMessage(), e);
        }
    }

    private final String bindingSid;
    private final String phoneNumber;
    private final String sid;
    private final URI url;

    @JsonCreator
    private Device(@JsonProperty("binding_sid")
                   final String bindingSid,
                   @JsonProperty("phone_number")
                   final String phoneNumber,
                   @JsonProperty("sid")
                   final String sid,
                   @JsonProperty("url")
                   final URI url) {
        this.bindingSid = bindingSid;
        this.phoneNumber = phoneNumber;
        this.sid = sid;
        this.url = url;
    }

    /**
     * Returns Binding Sid..
     *
     * @return Binding Sid.
     */
    public final String getBindingSid() {
        return this.bindingSid;
    }

    /**
     * Returns The end user Phone Number.
     *
     * @return The end user Phone Number
     */
    public final String getPhoneNumber() {
        return this.phoneNumber;
    }

    /**
     * Returns A string that uniquely identifies this Device..
     *
     * @return A string that uniquely identifies this Device.
     */
    public final String getSid() {
        return this.sid;
    }

    /**
     * Returns The URL of this resource..
     *
     * @return The URL of this resource.
     */
    public final URI getUrl() {
        return this.url;
    }

    @Override
    public boolean equals(final Object o) {
        if (this == o) {
            return true;
        }

        if (o == null || getClass() != o.getClass()) {
            return false;
        }

        Device other = (Device) o;

        return Objects.equals(bindingSid, other.bindingSid) &&
               Objects.equals(phoneNumber, other.phoneNumber) &&
               Objects.equals(sid, other.sid) &&
               Objects.equals(url, other.url);
    }

    @Override
    public int hashCode() {
        return Objects.hash(bindingSid,
                            phoneNumber,
                            sid,
                            url);
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this)
                          .add("bindingSid", bindingSid)
                          .add("phoneNumber", phoneNumber)
                          .add("sid", sid)
                          .add("url", url)
                          .toString();
    }
}