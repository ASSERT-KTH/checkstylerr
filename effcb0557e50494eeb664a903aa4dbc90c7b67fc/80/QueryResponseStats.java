/*
 * REST API
 * Rockset's REST API allows for creating and managing all resources in Rockset. Each supported endpoint is documented below.  All requests must be authorized with a Rockset API key, which can be created in the [Rockset console](https://console.rockset.com). The API key must be provided as `ApiKey <api_key>` in the `Authorization` request header. For example: ``` Authorization: ApiKey aB35kDjg93J5nsf4GjwMeErAVd832F7ad4vhsW1S02kfZiab42sTsfW5Sxt25asT ```  All endpoints are only accessible via https.  Build something awesome!
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.rockset.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.rockset.client.model.OperatorStats;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.fasterxml.jackson.annotation.JsonProperty;

/**
 * QueryResponseStats
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2020-03-04T00:00:49.700Z")
public class QueryResponseStats {
  @SerializedName("elapsed_time_ms")
  private Long elapsedTimeMs = null;

  @SerializedName("rows_scanned")
  private Long rowsScanned = null;

  @SerializedName("rows_returned")
  private Long rowsReturned = null;

  @SerializedName("operators")
  private List<OperatorStats> operators = null;

  @SerializedName("execution_graph")
  private String executionGraph = null;

  public QueryResponseStats elapsedTimeMs(Long elapsedTimeMs) {
    this.elapsedTimeMs = elapsedTimeMs;
    return this;
  }

   /**
   * query time in milliseconds
   * @return elapsedTimeMs
  **/

@JsonProperty("elapsed_time_ms")
@ApiModelProperty(example = "126", value = "query time in milliseconds")
  public Long getElapsedTimeMs() {
    return elapsedTimeMs;
  }

  public void setElapsedTimeMs(Long elapsedTimeMs) {
    this.elapsedTimeMs = elapsedTimeMs;
  }

  public QueryResponseStats rowsScanned(Long rowsScanned) {
    this.rowsScanned = rowsScanned;
    return this;
  }

   /**
   * rows scanned as part of query execution
   * @return rowsScanned
  **/

@JsonProperty("rows_scanned")
@ApiModelProperty(example = "25000", value = "rows scanned as part of query execution")
  public Long getRowsScanned() {
    return rowsScanned;
  }

  public void setRowsScanned(Long rowsScanned) {
    this.rowsScanned = rowsScanned;
  }

  public QueryResponseStats rowsReturned(Long rowsReturned) {
    this.rowsReturned = rowsReturned;
    return this;
  }

   /**
   * number of rows returned from the query
   * @return rowsReturned
  **/

@JsonProperty("rows_returned")
@ApiModelProperty(example = "100", value = "number of rows returned from the query")
  public Long getRowsReturned() {
    return rowsReturned;
  }

  public void setRowsReturned(Long rowsReturned) {
    this.rowsReturned = rowsReturned;
  }

  public QueryResponseStats operators(List<OperatorStats> operators) {
    this.operators = operators;
    return this;
  }

  public QueryResponseStats addOperatorsItem(OperatorStats operatorsItem) {
    if (this.operators == null) {
      this.operators = new ArrayList<OperatorStats>();
    }
    this.operators.add(operatorsItem);
    return this;
  }

   /**
   * Statistics for each operator from query execution
   * @return operators
  **/

@JsonProperty("operators")
@ApiModelProperty(value = "Statistics for each operator from query execution")
  public List<OperatorStats> getOperators() {
    return operators;
  }

  public void setOperators(List<OperatorStats> operators) {
    this.operators = operators;
  }

  public QueryResponseStats executionGraph(String executionGraph) {
    this.executionGraph = executionGraph;
    return this;
  }

   /**
   * DOT graph representing the execution steps of this query
   * @return executionGraph
  **/

@JsonProperty("execution_graph")
@ApiModelProperty(value = "DOT graph representing the execution steps of this query")
  public String getExecutionGraph() {
    return executionGraph;
  }

  public void setExecutionGraph(String executionGraph) {
    this.executionGraph = executionGraph;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    QueryResponseStats queryResponseStats = (QueryResponseStats) o;
    return Objects.equals(this.elapsedTimeMs, queryResponseStats.elapsedTimeMs) &&
        Objects.equals(this.rowsScanned, queryResponseStats.rowsScanned) &&
        Objects.equals(this.rowsReturned, queryResponseStats.rowsReturned) &&
        Objects.equals(this.operators, queryResponseStats.operators) &&
        Objects.equals(this.executionGraph, queryResponseStats.executionGraph);
  }

  @Override
  public int hashCode() {
    return Objects.hash(elapsedTimeMs, rowsScanned, rowsReturned, operators, executionGraph);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class QueryResponseStats {\n");
    
    sb.append("    elapsedTimeMs: ").append(toIndentedString(elapsedTimeMs)).append("\n");
    sb.append("    rowsScanned: ").append(toIndentedString(rowsScanned)).append("\n");
    sb.append("    rowsReturned: ").append(toIndentedString(rowsReturned)).append("\n");
    sb.append("    operators: ").append(toIndentedString(operators)).append("\n");
    sb.append("    executionGraph: ").append(toIndentedString(executionGraph)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

