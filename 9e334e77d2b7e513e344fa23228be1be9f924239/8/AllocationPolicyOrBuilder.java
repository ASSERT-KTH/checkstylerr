// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/cloud/gaming/v1alpha/allocation_policies.proto

package com.google.cloud.gaming.v1alpha;

public interface AllocationPolicyOrBuilder
    extends
    // @@protoc_insertion_point(interface_extends:google.cloud.gaming.v1alpha.AllocationPolicy)
    com.google.protobuf.MessageOrBuilder {

  /**
   *
   *
   * <pre>
   * The resource name of the allocation policy, using the form:
   * `projects/{project_id}/locations/{location}/allocationPolicies/{allocation_policy_id}`.
   * For example,
   * `projects/my-project/locations/{location}/allocationPolicies/my-policy`.
   * </pre>
   *
   * <code>string name = 1;</code>
   */
  java.lang.String getName();
  /**
   *
   *
   * <pre>
   * The resource name of the allocation policy, using the form:
   * `projects/{project_id}/locations/{location}/allocationPolicies/{allocation_policy_id}`.
   * For example,
   * `projects/my-project/locations/{location}/allocationPolicies/my-policy`.
   * </pre>
   *
   * <code>string name = 1;</code>
   */
  com.google.protobuf.ByteString getNameBytes();

  /**
   *
   *
   * <pre>
   * Output only. The creation time.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp create_time = 2;</code>
   */
  boolean hasCreateTime();
  /**
   *
   *
   * <pre>
   * Output only. The creation time.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp create_time = 2;</code>
   */
  com.google.protobuf.Timestamp getCreateTime();
  /**
   *
   *
   * <pre>
   * Output only. The creation time.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp create_time = 2;</code>
   */
  com.google.protobuf.TimestampOrBuilder getCreateTimeOrBuilder();

  /**
   *
   *
   * <pre>
   * Output only. The last-modified time.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp update_time = 3;</code>
   */
  boolean hasUpdateTime();
  /**
   *
   *
   * <pre>
   * Output only. The last-modified time.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp update_time = 3;</code>
   */
  com.google.protobuf.Timestamp getUpdateTime();
  /**
   *
   *
   * <pre>
   * Output only. The last-modified time.
   * </pre>
   *
   * <code>.google.protobuf.Timestamp update_time = 3;</code>
   */
  com.google.protobuf.TimestampOrBuilder getUpdateTimeOrBuilder();

  /**
   *
   *
   * <pre>
   * The labels associated with the allocation policy. Each label is a key-value
   * pair.
   * </pre>
   *
   * <code>map&lt;string, string&gt; labels = 4;</code>
   */
  int getLabelsCount();
  /**
   *
   *
   * <pre>
   * The labels associated with the allocation policy. Each label is a key-value
   * pair.
   * </pre>
   *
   * <code>map&lt;string, string&gt; labels = 4;</code>
   */
  boolean containsLabels(java.lang.String key);
  /** Use {@link #getLabelsMap()} instead. */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, java.lang.String> getLabels();
  /**
   *
   *
   * <pre>
   * The labels associated with the allocation policy. Each label is a key-value
   * pair.
   * </pre>
   *
   * <code>map&lt;string, string&gt; labels = 4;</code>
   */
  java.util.Map<java.lang.String, java.lang.String> getLabelsMap();
  /**
   *
   *
   * <pre>
   * The labels associated with the allocation policy. Each label is a key-value
   * pair.
   * </pre>
   *
   * <code>map&lt;string, string&gt; labels = 4;</code>
   */
  java.lang.String getLabelsOrDefault(java.lang.String key, java.lang.String defaultValue);
  /**
   *
   *
   * <pre>
   * The labels associated with the allocation policy. Each label is a key-value
   * pair.
   * </pre>
   *
   * <code>map&lt;string, string&gt; labels = 4;</code>
   */
  java.lang.String getLabelsOrThrow(java.lang.String key);

  /**
   *
   *
   * <pre>
   * Required. The priority of the policy for allocation. A smaller value
   * indicates a higher priority.
   * </pre>
   *
   * <code>.google.protobuf.Int32Value priority = 8;</code>
   */
  boolean hasPriority();
  /**
   *
   *
   * <pre>
   * Required. The priority of the policy for allocation. A smaller value
   * indicates a higher priority.
   * </pre>
   *
   * <code>.google.protobuf.Int32Value priority = 8;</code>
   */
  com.google.protobuf.Int32Value getPriority();
  /**
   *
   *
   * <pre>
   * Required. The priority of the policy for allocation. A smaller value
   * indicates a higher priority.
   * </pre>
   *
   * <code>.google.protobuf.Int32Value priority = 8;</code>
   */
  com.google.protobuf.Int32ValueOrBuilder getPriorityOrBuilder();

  /**
   *
   *
   * <pre>
   * The relative weight of the policy based on its priority - If there are
   * multiple policies with the same priority, the probability of using a policy
   * is based on its weight.
   * </pre>
   *
   * <code>int32 weight = 9;</code>
   */
  int getWeight();

  /**
   *
   *
   * <pre>
   * The cluster labels are used to identify the clusters that a policy is
   * applied to.
   * </pre>
   *
   * <code>repeated .google.cloud.gaming.v1alpha.LabelSelector cluster_selectors = 10;</code>
   */
  java.util.List<com.google.cloud.gaming.v1alpha.LabelSelector> getClusterSelectorsList();
  /**
   *
   *
   * <pre>
   * The cluster labels are used to identify the clusters that a policy is
   * applied to.
   * </pre>
   *
   * <code>repeated .google.cloud.gaming.v1alpha.LabelSelector cluster_selectors = 10;</code>
   */
  com.google.cloud.gaming.v1alpha.LabelSelector getClusterSelectors(int index);
  /**
   *
   *
   * <pre>
   * The cluster labels are used to identify the clusters that a policy is
   * applied to.
   * </pre>
   *
   * <code>repeated .google.cloud.gaming.v1alpha.LabelSelector cluster_selectors = 10;</code>
   */
  int getClusterSelectorsCount();
  /**
   *
   *
   * <pre>
   * The cluster labels are used to identify the clusters that a policy is
   * applied to.
   * </pre>
   *
   * <code>repeated .google.cloud.gaming.v1alpha.LabelSelector cluster_selectors = 10;</code>
   */
  java.util.List<? extends com.google.cloud.gaming.v1alpha.LabelSelectorOrBuilder>
      getClusterSelectorsOrBuilderList();
  /**
   *
   *
   * <pre>
   * The cluster labels are used to identify the clusters that a policy is
   * applied to.
   * </pre>
   *
   * <code>repeated .google.cloud.gaming.v1alpha.LabelSelector cluster_selectors = 10;</code>
   */
  com.google.cloud.gaming.v1alpha.LabelSelectorOrBuilder getClusterSelectorsOrBuilder(int index);

  /**
   *
   *
   * <pre>
   * The event schedules - If specified, the policy is time based and when the
   * schedule is effective overrides the default policy.
   * </pre>
   *
   * <code>repeated .google.cloud.gaming.v1alpha.Schedule schedules = 11;</code>
   */
  java.util.List<com.google.cloud.gaming.v1alpha.Schedule> getSchedulesList();
  /**
   *
   *
   * <pre>
   * The event schedules - If specified, the policy is time based and when the
   * schedule is effective overrides the default policy.
   * </pre>
   *
   * <code>repeated .google.cloud.gaming.v1alpha.Schedule schedules = 11;</code>
   */
  com.google.cloud.gaming.v1alpha.Schedule getSchedules(int index);
  /**
   *
   *
   * <pre>
   * The event schedules - If specified, the policy is time based and when the
   * schedule is effective overrides the default policy.
   * </pre>
   *
   * <code>repeated .google.cloud.gaming.v1alpha.Schedule schedules = 11;</code>
   */
  int getSchedulesCount();
  /**
   *
   *
   * <pre>
   * The event schedules - If specified, the policy is time based and when the
   * schedule is effective overrides the default policy.
   * </pre>
   *
   * <code>repeated .google.cloud.gaming.v1alpha.Schedule schedules = 11;</code>
   */
  java.util.List<? extends com.google.cloud.gaming.v1alpha.ScheduleOrBuilder>
      getSchedulesOrBuilderList();
  /**
   *
   *
   * <pre>
   * The event schedules - If specified, the policy is time based and when the
   * schedule is effective overrides the default policy.
   * </pre>
   *
   * <code>repeated .google.cloud.gaming.v1alpha.Schedule schedules = 11;</code>
   */
  com.google.cloud.gaming.v1alpha.ScheduleOrBuilder getSchedulesOrBuilder(int index);
}
