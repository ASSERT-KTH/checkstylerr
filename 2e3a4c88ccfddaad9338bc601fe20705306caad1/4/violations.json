[
    {
        "line": "29",
        "severity": "warning",
        "message": "Line is longer than 80 characters (found 85).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "95",
        "column": "13",
        "severity": "warning",
        "message": "Name 'Trace' must match pattern '^[a-z][a-zA-Z0-9]*$'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.naming.MemberNameCheck"
    },
    {
        "line": "95",
        "column": "13",
        "severity": "warning",
        "message": "Variable 'Trace' must be private and have accessor methods.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.VisibilityModifierCheck"
    },
    {
        "line": "98",
        "column": "23",
        "severity": "warning",
        "message": "Parameter logicalNameReferencing should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "99",
        "column": "13",
        "severity": "warning",
        "message": "Parameter interfaceType should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "106",
        "column": "5",
        "severity": "warning",
        "message": "Class 'GXDLMSBase' looks like designed for extension (can be subclassed), but the method 'addLogicalDeviceName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GXDLMSBase' final or making the method 'addLogicalDeviceName' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "116",
        "column": "5",
        "severity": "warning",
        "message": "Class 'GXDLMSBase' looks like designed for extension (can be subclassed), but the method 'addRegister' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GXDLMSBase' final or making the method 'addRegister' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "128",
        "column": "5",
        "severity": "warning",
        "message": "Class 'GXDLMSBase' looks like designed for extension (can be subclassed), but the method 'addClock' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GXDLMSBase' final or making the method 'addClock' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "140",
        "column": "5",
        "severity": "warning",
        "message": "Class 'GXDLMSBase' looks like designed for extension (can be subclassed), but the method 'addTcpUdpSetup' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GXDLMSBase' final or making the method 'addTcpUdpSetup' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "149",
        "column": "5",
        "severity": "warning",
        "message": "Class 'GXDLMSBase' looks like designed for extension (can be subclassed), but the method 'addProfileGeneric' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GXDLMSBase' final or making the method 'addProfileGeneric' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "168",
        "column": "5",
        "severity": "warning",
        "message": "Class 'GXDLMSBase' looks like designed for extension (can be subclassed), but the method 'addAutoConnect' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GXDLMSBase' final or making the method 'addAutoConnect' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "185",
        "column": "5",
        "severity": "warning",
        "message": "Class 'GXDLMSBase' looks like designed for extension (can be subclassed), but the method 'addActivityCalendar' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GXDLMSBase' final or making the method 'addActivityCalendar' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "235",
        "column": "5",
        "severity": "warning",
        "message": "Class 'GXDLMSBase' looks like designed for extension (can be subclassed), but the method 'addOpticalPortSetup' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GXDLMSBase' final or making the method 'addOpticalPortSetup' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "251",
        "column": "5",
        "severity": "warning",
        "message": "Class 'GXDLMSBase' looks like designed for extension (can be subclassed), but the method 'addDemandRegister' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GXDLMSBase' final or making the method 'addDemandRegister' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "269",
        "column": "5",
        "severity": "warning",
        "message": "Class 'GXDLMSBase' looks like designed for extension (can be subclassed), but the method 'addRegisterMonitor' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GXDLMSBase' final or making the method 'addRegisterMonitor' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "269",
        "column": "29",
        "severity": "warning",
        "message": "Parameter register should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "280",
        "column": "5",
        "severity": "warning",
        "message": "Class 'GXDLMSBase' looks like designed for extension (can be subclassed), but the method 'addActionSchedule' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GXDLMSBase' final or making the method 'addActionSchedule' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "298",
        "column": "5",
        "severity": "warning",
        "message": "Class 'GXDLMSBase' looks like designed for extension (can be subclassed), but the method 'addSapAssignment' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GXDLMSBase' final or making the method 'addSapAssignment' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "310",
        "column": "5",
        "severity": "warning",
        "message": "Class 'GXDLMSBase' looks like designed for extension (can be subclassed), but the method 'AddAutoAnswer' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GXDLMSBase' final or making the method 'AddAutoAnswer' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "310",
        "column": "10",
        "severity": "warning",
        "message": "Name 'AddAutoAnswer' must match pattern '^[a-z][a-zA-Z0-9]*$'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.naming.MethodNameCheck"
    },
    {
        "line": "327",
        "column": "5",
        "severity": "warning",
        "message": "Class 'GXDLMSBase' looks like designed for extension (can be subclassed), but the method 'addModemConfiguration' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GXDLMSBase' final or making the method 'addModemConfiguration' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "341",
        "column": "5",
        "severity": "warning",
        "message": "Class 'GXDLMSBase' looks like designed for extension (can be subclassed), but the method 'addMacAddressSetup' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GXDLMSBase' final or making the method 'addMacAddressSetup' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "350",
        "column": "5",
        "severity": "warning",
        "message": "Class 'GXDLMSBase' looks like designed for extension (can be subclassed), but the method 'addImageTransfer' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GXDLMSBase' final or making the method 'addImageTransfer' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "360",
        "column": "17",
        "severity": "warning",
        "message": "Name 'Initialize' must match pattern '^[a-z][a-zA-Z0-9]*$'.",
        "source": "com.puppycrawl.tools.checkstyle.checks.naming.MethodNameCheck"
    },
    {
        "line": "360",
        "column": "28",
        "severity": "warning",
        "message": "Parameter port should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "413",
        "column": "5",
        "severity": "warning",
        "message": "Class 'GXDLMSBase' looks like designed for extension (can be subclassed), but the method 'read' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GXDLMSBase' final or making the method 'read' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "414",
        "column": "22",
        "severity": "warning",
        "message": "Parameter args should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "421",
        "column": "13",
        "severity": "warning",
        "message": "'{' at column 13 should be on the previous line.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.LeftCurlyCheck"
    },
    {
        "line": "476",
        "column": "5",
        "severity": "warning",
        "message": "Class 'GXDLMSBase' looks like designed for extension (can be subclassed), but the method 'write' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GXDLMSBase' final or making the method 'write' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "477",
        "column": "23",
        "severity": "warning",
        "message": "Parameter args should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "486",
        "column": "35",
        "severity": "warning",
        "message": "Parameter e should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "490",
        "column": "24",
        "severity": "warning",
        "message": "Parameter args should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "494",
        "column": "5",
        "severity": "warning",
        "message": "Class 'GXDLMSBase' looks like designed for extension (can be subclassed), but the method 'onError' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GXDLMSBase' final or making the method 'onError' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "495",
        "column": "25",
        "severity": "warning",
        "message": "Parameter sender should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "495",
        "column": "40",
        "severity": "warning",
        "message": "Parameter ex should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "503",
        "column": "28",
        "severity": "warning",
        "message": "Parameter sender should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "503",
        "column": "43",
        "severity": "warning",
        "message": "Parameter e should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "529",
        "column": "36",
        "severity": "warning",
        "message": "Parameter sender should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "529",
        "column": "51",
        "severity": "warning",
        "message": "Parameter e should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "537",
        "column": "35",
        "severity": "warning",
        "message": "Parameter sender should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "538",
        "column": "13",
        "severity": "warning",
        "message": "Parameter e should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "546",
        "column": "38",
        "severity": "warning",
        "message": "Parameter sender should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "547",
        "column": "13",
        "severity": "warning",
        "message": "Parameter e should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "554",
        "column": "25",
        "severity": "warning",
        "message": "Parameter sender should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "554",
        "column": "40",
        "severity": "warning",
        "message": "Parameter e should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "559",
        "column": "35",
        "severity": "warning",
        "message": "Parameter sender should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "559",
        "column": "50",
        "severity": "warning",
        "message": "Parameter e should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "563",
        "column": "5",
        "severity": "warning",
        "message": "Class 'GXDLMSBase' looks like designed for extension (can be subclassed), but the method 'onFindObject' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GXDLMSBase' final or making the method 'onFindObject' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "564",
        "column": "38",
        "severity": "warning",
        "message": "Parameter objectType should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "564",
        "column": "61",
        "severity": "warning",
        "message": "Parameter sn should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "564",
        "column": "69",
        "severity": "warning",
        "message": "Parameter ln should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "593",
        "column": "5",
        "severity": "warning",
        "message": "Class 'GXDLMSBase' looks like designed for extension (can be subclassed), but the method 'checkPassword' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'GXDLMSBase' final or making the method 'checkPassword' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    }
]