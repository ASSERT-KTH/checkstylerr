[
    {
        "line": "53",
        "column": "5",
        "severity": "error",
        "message": "Missing a Javadoc comment.",
        "source": "com.puppycrawl.tools.checkstyle.checks.javadoc.JavadocVariableCheck"
    },
    {
        "line": "55",
        "column": "28",
        "severity": "error",
        "message": "Parameter ctx should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "59",
        "column": "65",
        "severity": "error",
        "message": "Parameter is should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "77",
        "column": "54",
        "severity": "error",
        "message": "Parameter encoded should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "85",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 86).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "85",
        "column": "72",
        "severity": "error",
        "message": "Parameter is should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "92",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 97).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "103",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 89).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "114",
        "column": "65",
        "severity": "error",
        "message": "Parameter is should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "120",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 85).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "132",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 86).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "132",
        "column": "72",
        "severity": "error",
        "message": "Parameter is should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "147",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 89).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "158",
        "column": "5",
        "severity": "error",
        "message": "Class 'OpenSSLX509Certificate' looks like designed for extension (can be subclassed), but the method 'getCriticalExtensionOIDs' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OpenSSLX509Certificate' final or making the method 'getCriticalExtensionOIDs' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "161",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 95).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "170",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 81).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "177",
        "column": "5",
        "severity": "error",
        "message": "Class 'OpenSSLX509Certificate' looks like designed for extension (can be subclassed), but the method 'getExtensionValue' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OpenSSLX509Certificate' final or making the method 'getExtensionValue' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "178",
        "column": "37",
        "severity": "error",
        "message": "Parameter oid should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "182",
        "column": "5",
        "severity": "error",
        "message": "Class 'OpenSSLX509Certificate' looks like designed for extension (can be subclassed), but the method 'getNonCriticalExtensionOIDs' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OpenSSLX509Certificate' final or making the method 'getNonCriticalExtensionOIDs' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "185",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 99).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "201",
        "column": "5",
        "severity": "error",
        "message": "Class 'OpenSSLX509Certificate' looks like designed for extension (can be subclassed), but the method 'hasUnsupportedCriticalExtension' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OpenSSLX509Certificate' final or making the method 'hasUnsupportedCriticalExtension' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "203",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 94).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "206",
        "column": "5",
        "severity": "error",
        "message": "Class 'OpenSSLX509Certificate' looks like designed for extension (can be subclassed), but the method 'checkValidity' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OpenSSLX509Certificate' final or making the method 'checkValidity' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "212",
        "column": "5",
        "severity": "error",
        "message": "Class 'OpenSSLX509Certificate' looks like designed for extension (can be subclassed), but the method 'checkValidity' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OpenSSLX509Certificate' final or making the method 'checkValidity' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "213",
        "column": "31",
        "severity": "error",
        "message": "Parameter date should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "224",
        "column": "5",
        "severity": "error",
        "message": "Class 'OpenSSLX509Certificate' looks like designed for extension (can be subclassed), but the method 'getVersion' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OpenSSLX509Certificate' final or making the method 'getVersion' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "229",
        "column": "5",
        "severity": "error",
        "message": "Class 'OpenSSLX509Certificate' looks like designed for extension (can be subclassed), but the method 'getSerialNumber' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OpenSSLX509Certificate' final or making the method 'getSerialNumber' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "234",
        "column": "5",
        "severity": "error",
        "message": "Class 'OpenSSLX509Certificate' looks like designed for extension (can be subclassed), but the method 'getIssuerDN' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OpenSSLX509Certificate' final or making the method 'getIssuerDN' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "239",
        "column": "5",
        "severity": "error",
        "message": "Class 'OpenSSLX509Certificate' looks like designed for extension (can be subclassed), but the method 'getSubjectDN' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OpenSSLX509Certificate' final or making the method 'getSubjectDN' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "244",
        "column": "5",
        "severity": "error",
        "message": "Class 'OpenSSLX509Certificate' looks like designed for extension (can be subclassed), but the method 'getNotBefore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OpenSSLX509Certificate' final or making the method 'getNotBefore' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "248",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 96).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "252",
        "column": "5",
        "severity": "error",
        "message": "Class 'OpenSSLX509Certificate' looks like designed for extension (can be subclassed), but the method 'getNotAfter' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OpenSSLX509Certificate' final or making the method 'getNotAfter' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "256",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 95).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "260",
        "column": "5",
        "severity": "error",
        "message": "Class 'OpenSSLX509Certificate' looks like designed for extension (can be subclassed), but the method 'getTBSCertificate' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OpenSSLX509Certificate' final or making the method 'getTBSCertificate' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "265",
        "column": "5",
        "severity": "error",
        "message": "Class 'OpenSSLX509Certificate' looks like designed for extension (can be subclassed), but the method 'getSignature' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OpenSSLX509Certificate' final or making the method 'getSignature' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "270",
        "column": "5",
        "severity": "error",
        "message": "Class 'OpenSSLX509Certificate' looks like designed for extension (can be subclassed), but the method 'getSigAlgName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OpenSSLX509Certificate' final or making the method 'getSigAlgName' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "275",
        "column": "5",
        "severity": "error",
        "message": "Class 'OpenSSLX509Certificate' looks like designed for extension (can be subclassed), but the method 'getSigAlgOID' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OpenSSLX509Certificate' final or making the method 'getSigAlgOID' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "280",
        "column": "5",
        "severity": "error",
        "message": "Class 'OpenSSLX509Certificate' looks like designed for extension (can be subclassed), but the method 'getSigAlgParams' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OpenSSLX509Certificate' final or making the method 'getSigAlgParams' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "285",
        "column": "5",
        "severity": "error",
        "message": "Class 'OpenSSLX509Certificate' looks like designed for extension (can be subclassed), but the method 'getIssuerUniqueID' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OpenSSLX509Certificate' final or making the method 'getIssuerUniqueID' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "290",
        "column": "5",
        "severity": "error",
        "message": "Class 'OpenSSLX509Certificate' looks like designed for extension (can be subclassed), but the method 'getSubjectUniqueID' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OpenSSLX509Certificate' final or making the method 'getSubjectUniqueID' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "295",
        "column": "5",
        "severity": "error",
        "message": "Class 'OpenSSLX509Certificate' looks like designed for extension (can be subclassed), but the method 'getKeyUsage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OpenSSLX509Certificate' final or making the method 'getKeyUsage' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "302",
        "column": "30",
        "severity": "error",
        "message": "'9' is a magic number.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck"
    },
    {
        "line": "306",
        "column": "30",
        "severity": "error",
        "message": "Array brackets at illegal position.",
        "source": "com.puppycrawl.tools.checkstyle.checks.ArrayTypeStyleCheck"
    },
    {
        "line": "306",
        "column": "47",
        "severity": "error",
        "message": "'9' is a magic number.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck"
    },
    {
        "line": "311",
        "column": "5",
        "severity": "error",
        "message": "Class 'OpenSSLX509Certificate' looks like designed for extension (can be subclassed), but the method 'getBasicConstraints' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OpenSSLX509Certificate' final or making the method 'getBasicConstraints' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "313",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 87).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "325",
        "column": "5",
        "severity": "error",
        "message": "Class 'OpenSSLX509Certificate' looks like designed for extension (can be subclassed), but the method 'getEncoded' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OpenSSLX509Certificate' final or making the method 'getEncoded' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "330",
        "column": "32",
        "severity": "error",
        "message": "Parameter pkey should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "331",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 83).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "340",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 95).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "340",
        "column": "33",
        "severity": "error",
        "message": "Parameter key should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "340",
        "column": "48",
        "severity": "error",
        "message": "Parameter sigProvider should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "341",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 83).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "362",
        "column": "5",
        "severity": "error",
        "message": "Class 'OpenSSLX509Certificate' looks like designed for extension (can be subclassed), but the method 'verify' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OpenSSLX509Certificate' final or making the method 'verify' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "363",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 92).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "363",
        "column": "24",
        "severity": "error",
        "message": "Parameter key should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "374",
        "column": "5",
        "severity": "error",
        "message": "Class 'OpenSSLX509Certificate' looks like designed for extension (can be subclassed), but the method 'verify' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OpenSSLX509Certificate' final or making the method 'verify' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "375",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 86).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "375",
        "column": "24",
        "severity": "error",
        "message": "Parameter key should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "375",
        "column": "39",
        "severity": "error",
        "message": "Parameter sigProvider should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "376",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 83).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "381",
        "column": "5",
        "severity": "error",
        "message": "Class 'OpenSSLX509Certificate' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OpenSSLX509Certificate' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "393",
        "column": "5",
        "severity": "error",
        "message": "Class 'OpenSSLX509Certificate' looks like designed for extension (can be subclassed), but the method 'getPublicKey' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OpenSSLX509Certificate' final or making the method 'getPublicKey' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "397",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 85).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "419",
        "column": "5",
        "severity": "error",
        "message": "Class 'OpenSSLX509Certificate' looks like designed for extension (can be subclassed), but the method 'getIssuerX500Principal' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OpenSSLX509Certificate' final or making the method 'getIssuerX500Principal' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "425",
        "column": "5",
        "severity": "error",
        "message": "Class 'OpenSSLX509Certificate' looks like designed for extension (can be subclassed), but the method 'getSubjectX500Principal' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OpenSSLX509Certificate' final or making the method 'getSubjectX500Principal' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "431",
        "column": "5",
        "severity": "error",
        "message": "Class 'OpenSSLX509Certificate' looks like designed for extension (can be subclassed), but the method 'getExtendedKeyUsage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OpenSSLX509Certificate' final or making the method 'getExtendedKeyUsage' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "432",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 82).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "441",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 92).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "441",
        "column": "67",
        "severity": "error",
        "message": "Parameter altNameArray should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "448",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 83).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "454",
        "column": "5",
        "severity": "error",
        "message": "Class 'OpenSSLX509Certificate' looks like designed for extension (can be subclassed), but the method 'getSubjectAlternativeNames' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OpenSSLX509Certificate' final or making the method 'getSubjectAlternativeNames' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "455",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 96).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "456",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 92).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "460",
        "column": "5",
        "severity": "error",
        "message": "Class 'OpenSSLX509Certificate' looks like designed for extension (can be subclassed), but the method 'getIssuerAlternativeNames' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OpenSSLX509Certificate' final or making the method 'getIssuerAlternativeNames' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "461",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 95).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "462",
        "severity": "error",
        "message": "Line is longer than 80 characters (found 92).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "466",
        "column": "5",
        "severity": "error",
        "message": "Class 'OpenSSLX509Certificate' looks like designed for extension (can be subclassed), but the method 'equals' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OpenSSLX509Certificate' final or making the method 'equals' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "467",
        "column": "27",
        "severity": "error",
        "message": "Parameter other should be final.",
        "source": "com.puppycrawl.tools.checkstyle.checks.FinalParametersCheck"
    },
    {
        "line": "477",
        "column": "5",
        "severity": "error",
        "message": "Class 'OpenSSLX509Certificate' looks like designed for extension (can be subclassed), but the method 'hashCode' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OpenSSLX509Certificate' final or making the method 'hashCode' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "483",
        "column": "5",
        "severity": "error",
        "message": "Class 'OpenSSLX509Certificate' looks like designed for extension (can be subclassed), but the method 'getContext' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OpenSSLX509Certificate' final or making the method 'getContext' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "487",
        "column": "5",
        "severity": "error",
        "message": "Class 'OpenSSLX509Certificate' looks like designed for extension (can be subclassed), but the method 'finalize' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OpenSSLX509Certificate' final or making the method 'finalize' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    }
]