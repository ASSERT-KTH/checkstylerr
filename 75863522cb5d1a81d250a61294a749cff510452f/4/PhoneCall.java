/**
 * This code was generated by
 * \ / _    _  _|   _  _
 *  | (_)\/(_)(_|\/| |(/_  v1.0.0
 *       /       /
 */

package com.twilio.rest.preview.trustedComms;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.core.JsonParseException;
import com.fasterxml.jackson.databind.JsonMappingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.google.common.base.MoreObjects;
import com.twilio.base.Resource;
import com.twilio.converter.DateConverter;
import com.twilio.exception.ApiConnectionException;
import com.twilio.exception.ApiException;
import com.twilio.exception.RestException;
import com.twilio.http.HttpMethod;
import com.twilio.http.Request;
import com.twilio.http.Response;
import com.twilio.http.TwilioRestClient;
import com.twilio.rest.Domains;
import org.joda.time.DateTime;

import java.io.IOException;
import java.io.InputStream;
import java.net.URI;
import java.util.Map;
import java.util.Objects;

/**
 * PLEASE NOTE that this class contains preview products that are subject to
 * change. Use them with caution. If you currently do not have developer preview
 * access, please contact help@twilio.com.
 */
@JsonIgnoreProperties(ignoreUnknown = true)
public class PhoneCall extends Resource {
    private static final long serialVersionUID = 32659331953626L;

    /**
     * Create a PhoneCallCreator to execute create.
     * 
     * @param from The originating Phone Number
     * @param to The terminating Phone Number
     * @param url The Twiml URL
     * @return PhoneCallCreator capable of executing the create
     */
    public static PhoneCallCreator creator(final String from, 
                                           final String to, 
                                           final String url) {
        return new PhoneCallCreator(from, to, url);
    }

    /**
     * Converts a JSON String into a PhoneCall object using the provided
     * ObjectMapper.
     * 
     * @param json Raw JSON String
     * @param objectMapper Jackson ObjectMapper
     * @return PhoneCall object represented by the provided JSON
     */
    public static PhoneCall fromJson(final String json, final ObjectMapper objectMapper) {
        // Convert all checked exceptions to Runtime
        try {
            return objectMapper.readValue(json, PhoneCall.class);
        } catch (final JsonMappingException | JsonParseException e) {
            throw new ApiException(e.getMessage(), e);
        } catch (final IOException e) {
            throw new ApiConnectionException(e.getMessage(), e);
        }
    }

    /**
     * Converts a JSON InputStream into a PhoneCall object using the provided
     * ObjectMapper.
     * 
     * @param json Raw JSON InputStream
     * @param objectMapper Jackson ObjectMapper
     * @return PhoneCall object represented by the provided JSON
     */
    public static PhoneCall fromJson(final InputStream json, final ObjectMapper objectMapper) {
        // Convert all checked exceptions to Runtime
        try {
            return objectMapper.readValue(json, PhoneCall.class);
        } catch (final JsonMappingException | JsonParseException e) {
            throw new ApiException(e.getMessage(), e);
        } catch (final IOException e) {
            throw new ApiConnectionException(e.getMessage(), e);
        }
    }

    private final String sid;
    private final String accountSid;
    private final String from;
    private final String to;
    private final String reason;
    private final DateTime createdAt;
    private final URI url;

    @JsonCreator
    private PhoneCall(@JsonProperty("sid")
                      final String sid, 
                      @JsonProperty("account_sid")
                      final String accountSid, 
                      @JsonProperty("from")
                      final String from, 
                      @JsonProperty("to")
                      final String to, 
                      @JsonProperty("reason")
                      final String reason, 
                      @JsonProperty("created_at")
                      final String createdAt, 
                      @JsonProperty("url")
                      final URI url) {
        this.sid = sid;
        this.accountSid = accountSid;
        this.from = from;
        this.to = to;
        this.reason = reason;
        this.createdAt = DateConverter.iso8601DateTimeFromString(createdAt);
        this.url = url;
    }

    /**
     * Returns The A string that uniquely identifies this Current Call..
     * 
     * @return A string that uniquely identifies this Current Call.
     */
    public final String getSid() {
        return this.sid;
    }

    /**
     * Returns The Account Sid..
     * 
     * @return Account Sid.
     */
    public final String getAccountSid() {
        return this.accountSid;
    }

    /**
     * Returns The The originating Phone Number.
     * 
     * @return The originating Phone Number
     */
    public final String getFrom() {
        return this.from;
    }

    /**
     * Returns The The terminating Phone Number.
     * 
     * @return The terminating Phone Number
     */
    public final String getTo() {
        return this.to;
    }

    /**
     * Returns The The business reason for this phone call.
     * 
     * @return The business reason for this phone call
     */
    public final String getReason() {
        return this.reason;
    }

    /**
     * Returns The The date this Current Call was created.
     * 
     * @return The date this Current Call was created
     */
    public final DateTime getCreatedAt() {
        return this.createdAt;
    }

    /**
     * Returns The The URL of this resource..
     * 
     * @return The URL of this resource.
     */
    public final URI getUrl() {
        return this.url;
    }

    @Override
    public boolean equals(final Object o) {
        if (this == o) {
            return true;
        }

        if (o == null || getClass() != o.getClass()) {
            return false;
        }

        PhoneCall other = (PhoneCall) o;

        return Objects.equals(sid, other.sid) && 
               Objects.equals(accountSid, other.accountSid) && 
               Objects.equals(from, other.from) && 
               Objects.equals(to, other.to) && 
               Objects.equals(reason, other.reason) && 
               Objects.equals(createdAt, other.createdAt) && 
               Objects.equals(url, other.url);
    }

    @Override
    public int hashCode() {
        return Objects.hash(sid,
                            accountSid,
                            from,
                            to,
                            reason,
                            createdAt,
                            url);
    }

    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this)
                          .add("sid", sid)
                          .add("accountSid", accountSid)
                          .add("from", from)
                          .add("to", to)
                          .add("reason", reason)
                          .add("createdAt", createdAt)
                          .add("url", url)
                          .toString();
    }
}