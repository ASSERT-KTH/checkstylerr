/**
 * This code was generated by
 * \ / _    _  _|   _  _
 *  | (_)\/(_)(_|\/| |(/_  v1.0.0
 *       /       /
 */

package com.twilio.twiml.voice;

import com.twilio.twiml.TwiML;

import java.util.HashMap;
import java.util.Map;

/**
 * TwiML wrapper for {@code <Room>}
 */
public class Room extends TwiML {
    private final String participantIdentity;
    private final String name;

    /**
     * For XML Serialization/Deserialization
     */
    private Room() {
        this(new Builder((String) null));
    }

    /**
     * Create a new {@code <Room>} element
     */
    private Room(Builder b) {
        super("Room", b);
        this.participantIdentity = b.participantIdentity;
        this.name = b.name;
    }

    /**
     * The body of the TwiML element
     *
     * @return Element body as a string if present else null
     */
    protected String getElementBody() {
        return this.getName() == null ? null : this.getName();
    }

    /**
     * Attributes to set on the generated XML element
     *
     * @return A Map of attribute keys to values
     */
    protected Map<String, String> getElementAttributes() {
        // Preserve order of attributes
        Map<String, String> attrs = new HashMap<>();

        if (this.getParticipantIdentity() != null) {
            attrs.put("participantIdentity", this.getParticipantIdentity());
        }

        return attrs;
    }

    /**
     * Participant identity when connecting to the Room
     *
     * @return Participant identity when connecting to the Room
     */
    public String getParticipantIdentity() {
        return participantIdentity;
    }

    /**
     * Room name
     *
     * @return Room name
     */
    public String getName() {
        return name;
    }

    /**
     * Create a new {@code <Room>} element
     */
    public static class Builder extends TwiML.Builder<Builder> {
        private String participantIdentity;
        private String name;

        /**
         * Create a {@code <Room>} with name
         */
        public Builder(String name) {
            this.name = name;
        }

        /**
         * Participant identity when connecting to the Room
         */
        public Builder participantIdentity(String participantIdentity) {
            this.participantIdentity = participantIdentity;
            return this;
        }

        /**
         * Create and return resulting {@code <Room>} element
         */
        public Room build() {
            return new Room(this);
        }
    }
}