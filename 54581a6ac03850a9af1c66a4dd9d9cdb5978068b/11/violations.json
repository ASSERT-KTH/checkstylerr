[
    {
        "line": "3",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - au.com.mineauz.minigames.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "28",
        "severity": "error",
        "message": "Using the '.*' form of import should be avoided - java.util.*.",
        "source": "com.puppycrawl.tools.checkstyle.checks.imports.AvoidStarImportCheck"
    },
    {
        "line": "41",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'getStartPos' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'getStartPos' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "45",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'setStartPos' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'setStartPos' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "45",
        "column": "44",
        "severity": "error",
        "message": "'startPos' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "85",
        "column": "40",
        "severity": "error",
        "message": "'player' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "85",
        "column": "47",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "89",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 129).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "90",
        "column": "9",
        "severity": "error",
        "message": "'if' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "90",
        "column": "26",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "95",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'getPlayer' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'getPlayer' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "95",
        "column": "30",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "99",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "99",
        "column": "28",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "103",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'getDisplayName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'getDisplayName' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "103",
        "column": "35",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "107",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'getDisplayName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'getDisplayName' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "107",
        "column": "60",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "108",
        "column": "9",
        "severity": "error",
        "message": "'if' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "108",
        "column": "24",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "110",
        "column": "9",
        "severity": "error",
        "message": "'}' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "110",
        "column": "10",
        "severity": "error",
        "message": "'else' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "115",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'getUUID' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'getUUID' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "115",
        "column": "26",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "119",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'getLocation' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'getLocation' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "119",
        "column": "34",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "125",
        "column": "9",
        "severity": "error",
        "message": "'if' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "125",
        "column": "36",
        "severity": "error",
        "message": "'32000' is a magic number.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck"
    },
    {
        "line": "125",
        "column": "42",
        "severity": "error",
        "message": "')' is preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.ParenPadCheck"
    },
    {
        "line": "125",
        "column": "43",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "126",
        "column": "61",
        "severity": "error",
        "message": "',' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "127",
        "column": "54",
        "severity": "error",
        "message": "',' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "134",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'sendInfoMessage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'sendInfoMessage' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "138",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'sendMessage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'sendMessage' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "157",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'storePlayerData' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'storePlayerData' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "157",
        "column": "34",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "166",
        "column": "21",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "167",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 133).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "167",
        "column": "103",
        "severity": "error",
        "message": "'+' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "172",
        "column": "35",
        "severity": "error",
        "message": "'15' is a magic number.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck"
    },
    {
        "line": "173",
        "column": "34",
        "severity": "error",
        "message": "'20' is a magic number.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck"
    },
    {
        "line": "174",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 104).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "185",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'restorePlayerData' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'restorePlayerData' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "185",
        "column": "36",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "192",
        "severity": "error",
        "message": "'if' construct must use '{}'s.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.NeedBracesCheck"
    },
    {
        "line": "192",
        "column": "9",
        "severity": "error",
        "message": "'if' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "192",
        "column": "36",
        "severity": "error",
        "message": "'20' is a magic number.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck"
    },
    {
        "line": "193",
        "column": "35",
        "severity": "error",
        "message": "'20' is a magic number.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.MagicNumberCheck"
    },
    {
        "line": "194",
        "severity": "error",
        "message": "'else' construct must use '{}'s.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.NeedBracesCheck"
    },
    {
        "line": "197",
        "column": "9",
        "severity": "error",
        "message": "'if' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "197",
        "column": "40",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "199",
        "column": "9",
        "severity": "error",
        "message": "'}' at column 9 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally).",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
    },
    {
        "line": "200",
        "column": "9",
        "severity": "error",
        "message": "'else' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "200",
        "column": "13",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "201",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 106).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "204",
        "column": "9",
        "severity": "error",
        "message": "'if' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "204",
        "column": "36",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "221",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'hasStoredData' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'hasStoredData' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "221",
        "column": "35",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "225",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'getAllowTeleport' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'getAllowTeleport' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "225",
        "column": "38",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "229",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'setAllowTeleport' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'setAllowTeleport' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "229",
        "column": "48",
        "severity": "error",
        "message": "'allowTP' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "229",
        "column": "56",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "233",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'getAllowGamemodeChange' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'getAllowGamemodeChange' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "233",
        "column": "44",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "237",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'setAllowGamemodeChange' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'setAllowGamemodeChange' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "237",
        "column": "54",
        "severity": "error",
        "message": "'allowGMChange' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "237",
        "column": "68",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "241",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'getMinigame' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'getMinigame' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "241",
        "column": "34",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "245",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'setMinigame' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'setMinigame' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "245",
        "column": "44",
        "severity": "error",
        "message": "'minigame' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "245",
        "column": "53",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "249",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'removeMinigame' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'removeMinigame' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "249",
        "column": "33",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "253",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'isInMinigame' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'isInMinigame' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "253",
        "column": "34",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "257",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'isRequiredQuit' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'isRequiredQuit' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "261",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'setRequiredQuit' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'setRequiredQuit' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "261",
        "column": "47",
        "severity": "error",
        "message": "'requiredQuit' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "265",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'getQuitPos' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'getQuitPos' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "269",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'setQuitPos' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'setQuitPos' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "269",
        "column": "43",
        "severity": "error",
        "message": "'quitPos' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "273",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'getLoadout' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'getLoadout' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "274",
        "column": "9",
        "severity": "error",
        "message": "'if' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "274",
        "column": "33",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "276",
        "column": "9",
        "severity": "error",
        "message": "'}' at column 9 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally).",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
    },
    {
        "line": "277",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 143).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "277",
        "column": "14",
        "severity": "error",
        "message": "'if' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "277",
        "column": "143",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "278",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 124).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "283",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'setLoadout' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'setLoadout' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "283",
        "column": "51",
        "severity": "error",
        "message": "'loadout' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "284",
        "severity": "error",
        "message": "'if' construct must use '{}'s.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.NeedBracesCheck"
    },
    {
        "line": "284",
        "column": "9",
        "severity": "error",
        "message": "'if' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "285",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 153).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "285",
        "column": "9",
        "severity": "error",
        "message": "'if' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "285",
        "column": "153",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "292",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'getFlags' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'getFlags' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "292",
        "column": "35",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "296",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'addFlag' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'addFlag' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "296",
        "column": "46",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "297",
        "column": "9",
        "severity": "error",
        "message": "'if' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "297",
        "column": "39",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "304",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'hasFlag' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'hasFlag' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "304",
        "column": "50",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "308",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'setFlags' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'setFlags' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "308",
        "column": "45",
        "severity": "error",
        "message": "'flags' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "308",
        "column": "51",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "312",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'clearFlags' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'clearFlags' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "312",
        "column": "29",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "316",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'getCheckpoint' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'getCheckpoint' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "316",
        "column": "36",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "320",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'hasCheckpoint' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'hasCheckpoint' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "320",
        "column": "35",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "324",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'setCheckpoint' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'setCheckpoint' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "324",
        "column": "46",
        "severity": "error",
        "message": "'checkpoint' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "324",
        "column": "57",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "328",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'removeCheckpoint' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'removeCheckpoint' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "328",
        "column": "35",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "332",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'getKills' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'getKills' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "332",
        "column": "26",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "336",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'addKill' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'addKill' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "336",
        "column": "26",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "340",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'resetKills' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'resetKills' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "340",
        "column": "29",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "344",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'getDeaths' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'getDeaths' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "344",
        "column": "27",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "348",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'addDeath' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'addDeath' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "348",
        "column": "27",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "352",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'resetDeaths' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'resetDeaths' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "352",
        "column": "30",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "356",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'setDeaths' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'setDeaths' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "356",
        "column": "37",
        "severity": "error",
        "message": "'deaths' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "356",
        "column": "44",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "360",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'getScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'getScore' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "360",
        "column": "26",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "364",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'addScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'addScore' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "364",
        "column": "27",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "368",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'addScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'addScore' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "368",
        "column": "43",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "372",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'resetScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'resetScore' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "372",
        "column": "29",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "376",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'takeScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'takeScore' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "376",
        "column": "28",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "380",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'setScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'setScore' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "380",
        "column": "36",
        "severity": "error",
        "message": "'score' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "380",
        "column": "42",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "384",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'setStartTime' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'setStartTime' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "384",
        "column": "44",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "388",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'setEndTime' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'setEndTime' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "388",
        "column": "42",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "392",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'getStartTime' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'getStartTime' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "392",
        "column": "31",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "396",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'getEndTime' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'getEndTime' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "396",
        "column": "29",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "400",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'resetTime' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'resetTime' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "400",
        "column": "28",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "406",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'setStoredTime' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'setStoredTime' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "406",
        "column": "45",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "410",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'getStoredTime' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'getStoredTime' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "410",
        "column": "32",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "414",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'setReverts' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'setReverts' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "414",
        "column": "44",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "418",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'addRevert' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'addRevert' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "418",
        "column": "28",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "422",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'getReverts' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'getReverts' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "422",
        "column": "28",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "426",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'resetReverts' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'resetReverts' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "426",
        "column": "31",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "430",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'isFrozen' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'isFrozen' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "434",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'setFrozen' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'setFrozen' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "434",
        "column": "41",
        "severity": "error",
        "message": "'isFrozen' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "438",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'canPvP' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'canPvP' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "442",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'setCanPvP' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'setCanPvP' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "442",
        "column": "41",
        "severity": "error",
        "message": "'canPvP' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "446",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'isInvincible' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'isInvincible' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "450",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'setInvincible' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'setInvincible' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "450",
        "column": "45",
        "severity": "error",
        "message": "'isInvincible' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "454",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'canInteract' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'canInteract' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "458",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'setCanInteract' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'setCanInteract' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "458",
        "column": "46",
        "severity": "error",
        "message": "'canInteract' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "462",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'canFly' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'canFly' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "462",
        "column": "28",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "466",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'setCanFly' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'setCanFly' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "466",
        "column": "46",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "471",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'resetAllStats' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'resetAllStats' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "471",
        "column": "32",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "486",
        "severity": "error",
        "message": "'if' construct must use '{}'s.",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.NeedBracesCheck"
    },
    {
        "line": "486",
        "column": "9",
        "severity": "error",
        "message": "'if' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "491",
        "column": "9",
        "severity": "error",
        "message": "'if' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "491",
        "column": "37",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "497",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'isLatejoining' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'isLatejoining' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "501",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'setLatejoining' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'setLatejoining' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "501",
        "column": "46",
        "severity": "error",
        "message": "'isLatejoining' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "505",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'getMenu' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'getMenu' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "505",
        "column": "26",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "509",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'setMenu' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'setMenu' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "509",
        "column": "36",
        "severity": "error",
        "message": "'menu' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "509",
        "column": "41",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "513",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'isInMenu' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'isInMenu' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "513",
        "column": "30",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "517",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'setNoClose' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'setNoClose' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "517",
        "column": "48",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "521",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'getNoClose' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'getNoClose' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "521",
        "column": "32",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "525",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'setManualEntry' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'setManualEntry' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "525",
        "column": "52",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "529",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'getManualEntry' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'getManualEntry' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "529",
        "column": "37",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "533",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'addSelectionPoint' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'addSelectionPoint' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "533",
        "column": "54",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "534",
        "column": "9",
        "severity": "error",
        "message": "'if' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "534",
        "column": "36",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "538",
        "column": "9",
        "severity": "error",
        "message": "'}' at column 9 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally).",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
    },
    {
        "line": "539",
        "column": "14",
        "severity": "error",
        "message": "'if' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "539",
        "column": "41",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "543",
        "column": "9",
        "severity": "error",
        "message": "'}' at column 9 should be on the same line as the next part of a multi-block statement (one that directly contains multiple blocks: if/else-if/else, do/while or try/catch/finally).",
        "source": "com.puppycrawl.tools.checkstyle.checks.blocks.RightCurlyCheck"
    },
    {
        "line": "544",
        "column": "14",
        "severity": "error",
        "message": "'if' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "544",
        "column": "41",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "554",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'hasSelection' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'hasSelection' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "554",
        "column": "34",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "558",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'getSelectionPoints' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'getSelectionPoints' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "558",
        "column": "43",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "565",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'clearSelection' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'clearSelection' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "565",
        "column": "33",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "571",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'setSelection' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'setSelection' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "571",
        "column": "75",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "578",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'showSelection' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'showSelection' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "578",
        "column": "51",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "585",
        "column": "13",
        "severity": "error",
        "message": "'if' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "586",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 107).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "587",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 133).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "590",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 157).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "593",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 157).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "599",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'getOfflineMinigamePlayer' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'getOfflineMinigamePlayer' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "599",
        "column": "60",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "603",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'setOfflineMinigamePlayer' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'setOfflineMinigamePlayer' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "603",
        "column": "70",
        "severity": "error",
        "message": "'oply' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "603",
        "column": "75",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "607",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'getStoredPlayerCheckpoints' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'getStoredPlayerCheckpoints' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "611",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'setGamemode' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'setGamemode' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "611",
        "column": "53",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "617",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'teleport' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'teleport' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "617",
        "column": "53",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "627",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'updateInventory' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'updateInventory' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "627",
        "column": "34",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "631",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'isDead' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'isDead' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "635",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'setTeam' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'setTeam' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "635",
        "column": "36",
        "severity": "error",
        "message": "'team' hides a field.",
        "source": "com.puppycrawl.tools.checkstyle.checks.coding.HiddenFieldCheck"
    },
    {
        "line": "635",
        "column": "41",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "639",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'getTeam' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'getTeam' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "639",
        "column": "26",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "643",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'removeTeam' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'removeTeam' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "643",
        "column": "29",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "644",
        "column": "9",
        "severity": "error",
        "message": "'if' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "644",
        "column": "30",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "650",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'hasClaimedReward' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'hasClaimedReward' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "650",
        "column": "57",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "654",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'hasTempClaimedReward' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'hasTempClaimedReward' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "654",
        "column": "61",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "658",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'addTempClaimedReward' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'addTempClaimedReward' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "658",
        "column": "58",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "662",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'addClaimedReward' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'addClaimedReward' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "662",
        "column": "54",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "666",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'saveClaimedRewards' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'saveClaimedRewards' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "666",
        "column": "37",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "667",
        "column": "9",
        "severity": "error",
        "message": "'if' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "667",
        "column": "43",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "675",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'loadClaimedRewards' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'loadClaimedRewards' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "675",
        "column": "37",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "676",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 119).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "677",
        "column": "9",
        "severity": "error",
        "message": "'if' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "677",
        "column": "23",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "683",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'addTempRewardItem' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'addTempRewardItem' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "683",
        "column": "56",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "687",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'getTempRewardItems' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'getTempRewardItems' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "687",
        "column": "48",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "691",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'addRewardItem' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'addRewardItem' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "691",
        "column": "52",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "695",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'getRewardItems' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'getRewardItems' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "695",
        "column": "44",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "699",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'hasClaimedScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'hasClaimedScore' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "699",
        "column": "55",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "704",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'applyResourcePack' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'applyResourcePack' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "704",
        "column": "62",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "705",
        "column": "9",
        "severity": "error",
        "message": "'try' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "705",
        "column": "12",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "706",
        "column": "77",
        "severity": "error",
        "message": "',' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "708",
        "column": "9",
        "severity": "error",
        "message": "'}' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "708",
        "column": "10",
        "severity": "error",
        "message": "'catch' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "708",
        "column": "50",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "714",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'addClaimedScore' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'addClaimedScore' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "714",
        "column": "52",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "719",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'claimTempRewardItems' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'claimTempRewardItems' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "719",
        "column": "39",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "720",
        "column": "9",
        "severity": "error",
        "message": "'if' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "720",
        "column": "27",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "723",
        "column": "13",
        "severity": "error",
        "message": "'if' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "723",
        "column": "37",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "724",
        "column": "17",
        "severity": "error",
        "message": "'for' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "724",
        "column": "54",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "725",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 107).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "726",
        "column": "21",
        "severity": "error",
        "message": "'if' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "726",
        "column": "37",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "727",
        "column": "25",
        "severity": "error",
        "message": "'for' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "727",
        "column": "60",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "728",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 123).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "736",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'claimRewards' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'claimRewards' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "736",
        "column": "31",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "737",
        "column": "9",
        "severity": "error",
        "message": "'if' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "737",
        "column": "27",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "740",
        "column": "13",
        "severity": "error",
        "message": "'if' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "740",
        "column": "37",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "741",
        "column": "17",
        "severity": "error",
        "message": "'for' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "741",
        "column": "54",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "742",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 107).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "743",
        "column": "21",
        "severity": "error",
        "message": "'if' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "743",
        "column": "37",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "744",
        "column": "25",
        "severity": "error",
        "message": "'for' is not followed by whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAfterCheck"
    },
    {
        "line": "744",
        "column": "60",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "745",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 123).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "753",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'setLateJoinTimer' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'setLateJoinTimer' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "753",
        "column": "51",
        "severity": "error",
        "message": "'{' is not preceded with whitespace.",
        "source": "com.puppycrawl.tools.checkstyle.checks.whitespace.WhitespaceAroundCheck"
    },
    {
        "line": "757",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'get' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'get' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "782",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'getKeys' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'getKeys' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    },
    {
        "line": "784",
        "severity": "error",
        "message": "Line is longer than 100 characters (found 119).",
        "source": "com.puppycrawl.tools.checkstyle.checks.sizes.LineLengthCheck"
    },
    {
        "line": "787",
        "column": "5",
        "severity": "error",
        "message": "Class 'MinigamePlayer' looks like designed for extension (can be subclassed), but the method 'getAsString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'MinigamePlayer' final or making the method 'getAsString' static/final/abstract/empty, or adding allowed annotation for the method.",
        "source": "com.puppycrawl.tools.checkstyle.checks.design.DesignForExtensionCheck"
    }
]